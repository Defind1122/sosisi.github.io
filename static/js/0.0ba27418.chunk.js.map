{"version":3,"sources":["src/components/Heading.tsx","src/hooks/useLinker.tsx","src/components/ItemSeparator.tsx","src/components/ErrorMessage.tsx","src/components/Selectable.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/components/FetchingButton.tsx","src/components/InsufficientBalanceButton.tsx","src/components/Expandable.tsx","src/components/TokenLogo.tsx","src/components/Meta.tsx","src/components/TokenInput.tsx","src/components/Column.tsx","src/components/ApproveButton.tsx","src/components/Loading.tsx","src/components/Input.tsx","src/hooks/useDelayedOnBlockEffect.tsx","src/hooks/useTokenPairState.tsx","index.tsx","assets/empty-token.png","assets/ETH.png"],"names":["Heading","props","accent","useColors","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","paddingBottom","tiny","text","buttonText","type","size","title","onPress","onPressButton","color","Platform","OS","path","route","target","history","useHistory","useCallback","window","open","push","_target","navigate","useNavigation","ITEM_SEPARATOR_HEIGHT","ItemSeparator","ErrorMessage","error","borderColor","borderWidth","width","padding","marginTop","code","note","message","Selectable","borderDark","overlay","border","useStyles","background","backgroundLight","containerStyle","hovered","activeOpacity","underlayColor","selected","backgroundColor","SocialIcon","darkMode","useContext","GlobalContext","textLight","light","iconColor","undefined","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressDiscord","FlexView","justifyContent","name","raised","reverse","reverseColor","WebFooter","Column","noTopMargin","View","normal","Text","textAlign","FetchingButton","InsufficientBalanceButton","symbol","Expandable","useState","expanded","setExpanded","shouldExpand","onExpand","display","children","TokenLogo","setError","placeholder","require","ETH","source","replaceWETH","token","uri","logoURI","borderRadius","onError","opacity","Meta","textMedium","url","suffix","label","textDecorationLine","MaxButton","onPressMax","balance","fee","pow10","gt","sub","ethers","constants","Zero","updateAmount","formatBalance","decimals","position","right","bottom","maxButtonText","IS_DESKTOP","buttonStyle","paddingHorizontal","TokenInput","onChangeText","onAmountChanged","parseBalance","e","endsWith","indexOf","length","value","amount","keyboardType","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","labelStyle","fontFamily","paddingTop","hideMaxButton","large","ApproveButton","approveToken","EthersContext","loading","setLoading","a","async","address","spender","tx","wait","onSuccess","hidden","Loading","marginVertical","Input","textDark","errors","forbidden","forEach","validation","match","regexp","allowed","join","minHeight","outline","placeholderTextColor","errorStyle","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","addOnBlockListener","removeOnBlockListener","eventName","useAsyncEffect","setTimeout","handles","handle","clearTimeout","useTokenPairState","signer","tokens","updateTokens","getTokenAllowance","useSDK","wrapETH","unwrapETH","fromSymbol","setFromSymbol","toSymbol","setToSymbol","fromAmount","setFromAmount","toAmount","setToAmount","fromTokenAllowed","setFromTokenAllowed","toTokenAllowed","setToTokenAllowed","wrapping","setWrapping","unwrapping","setUnwrapping","fromToken","find","toToken","useEffect","minAllowance","BigNumber","from","pow","ROUTER","fromAllowance","gte","toAllowance","onWrap","onUnwrap","isServer","process","hoverListener","hasMouse","refs","mousePosition","x","y","hover","hoverFunc","containsEvent","r","previousHoverFunc","unhover","document","event","add","ref","remove","createHoverListener","Hoverable","rest","hostRef","React","hr","setHovered","parent","enhanceScrollView","WrappedComponent","EnhancedScrollView","onScroll","scrollEventThrottle","forwardedRef","setRef","setLocalRef","getForwardedRef","setAndForwardRef","hostNode","interactionState","module","exports"],"mappings":"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","file":"static/js/0.0ba27418.chunk.js","sourcesContent":["import React, { FC } from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={\"bold\"}\n                disabled={props.disabled}\n                style={{ flex: 1, fontSize: 18, paddingBottom: Spacing.tiny }}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport const ITEM_SEPARATOR_HEIGHT = 10;\n\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\n\nexport default ItemSeparator;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps, ViewStyle } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n    containerStyle?: ViewStyle;\n}\n\nconst Selectable: FC<SelectableProps> = props => {\n    const { borderDark, accent, overlay } = useColors();\n    const { border } = useStyles();\n    const { background, backgroundLight } = useColors();\n    return (\n        <Hoverable style={props.containerStyle}>\n            {({ hovered }) => (\n                <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={props.onPress}>\n                    <View\n                        {...props}\n                        style={[\n                            {\n                                ...border({ color: props.selected ? accent : borderDark }),\n                                backgroundColor: hovered && !props.disabled ? backgroundLight : background\n                            },\n                            props.style\n                        ]}\n                    />\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nexport default Selectable;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/sushiswap\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/sushiswap\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/YS8xH7E\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport Column from \"../Column\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst WebFooter = () => (\n    <Column noTopMargin={true}>\n        <View\n            style={{\n                width: \"100%\",\n                padding: Spacing.normal\n            }}>\n            <SocialIcons />\n            <Text note={true} style={{ marginTop: Spacing.tiny, textAlign: \"center\", width: \"100%\" }}>\n                Built with ❤️ by SushiSwap\n            </Text>\n        </View>\n    </Column>\n);\n\nexport default WebFooter;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst FetchingButton = () => {\n    return <Button title={\"Fetching…\"} disabled={true} />;\n};\nexport default FetchingButton;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    return <Button title={\"Insufficient \" + (symbol ? symbol : \"Balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React, { FC, ReactNode, useState } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport Heading from \"./Heading\";\n\nexport interface ExpandableProps {\n    title: string;\n    expanded: boolean;\n    onExpand?: () => void;\n    style?: ViewStyle;\n    children?: ReactNode;\n}\n\nconst Expandable: FC<ExpandableProps> = props => {\n    const [expanded, setExpanded] = useState(true);\n    const shouldExpand = props.expanded && expanded;\n    const buttonText = shouldExpand ? undefined : \"Change\";\n    const onPress = () => {\n        setExpanded(true);\n        props.onExpand?.();\n    };\n\n    return (\n        <View style={props.style}>\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\n        </View>\n    );\n};\n\nexport default Expandable;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport Token from \"../types/Token\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && props.token.symbol === \"WETH\" ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? \"black\" : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={!props.token.logoURI || error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React, { FC } from \"react\";\n\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    url?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const { textMedium, textLight, placeholder } = useColors();\n    const onPress = useLinker(props.url || \"\", \"\", \"_blank\");\n    const text = props.disabled\n        ? \"N/A\"\n        : props.text\n        ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n        : \"Fetching…\";\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4 }}>\n            <Text fontWeight={\"bold\"} style={{ fontSize: 13, color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text\n                onPress={props.url ? onPress : undefined}\n                style={{\n                    fontSize: 13,\n                    color: props.disabled ? placeholder : props.text ? textMedium : textLight,\n                    textDecorationLine: props.url ? \"underline\" : \"none\"\n                }}>\n                {text}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    token?: Token;\n    amount: string;\n    onAmountChanged: (amount: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenInput: FC<TokenInputProps> = props => {\n    const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.token && props.onAmountChanged) {\n                try {\n                    parseBalance(text, props.token.decimals);\n                    props.onAmountChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAmountChanged(text);\n                    }\n                }\n            }\n        },\n        [props.token, props.onAmountChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.amount}\n                    onChangeText={onChangeText}\n                    placeholder={\"0.0\"}\n                    keyboardType={\"numeric\"}\n                    autoFocus={props.autoFocus || false}\n                    inputStyle={{ marginHorizontal: 4 }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 15,\n                        paddingBottom: 2\n                    }}\n                />\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\n                    <MaxButton\n                        token={props.token}\n                        maxButtonText={props.maxButtonText}\n                        updateAmount={props.onAmountChanged}\n                    />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(() => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (props.token.symbol === \"ETH\") {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount]);\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 12 : 24 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || (IS_DESKTOP ? \"MAX \" + props.token.symbol : \"MAX\")}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: 4 }}\n            />\n        </View>\n    );\n};\n\nexport default TokenInput;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={\"Approve \" + (props.token?.symbol || \"\")}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface Validation {\n    regexp: RegExp;\n    error: string;\n}\n\nexport interface InputProps extends NativeInputProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    allowed?: Validation[];\n    forbidden?: Validation[];\n    onError?: (error: string) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Input: FC<InputProps> = props => {\n    const { textDark, textMedium, textLight } = useColors();\n    const size = props.size || \"normal\";\n    const color = props.color || textDark;\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\n    const onChangeText = useCallback(\n        (text: string) => {\n            props.onChangeText?.(text);\n            props.onError?.(\"\");\n            const errors = [] as string[];\n            if (text !== \"\" && props.forbidden) {\n                props.forbidden.forEach(validation => {\n                    if (text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (text !== \"\" && props.allowed) {\n                props.allowed.forEach(validation => {\n                    if (!text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (errors.length > 0) {\n                props.onError?.(errors.join(\"\\n\"));\n            }\n        },\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\n    );\n    return (\n        <NativeInput\n            {...props}\n            inputStyle={[\n                { fontSize, fontFamily: \"regular\", paddingBottom: 4, color, marginTop: 0, minHeight: 32 },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\n                props.inputStyle\n            ]}\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\n            placeholderTextColor={props.placeholderTextColor || textLight}\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\n            onChangeText={onChangeText}\n        />\n    );\n};\n\nexport default Input;\n","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { parseBalance } from \"../utils\";\nimport useSDK from \"./useSDK\";\n\nexport interface TokenPairState {\n    fromSymbol: string;\n    setFromSymbol: (symbol: string) => void;\n    toSymbol: string;\n    setToSymbol: (symbol: string) => void;\n    fromToken?: Token;\n    toToken?: Token;\n    fromAmount: string;\n    setFromAmount: (amount: string) => void;\n    toAmount: string;\n    setToAmount: (amount: string) => void;\n    fromTokenAllowed: boolean;\n    setFromTokenAllowed: (allowed: boolean) => void;\n    toTokenAllowed: boolean;\n    setToTokenAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onWrap: () => Promise<void>;\n    wrapping: boolean;\n    onUnwrap: () => Promise<void>;\n    unwrapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useTokenPairState: () => TokenPairState = () => {\n    const { signer, address, tokens, updateTokens, getTokenAllowance } = useContext(EthersContext);\n    const { wrapETH, unwrapETH } = useSDK();\n    const [fromSymbol, setFromSymbol] = useState(\"\");\n    const [toSymbol, setToSymbol] = useState(\"\");\n    const [fromAmount, setFromAmount] = useState(\"\");\n    const [toAmount, setToAmount] = useState(\"\");\n    const [fromTokenAllowed, setFromTokenAllowed] = useState(false);\n    const [toTokenAllowed, setToTokenAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [wrapping, setWrapping] = useState(false);\n    const [unwrapping, setUnwrapping] = useState(false);\n\n    const fromToken = tokens.find(token => token.symbol === fromSymbol);\n    const toToken = tokens.find(token => token.symbol === toSymbol);\n\n    useEffect(() => {\n        if (fromSymbol === \"\") {\n            setToSymbol(\"\");\n        }\n        setFromAmount(\"\");\n        setToAmount(\"\");\n    }, [fromSymbol, toSymbol]);\n\n    useEffect(() => {\n        setFromSymbol(\"\");\n    }, [address]);\n\n    useAsyncEffect(async () => {\n        if (fromToken && toToken && signer) {\n            setFromTokenAllowed(false);\n            setToTokenAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                if (fromToken.symbol !== \"ETH\") {\n                    const fromAllowance = await getTokenAllowance(fromToken.address, ROUTER);\n                    setFromTokenAllowed(ethers.BigNumber.from(fromAllowance).gte(minAllowance));\n                }\n                if (toToken.symbol !== \"ETH\") {\n                    const toAllowance = await getTokenAllowance(toToken.address, ROUTER);\n                    setToTokenAllowed(ethers.BigNumber.from(toAllowance).gte(minAllowance));\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [fromToken, toToken, signer]);\n\n    const onWrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setWrapping(true);\n            try {\n                const tx = await wrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setWrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    const onUnwrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setUnwrapping(true);\n            try {\n                const tx = await unwrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setUnwrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    return {\n        fromSymbol,\n        setFromSymbol,\n        toSymbol,\n        setToSymbol,\n        fromToken,\n        toToken,\n        fromAmount,\n        setFromAmount,\n        toAmount,\n        setToAmount,\n        fromTokenAllowed,\n        setFromTokenAllowed,\n        toTokenAllowed,\n        setToTokenAllowed,\n        loading,\n        onWrap,\n        wrapping,\n        onUnwrap,\n        unwrapping\n    };\n};\n\nexport default useTokenPairState;\n","import * as React from 'react';\nimport type {\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  PressableStateCallbackType,\n  FlatListProps,\n  VirtualizedListProps,\n  ScrollViewProps,\n} from 'react-native';\n\nimport {\n  View,\n  Pressable as NativePressable,\n  ScrollView as NativeScrollView,\n  FlatList as NativeFlatList,\n  VirtualizedList as NativeVirtualizedList,\n  //@ts-ignore\n} from 'react-native-web';\n\nconst isServer =\n  typeof process !== 'undefined' &&\n  process.release &&\n  process.release.name === 'node';\n\nconst hoverListener = createHoverListener();\n\ninterface PressableStateCallbackTypeWeb extends PressableStateCallbackType {\n  focused?: boolean;\n  hovered?: boolean;\n}\n\ntype ChildrenType =\n  | React.ReactNode\n  | ((state: PressableStateCallbackTypeWeb) => React.ReactNode);\n\ntype StylesType =\n  | StyleProp<ViewStyle>\n  | ((state: PressableStateCallbackTypeWeb) => StyleProp<ViewStyle>);\n\ninterface HoverableProps extends ViewProps {\n  children:\n    | React.ReactNode\n    | ((state: { hovered: boolean }) => React.ReactNode);\n}\n\ninterface PressableProps extends Omit<ViewProps, 'style'> {\n  children: ChildrenType;\n  style?: StylesType;\n}\n\nexport function Hoverable({ children, ...rest }: HoverableProps) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <View\n      ref={hostRef}\n      children={\n        typeof children === 'function' ? children({ hovered }) : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction PressableWithoutRef(\n  { style, children, ...rest }: PressableProps,\n  forwardedRef: any\n) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n\n  const setRef = setAndForwardRef({\n    getForwardedRef: () => forwardedRef,\n    setLocalRef: (hostNode: any) => {\n      hostRef.current = hostNode;\n    },\n  });\n\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <NativePressable\n      //@ts-ignore\n      ref={setRef}\n      style={(interactionState: any) =>\n        typeof style === 'function'\n          ? style({ ...interactionState, hovered })\n          : style\n      }\n      children={(interactionState: any) =>\n        typeof children === 'function'\n          ? children({ ...interactionState, hovered })\n          : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction containsEvent(parent: any, clickTarget: any) {\n  if (parent === clickTarget) {\n    return true;\n  }\n  if (!parent) {\n    return false;\n  }\n  for (let child of parent.childNodes) {\n    if (containsEvent(child, clickTarget)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction createHoverListener() {\n  let hasMouse = isServer ? false : window.matchMedia('(pointer:fine)').matches;\n\n  let refs = new Map<any, (h: boolean) => any>();\n  let previousHoverFunc: undefined | ((h: boolean) => any);\n  let mousePosition = {\n    x: 0,\n    y: 0,\n  };\n\n  function hover(target: any) {\n    // hover is targeted directly\n    let hoverFunc = refs.get(target);\n\n    // let's try to see if any of the children of the hover event are hovered\n    if (!hoverFunc) {\n      for (let r of refs.keys()) {\n        if (containsEvent(r, target)) {\n          hoverFunc = refs.get(r);\n        }\n      }\n    }\n\n    previousHoverFunc && previousHoverFunc(false);\n    hoverFunc && hoverFunc(true);\n\n    // cache the previous hover so we can un-hover this later on\n    previousHoverFunc = hoverFunc;\n  }\n\n  function hoverEvent(event: any) {\n    hover(event.target);\n  }\n\n  function unhover() {\n    previousHoverFunc && previousHoverFunc(false);\n  }\n\n  function captureMousePosition(event: any) {\n    mousePosition.x = event.pageX;\n    mousePosition.y = event.pageY;\n  }\n\n  // touch devices have a bug where the onMouseOver is handled while it should not\n  // if the user would click something it keeps hovered while it should unhover\n  // so only listen to these events if the device has a mouse\n  if (hasMouse) {\n    document.onmouseover = hoverEvent;\n    document.onmousemove = captureMousePosition;\n    document.ontouchstart = unhover;\n    document.ontouchend = unhover;\n    document.ontouchcancel = unhover;\n    document.ontouchmove = unhover;\n  }\n\n  function add(ref: any, setHovered: any) {\n    refs.set(ref, setHovered);\n  }\n\n  function remove(ref: any) {\n    refs.delete(ref);\n  }\n\n  return {\n    add,\n    remove,\n    mousePosition,\n    hover,\n  };\n}\n\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }: any) {\n  return function forwardRef(ref: React.ElementRef<any>) {\n    const forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nfunction enhanceScrollView(WrappedComponent: any) {\n  const EnhancedScrollView = ({\n    forwardedRef,\n    onScroll,\n    scrollEventThrottle,\n    ...rest\n  }: any) => {\n    const onScrollInner = (e: any) => {\n      onScroll && onScroll(e);\n      const { mousePosition, hover } = hoverListener;\n      hover(document.elementFromPoint(mousePosition.x, mousePosition.y));\n    };\n    return (\n      <WrappedComponent\n        ref={forwardedRef}\n        onScroll={onScrollInner}\n        scrollEventThrottle={scrollEventThrottle || 25}\n        {...rest}\n      />\n    );\n  };\n\n  return React.forwardRef((props, ref) => {\n    return <EnhancedScrollView {...props} forwardedRef={ref} />;\n  });\n}\n\nexport const Pressable = React.forwardRef(PressableWithoutRef);\nexport const ScrollView = enhanceScrollView(\n  NativeScrollView\n) as React.ElementType<ScrollViewProps>;\nexport const FlatList = enhanceScrollView(NativeFlatList) as React.ElementType<\n  FlatListProps<unknown>\n>;\nexport const VirtualizedList = enhanceScrollView(\n  NativeVirtualizedList\n) as React.ElementType<VirtualizedListProps<unknown>>;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";"],"sourceRoot":""}