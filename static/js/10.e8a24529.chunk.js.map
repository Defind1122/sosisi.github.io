{"version":3,"sources":["src/components/Heading.tsx","src/hooks/useLinker.tsx","src/components/TokenLogo.tsx","src/components/Column.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/components/Border.tsx","src/components/Loading.tsx","src/components/TokenSymbol.tsx","src/components/TokenAmount.tsx","src/components/TokenName.tsx","assets/empty-token.png","assets/ETH.png","src/components/TokenPrice.tsx","src/components/TokenValue.tsx","src/hooks/useHomeState.tsx","src/screens/HomeScreen.tsx"],"names":["Heading","props","accent","useColors","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","IS_DESKTOP","paddingBottom","tiny","text","buttonText","type","size","title","onPress","onPressButton","color","buttonStyle","paddingHorizontal","Platform","OS","path","route","target","history","useHistory","useCallback","window","open","push","_target","navigate","useNavigation","TokenLogo","backgroundLight","useState","error","setError","placeholder","require","ETH","source","replaceWETH","isWETH","token","uri","logoURI","width","backgroundColor","borderRadius","onError","opacity","Column","View","marginTop","noTopMargin","large","normal","SocialIcon","darkMode","useContext","GlobalContext","background","textLight","light","iconColor","undefined","borderWidth","borderColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressDiscord","FlexView","justifyContent","name","raised","reverse","reverseColor","containerStyle","WebFooter","padding","Text","note","textAlign","Constants","manifest","version","Border","border","Loading","marginVertical","TokenSymbol","caption","marginLeft","symbol","TokenAmount","formatBalance","amount","balance","decimals","TokenName","numberOfLines","ellipsizeMode","module","exports","TokenPrice","formatUSD","priceUSD","TokenValue","valueUSD","useHomeState","EthersContext","provider","signer","address","tokens","lpTokens","setLPTokens","pools","setPools","loadingLPTokens","setLoadingLPTokens","loadingPools","setLoadingPools","getPair","useSDK","useEffect","useAsyncEffect","a","async","weth","find","t","length","Fraction","String","sushiData","price","wethPriceUSD","parse","fetchMyLPTokens","getAddress","fetched","Promise","all","map","lpToken","fetchLPTokenWithValue","fetchMyPools","Home","state","MyTokens","loadingTokens","goToSwap","loading","TokenItem","MyLPTokens","goToRemoveLiquidity","LPTokenItem","Pools","goToFarming","TokenList","renderItem","item","key","data","useMemo","filter","amountDeposited","isZero","sort","t1","t2","FlatList","keyExtractor","ItemSeparatorComponent","EmptyList","margin","paddingVertical","tokenA","tokenB","ExternalIcon","textDark","isETH","endsWith","ethers","constants","AddressZero","TouchableHighlight","toLowerCase","sum","reduce","previous","current","HomeScreen","totalValue","Screen","Container","BackgroundImage","Content","huge","Title"],"mappings":"wFAAA,8DA2CeA,IAzBmB,SAAAC,GAAU,IAChCC,EAAWC,cAAXD,OACR,OACI,kBAAC,IAAD,CAAUE,MAAO,CAAEC,WAAY,WAAYC,OAAQ,GAAIC,aAAcN,EAAMO,SAAW,EAAIC,IAAQC,QAC9F,kBAAC,IAAD,CACIC,QAAQ,EACRC,WAAYX,EAAMW,YAAc,OAChCJ,SAAUP,EAAMO,SAChBJ,MAAO,CAAC,CAAES,KAAM,EAAGC,SAAUC,IAAa,GAAK,GAAIC,cAAeP,IAAQQ,MAAQhB,EAAMG,QACvFH,EAAMiB,MAEVjB,EAAMkB,YACH,kBAAC,IAAD,CACIC,KAAM,QACNC,KAAM,QACNC,MAAOrB,EAAMkB,WACbI,QAAStB,EAAMuB,cACfC,MAAOvB,EACPwB,YAAa,CAAEC,kBAAmBlB,IAAQQ,W,kCCpC9D,mCAwBeW,IAAgB,QAAhBA,IAASC,GAlBH,SAACC,EAAcC,EAAeC,GAC/C,IAAMC,EAAUC,cAChB,OAAOC,uBAAY,WACXH,EACAI,OAAOC,KAAKP,EAAME,GAElBC,EAAQK,KAAKR,KAElB,CAACA,EAAME,KAGO,SAACF,EAAcC,EAAeQ,GAAsB,IAC7DC,EAAaC,0BAAbD,SACR,OAAOL,uBAAY,WACfK,EAAST,KACV,CAACA,M,sGCwBOW,IAtCG,SAACzC,GAMZ,IACsBO,EAAaL,cAA9BwC,gBADN,EAEwBC,oBAAS,GAFjC,WAEKC,EAFL,KAEYC,EAFZ,KAGIzB,EAAOpB,EAAMS,MAAQ,GAAK,GAC1BqC,EAAcC,EAAQ,MACtBC,EAAMD,EAAQ,MACdE,EAASjD,EAAMkD,aAAeC,YAAOnD,EAAMoD,OAASJ,EAAM,CAAEK,IAAKrD,EAAMoD,MAAME,SACnF,OACI,kBAAC,IAAD,CACInD,MAAO,CACH,CACIoD,MAAOnC,EACPf,OAAQe,EACRoC,gBAAiBxD,EAAMO,SAAWA,EAAW,QAC7CkD,aAAcrC,EAAO,GAEzBpB,EAAMG,QAEV,kBAAC,IAAD,CACI8C,QAASjD,EAAMoD,MAAME,SAAWV,EAAQE,EAAcG,EACtDS,QAAS,kBAAMb,GAAS,IACxB1C,MAAO,CACHoD,MAAO,OACPlD,OAAQ,OACRoD,aAAcrC,EAAO,EACrBuC,QAAS3D,EAAMO,SAAW,GAAM,Q,uGCfrCqD,EAbiB,SAAA5D,GAAK,OACjC,kBAAC6D,EAAA,EAAD,OACQ7D,EADR,CAEIG,MAAO,CACH,CACIoD,MAAO,OACPO,UAAW9D,EAAM+D,YAAc,EAAoB,QAAhBpC,IAASC,GAAepB,IAAQwD,MAAQxD,IAAQyD,QAEvFjE,EAAMG,W,2CCkBZ+D,EAAa,SAAClE,GAA4B,IACpCmE,EAAaC,qBAAWC,KAAxBF,SADmC,EAETjE,cAA1BoE,EAFmC,EAEnCA,WAAYC,EAFuB,EAEvBA,UACpB,OACI,kBAAC,IAAD,OACQvE,EADR,CAEIwE,OAAQL,EACRM,UAAWN,EAAW,aAAUO,EAChCvE,MAAO,CACHqD,gBAAiBc,EACjBK,YAAa,EACbC,YAAaT,EAAW,QAAUI,OAMnCM,EA7CK,WAAO,IACfV,EAAaC,qBAAWC,KAAxBF,SADc,EAEYjE,cAA1BoE,EAFc,EAEdA,WAAYC,EAFE,EAEFA,UACdO,EAAiBC,YAAU,gCAAiC,GAAI,UAChEC,EAAgBD,YAAU,+BAAgC,GAAI,UAC9DE,EAAiBF,YAAU,6BAA8B,GAAI,UACnE,OACI,kBAACG,EAAA,EAAD,CAAU/E,MAAO,CAAEoD,MAAO,OAAQ4B,eAAgB,WAC9C,kBAAC,EAAD,CAAYhE,KAAK,aAAaG,QAAS0D,IACvC,kBAAC,EAAD,CAAY7D,KAAK,UAAUG,QAASwD,IACpC,kBAAC,IAAD,CACI3D,KAAM,qBACNiE,KAAM,UACNC,QAAQ,EACRC,SAAS,EACT9D,MAAO8C,EACPiB,aAAcpB,EAAW,QAAU,UACnChE,MAAO,CAAEqD,gBAAiBc,GAC1BkB,eAAgB,CACZb,YAAa,EACbC,YAAaT,EAAW,QAAUI,GAEtCjD,QAAS2D,M,QCLVQ,IAfG,kBACd,kBAAC,EAAD,CAAQ1B,aAAa,GACjB,kBAACF,EAAA,EAAD,CACI1D,MAAO,CACHoD,MAAO,OACPmC,QAASlF,IAAQyD,SAErB,kBAAC,EAAD,MACA,kBAAC0B,EAAA,EAAD,CAAMC,MAAM,EAAMzF,MAAO,CAAE2D,UAAWtD,IAAQQ,KAAM6E,UAAW,SAAUtC,MAAO,SAAhF,0CACkCuC,IAAUC,SAASC,QADrD,S,kCClBZ,2CAqBeC,IAfA,SAAAjG,GAAU,IACbkG,EAAWhG,cAAXgG,OACR,OACI,kBAAC,IAAD,CACI/F,MAAO,CACHE,OAAQ,EACRkD,MAAO,OACPC,gBAAiB0C,EACjBpC,UAAW9D,EAAMS,MAAQD,IAAQQ,KAAOR,IAAQC,MAChDH,aAAcN,EAAMS,MAAQD,IAAQQ,KAAOR,IAAQC,MAAQD,IAAQQ,U,kCCfnF,oCAOemF,IAFC,kBAAM,kBAAC,IAAD,CAAmB/E,KAAM,QAASjB,MAAO,CAAEiG,eAAgB5F,IAAQwD,W,kCCLzF,oCAYeqC,IANK,SAACrG,GAAD,OAChB,kBAAC,IAAD,CAAMU,QAAQ,EAAM4F,SAAS,EAAM/F,SAAUP,EAAMO,SAAUJ,MAAO,CAAEoG,WAAY/F,IAAQQ,OACrFhB,EAAMoD,MAAMoD,U,kCCRrB,4CAeeC,IANK,SAACzG,GAAD,OAChB,kBAAC,IAAD,CAAMsG,QAASxF,IAAYP,SAAUP,EAAMO,SAAUJ,MAAOH,EAAMG,OAC7DuG,YAAc1G,EAAM2G,QAAU3G,EAAMoD,MAAMwD,QAAS5G,EAAMoD,MAAMyD,SAAU,M,kCCXlF,oCAiBeC,IAXG,SAAC9G,GAAD,OACd,kBAAC,IAAD,CACIsG,SAAS,EACTS,cAAe,EACfC,cAAe,OACf7G,MAAO,CAAEoG,WAAY/F,IAAQC,MAAO8C,MAAO,KAC3ChD,SAAUP,EAAMO,UACfO,IAAad,EAAMoD,MAAMgC,KAAOpF,EAAMoD,MAAMoD,U,qBCbrDS,EAAOC,QAAU,IAA0B,yC,qBCA3CD,EAAOC,QAAU,IAA0B,iC,kCCA3C,oCAqBeC,IARyB,SAAAnH,GACpC,OACI,kBAAC,IAAD,CAAM4F,MAAM,EAAMjF,WAAY,QAASJ,SAAUP,EAAMO,SAAUJ,MAAOH,EAAMG,OACzEiH,YAAUpH,EAAMoD,MAAMiE,UAAY,EAAG,M,kCChBlD,oCAqBeC,IARyB,SAAAtH,GACpC,OACI,kBAAC,IAAD,CAAM4F,MAAM,EAAMjF,WAAY,QAASJ,SAAUP,EAAMO,SAAUJ,MAAOH,EAAMG,OACzEiH,YAAUpH,EAAMoD,MAAMmE,UAAY,EAAG,M,sYCiEnCC,EA9DM,WAAO,IAAD,EACuBpD,qBAAWqD,KAAjDC,EADe,EACfA,SAAUC,EADK,EACLA,OAAQC,EADH,EACGA,QAASC,EADZ,EACYA,OADZ,EAESlF,qBAFT,WAEhBmF,EAFgB,KAENC,EAFM,OAGGpF,qBAHH,WAGhBqF,EAHgB,KAGTC,EAHS,OAIuBtF,oBAAS,GAJhC,WAIhBuF,EAJgB,KAICC,EAJD,OAKiBxF,oBAAS,GAL1B,WAKhByF,EALgB,KAKFC,EALE,KAMfC,EAAYC,cAAZD,QA+CR,OA7CAE,qBAAU,WACNT,OAAYrD,GACZuD,OAASvD,GACTyD,GAAmB,GACnBE,GAAgB,KACjB,CAACT,IAGJa,KAAe,8BAAAC,EAAAC,OAAA,mDACLC,EAAOf,EAAOgB,MAAK,SAAAC,GAAC,OAAI3F,YAAO2F,QACjCpB,GAAYC,GAAUiB,GAAQf,GAAUA,EAAOkB,OAAS,GAFjD,wBAGPZ,GAAmB,GAHZ,KAIca,IAJd,KAI6BC,OAJ7B,WAAAP,EAAA,MAI0CQ,IAAUN,KAAKO,SAJzD,8CAIDC,EAJC,KAIuBC,MAJvB,uBAAAX,EAAA,KAKeY,IALf,YAAAZ,EAAA,MAKqCf,EAAO4B,cAL5C,gCAK0D1B,EAL1D,KAKkEH,EALlE,kFAKD8B,EALC,uBAOHzB,EAPG,YAAAW,EAAA,MAQOe,QAAQC,IACVF,EAAQG,KAAI,SAAAC,GAAO,OAAIC,YAAsBD,EAAShB,EAAMQ,EAAcd,EAASZ,QATxF,+DAaHS,GAAmB,GAbhB,qFAgBZ,CAACG,EAASZ,EAAUC,EAAQE,IAG/BY,KAAe,8BAAAC,EAAAC,OAAA,mDACLC,EAAOf,EAAOgB,MAAK,SAAAC,GAAC,OAAI3F,YAAO2F,QACjCpB,GAAYC,GAAUiB,GAAQf,GAAUA,EAAOkB,OAAS,GAAKjB,GAFtD,wBAGPO,GAAgB,GAHT,KAIcW,IAJd,KAI6BC,OAJ7B,WAAAP,EAAA,MAI0CQ,IAAUN,KAAKO,SAJzD,8CAIDC,EAJC,KAIuBC,MAJvB,uBAAAX,EAAA,KAKeoB,IALf,YAAApB,EAAA,MAKkCf,EAAO4B,cALzC,gCAKuD1B,EALvD,KAK+DH,EAL/D,kFAKD8B,EALC,uBAOHvB,EAPG,YAAAS,EAAA,MAQOe,QAAQC,IACVF,EAAQG,KAAI,SAAAC,GAAO,OAAIC,YAAsBD,EAAShB,EAAMQ,EAAcd,EAASZ,QATxF,+DAaHW,GAAgB,GAbb,qFAgBZ,CAACC,EAASZ,EAAUC,EAAQE,EAAQC,IAEhC,CACHI,kBACAE,eACAP,SACAC,WACAE,U,mBCXF+B,EAAO,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,MACZ,OACI,kBAACnG,EAAA,EAAD,CAAM1D,MAAO,CAAE2D,UAAWhD,IAAaN,IAAQwD,MAAQxD,IAAQyD,SAC3D,kBAAC,EAAD,CAAU+F,MAAOA,IACjB,kBAACnG,EAAA,EAAD,CAAM1D,MAAO,CAAEE,OAAQG,IAAQwD,SAC/B,kBAAC,EAAD,CAAYgG,MAAOA,IACnB,kBAACnG,EAAA,EAAD,CAAM1D,MAAO,CAAEE,OAAQG,IAAQwD,SAC/B,kBAAC,EAAD,CAAOgG,MAAOA,MAKpBC,EAAW,SAAC,GAAoC,EAAlCD,MAAmC,IAAD,EAChB5F,qBAAWqD,KAArCyC,EAD0C,EAC1CA,cAAerC,EAD2B,EAC3BA,OACjBsC,EAAWpF,YAAU,QAAS,QACpC,OACI,kBAAClB,EAAA,EAAD,KACI,kBAAC9D,EAAA,EAAD,CAASkB,KAAM,SAAUC,WAAY,SAAUK,cAAe4I,IAC9D,kBAAC,EAAD,CAAWC,QAASF,EAAerC,OAAQA,EAAQwC,UAAWA,MAKpEC,EAAa,SAAC,GAAqC,IAAnCN,EAAkC,EAAlCA,MACZO,EAAsBxF,YAAU,oBAAqB,mBAC3D,OACI,kBAAClB,EAAA,EAAD,KACI,kBAAC9D,EAAA,EAAD,CAASkB,KAAM,YAAaC,WAAY,SAAUK,cAAegJ,IAEjE,kBAAC,EAAD,CAAWH,QAASJ,EAAM9B,gBAAiBL,OAAQmC,EAAMlC,SAAUuC,UAAWG,MAKpFC,EAAQ,SAAC,GAAqC,IAAnCT,EAAkC,EAAlCA,MACPU,EAAc3F,YAAU,WAAY,WAC1C,OACI,kBAAClB,EAAA,EAAD,KACI,kBAAC9D,EAAA,EAAD,CAASkB,KAAM,QAASC,WAAY,SAAUK,cAAemJ,IAE7D,kBAAC,EAAD,CAAWN,QAASJ,EAAM5B,aAAcP,OAAQmC,EAAMhC,MAAOqC,UAAWG,MAK9EG,EAAY,SAAC3K,GAKf,IAAM4K,EAAa1I,uBAAY,YAAe,IAAZ2I,EAAW,EAAXA,KAC9B,OAAO,kBAAC7K,EAAMqK,UAAP,CAAiBS,IAAKD,EAAKjD,QAASxE,MAAOyH,MACnD,IACGE,EAAOC,mBACT,kBACKhL,EAAM6H,QAAU,IAEZoD,QAAO,SAAA7H,GAAK,QAAMA,EAAM8H,gBAAkB9H,EAAM8H,gBAAgBC,SAAW/H,EAAMwD,QAAQuE,aACzFC,MAAK,SAACC,EAAIC,GAAL,OAAaA,EAAG/D,UAAY,IAAM8D,EAAG9D,UAAY,QAC/D,CAACvH,EAAM6H,SAEX,OAAO7H,EAAMoK,QACT,kBAACjE,EAAA,EAAD,MACgB,IAAhB4E,EAAKhC,OACL,kBAAC,EAAD,MAEA,kBAACwC,EAAA,EAAD,CACIC,aAAc,SAAAX,GAAI,OAAIA,EAAKjD,SAC3BmD,KAAMA,EACNH,WAAYA,EACZa,uBAAwB,kBAAM,kBAACxF,EAAA,EAAD,CAAQxF,OAAO,QAKnDiL,EAAY,WACd,OACI,kBAAC7H,EAAA,EAAD,CAAM1D,MAAO,CAAEwL,OAAQnL,IAAQyD,SAC3B,kBAAC0B,EAAA,EAAD,CAAMpF,UAAU,EAAMJ,MAAO,CAAE0F,UAAW,SAAUtC,MAAO,SACtD,wCAMX8G,EAAY,SAACrK,GACf,OACI,kBAACkF,EAAA,EAAD,CAAU/E,MAAO,CAAEC,WAAY,SAAUsB,kBAAmBlB,IAAQQ,KAAM4K,gBAAiB,IACvF,kBAACnJ,EAAA,EAAD,CAAWW,MAAOpD,EAAMoD,MAAO7C,SAAUP,EAAMO,WAC/C,kBAACsD,EAAA,EAAD,KACI,kBAACsD,EAAA,EAAD,CAAY/D,MAAOpD,EAAMoD,MAAO7C,SAAUP,EAAMO,SAAUJ,MAAO,CAAEoG,WAAY/F,IAAQC,SACvF,kBAACqG,EAAA,EAAD,CAAW1D,MAAOpD,EAAMoD,MAAO7C,SAAUP,EAAMO,YAEnD,kBAACsD,EAAA,EAAD,CAAM1D,MAAO,CAAES,KAAM,EAAGR,WAAY,aAChC,kBAACkH,EAAA,EAAD,CAAYlE,MAAOpD,EAAMoD,MAAO7C,SAAUP,EAAMO,WAChD,kBAAC2E,EAAA,EAAD,KACI,kBAACuB,EAAA,EAAD,CAAarD,MAAOpD,EAAMoD,MAAO7C,SAAUP,EAAMO,WAChDO,KAAc,kBAACuF,EAAA,EAAD,CAAajD,MAAOpD,EAAMoD,MAAO7C,SAAUP,EAAMO,aAGxE,kBAAC,EAAD,CAAcsB,KAAM,WAAa7B,EAAMoD,MAAMwE,YAKnD4C,EAAc,SAACxK,GACjB,OACI,kBAACkF,EAAA,EAAD,CAAU/E,MAAO,CAAEC,WAAY,SAAUsB,kBAAmBlB,IAAQQ,KAAM4K,gBAAiB,IACvF,kBAACnJ,EAAA,EAAD,CAAWW,MAAOpD,EAAMoD,MAAMyI,OAAQpL,OAAO,EAAMyC,aAAa,IAChE,kBAACT,EAAA,EAAD,CAAWW,MAAOpD,EAAMoD,MAAM0I,OAAQrL,OAAO,EAAMyC,aAAa,EAAM/C,MAAO,CAAEoG,WAAY,KAC3F,kBAACZ,EAAA,EAAD,CAAMjF,QAAQ,EAAM4F,SAAS,EAAMnG,MAAO,CAAEoG,WAAY/F,IAAQQ,OAC3DhB,EAAMoD,MAAMyI,OAAOrF,OADxB,IACiCxG,EAAMoD,MAAM0I,OAAOtF,QAEpD,kBAAC3C,EAAA,EAAD,CAAM1D,MAAO,CAAES,KAAM,EAAGR,WAAY,aAChC,kBAACkH,EAAA,EAAD,CAAYlE,MAAOpD,EAAMoD,MAAO7C,SAAUP,EAAMO,WAChD,kBAAC2E,EAAA,EAAD,KACI,kBAACuB,EAAA,EAAD,CAAarD,MAAOpD,EAAMoD,MAAOuD,OAAQ3G,EAAMoD,MAAM8H,gBAAiB3K,SAAUP,EAAMO,aAG9F,kBAAC,EAAD,CAAcsB,KAAM,UAAY7B,EAAMoD,MAAMwE,YAKlDmE,EAAe,SAAC,GAAc,IAAZlK,EAAW,EAAXA,KAAW,EACA3B,cAAvB8L,EADuB,EACvBA,SAAUzL,EADa,EACbA,SAEZ0L,EAAQpK,EAAKqK,SAASC,SAAOC,UAAUC,aAC7C,OACI,kBAACC,EAAA,EAAD,CAAoBhL,QAHR,kBAAMa,OAAOC,KAAK,kCAAoCP,EAAK0K,cAAe,WAGhDhM,SAAU0L,GAC5C,kBAAC,IAAD,CACI9K,KAAM,WACNiE,KAAM,gBACN5D,MAAOyK,EAAQ1L,EAAWyL,EAC1B7L,MAAO,CAAEoG,WAAY/F,IAAQQ,UAMvCwL,GAAM,SAAA3E,GAAM,OAAKA,EAASA,EAAO4E,QAAO,SAACC,EAAUC,GAAX,OAAuBD,GAAYC,EAAQpF,UAAY,KAAI,GAAK,GAE/FqF,UAvKI,WACf,IAAM5C,EAAQxC,IAER4C,EADoBhG,qBAAWqD,KAA7ByC,eACyBF,EAAM9B,iBAAmB8B,EAAM5B,aAC1DyE,EAAaL,GAAIxC,EAAMnC,QAAU2E,GAAIxC,EAAMlC,UAAY0E,GAAIxC,EAAMhC,OACvE,OACI,kBAAC8E,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,CAAS9M,MAAO,CAAEY,cAAeP,IAAQ0M,OACrC,kBAACC,EAAA,EAAD,CAAOlM,KAAM,cAAed,MAAO,CAAES,KAAM,KAC3C,kBAACuM,EAAA,EAAD,CACIlM,KAAMmJ,EAAU,iBAAchD,YAAUyF,EAAY,GACpDlM,WAAY,QACZJ,SAAU6J,EACVjK,MAAO,CAAEU,SAAUC,IAAa,GAAK,MAEzC,kBAAC,EAAD,CAAMkJ,MAAOA,KAEA,QAAhBrI,IAASC,IAAgB,kBAAC6D,EAAA,EAAD","file":"static/js/10.e8a24529.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n    style?: TextStyle;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={props.fontWeight || \"bold\"}\n                disabled={props.disabled}\n                style={[{ flex: 1, fontSize: IS_DESKTOP ? 24 : 18, paddingBottom: Spacing.tiny }, props.style]}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                    buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport useColors from \"../hooks/useColors\";\nimport Token from \"../types/Token\";\nimport { isWETH } from \"../utils\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const { backgroundLight: disabled } = useColors();\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && isWETH(props.token) ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? disabled : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={!props.token.logoURI || error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/sushiswap\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/sushiswap\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/YS8xH7E\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport Constants from \"expo-constants\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport Column from \"../Column\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst WebFooter = () => (\n    <Column noTopMargin={true}>\n        <View\n            style={{\n                width: \"100%\",\n                padding: Spacing.normal\n            }}>\n            <SocialIcons />\n            <Text note={true} style={{ marginTop: Spacing.tiny, textAlign: \"center\", width: \"100%\" }}>\n                Built with ❤️ by SushiSwap (v{Constants.manifest.version})\n            </Text>\n        </View>\n    </Column>\n);\n\nexport default WebFooter;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = props => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: props.small ? Spacing.tiny : Spacing.small,\n                marginBottom: props.small ? Spacing.tiny : Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenPriceProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenPrice: FC<TokenPriceProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.priceUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenPrice;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Text from \"./Text\";\n\nexport interface TokenValueProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst TokenValue: FC<TokenValueProps> = props => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.valueUSD || 0, 4)}\n        </Text>\n    );\n};\n\nexport default TokenValue;\n","import { useContext, useEffect, useState } from \"react\";\n\nimport sushiData from \"@sushiswap/sushi-data\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPTokenWithValue from \"../types/LPTokenWithValue\";\nimport { isWETH } from \"../utils\";\nimport { fetchLPTokenWithValue, fetchMyLPTokens, fetchMyPools } from \"../utils/fetch-utils\";\nimport useSDK from \"./useSDK\";\n\nexport interface HomeState {\n    loadingLPTokens: boolean;\n    loadingPools: boolean;\n    lpTokens?: LPTokenWithValue[];\n    pools?: LPTokenWithValue[];\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useHomeState = () => {\n    const { provider, signer, address, tokens } = useContext(EthersContext);\n    const [lpTokens, setLPTokens] = useState<LPTokenWithValue[]>();\n    const [pools, setPools] = useState<LPTokenWithValue[]>();\n    const [loadingLPTokens, setLoadingLPTokens] = useState(true);\n    const [loadingPools, setLoadingPools] = useState(true);\n    const { getPair } = useSDK();\n\n    useEffect(() => {\n        setLPTokens(undefined);\n        setPools(undefined);\n        setLoadingLPTokens(true);\n        setLoadingPools(true);\n    }, [address]);\n\n    // Load Liquidity\n    useAsyncEffect(async () => {\n        const weth = tokens.find(t => isWETH(t));\n        if (provider && signer && weth && tokens && tokens.length > 0) {\n            setLoadingLPTokens(true);\n            const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n            const fetched = await fetchMyLPTokens(await signer.getAddress(), tokens, provider);\n            try {\n                setLPTokens(\n                    await Promise.all(\n                        fetched.map(lpToken => fetchLPTokenWithValue(lpToken, weth, wethPriceUSD, getPair, provider))\n                    )\n                );\n            } finally {\n                setLoadingLPTokens(false);\n            }\n        }\n    }, [getPair, provider, signer, tokens]);\n\n    // Load Farming\n    useAsyncEffect(async () => {\n        const weth = tokens.find(t => isWETH(t));\n        if (provider && signer && weth && tokens && tokens.length > 0 && lpTokens) {\n            setLoadingPools(true);\n            const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n            const fetched = await fetchMyPools(await signer.getAddress(), tokens, provider);\n            try {\n                setPools(\n                    await Promise.all(\n                        fetched.map(lpToken => fetchLPTokenWithValue(lpToken, weth, wethPriceUSD, getPair, provider))\n                    )\n                );\n            } finally {\n                setLoadingPools(false);\n            }\n        }\n    }, [getPair, provider, signer, tokens, lpTokens]);\n\n    return {\n        loadingLPTokens,\n        loadingPools,\n        tokens,\n        lpTokens,\n        pools\n    };\n};\n\nexport default useHomeState;\n","import React, { FC, useCallback, useContext, useMemo } from \"react\";\nimport { FlatList, Platform, TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\n\nimport { ethers } from \"ethers\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport FlexView from \"../components/FlexView\";\nimport Heading from \"../components/Heading\";\nimport Loading from \"../components/Loading\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenAmount from \"../components/TokenAmount\";\nimport TokenLogo from \"../components/TokenLogo\";\nimport TokenName from \"../components/TokenName\";\nimport TokenPrice from \"../components/TokenPrice\";\nimport TokenSymbol from \"../components/TokenSymbol\";\nimport TokenValue from \"../components/TokenValue\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useHomeState, { HomeState } from \"../hooks/useHomeState\";\nimport useLinker from \"../hooks/useLinker\";\nimport LPTokenWithValue from \"../types/LPTokenWithValue\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Screen from \"./Screen\";\n\ninterface TokenItemProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n}\n\ninterface LPTokenItemProps {\n    token: LPTokenWithValue;\n    disabled?: boolean;\n}\n\nconst HomeScreen = () => {\n    const state = useHomeState();\n    const { loadingTokens } = useContext(EthersContext);\n    const loading = loadingTokens || state.loadingLPTokens || state.loadingPools;\n    const totalValue = sum(state.tokens) + sum(state.lpTokens) + sum(state.pools);\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content style={{ paddingBottom: Spacing.huge }}>\n                    <Title text={\"Total Value\"} style={{ flex: 1 }} />\n                    <Title\n                        text={loading ? \"Fetching…\" : formatUSD(totalValue, 4)}\n                        fontWeight={\"light\"}\n                        disabled={loading}\n                        style={{ fontSize: IS_DESKTOP ? 32 : 24 }}\n                    />\n                    <Home state={state} />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n        </Screen>\n    );\n};\n\nconst Home = ({ state }: { state: HomeState }) => {\n    return (\n        <View style={{ marginTop: IS_DESKTOP ? Spacing.large : Spacing.normal }}>\n            <MyTokens state={state} />\n            <View style={{ height: Spacing.large }} />\n            <MyLPTokens state={state} />\n            <View style={{ height: Spacing.large }} />\n            <Pools state={state} />\n        </View>\n    );\n};\n\nconst MyTokens = ({ state }: { state: HomeState }) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const goToSwap = useLinker(\"/swap\", \"Swap\");\n    return (\n        <View>\n            <Heading text={\"Tokens\"} buttonText={\"Manage\"} onPressButton={goToSwap} />\n            <TokenList loading={loadingTokens} tokens={tokens} TokenItem={TokenItem} />\n        </View>\n    );\n};\n\nconst MyLPTokens = ({ state }: { state: HomeState }) => {\n    const goToRemoveLiquidity = useLinker(\"/liquidity/remove\", \"RemoveLiquidity\");\n    return (\n        <View>\n            <Heading text={\"Liquidity\"} buttonText={\"Manage\"} onPressButton={goToRemoveLiquidity} />\n            {/* @ts-ignore */}\n            <TokenList loading={state.loadingLPTokens} tokens={state.lpTokens} TokenItem={LPTokenItem} />\n        </View>\n    );\n};\n\nconst Pools = ({ state }: { state: HomeState }) => {\n    const goToFarming = useLinker(\"/farming\", \"Farming\");\n    return (\n        <View>\n            <Heading text={\"Farms\"} buttonText={\"Manage\"} onPressButton={goToFarming} />\n            {/* @ts-ignore */}\n            <TokenList loading={state.loadingPools} tokens={state.pools} TokenItem={LPTokenItem} />\n        </View>\n    );\n};\n\nconst TokenList = (props: {\n    loading: boolean;\n    tokens?: TokenWithValue[] | LPTokenWithValue[];\n    TokenItem: FC<TokenItemProps | LPTokenItemProps>;\n}) => {\n    const renderItem = useCallback(({ item }) => {\n        return <props.TokenItem key={item.address} token={item} />;\n    }, []);\n    const data = useMemo(\n        () =>\n            (props.tokens || [])\n                // @ts-ignore\n                .filter(token => !(token.amountDeposited ? token.amountDeposited.isZero() : token.balance.isZero()))\n                .sort((t1, t2) => (t2.valueUSD || 0) - (t1.valueUSD || 0)),\n        [props.tokens]\n    );\n    return props.loading ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList\n            keyExtractor={item => item.address}\n            data={data}\n            renderItem={renderItem}\n            ItemSeparatorComponent={() => <Border small={true} />}\n        />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any matching asset.\"}\n            </Text>\n        </View>\n    );\n};\n\nconst TokenItem = (props: TokenItemProps) => {\n    return (\n        <FlexView style={{ alignItems: \"center\", paddingHorizontal: Spacing.tiny, paddingVertical: 4 }}>\n            <TokenLogo token={props.token} disabled={props.disabled} />\n            <View>\n                <TokenPrice token={props.token} disabled={props.disabled} style={{ marginLeft: Spacing.small }} />\n                <TokenName token={props.token} disabled={props.disabled} />\n            </View>\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                <TokenValue token={props.token} disabled={props.disabled} />\n                <FlexView>\n                    <TokenAmount token={props.token} disabled={props.disabled} />\n                    {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\n                </FlexView>\n            </View>\n            <ExternalIcon path={\"/tokens/\" + props.token.address} />\n        </FlexView>\n    );\n};\n\nconst LPTokenItem = (props: LPTokenItemProps) => {\n    return (\n        <FlexView style={{ alignItems: \"center\", paddingHorizontal: Spacing.tiny, paddingVertical: 4 }}>\n            <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\n            <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\n            <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\n                {props.token.tokenA.symbol}-{props.token.tokenB.symbol}\n            </Text>\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                <TokenValue token={props.token} disabled={props.disabled} />\n                <FlexView>\n                    <TokenAmount token={props.token} amount={props.token.amountDeposited} disabled={props.disabled} />\n                </FlexView>\n            </View>\n            <ExternalIcon path={\"/pairs/\" + props.token.address} />\n        </FlexView>\n    );\n};\n\nconst ExternalIcon = ({ path }) => {\n    const { textDark, disabled } = useColors();\n    const onPress = () => window.open(\"https://sushiswapanalytics.com/\" + path.toLowerCase(), \"_blank\");\n    const isETH = path.endsWith(ethers.constants.AddressZero);\n    return (\n        <TouchableHighlight onPress={onPress} disabled={isETH}>\n            <Icon\n                type={\"evilicon\"}\n                name={\"external-link\"}\n                color={isETH ? disabled : textDark}\n                style={{ marginLeft: Spacing.tiny }}\n            />\n        </TouchableHighlight>\n    );\n};\n\nconst sum = tokens => (tokens ? tokens.reduce((previous, current) => previous + (current.valueUSD || 0), 0) : 0);\n\nexport default HomeScreen;\n"],"sourceRoot":""}