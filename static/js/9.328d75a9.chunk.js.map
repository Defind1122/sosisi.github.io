{"version":3,"sources":["src/components/Notice.tsx","src/components/ApproveButton.tsx","src/components/TokenAmount.tsx","src/components/TokenSymbol.tsx","src/components/UnsupportedButton.tsx","src/components/TokenName.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/hooks/useAddLiquidityState.tsx","src/screens/LiquidityScreen.tsx"],"names":["Notice","props","borderStyle","border","useStyles","color","borderColor","style","clear","paddingHorizontal","Spacing","tiny","note","text","buttonText","onPressButton","title","type","size","fontWeight","onPress","titleStyle","buttonStyle","paddingVertical","alignSelf","marginTop","ApproveButton","approveToken","useContext","EthersContext","useState","loading","setLoading","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","symbol","containerStyle","marginBottom","TokenAmount","caption","disabled","formatBalance","amount","balance","decimals","TokenSymbol","medium","marginLeft","IS_DESKTOP","UnsupportedButton","state","fromSymbol","toSymbol","TokenName","Text","numberOfLines","ellipsizeMode","small","width","name","Loading","ActivityIndicator","position","right","bottom","TokenItem","accent","useColors","onSelectToken","Selectable","selected","ITEM_SEPARATOR_HEIGHT","FlexView","alignItems","TokenLogo","View","flex","Button","duplicate","height","TokenSearch","provider","signer","tokens","tokenToAdd","setTokenToAdd","findIndex","t","useEffect","undefined","useDelayedEffect","trim","ethers","utils","isAddress","findOrFetchToken","Input","value","onChangeText","placeholder","autoFocus","inputStyle","marginHorizontal","fontSize","inputContainerStyle","borderBottomWidth","marginRight","labelStyle","paddingTop","paddingBottom","onAddToken","TokenList","loadingTokens","renderItem","item","key","data","useMemo","filter","sort","t1","t2","isZero","localeCompare","length","FlatList","keyExtractor","EmptyList","margin","normal","textAlign","selectable","TokenSelect","addCustomToken","search","setSearch","query","setQuery","find","toLowerCase","Expandable","expanded","onExpand","onChangeSymbol","hide","includes","useAddLiquidityState","useTokenPairState","updateTokens","pair","setPair","adding","setAdding","useSDK","getPair","addLiquidity","addLiquidityETH","useDelayedOnBlockEffect","block","fromToken","toToken","onAdd","fromAmount","toAmount","parseBalance","amountETH","setFromSymbol","AddLiquidity","large","Border","ItemSeparator","FromTokenSelect","customTokens","ToTokenSelect","setToSymbol","Heading","FromTokenInput","TokenInput","onAmountChanged","newAmount","setFromAmount","priceOf","convertToken","quote","convertAmount","toExact","setToAmount","isEmptyValue","hideMaxButton","ToTokenInput","PriceInfo","FirstProviderInfo","green","noAmount","initialPrice","Fraction","from","toString","InfoBox","price","PairPriceInfo","setAmount","textDark","textLight","calculateAmountOfLPTokenMinted","useAsyncEffect","minted","toFixed","PriceMeta","Meta","label","suffix","Controls","error","setError","fromApproveRequired","fromTokenAllowed","toApproveRequired","toTokenAllowed","FetchingButton","gt","InsufficientBalanceButton","ROUTER","setFromTokenAllowed","setToTokenAllowed","message","code","ErrorMessage","SupplyButton","goToRemoveLiquidity","useLinker","LiquidityScreen","Screen","Container","Content","Title","light","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/9.328d75a9.chunk.js","sourcesContent":["import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || borderStyle.borderColor;\n    return (\n        <View style={[props.clear ? { paddingHorizontal: Spacing.tiny } : borderStyle, props.style]}>\n            <Text\n                note={true}\n                style={{\n                    color\n                }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={\"Approve \" + (props.token?.symbol || \"\")}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={true} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {IS_DESKTOP ? props.token.symbol : \"\"}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import React from \"react\";\n\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\nimport Button from \"./Button\";\n\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" Not Supported\"} disabled={true} />;\n};\n\nexport default UnsupportedButton;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","import React, { FC, useCallback, useContext, useEffect, useState } from \"react\";\nimport { ActivityIndicator, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Input from \"./Input\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\n\nexport interface TokenSearchProps {\n    tokens?: Token[];\n    text: string;\n    onChangeText: (text: string) => void;\n    onAddToken?: (token: Token) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSearch: FC<TokenSearchProps> = props => {\n    const { border } = useStyles();\n    const { provider, signer, tokens } = useContext(EthersContext);\n    const [tokenToAdd, setTokenToAdd] = useState<Token>();\n    const [loading, setLoading] = useState(false);\n    const duplicate = !!tokenToAdd && tokens.findIndex(t => t.address === tokenToAdd.address) !== -1;\n    if (!props.tokens) return <View />;\n    useEffect(() => {\n        if (props.text === \"\") {\n            setLoading(false);\n            setTokenToAdd(undefined);\n        }\n    }, [props.text]);\n    useDelayedEffect(\n        async () => {\n            const address = props.text.trim();\n            if (provider && signer && ethers.utils.isAddress(address)) {\n                setLoading(true);\n                try {\n                    const token = await findOrFetchToken(provider, address);\n                    if (token.name && token.symbol && token.decimals) {\n                        setTokenToAdd(token as Token);\n                    }\n                } finally {\n                    setLoading(false);\n                }\n            }\n        },\n        300,\n        [provider, signer, props.text]\n    );\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.small }}>\n                <Input\n                    value={props.text}\n                    onChangeText={props.onChangeText}\n                    placeholder={\"Token name, symbol or address\"}\n                    autoFocus={true}\n                    inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\n                    inputContainerStyle={{ borderBottomWidth: 0, marginRight: loading ? 32 : 0 }}\n                    labelStyle={{ height: 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 12,\n                        paddingBottom: 0\n                    }}\n                />\n                {props.onAddToken && loading && <Loading />}\n            </FlexView>\n            {props.onAddToken && tokenToAdd && (\n                <TokenItem token={tokenToAdd} selected={true} onSelectToken={props.onAddToken} duplicate={duplicate} />\n            )}\n        </View>\n    );\n};\n\nconst Loading = () => <ActivityIndicator size={\"small\"} style={{ position: \"absolute\", right: 16, bottom: 16 }} />;\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    duplicate: boolean;\n}) => {\n    const { accent } = useColors();\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={false}\n            disabled={true}\n            onPress={onPress}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} />\n                <TokenName token={props.token} />\n                <View style={{ flex: 1 }} />\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    color={accent}\n                    title={props.duplicate ? \"Already Added\" : \"ADD \" + props.token.symbol}\n                    fontWeight={\"bold\"}\n                    onPress={onPress}\n                    disabled={props.duplicate}\n                    buttonStyle={{ paddingHorizontal: 4, height: 27 }}\n                />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSearch;\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport Token from \"../types/Token\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenSearch from \"./TokenSearch\";\nimport TokenSymbol from \"./TokenSymbol\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    style?: ViewStyle;\n}\n\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens, addCustomToken } = useContext(EthersContext);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\n    const onAddToken = async (t: Token) => {\n        await addCustomToken(t);\n        setSearch(\"\");\n        setQuery(\"\");\n    };\n    const hidden = (t: Token) => {\n        let hide = props.hidden?.(t) || false;\n        if (!hide && query.length > 0 && !ethers.utils.isAddress(query)) {\n            hide = !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\n        }\n        return hide;\n    };\n    useEffect(() => setSearch(\"\"), [props.symbol]);\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\n    return (\n        <View style={props.style}>\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={onAddToken} />\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\n            </Expandable>\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () =>\n            tokens\n                .filter(token => (props.hidden ? !props.hidden(token) : true))\n                .sort(\n                    (t1, t2) =>\n                        (t2.balance.isZero() ? 0 : 10000000000) -\n                        (t1.balance.isZero() ? 0 : 10000000000) +\n                        t1.symbol.localeCompare(t2.symbol)\n                ),\n        [tokens, props.hidden]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any matching tokens.\"}\n            </Text>\n        </View>\n    );\n};\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <TokenName token={props.token} disabled={props.disabled} />\n                <TokenAmount token={props.token} disabled={props.disabled} style={{ flex: 1, textAlign: \"right\" }} />\n                <TokenSymbol token={props.token} disabled={props.disabled} />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSelect;\n","import { useCallback, useContext, useState } from \"react\";\n\nimport { Pair } from \"@sushiswap/sdk\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { parseBalance } from \"../utils\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport interface AddLiquidityState extends TokenPairState {\n    pair?: Pair;\n    onAdd: () => Promise<void>;\n    adding: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useAddLiquidityState: () => AddLiquidityState = () => {\n    const state = useTokenPairState();\n    const { provider, signer, updateTokens } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const [pair, setPair] = useState<Pair>();\n    const [adding, setAdding] = useState(false);\n    const { getPair, addLiquidity, addLiquidityETH } = useSDK();\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n                setPair(undefined);\n            }\n            if (state.fromToken && state.toToken && provider) {\n                try {\n                    setPair(await getPair(state.fromToken, state.toToken, provider));\n                } catch (e) {\n                } finally {\n                    setLoading(false);\n                }\n            } else {\n                setLoading(false);\n            }\n        },\n        () => \"getPair(\" + state.fromSymbol + \",\" + state.toSymbol + \")\",\n        [state.fromSymbol, state.toSymbol, provider],\n        0\n    );\n\n    const onAdd = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && state.toAmount && signer) {\n            setAdding(true);\n            try {\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const toAmount = parseBalance(state.toAmount, state.toToken.decimals);\n                if (state.fromSymbol === \"ETH\" || state.toSymbol === \"ETH\") {\n                    const [token, amount, amountETH] =\n                        state.fromSymbol === \"ETH\"\n                            ? [state.toToken, toAmount, fromAmount]\n                            : [state.fromToken, fromAmount, toAmount];\n                    const tx = await addLiquidityETH(token, amount, amountETH, signer);\n                    await tx.wait();\n                } else {\n                    const tx = await addLiquidity(state.fromToken, state.toToken, fromAmount, toAmount, signer);\n                    await tx.wait();\n                }\n                await updateTokens();\n                state.setFromSymbol(\"\");\n            } finally {\n                setAdding(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, state.toAmount, signer]);\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        pair,\n        onAdd,\n        adding\n    };\n};\n\nexport default useAddLiquidityState;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport ItemSeparator from \"../components/ItemSeparator\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { LiquiditySubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useAddLiquidityState, { AddLiquidityState } from \"../hooks/useAddLiquidityState\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport useSDK from \"../hooks/useSDK\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { convertAmount, convertToken, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst LiquidityScreen = () => {\n    return (\n        <Screen>\n            <LiquiditySubMenu />\n            <Container>\n                <Content>\n                    <Title text={\"Add Liquidity\"} />\n                    <Text light={true}>Add liquidity to a pool and get LP tokens of the pair.</Text>\n                    <AddLiquidity />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst AddLiquidity = () => {\n    const state = useAddLiquidityState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <FromTokenSelect state={state} />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <FromTokenInput state={state} />\n            <ItemSeparator />\n            <ToTokenInput state={state} />\n            <ItemSeparator />\n            <PriceInfo state={state} />\n        </View>\n    );\n};\n\nconst FromTokenSelect = ({ state }: { state: AddLiquidityState }) => {\n    const { customTokens } = useContext(EthersContext);\n    return (\n        <TokenSelect\n            title={\"1st Token\"}\n            symbol={state.fromSymbol}\n            onChangeSymbol={state.setFromSymbol}\n            hidden={token => !customTokens.find(t => t.address === token.address) && token.balance.isZero()}\n        />\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: AddLiquidityState }) => {\n    const { customTokens } = useContext(EthersContext);\n    if (!state.fromSymbol) {\n        return <Heading text={\"2nd Token\"} disabled={true} />;\n    }\n    return (\n        <View>\n            <TokenSelect\n                title={\"2nd Token\"}\n                symbol={state.toSymbol}\n                onChangeSymbol={state.setToSymbol}\n                hidden={token =>\n                    token.symbol === state.fromSymbol ||\n                    (!customTokens.find(t => t.address === token.address) && token.balance.isZero())\n                }\n            />\n        </View>\n    );\n};\n\nconst FromTokenInput = ({ state }: { state: AddLiquidityState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={\"Amount of Tokens\"} disabled={true} />;\n    }\n    const onAmountChanged = (newAmount: string) => {\n        state.setFromAmount(newAmount);\n        if (state.pair && state.fromToken) {\n            const fromPrice = state.pair.priceOf(convertToken(state.fromToken));\n            const toAmount = fromPrice.quote(convertAmount(state.fromToken, newAmount)).toExact();\n            state.setToAmount(isEmptyValue(toAmount) ? \"\" : toAmount);\n        }\n    };\n    return (\n        <TokenInput\n            title={\"Amount of Tokens\"}\n            token={state.fromToken}\n            amount={state.fromAmount}\n            onAmountChanged={onAmountChanged}\n            hideMaxButton={state.loading && !state.pair}\n        />\n    );\n};\n\nconst ToTokenInput = ({ state }: { state: AddLiquidityState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <View />;\n    }\n    const onAmountChanged = (newAmount: string) => {\n        state.setToAmount(newAmount);\n        if (state.pair && state.toToken) {\n            const toPrice = state.pair.priceOf(convertToken(state.toToken));\n            const fromAmount = toPrice.quote(convertAmount(state.toToken, newAmount)).toExact();\n            state.setFromAmount(isEmptyValue(fromAmount) ? \"\" : fromAmount);\n        }\n    };\n    return (\n        <TokenInput\n            token={state.toToken}\n            amount={state.toAmount}\n            onAmountChanged={onAmountChanged}\n            hideMaxButton={state.loading && !state.pair}\n        />\n    );\n};\n\nconst PriceInfo = ({ state }: { state: AddLiquidityState }) => {\n    if (state.fromToken && state.toToken && !state.loading && !state.pair) {\n        return <FirstProviderInfo state={state} />;\n    } else {\n        return <PairPriceInfo state={state} />;\n    }\n};\n\nconst FirstProviderInfo = ({ state }: { state: AddLiquidityState }) => {\n    const { green } = useColors();\n    const noAmount = isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount);\n    const initialPrice = Fraction.from(\n        parseBalance(state.toAmount, state.toToken!.decimals),\n        parseBalance(state.fromAmount, state.fromToken!.decimals)\n    ).toString(8);\n    return (\n        <View>\n            <InfoBox style={{ marginTop: Spacing.normal }}>\n                <PriceMeta state={state} price={initialPrice} disabled={noAmount} />\n            </InfoBox>\n            <Notice\n                text={\n                    \"You are the first liquidity provider.\\n\" +\n                    \"The ratio of tokens you add will set the price of this pool.\"\n                }\n                color={green}\n                style={{ marginTop: Spacing.small }}\n            />\n        </View>\n    );\n};\n\nconst PairPriceInfo = ({ state }: { state: AddLiquidityState }) => {\n    const [amount, setAmount] = useState<string>();\n    const { textDark, textLight, placeholder } = useColors();\n    const { calculateAmountOfLPTokenMinted } = useSDK();\n    useAsyncEffect(async () => {\n        if (state.pair && !isEmptyValue(state.fromAmount) && !isEmptyValue(state.toAmount)) {\n            const minted = await calculateAmountOfLPTokenMinted(\n                state.pair,\n                convertAmount(state.fromToken!, state.fromAmount),\n                convertAmount(state.toToken!, state.toAmount)\n            );\n            setAmount(minted?.toFixed(8));\n        }\n    }, [state.pair, state.fromAmount, state.toAmount]);\n    const disabled = isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount);\n    const price =\n        state.pair && state.fromToken ? state.pair.priceOf(convertToken(state.fromToken)).toFixed(8) : undefined;\n    const color = disabled ? placeholder : amount ? textDark : textLight;\n    const symbol = state.fromSymbol + \"-\" + state.toSymbol;\n    return (\n        <InfoBox>\n            <Text style={{ fontSize: 28, marginBottom: Spacing.normal, color }}>\n                {disabled ? \"N/A\" : amount ? amount + \" \" + symbol : \"Fetching…\"}\n            </Text>\n            <PriceMeta state={state} price={price} disabled={!state.fromSymbol || !state.toSymbol} />\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\nconst PriceMeta = ({ state, price, disabled }) => (\n    <Meta label={\"Price\"} text={price} suffix={state.toSymbol + \" = 1 \" + state.fromSymbol} disabled={disabled} />\n);\n\n// tslint:disable-next-line:max-func-body-length\nconst Controls = ({ state }: { state: AddLiquidityState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const fromApproveRequired = state.fromSymbol !== \"ETH\" && !state.fromTokenAllowed;\n    const toApproveRequired = state.toSymbol !== \"ETH\" && !state.toTokenAllowed;\n    const disabled =\n        fromApproveRequired || toApproveRequired || isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken ||\n            !state.toToken ||\n            state.loading ||\n            isEmptyValue(state.fromAmount) ||\n            isEmptyValue(state.toAmount) ? (\n                <SupplyButton state={state} onError={setError} disabled={true} />\n            ) : state.loading || !state.pair ? (\n                <FetchingButton />\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : parseBalance(state.toAmount, state.toToken.decimals).gt(state.toToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.toSymbol} />\n            ) : (state.fromSymbol === \"ETH\" && state.toSymbol === \"WETH\") ||\n              (state.fromSymbol === \"WETH\" && state.toSymbol === \"ETH\") ? (\n                <UnsupportedButton state={state} />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setFromTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!fromApproveRequired}\n                    />\n                    <ApproveButton\n                        token={state.toToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setToTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!toApproveRequired}\n                    />\n                    <SupplyButton state={state} onError={setError} disabled={disabled} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SupplyButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: AddLiquidityState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const goToRemoveLiquidity = useLinker(\"/liquidity/remove\", \"RemoveLiquidity\");\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onAdd();\n            goToRemoveLiquidity();\n        } catch (e) {\n            onError(e);\n        }\n    }, [state.onAdd, onError]);\n    return (\n        <Button\n            title={state.fromSymbol && state.toSymbol ? \"Supply \" + state.fromSymbol + \"-\" + state.toSymbol : \"Supply\"}\n            disabled={disabled}\n            loading={state.adding}\n            onPress={onPress}\n        />\n    );\n};\n\nexport default LiquidityScreen;\n"],"sourceRoot":""}