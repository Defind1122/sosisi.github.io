{"version":3,"sources":["src/components/InfoBox.tsx","src/components/Notice.tsx","src/components/Border.tsx","src/components/TokenAmount.tsx","src/components/TokenSymbol.tsx","src/components/UnsupportedButton.tsx","src/components/ExperimentalNotice.tsx","src/components/TokenName.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/hooks/useSwapState.tsx","src/screens/SwapScreen.tsx"],"names":["InfoBox","props","backgroundLight","useColors","border","useStyles","style","color","backgroundColor","marginTop","Spacing","normal","small","padding","tiny","Notice","borderStyle","borderColor","clear","paddingHorizontal","note","text","buttonText","onPressButton","title","type","size","fontWeight","onPress","titleStyle","buttonStyle","paddingVertical","alignSelf","Border","height","width","marginBottom","TokenAmount","caption","disabled","formatBalance","amount","token","balance","decimals","TokenSymbol","medium","marginLeft","IS_DESKTOP","symbol","UnsupportedButton","state","fromSymbol","toSymbol","ExperimentalNotice","onPressContract","useLinker","contractURL","marginVertical","TokenName","Text","numberOfLines","ellipsizeMode","name","Loading","ActivityIndicator","position","right","bottom","TokenItem","accent","useCallback","onSelectToken","Selectable","selected","containerStyle","ITEM_SEPARATOR_HEIGHT","FlexView","alignItems","TokenLogo","View","flex","Button","duplicate","TokenSearch","useContext","EthersContext","provider","signer","tokens","useState","tokenToAdd","setTokenToAdd","loading","setLoading","findIndex","t","address","useEffect","undefined","useDelayedEffect","a","async","trim","ethers","utils","isAddress","findOrFetchToken","Input","value","onChangeText","placeholder","autoFocus","inputStyle","marginHorizontal","fontSize","inputContainerStyle","borderBottomWidth","marginRight","labelStyle","paddingTop","paddingBottom","onAddToken","TokenList","loadingTokens","renderItem","item","key","data","useMemo","filter","hidden","sort","t1","t2","isZero","localeCompare","length","FlatList","keyExtractor","EmptyList","margin","textAlign","selectable","TokenSelect","addCustomToken","search","setSearch","query","setQuery","find","toLowerCase","Expandable","expanded","onExpand","onChangeSymbol","hide","includes","useSwapState","useTokenPairState","kovanSigner","updateTokens","useSDK","getTrade","swap","createOrder","calculateSwapFee","calculateLimitOrderFee","calculateLimitOrderReturn","orderType","setOrderType","priceInETH","setPriceInETH","trade","setTrade","unsupported","setUnsupported","swapFee","setSwapFee","limitOrderPrice","setLimitOrderPrice","limitOrderFee","setLimitOrderFee","limitOrderSwapFee","setLimitOrderSwapFee","limitOrderReturn","setLimitOrderReturn","swapping","setSwapping","creatingOrder","setCreatingOrder","setFromSymbol","useAsyncEffect","fromToken","constants","WeiPerEther","getNetwork","chainId","Token","toToken","WETH","Fetcher","fetchPairData","pair","parseBalance","priceOf","toFixed","isEmptyValue","fromAmount","useDelayedOnBlockEffect","block","sub","onSwap","result","tx","wait","onCreateOrder","amountIn","Fraction","parse","apply","mul","pow10","div","limitOrderUnsupported","Swap","large","OrderTypeSelect","OrderTypeItem","desc","FromTokenSelect","customTokens","Heading","ETH","ToTokenSelect","setToSymbol","AmountInput","TokenInput","onAmountChanged","setFromAmount","AmountNotice","lte","PriceInput","marketPrice","executionPrice","Zero","maxButtonText","LimitOrderUnsupportedNotice","TradeInfo","WrapInfo","SwapInfo","textDark","textLight","outputAmount","price","impact","priceImpact","Meta","label","suffix","SwapControls","error","setError","approveRequired","fromTokenAllowed","gt","InsufficientBalanceButton","onError","FetchingButton","ApproveButton","spender","ROUTER","onSuccess","setFromTokenAllowed","message","code","ErrorMessage","SwapButton","catch","WrapButton","onWrap","wrapping","UnwrapButton","onUnwrap","unwrapping","LimitOrderInfo","d","LimitOrderControls","getTokenAllowance","allowed","setAllowed","SETTLEMENT","allowance","BigNumber","from","gte","PriceTooLowButton","PlaceOrderButton","goToLimitOrders","SwapScreen","Screen","Container","Content","Title","light","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/8.a9ff9047.chunk.js","sourcesContent":["import React, { PropsWithChildren } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\n    const { backgroundLight } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: backgroundLight }),\n                    backgroundColor: backgroundLight,\n                    marginTop: Spacing.normal + Spacing.small,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\n\nexport default InfoBox;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || borderStyle.borderColor;\n    return (\n        <View style={[props.clear ? { paddingHorizontal: Spacing.tiny } : borderStyle, props.style]}>\n            <Text\n                note={true}\n                style={{\n                    color\n                }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = () => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: Spacing.small,\n                marginBottom: Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={true} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {IS_DESKTOP ? props.token.symbol : \"\"}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import React from \"react\";\n\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\nimport Button from \"./Button\";\n\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" Not Supported\"} disabled={true} />;\n};\n\nexport default UnsupportedButton;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useLinker from \"../hooks/useLinker\";\nimport Notice from \"./Notice\";\n\nconst ExperimentalNotice = (props: { contractURL: string }) => {\n    const onPressContract = useLinker(props.contractURL, \"\", \"_blank\");\n    return (\n        <View style={{ marginVertical: Spacing.tiny }}>\n            <Notice\n                text={\n                    \"This feature is in beta and contracts are unaudited. Read the contract yourself and use it at your own risk.\"\n                }\n                color={\"orange\"}\n                buttonText={\"View Contract\"}\n                onPressButton={onPressContract}\n            />\n        </View>\n    );\n};\n\nexport default ExperimentalNotice;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","import React, { FC, useCallback, useContext, useEffect, useState } from \"react\";\nimport { ActivityIndicator, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Input from \"./Input\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\n\nexport interface TokenSearchProps {\n    tokens?: Token[];\n    text: string;\n    onChangeText: (text: string) => void;\n    onAddToken?: (token: Token) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSearch: FC<TokenSearchProps> = props => {\n    const { border } = useStyles();\n    const { provider, signer, tokens } = useContext(EthersContext);\n    const [tokenToAdd, setTokenToAdd] = useState<Token>();\n    const [loading, setLoading] = useState(false);\n    const duplicate = !!tokenToAdd && tokens.findIndex(t => t.address === tokenToAdd.address) !== -1;\n    if (!props.tokens) return <View />;\n    useEffect(() => {\n        if (props.text === \"\") {\n            setLoading(false);\n            setTokenToAdd(undefined);\n        }\n    }, [props.text]);\n    useDelayedEffect(\n        async () => {\n            const address = props.text.trim();\n            if (provider && signer && ethers.utils.isAddress(address)) {\n                setLoading(true);\n                try {\n                    const token = await findOrFetchToken(provider, address);\n                    if (token.name && token.symbol && token.decimals) {\n                        setTokenToAdd(token as Token);\n                    }\n                } finally {\n                    setLoading(false);\n                }\n            }\n        },\n        300,\n        [provider, signer, props.text]\n    );\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.small }}>\n                <Input\n                    value={props.text}\n                    onChangeText={props.onChangeText}\n                    placeholder={\"Token name, symbol or address\"}\n                    autoFocus={true}\n                    inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\n                    inputContainerStyle={{ borderBottomWidth: 0, marginRight: loading ? 32 : 0 }}\n                    labelStyle={{ height: 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 12,\n                        paddingBottom: 0\n                    }}\n                />\n                {props.onAddToken && loading && <Loading />}\n            </FlexView>\n            {props.onAddToken && tokenToAdd && (\n                <TokenItem token={tokenToAdd} selected={true} onSelectToken={props.onAddToken} duplicate={duplicate} />\n            )}\n        </View>\n    );\n};\n\nconst Loading = () => <ActivityIndicator size={\"small\"} style={{ position: \"absolute\", right: 16, bottom: 16 }} />;\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    duplicate: boolean;\n}) => {\n    const { accent } = useColors();\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={false}\n            disabled={true}\n            onPress={onPress}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} />\n                <TokenName token={props.token} />\n                <View style={{ flex: 1 }} />\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    color={accent}\n                    title={props.duplicate ? \"Already Added\" : \"ADD \" + props.token.symbol}\n                    fontWeight={\"bold\"}\n                    onPress={onPress}\n                    disabled={props.duplicate}\n                    buttonStyle={{ paddingHorizontal: 4, height: 27 }}\n                />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSearch;\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport Token from \"../types/Token\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenSearch from \"./TokenSearch\";\nimport TokenSymbol from \"./TokenSymbol\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    style?: ViewStyle;\n}\n\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens, addCustomToken } = useContext(EthersContext);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\n    const onAddToken = async (t: Token) => {\n        await addCustomToken(t);\n        setSearch(\"\");\n        setQuery(\"\");\n    };\n    const hidden = (t: Token) => {\n        let hide = props.hidden?.(t) || false;\n        if (!hide && query.length > 0 && !ethers.utils.isAddress(query)) {\n            hide = !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\n        }\n        return hide;\n    };\n    useEffect(() => setSearch(\"\"), [props.symbol]);\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\n    return (\n        <View style={props.style}>\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={onAddToken} />\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\n            </Expandable>\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () =>\n            tokens\n                .filter(token => (props.hidden ? !props.hidden(token) : true))\n                .sort(\n                    (t1, t2) =>\n                        (t2.balance.isZero() ? 0 : 10000000000) -\n                        (t1.balance.isZero() ? 0 : 10000000000) +\n                        t1.symbol.localeCompare(t2.symbol)\n                ),\n        [tokens, props.hidden]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any matching tokens.\"}\n            </Text>\n        </View>\n    );\n};\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <TokenName token={props.token} disabled={props.disabled} />\n                <TokenAmount token={props.token} disabled={props.disabled} style={{ flex: 1, textAlign: \"right\" }} />\n                <TokenSymbol token={props.token} disabled={props.disabled} />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSelect;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { Trade } from \"@sushiswap/sdk\";\nimport { Fetcher, Token, WETH } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { formatBalance, isEmptyValue, parseBalance, pow10 } from \"../utils\";\nimport useDelayedEffect from \"./useDelayedEffect\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport type OrderType = \"market\" | \"limit\";\n\nexport interface SwapState extends TokenPairState {\n    orderType?: OrderType;\n    setOrderType: (orderType?: OrderType) => void;\n    priceInETH?: ethers.BigNumber | null;\n    trade?: Trade;\n    unsupported: boolean;\n    limitOrderUnsupported: boolean;\n    limitOrderPrice: string;\n    setLimitOrderPrice: (price: string) => void;\n    swapFee: string;\n    limitOrderFee: string;\n    limitOrderSwapFee: string;\n    limitOrderReturn: string;\n    onSwap: () => Promise<void>;\n    swapping: boolean;\n    onCreateOrder: () => Promise<void>;\n    creatingOrder: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapState: () => SwapState = () => {\n    const state = useTokenPairState();\n    const { provider, signer, kovanSigner, updateTokens } = useContext(EthersContext);\n    const {\n        getTrade,\n        swap,\n        createOrder,\n        calculateSwapFee,\n        calculateLimitOrderFee,\n        calculateLimitOrderReturn\n    } = useSDK();\n    const [loading, setLoading] = useState(true);\n    const [orderType, setOrderType] = useState<OrderType>();\n    const [priceInETH, setPriceInETH] = useState<ethers.BigNumber | null>();\n    const [trade, setTrade] = useState<Trade>();\n    const [unsupported, setUnsupported] = useState(false);\n    const [swapFee, setSwapFee] = useState(\"\");\n    const [limitOrderPrice, setLimitOrderPrice] = useState<string>(\"\");\n    const [limitOrderFee, setLimitOrderFee] = useState(\"\");\n    const [limitOrderSwapFee, setLimitOrderSwapFee] = useState(\"\");\n    const [limitOrderReturn, setLimitOrderReturn] = useState(\"\");\n    const [swapping, setSwapping] = useState(false);\n    const [creatingOrder, setCreatingOrder] = useState(false);\n\n    useEffect(() => {\n        if (!orderType) {\n            state.setFromSymbol(\"\");\n        }\n        setLimitOrderPrice(\"\");\n    }, [orderType]);\n\n    useAsyncEffect(async () => {\n        setPriceInETH(undefined);\n        if (provider && state.fromToken) {\n            if (state.fromToken.symbol === \"WETH\") {\n                setPriceInETH(ethers.constants.WeiPerEther);\n            } else {\n                const { chainId } = await provider.getNetwork();\n                try {\n                    const fromToken = new Token(chainId, state.fromToken.address, state.fromToken.decimals);\n                    const toToken = WETH[chainId];\n                    const pair = await Fetcher.fetchPairData(fromToken, toToken);\n                    setPriceInETH(parseBalance(pair.priceOf(toToken).toFixed(), fromToken.decimals));\n                } catch (e) {\n                    setPriceInETH(null);\n                }\n            }\n        }\n    }, [provider, state.fromToken]);\n\n    useDelayedEffect(\n        () => {\n            if (isEmptyValue(state.fromAmount)) {\n                setLimitOrderPrice(\"\");\n                setTrade(undefined);\n            }\n        },\n        300,\n        [state.fromAmount]\n    );\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n            }\n            if (state.fromToken && state.toToken && state.fromAmount && signer?.provider) {\n                const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                if (!amount.isZero()) {\n                    setUnsupported(false);\n                    try {\n                        setTrade(await getTrade(state.fromToken, state.toToken, amount, signer?.provider));\n                    } catch (e) {\n                        setUnsupported(true);\n                    } finally {\n                        setLoading(false);\n                    }\n                }\n            }\n        },\n        () => \"getTrade(\" + state.fromSymbol + \",\" + state.toSymbol + \",\" + state.fromAmount + \")\",\n        [state.fromSymbol, state.toSymbol, state.fromAmount]\n    );\n\n    useAsyncEffect(() => {\n        if (trade && !isEmptyValue(state.fromAmount)) {\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n            setSwapFee(formatBalance(calculateSwapFee(fromAmount), state.fromToken!.decimals, 8));\n            if (orderType === \"limit\") {\n                setLimitOrderFee(formatBalance(calculateLimitOrderFee(fromAmount), state.fromToken!.decimals, 8));\n                setLimitOrderSwapFee(\n                    formatBalance(\n                        calculateSwapFee(fromAmount.sub(calculateLimitOrderFee(fromAmount))),\n                        state.fromToken!.decimals,\n                        8\n                    )\n                );\n            }\n        }\n    }, [orderType, trade, state.fromAmount]);\n\n    useAsyncEffect(() => {\n        if (state.fromToken && state.toToken && !isEmptyValue(state.fromAmount) && !isEmptyValue(limitOrderPrice)) {\n            setLimitOrderReturn(\n                formatBalance(\n                    calculateLimitOrderReturn(\n                        state.fromToken,\n                        state.toToken,\n                        parseBalance(state.fromAmount, state.fromToken.decimals),\n                        limitOrderPrice\n                    ),\n                    state.toToken.decimals,\n                    IS_DESKTOP ? 18 : 8\n                )\n            );\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, limitOrderPrice]);\n\n    const onSwap = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && signer && trade) {\n            setSwapping(true);\n            try {\n                const result = await swap(trade, signer);\n                if (result) {\n                    await result.tx.wait();\n                    await updateTokens();\n                    setTrade(undefined);\n                    setOrderType(undefined);\n                }\n            } finally {\n                setSwapping(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, trade]);\n\n    const onCreateOrder = useCallback(async () => {\n        if (\n            state.fromToken &&\n            state.toToken &&\n            state.fromAmount &&\n            !isEmptyValue(limitOrderPrice) &&\n            signer &&\n            kovanSigner\n        ) {\n            setCreatingOrder(true);\n            try {\n                const amountIn = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const tx = await createOrder(\n                    state.fromToken,\n                    state.toToken,\n                    amountIn,\n                    Fraction.parse(limitOrderPrice)\n                        .apply(amountIn)\n                        .mul(pow10(state.toToken.decimals))\n                        .div(pow10(state.fromToken.decimals)),\n                    signer,\n                    kovanSigner\n                );\n                await tx.wait();\n                setTrade(undefined);\n                setOrderType(undefined);\n            } finally {\n                setCreatingOrder(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, kovanSigner, limitOrderPrice]);\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        orderType,\n        setOrderType,\n        priceInETH,\n        trade,\n        unsupported,\n        swapFee,\n        limitOrderPrice,\n        setLimitOrderPrice,\n        limitOrderFee,\n        limitOrderSwapFee,\n        limitOrderReturn,\n        onSwap,\n        swapping,\n        limitOrderUnsupported: orderType === \"limit\" && (state.fromSymbol === \"ETH\" || state.toSymbol === \"ETH\"),\n        onCreateOrder,\n        creatingOrder\n    };\n};\n\nexport default useSwapState;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Expandable from \"../components/Expandable\";\nimport ExperimentalNotice from \"../components/ExperimentalNotice\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"../components/ItemSeparator\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Selectable from \"../components/Selectable\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SwapSubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER, SETTLEMENT } from \"../constants/contracts\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useLinker from \"../hooks/useLinker\";\nimport useSwapState, { OrderType, SwapState } from \"../hooks/useSwapState\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst SwapScreen = () => {\n    return (\n        <Screen>\n            <SwapSubMenu />\n            <Container>\n                <Content>\n                    <Title text={\"New Order\"} />\n                    <Text light={true}>Swap now or place a limit order with a desired price.</Text>\n                    <Swap />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst Swap = () => {\n    const state = useSwapState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <OrderTypeSelect state={state} />\n            <Border />\n            <FromTokenSelect state={state} />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <AmountInput state={state} />\n            {state.orderType === \"limit\" && (\n                <View>\n                    <AmountNotice state={state} />\n                    <Border />\n                    <PriceInput state={state} />\n                </View>\n            )}\n            <TradeInfo state={state} />\n        </View>\n    );\n};\n\nconst OrderTypeSelect = ({ state }: { state: SwapState }) => {\n    return (\n        <View>\n            <Expandable title={\"Order Type\"} expanded={!state.orderType} onExpand={() => state.setOrderType()}>\n                <OrderTypeItem state={state} orderType={\"market\"} />\n                <OrderTypeItem state={state} orderType={\"limit\"} />\n            </Expandable>\n            {state.orderType && <OrderTypeItem state={state} orderType={state.orderType} selectable={true} />}\n            {state.orderType === \"limit\" && (\n                <ExperimentalNotice\n                    contractURL={\n                        \"https://github.com/sushiswap/sushiswap-settlement/blob/master/contracts/Settlement.sol\"\n                    }\n                />\n            )}\n        </View>\n    );\n};\n\nconst OrderTypeItem = ({\n    state,\n    orderType,\n    selectable\n}: {\n    state: SwapState;\n    orderType: OrderType;\n    selectable?: boolean;\n}) => {\n    const selected = state.orderType === orderType;\n    const type = orderType === \"market\" ? \"Market Order\" : \"Limit Order\";\n    const desc =\n        orderType === \"market\" ? \"Settle an order immediately\" : \"Place an order with a desired price to be settled\";\n    const onPress = () => state.setOrderType(state.orderType === orderType ? undefined : orderType);\n    return (\n        <Selectable\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}\n            style={{\n                paddingHorizontal: Spacing.small + Spacing.tiny\n            }}\n            selected={selected}\n            disabled={selectable}\n            onPress={onPress}>\n            <Text fontWeight={\"regular\"}>{type}</Text>\n            <Text note={true}>{desc}</Text>\n        </Selectable>\n    );\n};\n\nconst FromTokenSelect = ({ state }: { state: SwapState }) => {\n    const { tokens, customTokens } = useContext(EthersContext);\n    if (!state.orderType) {\n        return <Heading text={\"Token To Sell\"} disabled={true} />;\n    }\n    const ETH = tokens ? tokens.find(token => token.symbol === \"ETH\") : null;\n    return (\n        <View>\n            <TokenSelect\n                title={\"Token To Sell\"}\n                symbol={state.fromSymbol}\n                onChangeSymbol={state.setFromSymbol}\n                hidden={token =>\n                    (!customTokens.find(t => t.address === token.address) && token.balance.isZero()) ||\n                    (state.orderType === \"limit\" && token.symbol === \"ETH\")\n                }\n            />\n            {state.orderType === \"limit\" && !state.fromSymbol && ETH && !ETH.balance.isZero() && (\n                <LimitOrderUnsupportedNotice />\n            )}\n        </View>\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: SwapState }) => {\n    if (!state.orderType || !state.fromSymbol) {\n        return <Heading text={\"Token To Buy\"} disabled={true} />;\n    }\n    return (\n        <View>\n            <TokenSelect\n                title={\"Token To Buy\"}\n                symbol={state.toSymbol}\n                onChangeSymbol={state.setToSymbol}\n                hidden={token =>\n                    token.symbol === state.fromSymbol || (state.orderType === \"limit\" && token.symbol === \"ETH\")\n                }\n            />\n            {state.orderType === \"limit\" && !state.toSymbol && <LimitOrderUnsupportedNotice />}\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: SwapState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={\"Amount\"} disabled={true} />;\n    }\n    return (\n        <View>\n            <Heading text={state.fromSymbol + \" Amount\"} />\n            <TokenInput\n                token={state.fromToken}\n                amount={state.fromAmount}\n                onAmountChanged={state.setFromAmount}\n                autoFocus={true}\n            />\n        </View>\n    );\n};\n\nconst AmountNotice = ({ state }: { state: SwapState }) => {\n    if (\n        state.priceInETH === undefined ||\n        isEmptyValue(state.fromAmount) ||\n        !state.fromToken ||\n        (state.priceInETH && parseBalance(state.fromAmount, state.fromToken.decimals).lte(state.priceInETH.mul(10)))\n    ) {\n        return <View />;\n    }\n    return (\n        <View style={{ marginTop: Spacing.small }}>\n            <Notice\n                text={\n                    state.priceInETH === null\n                        ? \"This token is not supported in beta.\"\n                        : \"Maximum allowed amount in beta is \" +\n                          formatBalance(state.priceInETH.mul(10), state.fromToken!.decimals) +\n                          \" \" +\n                          state.fromSymbol +\n                          \" (≈ 10 ETH).\"\n                }\n                color={\"red\"}\n            />\n        </View>\n    );\n};\n\nconst PriceInput = ({ state }: { state: SwapState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={\"Minimum Price\"} disabled={true} />;\n    }\n    const marketPrice =\n        state.toToken && state.trade\n            ? parseBalance(state.trade.executionPrice.toFixed(state.toToken.decimals), state.toToken.decimals)\n            : ethers.constants.Zero;\n    return (\n        <TokenInput\n            title={\"Minimum Price (\" + state.toSymbol + \"/\" + state.fromSymbol + \")\"}\n            token={\n                {\n                    ...state.toToken,\n                    balance: marketPrice\n                } as Token\n            }\n            amount={state.limitOrderPrice}\n            onAmountChanged={state.setLimitOrderPrice}\n            maxButtonText={\"MARKET\"}\n        />\n    );\n};\n\nconst LimitOrderUnsupportedNotice = () => {\n    const { placeholder } = useColors();\n    return (\n        <Notice\n            text={\"⚠️ ETH not supported for limit orders. Use WETH instead.\"}\n            color={placeholder}\n            clear={true}\n            style={{ marginVertical: Spacing.small }}\n        />\n    );\n};\n\nconst TradeInfo = ({ state }: { state: SwapState }) => {\n    if (\n        (state.fromSymbol === \"ETH\" && state.toSymbol === \"WETH\") ||\n        (state.fromSymbol === \"WETH\" && state.toSymbol === \"ETH\")\n    ) {\n        return <WrapInfo state={state} />;\n    }\n    const disabled =\n        state.fromSymbol === \"\" ||\n        state.toSymbol === \"\" ||\n        isEmptyValue(state.fromAmount) ||\n        (state.orderType === \"limit\" && state.fromSymbol === \"ETH\");\n    return (\n        <InfoBox>\n            {state.orderType === \"limit\" ? (\n                <LimitOrderInfo state={state} />\n            ) : (\n                <SwapInfo state={state} disabled={disabled} />\n            )}\n        </InfoBox>\n    );\n};\n\nconst WrapInfo = ({ state }: { state: SwapState }) => {\n    const disabled = isEmptyValue(state.fromAmount);\n    return (\n        <InfoBox>\n            <Text style={{ fontSize: 28, marginBottom: Spacing.normal }} disabled={disabled}>\n                {disabled ? \"N/A\" : state.fromAmount + \" \" + state.toSymbol}\n            </Text>\n            <SwapControls state={state} />\n        </InfoBox>\n    );\n};\n\nconst SwapInfo = ({ state, disabled }: { state: SwapState; disabled: boolean }) => {\n    const { textDark, textLight, placeholder } = useColors();\n    const amount = state.trade?.outputAmount?.toFixed(IS_DESKTOP ? 18 : 8);\n    const price = state.trade?.executionPrice?.toFixed(IS_DESKTOP ? 18 : 8);\n    const impact = state.trade?.priceImpact?.toFixed(2);\n    return (\n        <View>\n            <Text\n                style={{\n                    fontSize: 28,\n                    marginBottom: Spacing.normal,\n                    color: disabled ? placeholder : amount ? textDark : textLight\n                }}>\n                {disabled ? \"N/A\" : amount ? amount + \" \" + state.toSymbol : \"Fetching…\"}\n            </Text>\n            <Meta\n                label={\"Price\"}\n                text={price}\n                suffix={state.toSymbol + \"  = 1 \" + state.fromSymbol}\n                disabled={disabled}\n            />\n            <Meta label={\"Price Impact\"} text={impact} suffix={\"%\"} disabled={disabled} />\n            <Meta label={\"Fee (0.30%)\"} text={state.swapFee} suffix={state.fromSymbol} disabled={disabled} />\n            <SwapControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst SwapControls = ({ state }: { state: SwapState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = state.fromSymbol !== \"ETH\" && !state.fromTokenAllowed;\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken || !state.toToken || isEmptyValue(state.fromAmount) ? (\n                <SwapButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : state.fromSymbol === \"WETH\" && state.toSymbol === \"ETH\" ? (\n                <UnwrapButton state={state} onError={setError} />\n            ) : state.fromSymbol === \"ETH\" && state.toSymbol === \"WETH\" ? (\n                <WrapButton state={state} onError={setError} />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setFromTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!approveRequired}\n                    />\n                    <SwapButton state={state} onError={setError} disabled={approveRequired} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SwapButton = ({ state, onError, disabled }: { state: SwapState; onError: (e) => void; disabled: boolean }) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onSwap().catch(onError);\n    }, [state.onSwap, onError]);\n    return (\n        <Button\n            title={state.fromSymbol && state.toSymbol ? \"Swap \" + state.fromSymbol + \"-\" + state.toSymbol : \"Swap\"}\n            disabled={disabled}\n            loading={state.swapping}\n            onPress={onPress}\n        />\n    );\n};\n\nconst WrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onWrap().catch(onError);\n    }, []);\n    return <Button title={\"Wrap\"} loading={state.wrapping} onPress={onPress} />;\n};\n\nconst UnwrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onUnwrap().catch(onError);\n    }, []);\n    return <Button title={\"Unwrap\"} loading={state.unwrapping} onPress={onPress} />;\n};\n\nconst LimitOrderInfo = ({ state }: { state: SwapState }) => {\n    const d = !state.trade?.executionPrice;\n    return (\n        <View>\n            <Text\n                disabled={isEmptyValue(state.limitOrderReturn)}\n                style={{ fontSize: 28, marginBottom: Spacing.normal }}>\n                {isEmptyValue(state.limitOrderReturn) ? \"N/A\" : state.limitOrderReturn + \" \" + state.toSymbol}\n            </Text>\n            <Meta\n                label={\"Market Price\"}\n                text={state.trade?.executionPrice?.toFixed(8) || undefined}\n                suffix={state.toSymbol + \" / \" + state.fromSymbol + \"\"}\n                disabled={d}\n            />\n            <Meta label={\"Relayer Fee (0.20%)\"} text={state.limitOrderFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={\"Swap Fee (0.30%)\"} text={state.limitOrderSwapFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={\"Expiration\"} text={\"24 Hours From Now\"} disabled={d} />\n            <LimitOrderControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LimitOrderControls = ({ state }: { state: SwapState }) => {\n    const { getTokenAllowance } = useContext(EthersContext);\n    const [error, setError] = useState<MetamaskError>({});\n    const [allowed, setAllowed] = useState<boolean>();\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    useDelayedEffect(\n        async () => {\n            if (state.fromToken && !isEmptyValue(state.fromAmount)) {\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const allowance = await getTokenAllowance(state.fromToken.address, SETTLEMENT);\n                setAllowed(ethers.BigNumber.from(allowance).gte(fromAmount));\n            }\n        },\n        500,\n        [state.fromToken, state.fromAmount]\n    );\n    const disabled =\n        state.orderType === \"market\" ||\n        state.toSymbol === \"\" ||\n        !state.fromToken ||\n        !state.toToken ||\n        isEmptyValue(state.fromAmount) ||\n        !state.priceInETH ||\n        parseBalance(state.fromAmount, state.fromToken!.decimals).gt(state.priceInETH.mul(10)) ||\n        !state.trade ||\n        isEmptyValue(state.limitOrderPrice);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {disabled ? (\n                <PlaceOrderButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken!.decimals).gt(state.fromToken!.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : !Fraction.parse(state.limitOrderPrice).gt(\n                  Fraction.parse(state.trade!.executionPrice.toFixed(state.toToken!.decimals))\n              ) ? (\n                <PriceTooLowButton />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken!}\n                        spender={SETTLEMENT}\n                        onSuccess={() => setAllowed(true)}\n                        onError={setError}\n                        hidden={allowed}\n                    />\n                    <PlaceOrderButton state={state} onError={setError} disabled={!allowed} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst PriceTooLowButton = () => {\n    return <Button title={\"Set Price Greater Than Market\"} disabled={true} />;\n};\n\nconst PlaceOrderButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: SwapState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const goToLimitOrders = useLinker(\"/swap/my-orders\", \"LimitOrders\");\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onCreateOrder();\n            goToLimitOrders();\n        } catch (e) {\n            onError(e);\n        }\n    }, [state.onCreateOrder, goToLimitOrders, onError]);\n    return <Button title={\"Place Limit Order\"} disabled={disabled} loading={state.creatingOrder} onPress={onPress} />;\n};\n\nexport default SwapScreen;\n"],"sourceRoot":""}