{"version":3,"sources":["src/components/Heading.tsx","src/hooks/useLinker.tsx","src/components/TokenLogo.tsx","src/components/Column.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/components/Border.tsx","src/components/Loading.tsx","src/components/TokenAmount.tsx","src/components/TokenName.tsx","src/components/TokenSymbol.tsx","assets/empty-token.png","assets/ETH.png","src/hooks/useHomeState.tsx","src/screens/HomeScreen.tsx"],"names":["Heading","props","accent","useColors","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","IS_DESKTOP","paddingBottom","tiny","text","buttonText","type","size","title","onPress","onPressButton","color","buttonStyle","paddingHorizontal","Platform","OS","path","route","target","history","useHistory","useCallback","window","open","push","_target","navigate","useNavigation","TokenLogo","backgroundLight","useState","error","setError","placeholder","require","ETH","source","replaceWETH","token","symbol","uri","logoURI","width","backgroundColor","borderRadius","onError","opacity","Column","View","marginTop","noTopMargin","large","normal","SocialIcon","darkMode","useContext","GlobalContext","background","textLight","light","iconColor","undefined","borderWidth","borderColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressDiscord","FlexView","justifyContent","name","raised","reverse","reverseColor","containerStyle","WebFooter","padding","Text","note","textAlign","Border","border","Loading","marginVertical","TokenAmount","caption","formatBalance","amount","balance","decimals","TokenName","numberOfLines","ellipsizeMode","marginLeft","TokenSymbol","module","exports","CACHE","fetchTokenWithValue","weth","wethPriceUSD","getPair","provider","a","async","cached","find","t","address","fetched","priceUSD","Number","toString","valueUSD","apply","pair","priceETH","Fraction","convert","priceOf","convertToken","numerator","div","pow10","mul","fetchLPTokenWithValue","lpToken","tokenA","tokenB","Promise","fetchTotalValue","all","values","add","totalSupply","amountDeposited","lpPair","tokenWithValue","tokenReserve","parseCurrencyAmount","reserveOf","tokenPrice","parseBalance","String","useHomeState","EthersContext","signer","loadingTokens","list","tokens","setTokens","lpTokens","setLPTokens","pools","setPools","loading","setLoading","loadingLPTokens","setLoadingLPTokens","loadingPools","setLoadingPools","useSDK","useEffect","useAsyncEffect","length","splice","sushiData","price","parse","map","fetchMyLPTokens","getAddress","fetchMyPools","Home","state","MyTokens","goToSwap","TokenItem","MyLPTokens","goToRemoveLiquidity","LPTokenItem","Pools","TokenList","renderItem","item","key","data","useMemo","filter","isZero","sort","t1","t2","FlatList","keyExtractor","ItemSeparatorComponent","EmptyList","margin","paddingVertical","TokenPrice","formatUSD","sum","reduce","previous","current","HomeScreen","totalValue","Screen","Container","BackgroundImage","Content","huge","marginRight","Title"],"mappings":"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","file":"static/js/8.6133b2a8.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n    style?: TextStyle;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={props.fontWeight || \"bold\"}\n                disabled={props.disabled}\n                style={[{ flex: 1, fontSize: IS_DESKTOP ? 24 : 18, paddingBottom: Spacing.tiny }, props.style]}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                    buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport useColors from \"../hooks/useColors\";\nimport Token from \"../types/Token\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const { backgroundLight: disabled } = useColors();\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && props.token.symbol === \"WETH\" ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? disabled : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={!props.token.logoURI || error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/sushiswap\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/sushiswap\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/YS8xH7E\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport Column from \"../Column\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst WebFooter = () => (\n    <Column noTopMargin={true}>\n        <View\n            style={{\n                width: \"100%\",\n                padding: Spacing.normal\n            }}>\n            <SocialIcons />\n            <Text note={true} style={{ marginTop: Spacing.tiny, textAlign: \"center\", width: \"100%\" }}>\n                Built with ❤️ by SushiSwap\n            </Text>\n        </View>\n    </Column>\n);\n\nexport default WebFooter;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = props => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: props.small ? Spacing.tiny : Spacing.small,\n                marginBottom: props.small ? Spacing.tiny : Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","import { useContext, useEffect, useState } from \"react\";\n\nimport { Pair } from \"@sushiswap/sdk\";\nimport sushiData from \"@sushiswap/sushi-data\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport LPTokenWithValue from \"../types/LPTokenWithValue\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { convertToken, formatBalance, parseBalance, parseCurrencyAmount, pow10 } from \"../utils\";\nimport { fetchMyLPTokens, fetchMyPools } from \"../utils/fetch-utils\";\nimport useSDK from \"./useSDK\";\n\nexport interface HomeState {\n    loadingTokens: boolean;\n    loadingLPTokens: boolean;\n    loadingPools: boolean;\n    tokens?: TokenWithValue[];\n    lpTokens?: LPTokenWithValue[];\n    pools?: LPTokenWithValue[];\n}\n\nconst CACHE: TokenWithValue[] = [];\n\n// tslint:disable-next-line:max-func-body-length\nconst useHomeState = () => {\n    const { provider, signer, address, loadingTokens, tokens: list } = useContext(EthersContext);\n    const [tokens, setTokens] = useState<TokenWithValue[]>();\n    const [lpTokens, setLPTokens] = useState<LPTokenWithValue[]>();\n    const [pools, setPools] = useState<LPTokenWithValue[]>();\n    const [loading, setLoading] = useState(true);\n    const [loadingLPTokens, setLoadingLPTokens] = useState(true);\n    const [loadingPools, setLoadingPools] = useState(true);\n    const { getPair } = useSDK();\n\n    useEffect(() => {\n        setTokens(undefined);\n        setLPTokens(undefined);\n        setPools(undefined);\n        setLoading(true);\n        setLoadingLPTokens(true);\n        setLoadingPools(true);\n    }, [address]);\n\n    // Load Tokens\n    useAsyncEffect(async () => {\n        const weth = list.find(t => t.symbol === \"WETH\");\n        if (provider && weth && list.length > 0) {\n            setLoading(true);\n            CACHE.splice(0, CACHE.length);\n            try {\n                const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n                setTokens(\n                    await Promise.all(\n                        list.map(async token => await fetchTokenWithValue(token, weth, wethPriceUSD, getPair, provider))\n                    )\n                );\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [getPair, provider, list, fetchTokenWithValue]);\n\n    // Load Liquidity\n    useAsyncEffect(async () => {\n        const weth = list.find(t => t.symbol === \"WETH\");\n        if (provider && signer && weth && tokens && tokens.length > 0) {\n            setLoadingLPTokens(true);\n            const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n            const fetched = await fetchMyLPTokens(await signer.getAddress(), tokens, provider);\n            try {\n                setLPTokens(\n                    await Promise.all(\n                        fetched.map(lpToken => fetchLPTokenWithValue(lpToken, weth, wethPriceUSD, getPair, provider))\n                    )\n                );\n            } finally {\n                setLoadingLPTokens(false);\n            }\n        }\n    }, [getPair, provider, signer, tokens]);\n\n    // Load Farming\n    useAsyncEffect(async () => {\n        const weth = list.find(t => t.symbol === \"WETH\");\n        if (provider && signer && weth && tokens && tokens.length > 0) {\n            setLoadingPools(true);\n            const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n            const fetched = await fetchMyPools(await signer.getAddress(), tokens, provider);\n            try {\n                setPools(\n                    await Promise.all(\n                        fetched.map(lpToken => fetchLPTokenWithValue(lpToken, weth, wethPriceUSD, getPair, provider))\n                    )\n                );\n            } finally {\n                setLoadingPools(false);\n            }\n        }\n    }, [getPair, provider, signer, tokens]);\n\n    return {\n        loadingTokens: loading || loadingTokens,\n        loadingLPTokens,\n        loadingPools,\n        tokens,\n        lpTokens,\n        pools\n    };\n};\n\nconst fetchTokenWithValue = async (token: Token, weth: Token, wethPriceUSD: Fraction, getPair, provider) => {\n    const cached = CACHE.find(t => t.address === token.address);\n    if (cached) return cached;\n    let fetched: TokenWithValue;\n    if (token.symbol === \"ETH\" || token.symbol === \"WETH\") {\n        fetched = {\n            ...token,\n            priceUSD: Number(wethPriceUSD.toString()),\n            valueUSD: Number(formatBalance(wethPriceUSD.apply(token.balance)))\n        } as TokenWithValue;\n    } else {\n        try {\n            const pair = await getPair(token, weth, provider);\n            const priceETH = Fraction.convert(pair.priceOf(convertToken(token)));\n            const priceUSD = priceETH.apply(wethPriceUSD.numerator).div(pow10(18 - token.decimals));\n            fetched = {\n                ...token,\n                priceUSD: Number(formatBalance(priceUSD)),\n                valueUSD: Number(formatBalance(priceUSD.mul(token.balance).div(pow10(token.decimals))))\n            } as TokenWithValue;\n        } catch (e) {\n            fetched = { ...token, priceUSD: null, valueUSD: null } as TokenWithValue;\n        }\n    }\n    CACHE.push(fetched);\n    return fetched;\n};\n\nconst fetchLPTokenWithValue = async (lpToken: LPToken, weth: Token, wethPriceUSD: Fraction, getPair, provider) => {\n    const pair = await getPair(lpToken.tokenA, lpToken.tokenB, provider);\n    const values = await Promise.all([\n        await fetchTotalValue(lpToken.tokenA, pair, weth, wethPriceUSD, getPair, provider),\n        await fetchTotalValue(lpToken.tokenB, pair, weth, wethPriceUSD, getPair, provider)\n    ]);\n    const priceUSD = values[0]\n        .add(values[1])\n        .mul(pow10(18))\n        .div(lpToken.totalSupply);\n    return {\n        ...lpToken,\n        priceUSD: Number(formatBalance(priceUSD)),\n        valueUSD: Number(\n            formatBalance(priceUSD.mul(lpToken.amountDeposited || lpToken.balance).div(pow10(lpToken.decimals)))\n        )\n    };\n};\n\nconst fetchTotalValue = async (token: Token, lpPair: Pair, weth: Token, wethPriceUSD: Fraction, getPair, provider) => {\n    const tokenWithValue = await fetchTokenWithValue(token, weth, wethPriceUSD, getPair, provider);\n    const tokenReserve = parseCurrencyAmount(lpPair.reserveOf(convertToken(token)), token.decimals);\n    const tokenPrice = parseBalance(String(tokenWithValue.priceUSD || 0));\n    return tokenReserve.mul(tokenPrice).div(pow10(token.decimals));\n};\n\nexport default useHomeState;\n","import React, { FC, useCallback, useMemo } from \"react\";\nimport { FlatList, Platform, TextStyle, View } from \"react-native\";\n\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport FlexView from \"../components/FlexView\";\nimport Heading from \"../components/Heading\";\nimport Loading from \"../components/Loading\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenAmount from \"../components/TokenAmount\";\nimport TokenLogo from \"../components/TokenLogo\";\nimport TokenName from \"../components/TokenName\";\nimport TokenSymbol from \"../components/TokenSymbol\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useHomeState, { HomeState } from \"../hooks/useHomeState\";\nimport useLinker from \"../hooks/useLinker\";\nimport LPTokenWithValue from \"../types/LPTokenWithValue\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Screen from \"./Screen\";\n\ninterface TokenItemProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n}\n\ninterface LPTokenItemProps {\n    token: LPTokenWithValue;\n    disabled?: boolean;\n}\n\nconst HomeScreen = () => {\n    const state = useHomeState();\n    const totalValue = sum(state.tokens) + sum(state.lpTokens) + sum(state.pools);\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content style={{ paddingBottom: Spacing.huge }}>\n                    <FlexView style={{ alignItems: \"flex-end\", marginRight: Spacing.tiny }}>\n                        <Title text={\"Total Value\"} style={{ flex: 1 }} />\n                        <Title\n                            text={formatUSD(totalValue)}\n                            fontWeight={\"light\"}\n                            style={{\n                                fontSize: IS_DESKTOP ? 36 : 24\n                            }}\n                        />\n                    </FlexView>\n                    <Home state={state} />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n        </Screen>\n    );\n};\n\nconst Home = ({ state }: { state: HomeState }) => {\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <MyTokens state={state} />\n            <View style={{ height: Spacing.large + (IS_DESKTOP ? Spacing.normal : 0) }} />\n            <MyLPTokens state={state} />\n            <View style={{ height: Spacing.large + (IS_DESKTOP ? Spacing.normal : 0) }} />\n            <Pools state={state} />\n        </View>\n    );\n};\n\nconst MyTokens = ({ state }: { state: HomeState }) => {\n    const goToSwap = useLinker(\"/swap\", \"Swap\");\n    return (\n        <View>\n            <Heading text={\"Tokens\"} buttonText={\"Swap\"} onPressButton={goToSwap} />\n            <TokenList loading={state.loadingTokens} tokens={state.tokens} TokenItem={TokenItem} />\n        </View>\n    );\n};\n\nconst MyLPTokens = ({ state }: { state: HomeState }) => {\n    const goToRemoveLiquidity = useLinker(\"/liquidity/remove\", \"RemoveLiquidity\");\n    return (\n        <View>\n            <Heading text={\"Liquidity\"} buttonText={\"Manage\"} onPressButton={goToRemoveLiquidity} />\n            {/* @ts-ignore */}\n            <TokenList loading={state.loadingLPTokens} tokens={state.lpTokens} TokenItem={LPTokenItem} />\n        </View>\n    );\n};\n\nconst Pools = ({ state }: { state: HomeState }) => {\n    return (\n        <View>\n            <Heading text={\"Farming\"} />\n            {/* @ts-ignore */}\n            <TokenList loading={state.loadingPools} tokens={state.pools} TokenItem={LPTokenItem} />\n        </View>\n    );\n};\n\nconst TokenList = (props: {\n    loading: boolean;\n    tokens?: TokenWithValue[] | LPTokenWithValue[];\n    TokenItem: FC<TokenItemProps | LPTokenItemProps>;\n}) => {\n    const renderItem = useCallback(({ item }) => {\n        return <props.TokenItem key={item.address} token={item} />;\n    }, []);\n    const data = useMemo(\n        () =>\n            (props.tokens || [])\n                // @ts-ignore\n                .filter(token => !(token.amountDeposited ? token.amountDeposited.isZero() : token.balance.isZero()))\n                .sort((t1, t2) => (t2.valueUSD || 0) - (t1.valueUSD || 0)),\n        [props.tokens]\n    );\n    return props.loading ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList\n            keyExtractor={item => item.address}\n            data={data}\n            renderItem={renderItem}\n            ItemSeparatorComponent={() => <Border small={true} />}\n        />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any matching asset.\"}\n            </Text>\n        </View>\n    );\n};\n\nconst TokenItem = (props: TokenItemProps) => {\n    return (\n        <FlexView style={{ alignItems: \"center\", paddingHorizontal: Spacing.tiny, paddingVertical: 4 }}>\n            <TokenLogo token={props.token} disabled={props.disabled} />\n            <TokenName token={props.token} disabled={props.disabled} />\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                <TokenPrice token={props.token} disabled={props.disabled} />\n                <FlexView>\n                    <TokenAmount token={props.token} disabled={props.disabled} />\n                    {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\n                </FlexView>\n            </View>\n        </FlexView>\n    );\n};\n\nconst LPTokenItem = (props: LPTokenItemProps) => {\n    return (\n        <FlexView style={{ alignItems: \"center\", paddingHorizontal: Spacing.tiny, paddingVertical: 4 }}>\n            <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\n            <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\n            <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\n                {props.token.tokenA.symbol}-{props.token.tokenB.symbol}\n            </Text>\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                <TokenPrice token={props.token} disabled={props.disabled} />\n                <FlexView>\n                    <TokenAmount token={props.token} amount={props.token.amountDeposited} disabled={props.disabled} />\n                </FlexView>\n            </View>\n        </FlexView>\n    );\n};\n\nconst TokenPrice = (props: { token: TokenWithValue; disabled?: boolean; style?: TextStyle }) => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.valueUSD || 0, 4)}\n        </Text>\n    );\n};\n\nconst sum = tokens => (tokens ? tokens.reduce((previous, current) => previous + (current.valueUSD || 0), 0) : 0);\n\nexport default HomeScreen;\n"],"sourceRoot":""}