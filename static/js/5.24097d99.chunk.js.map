{"version":3,"sources":["src/hooks/useStyles.tsx","src/components/Heading.tsx","src/components/ErrorMessage.tsx","src/components/ItemSeparator.tsx","src/components/Notice.tsx","src/components/web/WebFooter.tsx","src/components/Selectable.tsx","src/components/Meta.tsx","src/components/Column.tsx","src/components/FetchingButton.tsx","src/components/InsufficientBalanceButton.tsx","src/components/TokenLogo.tsx","src/components/TokenInput.tsx","src/components/Expandable.tsx","src/components/Input.tsx","src/components/ApproveButton.tsx","src/components/Loading.tsx","src/components/TokenSymbol.tsx","index.tsx","assets/empty-token.png","src/hooks/useDelayedOnBlockEffect.tsx","src/hooks/useTokenPairState.tsx","assets/ETH.png","src/hooks/useLPTokensState.tsx","src/components/LPTokenSelect.tsx","src/components/ButtonGroup.tsx","src/components/CloseIcon.tsx","src/components/SelectIcon.tsx","src/hooks/useFarmingState.tsx","src/screens/FarmingScreen.tsx"],"names":["useStyles","useColors","shadowColor","shadow","borderDark","border","useCallback","attrs","borderColor","color","borderWidth","borderRadius","radius","padding","Spacing","small","tiny","elevation","shadowOffset","width","height","shadowOpacity","shadowRadius","overflow","Heading","props","accent","style","alignItems","marginBottom","disabled","medium","fontWeight","flex","fontSize","paddingBottom","text","buttonText","type","size","title","onPress","onPressButton","ErrorMessage","error","marginTop","code","note","message","ITEM_SEPARATOR_HEIGHT","ItemSeparator","Notice","borderStyle","clear","paddingHorizontal","titleStyle","buttonStyle","paddingVertical","alignSelf","Link","to","window","open","textDecorationLine","WebFooter","noTopMargin","normal","huge","textAlign","Selectable","background","backgroundLight","hovered","selected","backgroundColor","Meta","textMedium","textLight","placeholder","useLinker","url","suffix","justifyContent","label","undefined","Column","Platform","OS","large","FetchingButton","InsufficientBalanceButton","symbol","TokenLogo","useState","setError","require","ETH","source","replaceWETH","token","uri","logoURI","onError","opacity","MaxButton","onPressMax","balance","fee","pow10","gt","sub","ethers","constants","Zero","updateAmount","formatBalance","decimals","position","right","bottom","maxButtonText","TokenInput","onChangeText","onAmountChanged","parseBalance","e","endsWith","indexOf","length","value","amount","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","labelStyle","fontFamily","containerStyle","paddingTop","hideMaxButton","Expandable","expanded","setExpanded","shouldExpand","onExpand","display","children","Input","textDark","errors","forbidden","forEach","validation","match","regexp","push","allowed","join","minHeight","outline","placeholderTextColor","errorStyle","ApproveButton","approveToken","useContext","EthersContext","loading","setLoading","a","async","address","spender","tx","wait","onSuccess","hidden","Loading","marginVertical","TokenSymbol","caption","marginLeft","isServer","process","hoverListener","hasMouse","refs","mousePosition","x","y","hover","target","hoverFunc","containsEvent","r","previousHoverFunc","unhover","document","event","add","ref","remove","createHoverListener","Hoverable","rest","hostRef","React","hr","setHovered","parent","enhanceScrollView","WrappedComponent","EnhancedScrollView","onScroll","scrollEventThrottle","forwardedRef","setRef","setLocalRef","getForwardedRef","setAndForwardRef","hostNode","interactionState","module","exports","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","addOnBlockListener","removeOnBlockListener","eventName","useAsyncEffect","setTimeout","handles","handle","clearTimeout","useTokenPairState","provider","signer","tokens","updateTokens","getTokenAllowance","useSDK","wrapETH","unwrapETH","fromSymbol","setFromSymbol","toSymbol","setToSymbol","fromAmount","setFromAmount","toAmount","setToAmount","fromTokenAllowed","setFromTokenAllowed","toTokenAllowed","setToTokenAllowed","wrapping","setWrapping","unwrapping","setUnwrapping","fromToken","find","toToken","useEffect","minAllowance","BigNumber","from","pow","ROUTER","fromAllowance","gte","toAllowance","onWrap","onUnwrap","useLPTokensState","mode","state","lastTimeRefreshed","setLastTimeRefreshed","lpTokens","setLPTokens","selectedLPToken","setSelectedLPToken","selectedLPTokenAllowed","setSelectedLPTokenAllowed","pair","setPair","setAmount","getPair","updateLPTokens","fetchPools","fetchMyLPTokens","fetchMyUniswapLPTokens","data","tokenA","tokenB","block","updateLastTimeRefreshed","Date","now","LPTokenList","emptyText","filter","Item","renderItem","item","key","onSelectToken","sort","t1","t2","totalDeposited","div","toNumber","amountDeposited","FlatList","keyExtractor","JSON","stringify","EmptyList","View","margin","Text","LPTokenItem","FlexView","light","LPTokenSelect","ButtonGroup","index","setIndex","i","selectedIndex","textStyle","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","buttons","borderBottomRightRadius","selectedButtonStyle","CloseIcon","name","SelectIcon","useFarmingState","getExpectedSushiRewardPerBlock","deposit","withdraw","filteredBy","setFilteredBy","action","setAction","expectedSushiRewardPerBlock","setExpectedSushiRewardPerBlock","depositing","setDepositing","withdrawing","setWithdrawing","MASTER_CHEF","allowance","onDeposit","id","onWithdraw","Actions","Farming","h4","showFilter","onFilterChanged","TokenItem","field","TouchableHighlight","LogoSymbol","isEmpty","setIsEmpty","Image","replace","ActionSelect","element","DepositText","WithdrawText","Deposit","isZero","AddLiquidityNotice","green","DepositInfo","sushiReward","mul","isEmptyValue","DepositControls","approveRequired","AddLiquidityButton","Button","DepositButton","catch","Withdraw","NoLPTokenNotice","WithdrawInfo","pendingSushi","WithdrawControls","WithdrawButton","FarmingScreen","Screen","Container","Content"],"mappings":"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","file":"static/js/5.24097d99.chunk.js","sourcesContent":["import { useCallback } from \"react\";\nimport { ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"./useColors\";\n\nconst useStyles = () => {\n    const { shadow: shadowColor, borderDark } = useColors();\n    const border = useCallback(\n        (attrs?: { color?: string; radius?: number }) => ({\n            borderColor: attrs?.color || borderDark,\n            borderWidth: 1,\n            borderRadius: attrs?.radius || 8,\n            padding: Spacing.small\n        }),\n        []\n    );\n    const shadow = () =>\n        ({\n            borderRadius: Spacing.tiny,\n            elevation: Spacing.small,\n            shadowColor,\n            shadowOffset: { width: 0, height: 2 },\n            shadowOpacity: 0.5,\n            shadowRadius: 4,\n            overflow: \"visible\"\n        } as ViewStyle);\n    return { border, shadow };\n};\n\nexport default useStyles;\n","import React, { FC } from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={\"bold\"}\n                disabled={props.disabled}\n                style={{ flex: 1, fontSize: 18, paddingBottom: Spacing.tiny }}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport const ITEM_SEPARATOR_HEIGHT = 10;\n\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\n\nexport default ItemSeparator;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || borderStyle.borderColor;\n    return (\n        <View style={[props.clear ? { paddingHorizontal: Spacing.tiny } : borderStyle, props.style]}>\n            <Text\n                note={true}\n                style={{\n                    color\n                }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React, { useCallback } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport Column from \"../Column\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst WebFooter = () => (\n    <Column noTopMargin={true}>\n        <View\n            style={{\n                width: \"100%\",\n                padding: Spacing.normal,\n                marginTop: Spacing.huge\n            }}>\n            <SocialIcons />\n            <Text note={true} style={{ marginTop: Spacing.tiny, textAlign: \"center\", width: \"100%\" }}>\n                2020 Built by <Link to={\"https://levx.io\"} text={\"LevX Team\"} />\n            </Text>\n        </View>\n    </Column>\n);\n\nconst Link = ({ to, text }) => {\n    const onPress = useCallback(() => {\n        window.open(to, \"_blank\");\n    }, []);\n    return (\n        <Text note={true} style={{ textDecorationLine: \"underline\" }} onPress={onPress}>\n            {text}\n        </Text>\n    );\n};\n\nexport default WebFooter;\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n}\n\nconst Selectable: FC<SelectableProps> = props => {\n    const { borderDark, accent } = useColors();\n    const { border } = useStyles();\n    const { background, backgroundLight } = useColors();\n    return (\n        <Hoverable>\n            {({ hovered }) => (\n                <TouchableHighlight onPress={props.onPress}>\n                    <View\n                        {...props}\n                        style={[\n                            {\n                                ...border({ color: props.selected ? accent : borderDark }),\n                                backgroundColor: hovered && !props.disabled ? backgroundLight : background\n                            },\n                            props.style\n                        ]}\n                    />\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nexport default Selectable;\n","import React, { FC } from \"react\";\n\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    url?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const { textMedium, textLight, placeholder } = useColors();\n    const onPress = useLinker(props.url || \"\", \"\", \"_blank\");\n    const text = props.disabled\n        ? \"N/A\"\n        : props.text\n        ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n        : \"Fetching…\";\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4 }}>\n            <Text fontWeight={\"bold\"} style={{ fontSize: 13, color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text\n                onPress={props.url ? onPress : undefined}\n                style={{\n                    fontSize: 13,\n                    color: props.disabled ? placeholder : props.text ? textMedium : textLight,\n                    textDecorationLine: props.url ? \"underline\" : \"none\"\n                }}>\n                {text}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst FetchingButton = () => {\n    return <Button title={\"Fetching…\"} disabled={true} />;\n};\nexport default FetchingButton;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    return <Button title={\"Insufficient \" + (symbol ? symbol : \"Balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport Token from \"../types/Token\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && props.token.symbol === \"WETH\" ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? \"black\" : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    token?: Token;\n    amount: string;\n    onAmountChanged: (amount: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenInput: FC<TokenInputProps> = props => {\n    const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.token && props.onAmountChanged) {\n                try {\n                    parseBalance(text, props.token.decimals);\n                    props.onAmountChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAmountChanged(text);\n                    }\n                }\n            }\n        },\n        [props.token, props.onAmountChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.amount}\n                    onChangeText={onChangeText}\n                    placeholder={\"0.0\"}\n                    autoFocus={props.autoFocus || false}\n                    inputStyle={{ marginHorizontal: 4 }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 15,\n                        paddingBottom: 2\n                    }}\n                />\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\n                    <MaxButton\n                        token={props.token}\n                        maxButtonText={props.maxButtonText}\n                        updateAmount={props.onAmountChanged}\n                    />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(() => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (props.token.symbol === \"ETH\") {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount]);\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 12 : 24 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || \"MAX \" + props.token.symbol}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: 4 }}\n            />\n        </View>\n    );\n};\n\nexport default TokenInput;\n","import React, { FC, ReactNode, useState } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport Heading from \"./Heading\";\n\nexport interface ExpandableProps {\n    title: string;\n    expanded: boolean;\n    onExpand?: () => void;\n    style?: ViewStyle;\n    children?: ReactNode;\n}\n\nconst Expandable: FC<ExpandableProps> = props => {\n    const [expanded, setExpanded] = useState(true);\n    const shouldExpand = props.expanded && expanded;\n    const buttonText = shouldExpand ? undefined : \"Change\";\n    const onPress = () => {\n        setExpanded(true);\n        props.onExpand?.();\n    };\n\n    return (\n        <View style={props.style}>\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\n        </View>\n    );\n};\n\nexport default Expandable;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface Validation {\n    regexp: RegExp;\n    error: string;\n}\n\nexport interface InputProps extends NativeInputProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    allowed?: Validation[];\n    forbidden?: Validation[];\n    onError?: (error: string) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Input: FC<InputProps> = props => {\n    const { textDark, textMedium, textLight } = useColors();\n    const size = props.size || \"normal\";\n    const color = props.color || textDark;\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\n    const onChangeText = useCallback(\n        (text: string) => {\n            props.onChangeText?.(text);\n            props.onError?.(\"\");\n            const errors = [] as string[];\n            if (text !== \"\" && props.forbidden) {\n                props.forbidden.forEach(validation => {\n                    if (text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (text !== \"\" && props.allowed) {\n                props.allowed.forEach(validation => {\n                    if (!text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (errors.length > 0) {\n                props.onError?.(errors.join(\"\\n\"));\n            }\n        },\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\n    );\n    return (\n        <NativeInput\n            {...props}\n            inputStyle={[\n                { fontSize, fontFamily: \"regular\", paddingBottom: 4, color, marginTop: 0, minHeight: 32 },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\n                props.inputStyle\n            ]}\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\n            placeholderTextColor={props.placeholderTextColor || textLight}\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\n            onChangeText={onChangeText}\n        />\n    );\n};\n\nexport default Input;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={\"Approve \" + (props.token?.symbol || \"\")}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import * as React from 'react';\nimport type {\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  PressableStateCallbackType,\n  FlatListProps,\n  VirtualizedListProps,\n  ScrollViewProps,\n} from 'react-native';\n\nimport {\n  View,\n  Pressable as NativePressable,\n  ScrollView as NativeScrollView,\n  FlatList as NativeFlatList,\n  VirtualizedList as NativeVirtualizedList,\n  //@ts-ignore\n} from 'react-native-web';\n\nconst isServer =\n  typeof process !== 'undefined' &&\n  process.release &&\n  process.release.name === 'node';\n\nconst hoverListener = createHoverListener();\n\ninterface PressableStateCallbackTypeWeb extends PressableStateCallbackType {\n  focused?: boolean;\n  hovered?: boolean;\n}\n\ntype ChildrenType =\n  | React.ReactNode\n  | ((state: PressableStateCallbackTypeWeb) => React.ReactNode);\n\ntype StylesType =\n  | StyleProp<ViewStyle>\n  | ((state: PressableStateCallbackTypeWeb) => StyleProp<ViewStyle>);\n\ninterface HoverableProps extends ViewProps {\n  children:\n    | React.ReactNode\n    | ((state: { hovered: boolean }) => React.ReactNode);\n}\n\ninterface PressableProps extends Omit<ViewProps, 'style'> {\n  children: ChildrenType;\n  style?: StylesType;\n}\n\nexport function Hoverable({ children, ...rest }: HoverableProps) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <View\n      ref={hostRef}\n      children={\n        typeof children === 'function' ? children({ hovered }) : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction PressableWithoutRef(\n  { style, children, ...rest }: PressableProps,\n  forwardedRef: any\n) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n\n  const setRef = setAndForwardRef({\n    getForwardedRef: () => forwardedRef,\n    setLocalRef: (hostNode: any) => {\n      hostRef.current = hostNode;\n    },\n  });\n\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <NativePressable\n      //@ts-ignore\n      ref={setRef}\n      style={(interactionState: any) =>\n        typeof style === 'function'\n          ? style({ ...interactionState, hovered })\n          : style\n      }\n      children={(interactionState: any) =>\n        typeof children === 'function'\n          ? children({ ...interactionState, hovered })\n          : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction containsEvent(parent: any, clickTarget: any) {\n  if (parent === clickTarget) {\n    return true;\n  }\n  if (!parent) {\n    return false;\n  }\n  for (let child of parent.childNodes) {\n    if (containsEvent(child, clickTarget)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction createHoverListener() {\n  let hasMouse = isServer ? false : window.matchMedia('(pointer:fine)').matches;\n\n  let refs = new Map<any, (h: boolean) => any>();\n  let previousHoverFunc: undefined | ((h: boolean) => any);\n  let mousePosition = {\n    x: 0,\n    y: 0,\n  };\n\n  function hover(target: any) {\n    // hover is targeted directly\n    let hoverFunc = refs.get(target);\n\n    // let's try to see if any of the children of the hover event are hovered\n    if (!hoverFunc) {\n      for (let r of refs.keys()) {\n        if (containsEvent(r, target)) {\n          hoverFunc = refs.get(r);\n        }\n      }\n    }\n\n    previousHoverFunc && previousHoverFunc(false);\n    hoverFunc && hoverFunc(true);\n\n    // cache the previous hover so we can un-hover this later on\n    previousHoverFunc = hoverFunc;\n  }\n\n  function hoverEvent(event: any) {\n    hover(event.target);\n  }\n\n  function unhover() {\n    previousHoverFunc && previousHoverFunc(false);\n  }\n\n  function captureMousePosition(event: any) {\n    mousePosition.x = event.pageX;\n    mousePosition.y = event.pageY;\n  }\n\n  // touch devices have a bug where the onMouseOver is handled while it should not\n  // if the user would click something it keeps hovered while it should unhover\n  // so only listen to these events if the device has a mouse\n  if (hasMouse) {\n    document.onmouseover = hoverEvent;\n    document.onmousemove = captureMousePosition;\n    document.ontouchstart = unhover;\n    document.ontouchend = unhover;\n    document.ontouchcancel = unhover;\n    document.ontouchmove = unhover;\n  }\n\n  function add(ref: any, setHovered: any) {\n    refs.set(ref, setHovered);\n  }\n\n  function remove(ref: any) {\n    refs.delete(ref);\n  }\n\n  return {\n    add,\n    remove,\n    mousePosition,\n    hover,\n  };\n}\n\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }: any) {\n  return function forwardRef(ref: React.ElementRef<any>) {\n    const forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nfunction enhanceScrollView(WrappedComponent: any) {\n  const EnhancedScrollView = ({\n    forwardedRef,\n    onScroll,\n    scrollEventThrottle,\n    ...rest\n  }: any) => {\n    const onScrollInner = (e: any) => {\n      onScroll && onScroll(e);\n      const { mousePosition, hover } = hoverListener;\n      hover(document.elementFromPoint(mousePosition.x, mousePosition.y));\n    };\n    return (\n      <WrappedComponent\n        ref={forwardedRef}\n        onScroll={onScrollInner}\n        scrollEventThrottle={scrollEventThrottle || 25}\n        {...rest}\n      />\n    );\n  };\n\n  return React.forwardRef((props, ref) => {\n    return <EnhancedScrollView {...props} forwardedRef={ref} />;\n  });\n}\n\nexport const Pressable = React.forwardRef(PressableWithoutRef);\nexport const ScrollView = enhanceScrollView(\n  NativeScrollView\n) as React.ElementType<ScrollViewProps>;\nexport const FlatList = enhanceScrollView(NativeFlatList) as React.ElementType<\n  FlatListProps<unknown>\n>;\nexport const VirtualizedList = enhanceScrollView(\n  NativeVirtualizedList\n) as React.ElementType<VirtualizedListProps<unknown>>;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { parseBalance } from \"../utils\";\nimport useSDK from \"./useSDK\";\n\nexport interface TokenPairState {\n    fromSymbol: string;\n    setFromSymbol: (symbol: string) => void;\n    toSymbol: string;\n    setToSymbol: (symbol: string) => void;\n    fromToken?: Token;\n    toToken?: Token;\n    fromAmount: string;\n    setFromAmount: (amount: string) => void;\n    toAmount: string;\n    setToAmount: (amount: string) => void;\n    fromTokenAllowed: boolean;\n    setFromTokenAllowed: (allowed: boolean) => void;\n    toTokenAllowed: boolean;\n    setToTokenAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onWrap: () => Promise<void>;\n    wrapping: boolean;\n    onUnwrap: () => Promise<void>;\n    unwrapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useTokenPairState: () => TokenPairState = () => {\n    const { provider, signer, address, tokens, updateTokens, getTokenAllowance } = useContext(EthersContext);\n    const { wrapETH, unwrapETH } = useSDK();\n    const [fromSymbol, setFromSymbol] = useState(\"\");\n    const [toSymbol, setToSymbol] = useState(\"\");\n    const [fromAmount, setFromAmount] = useState(\"\");\n    const [toAmount, setToAmount] = useState(\"\");\n    const [fromTokenAllowed, setFromTokenAllowed] = useState(false);\n    const [toTokenAllowed, setToTokenAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [wrapping, setWrapping] = useState(false);\n    const [unwrapping, setUnwrapping] = useState(false);\n\n    const fromToken = tokens.find(token => token.symbol === fromSymbol);\n    const toToken = tokens.find(token => token.symbol === toSymbol);\n\n    useEffect(() => {\n        if (fromSymbol === \"\") {\n            setToSymbol(\"\");\n        }\n        setFromAmount(\"\");\n        setToAmount(\"\");\n    }, [fromSymbol, toSymbol]);\n\n    useEffect(() => {\n        setFromSymbol(\"\");\n    }, [address]);\n\n    useAsyncEffect(async () => {\n        if (fromToken && toToken && provider && signer) {\n            setFromTokenAllowed(false);\n            setToTokenAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                if (fromToken.symbol !== \"ETH\") {\n                    const fromAllowance = await getTokenAllowance(fromToken.address, ROUTER);\n                    setFromTokenAllowed(ethers.BigNumber.from(fromAllowance).gte(minAllowance));\n                }\n                if (toToken.symbol !== \"ETH\") {\n                    const toAllowance = await getTokenAllowance(toToken.address, ROUTER);\n                    setToTokenAllowed(ethers.BigNumber.from(toAllowance).gte(minAllowance));\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [fromToken, toToken, provider, signer]);\n\n    const onWrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setWrapping(true);\n            try {\n                const tx = await wrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setWrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    const onUnwrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setUnwrapping(true);\n            try {\n                const tx = await unwrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setUnwrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    return {\n        fromSymbol,\n        setFromSymbol,\n        toSymbol,\n        setToSymbol,\n        fromToken,\n        toToken,\n        fromAmount,\n        setFromAmount,\n        toAmount,\n        setToAmount,\n        fromTokenAllowed,\n        setFromTokenAllowed,\n        toTokenAllowed,\n        setToTokenAllowed,\n        loading,\n        onWrap,\n        wrapping,\n        onUnwrap,\n        unwrapping\n    };\n};\n\nexport default useTokenPairState;\n","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","import { useContext, useEffect, useState } from \"react\";\n\nimport { Pair } from \"@sushiswap/sdk\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport { fetchMyLPTokens, fetchMyUniswapLPTokens, fetchPools } from \"../utils/fetch-utils\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport interface LPTokensState extends TokenPairState {\n    updateLPTokens: () => Promise<void>;\n    lastTimeRefreshed: number;\n    updateLastTimeRefreshed: () => void;\n    lpTokens: LPToken[];\n    selectedLPToken?: LPToken;\n    setSelectedLPToken: (token?: LPToken) => void;\n    selectedLPTokenAllowed: boolean;\n    setSelectedLPTokenAllowed: (allowed: boolean) => void;\n    pair?: Pair;\n    amount: string;\n    setAmount: (amount: string) => void;\n}\n\ntype Mode = \"pools\" | \"my-lp-tokens\" | \"my-uniswap-lp-tokens\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useLPTokensState: (mode: Mode) => LPTokensState = mode => {\n    const state = useTokenPairState();\n    const { provider, signer, address, tokens } = useContext(EthersContext);\n    const [lastTimeRefreshed, setLastTimeRefreshed] = useState(0);\n    const [loading, setLoading] = useState(true);\n    const [lpTokens, setLPTokens] = useState<LPToken[]>([]);\n    const [selectedLPToken, setSelectedLPToken] = useState<LPToken>();\n    const [selectedLPTokenAllowed, setSelectedLPTokenAllowed] = useState(false);\n    const [pair, setPair] = useState<Pair>();\n    const [amount, setAmount] = useState(\"\");\n    const { getPair } = useSDK();\n\n    const updateLPTokens = async () => {\n        if (provider && signer) {\n            try {\n                const data = await (mode === \"pools\"\n                    ? fetchPools(provider, signer)\n                    : mode === \"my-lp-tokens\"\n                    ? fetchMyLPTokens(tokens, provider, signer)\n                    : fetchMyUniswapLPTokens(tokens, provider, signer));\n                if (data) {\n                    setLPTokens(data);\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (!selectedLPToken) {\n            setAmount(\"\");\n        }\n    }, [selectedLPToken]);\n\n    useAsyncEffect(async () => {\n        setLoading(true);\n        setPair(undefined);\n        if (selectedLPToken && provider) {\n            try {\n                setPair(await getPair(selectedLPToken.tokenA, selectedLPToken.tokenB, provider));\n            } catch (e) {\n            } finally {\n                setLoading(false);\n            }\n        } else {\n            setLoading(false);\n        }\n    }, [selectedLPToken, provider]);\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (address && (mode === \"pools\" || tokens.length > 0)) {\n                if (!block) {\n                    setLoading(true);\n                }\n                await updateLPTokens();\n            }\n        },\n        () => \"updateLPTokens()\",\n        [tokens.length, address, lastTimeRefreshed],\n        0\n    );\n\n    return {\n        ...state,\n        fromToken: state.fromToken || selectedLPToken?.tokenA,\n        toToken: state.toToken || selectedLPToken?.tokenB,\n        updateLPTokens,\n        loading: state.loading || loading,\n        lastTimeRefreshed,\n        updateLastTimeRefreshed: () => {\n            setLastTimeRefreshed(Date.now());\n        },\n        lpTokens,\n        selectedLPToken,\n        setSelectedLPToken,\n        selectedLPTokenAllowed,\n        setSelectedLPTokenAllowed,\n        pair,\n        amount,\n        setAmount\n    };\n};\n\nexport default useLPTokensState;\n","import React, { FC, useCallback } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport { LPTokensState } from \"../hooks/useLPTokensState\";\nimport LPToken from \"../types/LPToken\";\nimport { formatBalance, pow10 } from \"../utils\";\nimport CheckBox from \"./CheckBox\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport Text from \"./Text\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenSymbol from \"./TokenSymbol\";\n\nexport type LPTokenSelectFilter = \"balance\" | \"amountDeposited\" | \"\";\n\nexport interface LPTokenSelectProps {\n    state: LPTokensState;\n    title: string;\n    emptyText: string;\n    showFilter?: boolean;\n    filter?: LPTokenSelectFilter;\n    onFilterChanged?: (filter: LPTokenSelectFilter) => void;\n    Item: FC<LPTokenItemProps>;\n    style?: ViewStyle;\n}\n\nexport interface LPTokenItemProps {\n    token: LPToken;\n    selected: boolean;\n    filter?: LPTokenSelectFilter;\n    onSelectToken: (token: LPToken) => void;\n}\n\nconst LPTokenSelect: FC<LPTokenSelectProps> = props => {\n    const onUnselectToken = () => props.state.setSelectedLPToken();\n    return (\n        <View style={props.style}>\n            <Expandable\n                title={props.title}\n                expanded={!props.state.selectedLPToken}\n                onExpand={() => props.state.setSelectedLPToken()}>\n                <LPTokenList state={props.state} filter={props.filter} emptyText={props.emptyText} Item={props.Item} />\n            </Expandable>\n            {props.state.selectedLPToken && (\n                <LPTokenItem token={props.state.selectedLPToken} selected={true} onSelectToken={onUnselectToken} />\n            )}\n        </View>\n    );\n};\n\nconst Filter = ({ filter, onFilterChanged }) => {\n    const handler = (f: string) => () => onFilterChanged(f);\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"flex-end\" }}>\n            <CheckBox checked={filter === \"balance\"} onPress={handler(\"balance\")} title={\"with balance\"} />\n            <CheckBox\n                checked={filter === \"amountDeposited\"}\n                onPress={handler(\"amountDeposited\")}\n                title={\"with deposit\"}\n            />\n            <CheckBox checked={!filter} onPress={handler(\"\")} title={\"all\"} />\n        </FlexView>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LPTokenList = ({\n    state,\n    emptyText,\n    filter,\n    Item\n}: {\n    state: LPTokensState;\n    emptyText: string;\n    filter?: LPTokenSelectFilter;\n    Item: FC<LPTokenItemProps>;\n}) => {\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <Item\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    filter={filter}\n                    onSelectToken={state.setSelectedLPToken}\n                />\n            );\n        },\n        [filter, state.setSelectedLPToken]\n    );\n    let data = state.lpTokens.sort((t1, t2) => {\n        return (t2.totalDeposited || ethers.constants.Zero)\n            .sub(t1.totalDeposited || ethers.constants.Zero)\n            .div(pow10(14))\n            .toNumber();\n    });\n    if (filter === \"amountDeposited\") {\n        data = data.filter(token => token.amountDeposited?.gt(0));\n    } else if (filter === \"balance\") {\n        data = data.filter(token => token.balance.gt(0));\n    }\n    return state.loading ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList text={emptyText} />\n    ) : (\n        <FlatList keyExtractor={item => JSON.stringify(item)} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = ({ text }: { text: string }) => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {text}\n            </Text>\n        </View>\n    );\n};\n\nexport const LPTokenItem: FC<LPTokenItemProps> = props => {\n    const { textMedium, textLight } = useColors();\n    const balance = formatBalance(props.token.balance, props.token.decimals, 8);\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable selected={props.selected} onPress={onPress} style={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\n                <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\n                <TokenSymbol token={props.token} />\n                <View style={{ flex: 1, marginLeft: Spacing.tiny }}>\n                    {/*<Text note={true} style={{ textAlign: \"right\", color: textLight }}>*/}\n                    {/*    My Balance*/}\n                    {/*</Text>*/}\n                    <Text caption={true} light={true} style={{ textAlign: \"right\", color: textMedium }}>\n                        {balance}\n                    </Text>\n                </View>\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default LPTokenSelect;\n","import React, { FC, useCallback, useState } from \"react\";\nimport { ButtonGroup as NativeButtonGroup, ButtonGroupProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\n// tslint:disable-next-line:max-func-body-length\nconst ButtonGroup: FC<ButtonGroupProps> = props => {\n    const { borderDark } = useColors();\n    const { shadow } = useStyles();\n    const [index, setIndex] = useState<number>();\n    const onPress = useCallback(i => {\n        setIndex(i);\n        props.onPress(i);\n    }, []);\n    return (\n        <NativeButtonGroup\n            {...props}\n            selectedIndex={props.selectedIndex || index}\n            onPress={onPress}\n            textStyle={[\n                {\n                    fontFamily: \"regular\"\n                },\n                props.textStyle\n            ]}\n            buttonStyle={[\n                {\n                    borderTopLeftRadius: index === 0 ? Spacing.tiny : 0,\n                    borderBottomLeftRadius: index === 0 ? Spacing.tiny : 0,\n                    borderTopRightRadius:\n                        props.buttons.length > 0 && index === props.buttons.length - 1 ? Spacing.tiny : 0,\n                    borderBottomRightRadius:\n                        props.buttons.length > 0 && index === props.buttons.length - 1 ? Spacing.tiny : 0\n                },\n                props.buttonStyle\n            ]}\n            selectedButtonStyle={[\n                {\n                    backgroundColor: borderDark\n                },\n                props.selectedButtonStyle\n            ]}\n            containerStyle={[\n                {\n                    marginHorizontal: 0,\n                    marginVertical: 0,\n                    height: 56,\n                    ...shadow()\n                },\n                props.containerStyle\n            ]}\n        />\n    );\n};\n\nexport default ButtonGroup;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst CloseIcon = () => {\n    const { textLight } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={textLight} style={{ marginLeft: Spacing.tiny }} />;\n};\n\nexport default CloseIcon;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst SelectIcon = () => {\n    const { accent } = useColors();\n    return (\n        <Icon type={\"material-community\"} name={\"chevron-right\"} color={accent} style={{ marginLeft: Spacing.tiny }} />\n    );\n};\n\nexport default SelectIcon;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { LPTokenSelectFilter } from \"../components/LPTokenSelect\";\nimport { MASTER_CHEF } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { parseBalance } from \"../utils\";\nimport useLPTokensState, { LPTokensState } from \"./useLPTokensState\";\nimport useSDK from \"./useSDK\";\n\nexport interface FarmingState extends LPTokensState {\n    action?: Action;\n    setAction: (action?: Action) => void;\n    expectedSushiRewardPerBlock?: ethers.BigNumber;\n    filteredBy: LPTokenSelectFilter;\n    setFilteredBy: (filter: LPTokenSelectFilter) => void;\n    onDeposit: () => Promise<void>;\n    depositing: boolean;\n    onWithdraw: () => Promise<void>;\n    withdrawing: boolean;\n}\n\nexport type Action = \"deposit\" | \"withdraw\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useFarmingState: () => FarmingState = () => {\n    const state = useLPTokensState(\"pools\");\n    const { provider, signer, getTokenAllowance } = useContext(EthersContext);\n    const { getExpectedSushiRewardPerBlock, deposit, withdraw } = useSDK();\n    const [filteredBy, setFilteredBy] = useState(\"\" as LPTokenSelectFilter);\n    const [action, setAction] = useState<Action>();\n    const [loading, setLoading] = useState(false);\n    const [expectedSushiRewardPerBlock, setExpectedSushiRewardPerBlock] = useState<ethers.BigNumber>();\n    const [depositing, setDepositing] = useState(false);\n    const [withdrawing, setWithdrawing] = useState(false);\n\n    useEffect(() => {\n        setFilteredBy(\"\");\n        setAction(undefined);\n        setLoading(false);\n        setDepositing(false);\n        setWithdrawing(false);\n        setExpectedSushiRewardPerBlock(undefined);\n    }, [state.selectedLPToken]);\n\n    useAsyncEffect(async () => {\n        if (signer && state.selectedLPToken) {\n            setLoading(true);\n            try {\n                setExpectedSushiRewardPerBlock(await getExpectedSushiRewardPerBlock(state.selectedLPToken, signer));\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [signer, state.selectedLPToken]);\n\n    useAsyncEffect(async () => {\n        if (provider && signer && state.selectedLPToken) {\n            setLoading(true);\n            state.setSelectedLPTokenAllowed(false);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const allowance = await getTokenAllowance(state.selectedLPToken.address, MASTER_CHEF);\n                state.setSelectedLPTokenAllowed(ethers.BigNumber.from(allowance).gte(minAllowance));\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [provider, signer, state.selectedLPToken]);\n\n    useEffect(() => {\n        state.setAmount(\"\");\n    }, [action]);\n\n    const onDeposit = useCallback(async () => {\n        if (state.selectedLPToken?.id && state.amount && signer) {\n            setDepositing(true);\n            try {\n                const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\n                const tx = await deposit(state.selectedLPToken.id, amount, signer);\n                await tx.wait();\n                state.setSelectedLPToken(undefined);\n                await state.updateLastTimeRefreshed();\n            } finally {\n                setDepositing(false);\n            }\n        }\n    }, [state.selectedLPToken, state.amount, signer]);\n\n    const onWithdraw = useCallback(async () => {\n        if (state.selectedLPToken?.id && state.amount && signer) {\n            setWithdrawing(true);\n            try {\n                const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\n                const tx = await withdraw(state.selectedLPToken.id, amount, signer);\n                await tx.wait();\n                state.setSelectedLPToken(undefined);\n                await state.updateLastTimeRefreshed();\n            } finally {\n                setWithdrawing(false);\n            }\n        }\n    }, [state.selectedLPToken, state.amount, signer]);\n\n    return {\n        ...state,\n        loading: state.loading || loading,\n        filteredBy,\n        setFilteredBy,\n        action,\n        setAction,\n        expectedSushiRewardPerBlock,\n        onDeposit,\n        depositing,\n        onWithdraw,\n        withdrawing\n    };\n};\n\nexport default useFarmingState;\n","import React, { FC, useCallback, useState } from \"react\";\nimport { Image, Platform, TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Button from \"../components/Button\";\nimport ButtonGroup from \"../components/ButtonGroup\";\nimport CloseIcon from \"../components/CloseIcon\";\nimport Column from \"../components/Column\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport FlexView from \"../components/FlexView\";\nimport Heading from \"../components/Heading\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport LPTokenSelect, { LPTokenItemProps } from \"../components/LPTokenSelect\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport SelectIcon from \"../components/SelectIcon\";\nimport Text from \"../components/Text\";\nimport TokenInput from \"../components/TokenInput\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { MASTER_CHEF } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useFarmingState, { Action, FarmingState } from \"../hooks/useFarmingState\";\nimport useLinker from \"../hooks/useLinker\";\nimport LPToken from \"../types/LPToken\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { formatBalance, isEmptyValue, parseBalance, pow10 } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst Actions = [\"deposit\", \"withdraw\"];\n\nconst FarmingScreen = () => {\n    return (\n        <Screen>\n            <Container>\n                <Content>\n                    <Farming />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst Farming = () => {\n    const state = useFarmingState();\n    const emptyText =\n        state.filteredBy === \"amountDeposited\"\n            ? \"You don't have any pool with deposit.\"\n            : state.filteredBy === \"balance\"\n            ? \"You don't have any pool with balance.\"\n            : \"Temporarily unable to load pools.\";\n    return (\n        <>\n            <Column>\n                <Text h4={true} style={{ textAlign: \"center\", marginBottom: Spacing.normal }}>\n                    🌾 Farming\n                </Text>\n            </Column>\n            <LPTokenSelect\n                state={state}\n                title={\"1. Select a pool for yield farming:\"}\n                emptyText={emptyText}\n                showFilter={!state.selectedLPToken}\n                filter={state.filteredBy}\n                onFilterChanged={state.setFilteredBy}\n                Item={TokenItem}\n            />\n            <ActionSelect state={state} />\n            <Deposit state={state} />\n            <Withdraw state={state} />\n        </>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenItem: FC<LPTokenItemProps> = props => {\n    const { background, backgroundLight, textMedium } = useColors();\n    const amount =\n        (props.filter === \"balance\"\n            ? props.token.balance\n            : props.filter === \"amountDeposited\"\n            ? props.token.amountDeposited\n            : props.token.totalDeposited) || \"0\";\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    const field =\n        props.filter === \"amountDeposited\" ? \"My Deposit\" : props.filter === \"balance\" ? \"My Balance\" : \"Total Deposit\";\n    return (\n        <Hoverable>\n            {({ hovered }) => (\n                <TouchableHighlight onPress={onPress}>\n                    <View style={{ backgroundColor: hovered ? backgroundLight : background }}>\n                        <FlexView style={{ alignItems: \"center\", margin: Spacing.small }}>\n                            <View>\n                                <LogoSymbol token={props.token.tokenA} />\n                                <LogoSymbol token={props.token.tokenB} />\n                            </View>\n                            <View style={{ flex: 1 }}>\n                                <Text style={{ textAlign: \"right\", fontSize: 15 }}>{field}</Text>\n                                <Text light={true} style={{ textAlign: \"right\", fontSize: 22, color: textMedium }}>\n                                    {formatBalance(amount, props.token.decimals, 8)}\n                                </Text>\n                            </View>\n                            {props.selected ? <CloseIcon /> : <SelectIcon />}\n                        </FlexView>\n                    </View>\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nconst LogoSymbol = ({ token }) => {\n    const { textMedium } = useColors();\n    const [isEmpty, setIsEmpty] = useState(false);\n    const source = !token.logoURI || isEmpty ? require(\"../../assets/empty-token.png\") : { uri: token.logoURI };\n    return (\n        <FlexView style={{ alignItems: \"center\", marginBottom: Spacing.tiny }}>\n            <Image\n                source={source}\n                onError={() => setIsEmpty(true)}\n                style={{ width: 24, height: 24, backgroundColor: \"white\", borderRadius: 12 }}\n            />\n            <Text light={true} style={{ fontSize: 22, color: textMedium, marginLeft: Spacing.small }}>\n                {token.symbol.replace(/\\+/g, \"+\\n\")}\n            </Text>\n        </FlexView>\n    );\n};\n\nconst ActionSelect = ({ state }: { state: FarmingState }) => {\n    if (!state.selectedLPToken) {\n        return <Column noTopMargin={true} />;\n    }\n    const index = state.action ? Actions.indexOf(state.action) : null;\n    const onPress = useCallback((i: number) => {\n        state.setAction(Actions[i] as Action);\n    }, []);\n    const balance = formatBalance(state.selectedLPToken!.balance, state.selectedLPToken!.decimals);\n    const deposit = formatBalance(state.selectedLPToken.amountDeposited || \"0\", state.selectedLPToken!.decimals);\n    return (\n        <Column>\n            <Heading text={\"2. Do you want to DEPOSIT or WITHDRAW?\"} />\n            <View style={{ marginHorizontal: Spacing.small, marginBottom: Spacing.normal }}>\n                <Meta label={\"My Balance\"} text={balance} />\n                <Meta label={\"My Deposit\"} text={deposit} />\n            </View>\n            <ButtonGroup\n                selectedIndex={index}\n                onPress={onPress}\n                buttons={[{ element: DepositText }, { element: WithdrawText }]}\n                containerStyle={{ marginHorizontal: Spacing.small }}\n            />\n        </Column>\n    );\n};\n\nconst DepositText = () => {\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <Text style={{ color: \"black\" }}>Deposit</Text>\n            <Icon\n                type={\"material-community\"}\n                name={\"chevron-right\"}\n                color={\"black\"}\n                style={{ marginLeft: Spacing.tiny, marginTop: 2 }}\n            />\n        </FlexView>\n    );\n};\n\nconst WithdrawText = () => {\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <Text style={{ color: \"black\" }}>Withdraw</Text>\n            <Icon\n                type={\"material-community\"}\n                name={\"chevron-right\"}\n                color={\"black\"}\n                style={{ marginLeft: Spacing.tiny, marginTop: 2 }}\n            />\n        </FlexView>\n    );\n};\n\nconst Deposit = ({ state }: { state: FarmingState }) => {\n    if (!state.selectedLPToken || state.action !== \"deposit\") {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <Column>\n            <AddLiquidityNotice state={state} />\n            <TokenInput\n                title={\"3. Amount of tokens to DEPOSIT:\"}\n                token={state.selectedLPToken}\n                hidden={state.selectedLPToken.balance.isZero()}\n                amount={state.amount}\n                onAmountChanged={state.setAmount}\n            />\n            <DepositInfo state={state} />\n            <DepositControls state={state} />\n        </Column>\n    );\n};\n\nconst AddLiquidityNotice = ({ state }: { state: FarmingState }) => {\n    const { green } = useColors();\n    if (!state.selectedLPToken!.balance.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <>\n            <View style={{ marginHorizontal: Spacing.small }}>\n                <Notice\n                    color={green}\n                    text={\n                        \"You need some \" +\n                        state.selectedLPToken!.symbol +\n                        \" token to start farming. Add liquidity to get the LP token.\"\n                    }\n                />\n            </View>\n            <AddLiquidityButton />\n        </>\n    );\n};\n\nconst DepositInfo = ({ state }: { state: FarmingState }) => {\n    if (state.selectedLPToken!.balance.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    const balance = formatBalance(state.selectedLPToken!.balance, state.selectedLPToken!.decimals);\n    const sushiReward =\n        state.expectedSushiRewardPerBlock && state.amount\n            ? formatBalance(state.expectedSushiRewardPerBlock.mul(parseBalance(state.amount, 18)).div(pow10(18)), 18)\n            : undefined;\n    return (\n        <Column noTopMargin={true}>\n            <Meta label={\"My Balance\"} text={balance} />\n            {!isEmptyValue(state.amount) && <Meta label={\"SUSHI Reward per Block\"} text={sushiReward} />}\n        </Column>\n    );\n};\n\nconst DepositControls = ({ state }: { state: FarmingState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.selectedLPToken]);\n    if (state.selectedLPToken!.balance.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    const approveRequired = !state.selectedLPTokenAllowed;\n    const disabled = approveRequired || isEmptyValue(state.amount);\n    return (\n        <Column>\n            {parseBalance(state.amount, state.selectedLPToken!.decimals).gt(state.selectedLPToken!.balance) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken!.symbol} />\n            ) : state.loading ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.selectedLPToken!}\n                        spender={MASTER_CHEF}\n                        onSuccess={() => state.setSelectedLPTokenAllowed(true)}\n                        onError={setError}\n                        hidden={isEmptyValue(state.amount) || !approveRequired}\n                    />\n                    <DepositButton state={state} onError={setError} disabled={disabled} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </Column>\n    );\n};\n\nconst AddLiquidityButton = () => {\n    const { green } = useColors();\n    const onPress = useLinker(\"/liquidity\", \"Liquidity\");\n    return (\n        <Button\n            color={green}\n            title={\"Add Liquidity\"}\n            containerStyle={{ marginTop: Spacing.normal }}\n            onPress={onPress}\n        />\n    );\n};\n\nconst DepositButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: FarmingState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onDeposit().catch(onError);\n    }, [state.onDeposit, onError]);\n    return <Button title={\"Deposit\"} disabled={disabled} loading={state.depositing} onPress={onPress} />;\n};\n\nconst Withdraw = ({ state }: { state: FarmingState }) => {\n    if (!state.selectedLPToken || state.action !== \"withdraw\") {\n        return <Column noTopMargin={true} />;\n    }\n    const token: LPToken = {\n        ...state.selectedLPToken,\n        balance: state.selectedLPToken.amountDeposited || ethers.constants.Zero\n    };\n    return (\n        <Column>\n            <NoLPTokenNotice state={state} />\n            <TokenInput\n                title={\"3. Amount of tokens to WITHDRAW:\"}\n                token={token}\n                hidden={state.loading || state.selectedLPToken.amountDeposited?.isZero() || false}\n                amount={state.amount}\n                onAmountChanged={state.setAmount}\n            />\n            <WithdrawInfo state={state} />\n            <WithdrawControls state={state} />\n        </Column>\n    );\n};\n\nconst NoLPTokenNotice = ({ state }: { state: FarmingState }) => {\n    if (state.loading || !state.selectedLPToken || !state.selectedLPToken.amountDeposited?.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <Column noTopMargin={true}>\n            <View style={{ marginHorizontal: Spacing.small }}>\n                <Notice\n                    text={\"You don't have any \" + state.selectedLPToken!.symbol + \" token deposited. Deposit it first.\"}\n                />\n            </View>\n        </Column>\n    );\n};\n\nconst WithdrawInfo = ({ state }: { state: FarmingState }) => {\n    if (\n        state.loading ||\n        !state.selectedLPToken ||\n        !state.selectedLPToken.amountDeposited ||\n        state.selectedLPToken.amountDeposited?.isZero() ||\n        !state.selectedLPToken.pendingSushi\n    ) {\n        return <Column noTopMargin={true} />;\n    }\n    const deposit = formatBalance(state.selectedLPToken.amountDeposited, state.selectedLPToken!.decimals);\n    const pendingSushi = formatBalance(\n        state.selectedLPToken.pendingSushi || ethers.constants.Zero,\n        state.selectedLPToken!.decimals\n    );\n    return (\n        <Column noTopMargin={true}>\n            <Meta label={\"My Deposit\"} text={deposit} />\n            <Meta label={\"Pending Sushi Reward\"} text={pendingSushi} />\n            <View style={{ marginTop: Spacing.normal, marginHorizontal: Spacing.small }}>\n                <Notice text={\"All pending sushi reward will be transferred to you if you withdraw.\"} />\n            </View>\n        </Column>\n    );\n};\n\nconst WithdrawControls = ({ state }: { state: FarmingState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.selectedLPToken]);\n    if (state.loading) {\n        return (\n            <Column>\n                <FetchingButton />\n            </Column>\n        );\n    }\n    if (\n        !state.selectedLPToken ||\n        !state.selectedLPToken.amountDeposited ||\n        state.selectedLPToken.amountDeposited.isZero()\n    ) {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <Column>\n            {parseBalance(state.amount, state.selectedLPToken!.decimals).gt(state.selectedLPToken.amountDeposited) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken!.symbol} />\n            ) : (\n                <WithdrawButton state={state} onError={setError} disabled={isEmptyValue(state.amount)} />\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </Column>\n    );\n};\n\nconst WithdrawButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: FarmingState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onWithdraw().catch(onError);\n    }, [state.onWithdraw, onError]);\n    return (\n        <Button size={\"large\"} title={\"Withdraw\"} disabled={disabled} loading={state.withdrawing} onPress={onPress} />\n    );\n};\n\nexport default FarmingScreen;\n"],"sourceRoot":""}