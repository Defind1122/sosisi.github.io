{"version":3,"sources":["src/components/FlexView.tsx","assets/metamask-dark.png","assets/metamask.png","assets/sushiswap.jpg","src/constants/tokens.ts","src/constants/dimension.ts","src/components/Button.tsx","src/utils/index.ts","src/hooks/useStyles.tsx","src/hooks/useAllCommonPairs.tsx","src/hooks/useSDK.tsx","src/components/Container.tsx","src/components/Content.tsx","src/components/app/AppHeader.tsx","src/components/web/ConnectToWallet.tsx","src/screens/Screen.tsx","src/components/Title.tsx","src/components/web/WebSubMenu.tsx","src/components/svg/SvgBackground.tsx","src/components/svg/SvgBackgroundDark.tsx","src/components/BackgroundImage.tsx","src/utils/fetch-utils.ts","src/constants/Fraction.ts","src/constants/colors.ts","src/hooks/useColors.tsx","src/constants/contracts.ts","src/context/EthersContext.tsx","src/utils/analytics-utils.ts","src/context/GlobalContext.tsx","src/context/index.tsx","src/components/DarkModeSwitch.tsx","src/components/web/MobileWebMenu.tsx","src/components/svg/SvgLogo.tsx","src/components/web/WebHeader.tsx","src/screens/EmptyScreen.tsx","src/screens/index.tsx","App.tsx","globals.js","src/components/Text.tsx"],"names":["FlexView","props","flexDirection","direction","style","module","exports","ETH","name","address","ethers","constants","AddressZero","decimals","symbol","logoURI","balance","BigNumber","from","SCREEN_WIDTH","Math","round","Dimensions","get","width","SCREEN_HEIGHT","height","HEADER_HEIGHT","HEADER_WIDTH","DESKTOP_CONTENT_WIDTH","SUB_MENU_HEIGHT","IS_DESKTOP","Spacing","tiny","small","normal","large","huge","Button","useColors","primary","textMedium","placeholder","backgroundLight","type","size","fontSize","fontFamily","fontWeight","color","disabled","loading","onPress","undefined","loadingProps","buttonStyle","paddingHorizontal","backgroundColor","borderColor","titleStyle","disabledTitleStyle","disabledStyle","CONTRACTS","ERC20","IUniswapV2Factory","IUniswapV2Pair","IUniswapV2Router02","IWETH","MasterChef","SushiBar","SushiRoll","OrderBook","Settlement","LPTokenScanner","abi","formatBalance","value","maxFraction","formatted","utils","formatUnits","split","length","substr","parseBalance","parseUnits","isEmptyValue","text","isBigNumber","isZero","replace","convertToken","token","WETH","SDKToken","ChainId","MAINNET","convertAmount","amount","TokenAmount","toString","parseCurrencyAmount","toExact","getContract","signerOrProvider","contract","Contract","pow10","exp","pow","useStyles","shadowColor","shadow","borderDark","border","useCallback","attrs","borderWidth","borderRadius","radius","padding","elevation","shadowOffset","shadowOpacity","shadowRadius","overflow","DAI","Token","USDC","USDT","SUSHI","YAM","AMPL","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","wrappedCurrency","currency","ETHER","useAllCommonPairs","loadAllCommonPairs","currencyA","currencyB","provider","a","async","bases","tokenA","tokenB","basePairs","flatMap","base","map","otherBase","filter","t0","t1","allPairCombinations","tokens","Boolean","b","customBases","customBasesA","customBasesB","find","equals","Promise","all","pair","Fetcher","fetchPairData","pairs","minAmount","percent","sub","mul","numerator","div","denominator","Order","maker","fromToken","toToken","amountIn","amountOutMin","recipient","deadline","floor","Date","now","v","r","s","filledAmountIn","canceled","this","eq","toNumber","SETTLEMENT","settlement","getAddress","hashOfOrder","hash","signMessage","arrayify","signature","splitSignature","sign","useSDK","useContext","EthersContext","ethereum","getTotalSupply","allowedSlippage","Percent","getTrade","fromAmount","isETH","to","Currency","CurrencyAmount","ether","Trade","bestTradeExactIn","maxHops","maxNumResults","swap","trade","signer","Router","feeOnTransfer","ttl","params","swapCallParameters","router","ROUTER","estimateGas","methodName","args","gasLimit","functions","tx","logTransaction","arg","createOrder","kovanSigner","order","toArgs","orderBook","ORDER_BOOK","cancelOrder","slice","queryOrderFilledEvents","filters","OrderFilled","queryFilter","wrapETH","weth","deposit","unwrapETH","withdraw","getPair","addLiquidity","toAmount","getTime","removeLiquidityETH","liquidity","amountETH","removeLiquidity","addLiquidityETH","getExpectedSushiRewardPerBlock","masterChef","MASTER_CHEF","totalAllocPoint","sushiPerBlock","poolInfo","id","allocPoint","lpTokenId","enterSushiBar","sushiBar","SUSHI_BAR","enter","leaveSushiBar","leave","migrate","lpToken","sushiRoll","SUSHI_ROLL","Zero","migrateWithPermit","signERC2612Permit","permit","calculateSwapFee","calculateLimitOrderFee","calculateLimitOrderReturn","price","limitOrderFeeDeducted","swapFeeDeducted","Fraction","parse","apply","calculateAmountOfLPTokenMinted","liquidityToken","totalSupply","getLiquidityMinted","Container","Platform","select","web","contentContainerStyle","flex","default","Content","background","marginLeft","marginRight","marginTop","marginBottom","AppHeader","View","StatusBar","translucent","ConnectButton","setEthereum","metaMask","window","isMetaMask","request","method","alert","title","containerStyle","marginHorizontal","WalletConnectButton","darkMode","GlobalContext","WalletConnectProvider","rpc","1","enable","ConnectWallet","source","require","alignItems","justifyContent","Image","WebScreen","chainId","Text","light","textAlign","position","top","right","bottom","left","ConnectToWallet","AppScreen","Screen","Title","SwapSubMenu","WebSubMenu","items","path","LiquiditySubMenu","MigrateSubMenu","StakingSubMenu","submenu","alignSelf","item","MenuItem","key","accent","textLight","match","useRouteMatch","active","isExact","paddingTop","paddingBottom","textDecoration","SvgBackground","viewBox","fillRule","clipRule","strokeLinecap","strokeMiterlimit","transform","fill","d","clipPath","cx","cy","stroke","strokeWidth","strokeLinejoin","rx","ry","strokeDasharray","fillOpacity","x1","y1","x2","y2","gradientUnits","gradientTransform","offset","stopColor","stopOpacity","SvgBackgroundDark","BackgroundImage","aspectRatio","fetchTokens","account","customTokens","fetch","response","json","fetchTokenBalances","balances","ALCHEMY_PROVIDER","getBalance","i","sort","t2","fetchPools","pools","pool","poolToken","balanceOf","totalDeposited","userInfo","amountDeposited","pendingSushi","fetchMyLPTokens","fetchLPTokens","SUSHISWAP_FACTORY","fetchMyUniswapLPTokens","UNISWAP_FACTORY","factory","factoryContract","allPairsLength","scanner","LP_TOKEN_SCANNER","pages","push","page","findPairs","min","flat","index","erc20","Number","findOrFetchToken","token0","token1","t","toLowerCase","send","meta","field","callStatic","data","logo","addresses","tokenBalances","tokenBalance","fetchMyLimitOrders","canceledHashes","numberOfHashesOfMaker","hashesOfMaker","hashes","HashZero","orderOfHash","filledAmountInOfHash","includes","myOrders","compareOrders","o0","o1","status","compared","fetchMyCanceledLimitOrderHashes","numberOfCanceledHashesOfMaker","allCanceledHashes","sdk","numeratorToken","denominatorToken","NAN","ZERO","BASE","isNaN","fraction","gt","lt","maxFractions","str","endsWith","substring","One","Colors","common","white","transparent","secondary","green","red","twitter","facebook","header","textDark","overlay","dark","providers","AlchemyProvider","KOVAN_PROVIDER","React","createContext","_ethereum","ensName","addOnBlockListener","_name","_listener","removeOnBlockListener","updateTokens","loadingTokens","addCustomToken","_token","removeCustomToken","approveToken","_spender","_amount","getTokenAllowance","getTokenBalance","_who","EthersContextProvider","children","useState","setProvider","setSigner","setKovanSigner","setChainId","setAddress","setENSName","onBlockListeners","setOnBlockListeners","setTokens","setCustomTokens","setLoadingTokens","useEffect","Wallet","useAsyncEffect","web3","Web3Provider","getSigner","web3Signer","onAccountsChanged","accounts","Analytics","onChainChanged","onDisconnect","on","off","lookupAddress","ens","JSON","AsyncStorage","getItem","findIndex","custom","setItem","stringify","spender","MaxUint256","approve","owner","who","listener","old","onBlock","block","Object","entries","Provider","EthersContextConsumer","Consumer","gasPrice","load","clear","setDarkMode","_darkMode","mnemonic","setMnemonic","_mnemonic","GlobalContextProvider","colorScheme","useColorScheme","mode","mne","removeItem","String","GlobalContextConsumer","ContextProvider","DarkModeSwitch","onChange","scale","CloseButton","MobileWebMenuItem","startsWith","Status","connected","isWalletConnect","disconnect","MobileWebMenu","expanded","onCollapse","animationType","visible","TouchableWithoutFeedback","paddingRight","SvgLogo","Menu","MenuIcon","onExpand","TouchableHighlight","confirm","CloseIcon","paddingLeft","WebHeader","zIndex","borderBottomWidth","onExpandMenu","EmptyScreen","FarmingScreen","lazy","LiquidityScreen","MigrateScreen","MyLimitOrdersScreen","RemoveLiquidityScreen","StakeScreen","UnstakeScreen","SwapScreen","Screens","OS","WebScreens","menuExpanded","setMenuExpanded","fallback","Tab","createBottomTabNavigator","AppScreens","theme","DefaultTheme","colors","card","notification","NavigationContainer","Navigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","component","options","tabOptions","iconName","tabBarIcon","App","useFonts","OpenSans_300Light","regular","OpenSans_400Regular","bold","OpenSans_600SemiBold","AppLoading","global","Buffer","medium","note","h1Style","h2Style","h3Style","h4Style","caption"],"mappings":"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","file":"static/js/app.dedc23bb.chunk.js","sourcesContent":["import React, { FunctionComponent } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\ninterface FlexViewProps extends ViewProps {\n    direction?: \"row\" | \"column\";\n}\n\nconst FlexView: FunctionComponent<FlexViewProps> = props => {\n    const flexDirection = props.direction || \"row\";\n    return <View {...props} style={[{ flexDirection }, props.style]} />;\n};\nexport default FlexView;\n","module.exports = __webpack_public_path__ + \"static/media/metamask-dark.2137a831.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask.15e22fef.png\";","module.exports = __webpack_public_path__ + \"static/media/sushiswap.ef005f32.jpg\";","import { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\n\nexport const ETH: Token = {\n    name: \"Ethereum\",\n    address: ethers.constants.AddressZero,\n    decimals: 18,\n    symbol: \"ETH\",\n    logoURI: \"https://lite.sushiswap.fi/images/tokens/ETH.png\",\n    balance: ethers.BigNumber.from(0)\n};\n","import { Dimensions } from \"react-native\";\n\nexport const SCREEN_WIDTH = Math.round(Dimensions.get(\"window\").width);\nexport const SCREEN_HEIGHT = Math.round(Dimensions.get(\"window\").height);\nexport const IS_HIGH_RESOLUTION = SCREEN_HEIGHT > 667;\nexport const HEADER_HEIGHT = 64;\nexport const HEADER_WIDTH = 980;\nexport const DESKTOP_CONTENT_WIDTH = 540;\nexport const SUB_MENU_HEIGHT = 40;\nexport const IS_DESKTOP = SCREEN_WIDTH > DESKTOP_CONTENT_WIDTH;\n\nexport const Spacing = IS_HIGH_RESOLUTION\n    ? {\n          tiny: 8,\n          small: 16,\n          normal: 32,\n          large: 48,\n          huge: 64\n      }\n    : {\n          tiny: 6,\n          small: 12,\n          normal: 24,\n          large: 32,\n          huge: 48\n      };\n","import React, { FC } from \"react\";\nimport { Button as NativeButton, ButtonProps as NativeButtonProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nexport interface ButtonProps extends NativeButtonProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Button: FC<ButtonProps> = props => {\n    const { primary, textMedium, placeholder, backgroundLight } = useColors();\n    const type = props.type || \"solid\";\n    const size = props.size || \"normal\";\n    const height = props.size === \"small\" ? 36 : size === \"normal\" ? 45 : 54;\n    const fontSize = props.size === \"small\" ? 13 : size === \"normal\" ? 15 : 18;\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = type === \"solid\" ? \"white\" : props.color || textMedium;\n    return (\n        <NativeButton\n            {...props}\n            disabled={props.loading || props.disabled}\n            onPress={props.loading ? undefined : props.onPress}\n            type={type}\n            loadingProps={{ color: textMedium }}\n            buttonStyle={[\n                {\n                    height,\n                    paddingHorizontal: Spacing.small,\n                    backgroundColor: \"transparent\",\n                    borderColor: color\n                },\n                props.buttonStyle\n            ]}\n            titleStyle={[{ fontSize, fontFamily, color }, props.titleStyle]}\n            disabledTitleStyle={[{ fontSize, fontFamily, color: placeholder }, props.titleStyle]}\n            style={[{ backgroundColor: type === \"solid\" ? props.color || primary : \"transparent\" }, props.style]}\n            disabledStyle={[\n                { backgroundColor: type === \"solid\" ? backgroundLight : \"transparent\" },\n                props.disabledStyle\n            ]}\n        />\n    );\n};\nexport default Button;\n","import ERC20 from \"@sushiswap/core/build/contracts/ERC20.json\";\nimport IUniswapV2Factory from \"@sushiswap/core/build/contracts/IUniswapV2Factory.json\";\nimport IUniswapV2Pair from \"@sushiswap/core/build/contracts/IUniswapV2Pair.json\";\nimport IUniswapV2Router02 from \"@sushiswap/core/build/contracts/IUniswapV2Router02.json\";\nimport IWETH from \"@sushiswap/core/build/contracts/IWETH.json\";\nimport MasterChef from \"@sushiswap/core/build/contracts/MasterChef.json\";\nimport SushiBar from \"@sushiswap/core/build/contracts/SushiBar.json\";\nimport SushiRoll from \"@sushiswap/core/build/contracts/SushiRoll.json\";\nimport { ChainId, CurrencyAmount, Token as SDKToken, TokenAmount, WETH } from \"@sushiswap/sdk\";\nimport OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\nimport { ethers } from \"ethers\";\nimport LPTokenScanner from \"../constants/abi/LPTokenScanner.json\";\nimport Token from \"../types/Token\";\n\nconst CONTRACTS = {\n    ERC20,\n    IUniswapV2Factory,\n    IUniswapV2Pair,\n    IUniswapV2Router02,\n    IWETH,\n    MasterChef,\n    SushiBar,\n    SushiRoll,\n    OrderBook,\n    Settlement,\n    LPTokenScanner: { abi: LPTokenScanner }\n};\n\nexport const formatBalance = (value: ethers.BigNumberish, decimals = 18, maxFraction = 0) => {\n    const formatted = ethers.utils.formatUnits(value, decimals);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const parseBalance = (value: string, decimals = 18) => {\n    return ethers.utils.parseUnits(value || \"0\", decimals);\n};\n\nexport const isEmptyValue = (text: string) =>\n    ethers.BigNumber.isBigNumber(text)\n        ? ethers.BigNumber.from(text).isZero()\n        : text === \"\" || text.replace(/0/g, \"\").replace(/\\./, \"\") === \"\";\n\nexport const convertToken = (token: Token) => {\n    return token.symbol === \"ETH\" ? WETH[\"1\"] : new SDKToken(ChainId.MAINNET, token.address, token.decimals);\n};\n\nexport const convertAmount = (token: Token, amount: string) => {\n    return new TokenAmount(convertToken(token), parseBalance(amount, token.decimals).toString());\n};\n\nexport const parseCurrencyAmount = (value: CurrencyAmount, decimals = 18) => {\n    return ethers.BigNumber.from(parseBalance(value.toExact(), decimals));\n};\n\nexport const getContract = (\n    name: string,\n    address: string,\n    signerOrProvider: ethers.Signer | ethers.providers.Provider\n) => {\n    const contract = CONTRACTS[name];\n    return new ethers.Contract(address, contract.abi, signerOrProvider);\n};\n\nexport const pow10 = (exp: ethers.BigNumberish) => {\n    return ethers.BigNumber.from(10).pow(exp);\n};\n\nexport const formatDate = (date: Date) => {\n    return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n};\n","import { useCallback } from \"react\";\nimport { ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"./useColors\";\n\nconst useStyles = () => {\n    const { shadow: shadowColor, borderDark } = useColors();\n    const border = useCallback(\n        (attrs?: { color?: string; radius?: number }) => ({\n            borderColor: attrs?.color || borderDark,\n            borderWidth: 1,\n            borderRadius: attrs?.radius || 8,\n            padding: Spacing.small\n        }),\n        []\n    );\n    const shadow = () =>\n        ({\n            borderRadius: Spacing.tiny,\n            elevation: Spacing.small,\n            shadowColor,\n            shadowOffset: { width: 0, height: 2 },\n            shadowOpacity: 0.5,\n            shadowRadius: 4,\n            overflow: \"visible\"\n        } as ViewStyle);\n    return { border, shadow };\n};\n\nexport default useStyles;\n","import { useCallback } from \"react\";\n\nimport { ChainId, Currency, ETHER, Fetcher, Pair, Token, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\n\nconst DAI = new Token(ChainId.MAINNET, \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", 18, \"DAI\", \"Dai Stablecoin\");\nconst USDC = new Token(ChainId.MAINNET, \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\", 6, \"USDC\", \"USD//C\");\nconst USDT = new Token(ChainId.MAINNET, \"0xdAC17F958D2ee523a2206206994597C13D831ec7\", 6, \"USDT\", \"Tether USD\");\nconst SUSHI = new Token(ChainId.MAINNET, \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\", 18, \"SUSHI\", \"SushiToken\");\nconst YAM = new Token(ChainId.MAINNET, \"0x0e2298E3B3390e3b945a5456fBf59eCc3f55DA16\", 18, \"YAM\", \"YAM\");\nconst AMPL = new Token(ChainId.MAINNET, \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\", 9, \"AMPL\", \"Ampleforth\");\n\nconst BASES_TO_CHECK_TRADES_AGAINST = [WETH[ChainId.MAINNET], DAI, USDC, USDT, SUSHI, YAM];\nconst CUSTOM_BASES = {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n};\n\nfunction wrappedCurrency(currency: Currency | undefined): Token | undefined {\n    return currency === ETHER ? WETH[ChainId.MAINNET] : currency instanceof Token ? currency : undefined;\n}\n\n// Source: https://github.com/Uniswap/uniswap-interface/blob/master/src/hooks/Trades.ts\nconst useAllCommonPairs = () => {\n    const loadAllCommonPairs = useCallback(\n        // tslint:disable-next-line:max-func-body-length\n        async (currencyA?: Currency, currencyB?: Currency, provider?: ethers.providers.BaseProvider) => {\n            const bases: Token[] = BASES_TO_CHECK_TRADES_AGAINST;\n            const [tokenA, tokenB] = [wrappedCurrency(currencyA), wrappedCurrency(currencyB)];\n            const basePairs: [Token, Token][] = bases\n                .flatMap((base): [Token, Token][] => bases.map(otherBase => [base, otherBase]))\n                .filter(([t0, t1]) => t0.address !== t1.address);\n\n            const allPairCombinations =\n                tokenA && tokenB\n                    ? [\n                          // the direct pair\n                          [tokenA, tokenB],\n                          // token A against all bases\n                          ...bases.map((base): [Token, Token] => [tokenA, base]),\n                          // token B against all bases\n                          ...bases.map((base): [Token, Token] => [tokenB, base]),\n                          // each base against all bases\n                          ...basePairs\n                      ]\n                          .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n                          .filter(([t0, t1]) => t0.address !== t1.address)\n                          .filter(([a, b]) => {\n                              const customBases = CUSTOM_BASES;\n                              if (!customBases) return true;\n\n                              const customBasesA: Token[] | undefined = customBases[a.address];\n                              const customBasesB: Token[] | undefined = customBases[b.address];\n\n                              if (!customBasesA && !customBasesB) return true;\n\n                              if (customBasesA && !customBasesA.find(base => tokenB.equals(base))) return false;\n                              return !(customBasesB && !customBasesB.find(base => tokenA.equals(base)));\n                          })\n                    : [];\n\n            const pairs = await Promise.all(\n                allPairCombinations.map(async pair => {\n                    try {\n                        return await Fetcher.fetchPairData(pair[0], pair[1], provider);\n                    } catch (e) {\n                        return null;\n                    }\n                })\n            );\n            return pairs.filter(pair => pair !== null) as Pair[];\n        },\n        []\n    );\n\n    return { loadAllCommonPairs };\n};\n\nexport default useAllCommonPairs;\n","import { useCallback, useContext } from \"react\";\n\nimport { Currency, CurrencyAmount, Fetcher, Pair, Percent, Router, TokenAmount, Trade, WETH } from \"@sushiswap/sdk\";\nimport { signERC2612Permit } from \"eth-permit\";\nimport { ethers } from \"ethers\";\nimport { MASTER_CHEF, ORDER_BOOK, ROUTER, SETTLEMENT, SUSHI_BAR, SUSHI_ROLL } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { convertToken, getContract, pow10 } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport useAllCommonPairs from \"./useAllCommonPairs\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSDK = () => {\n    const { ethereum, getTotalSupply } = useContext(EthersContext);\n    const { loadAllCommonPairs } = useAllCommonPairs();\n    const allowedSlippage = new Percent(\"50\", \"10000\"); // 0.05%\n    const ttl = 60 * 20;\n\n    const getTrade = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider\n        ) => {\n            if (provider) {\n                const isETH = fromToken.symbol === \"ETH\";\n                const from = convertToken(fromToken);\n                const to = toToken.symbol === \"ETH\" ? Currency.ETHER : convertToken(toToken);\n                const pairs = await loadAllCommonPairs(from, to, provider);\n                const amount = isETH\n                    ? CurrencyAmount.ether(fromAmount.toString())\n                    : new TokenAmount(from, fromAmount.toString());\n                return Trade.bestTradeExactIn(pairs, amount, to, { maxHops: 3, maxNumResults: 1 })[0];\n            }\n        },\n        []\n    );\n\n    const swap = useCallback(async (trade: Trade, signer: ethers.Signer) => {\n        if (trade) {\n            const params = Router.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                allowedSlippage,\n                recipient: await signer.getAddress(),\n                ttl\n            });\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const gasLimit = await router.estimateGas[params.methodName](...params.args, {\n                value: params.value\n            });\n            const tx = await router.functions[params.methodName](...params.args, {\n                value: params.value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            await logTransaction(\n                tx,\n                \"UniswapV2Router02.\" + params.methodName + \"()\",\n                ...params.args.map(arg => arg.toString())\n            );\n            return {\n                trade,\n                tx\n            };\n        }\n    }, []);\n\n    const createOrder = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            amountIn: ethers.BigNumber,\n            amountOutMin: ethers.BigNumber,\n            signer: ethers.Signer,\n            kovanSigner: ethers.Signer\n        ) => {\n            const order = new Order(signer, fromToken, toToken, amountIn, amountOutMin, await signer.getAddress());\n            const args = await order.toArgs();\n\n            const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n            const gasLimit = await orderBook.estimateGas.createOrder(args);\n            const tx = await orderBook.createOrder(args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return await logTransaction(tx, \"OrderBook.createOrder()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const cancelOrder = useCallback(async (order: Order, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const args = (await order.toArgs()).slice(0, 7);\n        const gasLimit = await settlement.estimateGas.cancelOrder(...args);\n        const tx = await settlement.cancelOrder(...args, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return await logTransaction(tx, \"Settlement.cancelOrder()\", ...args.map(arg => arg.toString()));\n    }, []);\n\n    const queryOrderFilledEvents = useCallback(async (hash: string, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const filter = settlement.filters.OrderFilled(hash);\n        return await settlement.queryFilter(filter);\n    }, []);\n\n    const wrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.deposit({\n            value: amount\n        });\n        const tx = await weth.deposit({\n            value: amount,\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.deposit()\");\n    }, []);\n\n    const unwrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.withdraw(amount);\n        const tx = await weth.withdraw(amount, {\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.withdraw()\");\n    }, []);\n\n    const getPair = useCallback(async (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => {\n        const from = convertToken(fromToken);\n        const to = convertToken(toToken);\n        return await Fetcher.fetchPairData(from, to, provider);\n    }, []);\n\n    const addLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                fromAmount,\n                toAmount,\n                minAmount(fromAmount, allowedSlippage),\n                minAmount(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidity(...args);\n            const tx = await router.functions.addLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidityETH = useCallback(\n        async (\n            token: Token,\n            liquidity: ethers.BigNumber,\n            amount: ethers.BigNumber,\n            amountETH: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                liquidity,\n                minAmount(amount, allowedSlippage),\n                minAmount(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidityETH(...args);\n            const tx = await router.functions.removeLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            liquidity: ethers.BigNumber,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                liquidity,\n                minAmount(fromAmount, allowedSlippage),\n                minAmount(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidity(...args);\n            const tx = await router.functions.removeLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const addLiquidityETH = useCallback(\n        async (token: Token, amount: ethers.BigNumber, amountETH: ethers.BigNumber, signer: ethers.Signer) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                amount,\n                minAmount(amount, allowedSlippage),\n                minAmount(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidityETH(...args, {\n                value: amountETH\n            });\n            const tx = await router.functions.addLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100),\n                value: amountETH\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const getExpectedSushiRewardPerBlock = useCallback(async (token: LPToken, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const totalAllocPoint = await masterChef.totalAllocPoint();\n        const sushiPerBlock = await masterChef.sushiPerBlock();\n        const { allocPoint } = await masterChef.poolInfo(token.id);\n        return ethers.BigNumber.from(sushiPerBlock)\n            .mul(allocPoint)\n            .div(totalAllocPoint);\n    }, []);\n\n    const deposit = useCallback(async (lpTokenId: number, amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const gasLimit = await masterChef.estimateGas.deposit(lpTokenId, amount);\n        const tx = await masterChef.deposit(lpTokenId, amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"MasterChef.deposit()\", lpTokenId, amount.toString());\n    }, []);\n\n    const withdraw = useCallback(async (lpTokenId: number, amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const gasLimit = await masterChef.estimateGas.withdraw(lpTokenId, amount);\n        const tx = await masterChef.withdraw(lpTokenId, amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"MasterChef.withdraw()\", lpTokenId, amount.toString());\n    }, []);\n\n    const enterSushiBar = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const sushiBar = getContract(\"SushiBar\", SUSHI_BAR, signer);\n        const gasLimit = await sushiBar.estimateGas.enter(amount);\n        const tx = await sushiBar.enter(amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"SushiBar.enter()\", amount.toString());\n    }, []);\n\n    const leaveSushiBar = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const sushiBar = getContract(\"SushiBar\", SUSHI_BAR, signer);\n        const gasLimit = await sushiBar.estimateGas.leave(amount);\n        const tx = await sushiBar.leave(amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"SushiBar.leave()\", amount.toString());\n    }, []);\n\n    const migrate = useCallback(\n        async (lpToken: LPToken, amount: ethers.BigNumber, signer: ethers.Signer) => {\n            const sushiRoll = getContract(\"SushiRoll\", SUSHI_ROLL, signer);\n            const deadline = Math.floor(new Date().getTime() / 1000) + ttl;\n            const args = [\n                lpToken.tokenA.address,\n                lpToken.tokenB.address,\n                amount,\n                ethers.constants.Zero,\n                ethers.constants.Zero,\n                deadline\n            ];\n            const gasLimit = await sushiRoll.estimateGas.migrate(...args);\n            const tx = await sushiRoll.migrate(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"SushiRoll.migrate()\", ...args.map(arg => arg.toString()));\n        },\n        [ethereum]\n    );\n\n    const migrateWithPermit = useCallback(\n        async (lpToken: LPToken, amount: ethers.BigNumber, signer: ethers.Signer) => {\n            const sushiRoll = getContract(\"SushiRoll\", SUSHI_ROLL, signer);\n            const deadline = Math.floor(new Date().getTime() / 1000) + ttl;\n            const permit = await signERC2612Permit(\n                ethereum,\n                lpToken.address,\n                await signer.getAddress(),\n                SUSHI_ROLL,\n                amount.toString(),\n                deadline\n            );\n            const args = [\n                lpToken.tokenA.address,\n                lpToken.tokenB.address,\n                amount,\n                ethers.constants.Zero,\n                ethers.constants.Zero,\n                deadline,\n                permit.v,\n                permit.r,\n                permit.s\n            ];\n            const gasLimit = await sushiRoll.estimateGas.migrateWithPermit(...args);\n            const tx = await sushiRoll.migrateWithPermit(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"SushiRoll.migrateWithPermit()\", ...args.map(arg => arg.toString()));\n        },\n        [ethereum]\n    );\n\n    const calculateSwapFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(3).div(1000);\n    };\n\n    const calculateLimitOrderFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(2).div(1000);\n    };\n\n    const calculateLimitOrderReturn = (\n        fromToken: Token,\n        toToken: Token,\n        fromAmount: ethers.BigNumber,\n        price: string\n    ) => {\n        const limitOrderFeeDeducted = fromAmount.sub(calculateLimitOrderFee(fromAmount));\n        const swapFeeDeducted = limitOrderFeeDeducted.sub(calculateSwapFee(limitOrderFeeDeducted));\n        return Fraction.parse(price).apply(swapFeeDeducted.mul(pow10(toToken.decimals)).div(pow10(fromToken.decimals)));\n    };\n\n    const calculateAmountOfLPTokenMinted = async (pair: Pair, fromAmount: TokenAmount, toAmount: TokenAmount) => {\n        const totalSupply = await getTotalSupply(pair.liquidityToken.address);\n        if (totalSupply) {\n            return pair.getLiquidityMinted(\n                new TokenAmount(pair.liquidityToken, totalSupply.toString()),\n                fromAmount,\n                toAmount\n            );\n        }\n    };\n\n    return {\n        allowedSlippage,\n        getTrade,\n        swap,\n        createOrder,\n        cancelOrder,\n        queryOrderFilledEvents,\n        wrapETH,\n        unwrapETH,\n        getPair,\n        addLiquidity,\n        addLiquidityETH,\n        removeLiquidity,\n        removeLiquidityETH,\n        getExpectedSushiRewardPerBlock,\n        deposit,\n        withdraw,\n        enterSushiBar,\n        leaveSushiBar,\n        migrate,\n        migrateWithPermit,\n        calculateSwapFee,\n        calculateLimitOrderFee,\n        calculateLimitOrderReturn,\n        calculateAmountOfLPTokenMinted\n    };\n};\n\nconst minAmount = (amount: ethers.BigNumber, percent: Percent) => {\n    return amount.sub(amount.mul(percent.numerator.toString()).div(percent.denominator.toString()));\n};\n\nexport type OrderStatus = \"Open\" | \"Expired\" | \"Filled\" | \"Canceled\";\n\nexport class Order {\n    maker: ethers.Signer;\n    fromToken: Token;\n    toToken: Token;\n    amountIn: ethers.BigNumber;\n    amountOutMin: ethers.BigNumber;\n    recipient: string;\n    deadline: ethers.BigNumber;\n    v?: number;\n    r?: string;\n    s?: string;\n    filledAmountIn?: ethers.BigNumber;\n    canceled?: boolean;\n\n    constructor(\n        maker: ethers.Signer,\n        fromToken: Token,\n        toToken: Token,\n        amountIn: ethers.BigNumber,\n        amountOutMin: ethers.BigNumber,\n        recipient: string,\n        deadline = ethers.BigNumber.from(Math.floor(Date.now() / 1000 + 24 * 3600)),\n        v?: number,\n        r?: string,\n        s?: string,\n        filledAmountIn?: ethers.BigNumber,\n        canceled?: boolean\n    ) {\n        this.maker = maker;\n        this.fromToken = fromToken;\n        this.toToken = toToken;\n        this.amountIn = amountIn;\n        this.amountOutMin = amountOutMin;\n        this.recipient = recipient;\n        this.deadline = deadline;\n        this.v = v;\n        this.r = r;\n        this.s = s;\n        this.filledAmountIn = filledAmountIn;\n        this.canceled = canceled;\n    }\n\n    status(): OrderStatus {\n        return this.canceled\n            ? \"Canceled\"\n            : this.filledAmountIn?.eq(this.amountIn)\n            ? \"Filled\"\n            : this.deadline.toNumber() * 1000 < Date.now()\n            ? \"Expired\"\n            : \"Open\";\n    }\n\n    async hash() {\n        const settlement = await getContract(\"Settlement\", SETTLEMENT, this.maker);\n        return await settlement.hashOfOrder(\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline\n        );\n    }\n\n    async sign() {\n        const hash = await this.hash();\n        const signature = await this.maker.signMessage(ethers.utils.arrayify(hash));\n        return ethers.utils.splitSignature(signature);\n    }\n\n    async toArgs() {\n        const { v, r, s } = this.v && this.r && this.s ? { v: this.v, r: this.r, s: this.s } : await this.sign();\n        return [\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline,\n            v,\n            r,\n            s\n        ];\n    }\n}\n\nexport default useSDK;\n","import React, { FC } from \"react\";\nimport { Platform, SafeAreaView, ScrollView, ViewProps } from \"react-native\";\n\nexport type ContainerProps = ViewProps;\n\nconst Container: FC<ContainerProps> = props => {\n    return Platform.select({\n        web: (\n            <ScrollView\n                contentContainerStyle={{ flex: 1 }}\n                style={[\n                    {\n                        flex: 1\n                    },\n                    props.style\n                ]}\n                {...props}\n            />\n        ),\n        default: (\n            <SafeAreaView style={{ flex: 1 }}>\n                <ScrollView {...props} />\n            </SafeAreaView>\n        )\n    });\n};\n\nexport default Container;\n","import React from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { DESKTOP_CONTENT_WIDTH, IS_DESKTOP, Spacing, SUB_MENU_HEIGHT } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst Content: React.FunctionComponent<ViewProps> = props => {\n    const { background } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border(),\n                    backgroundColor: background,\n                    width: IS_DESKTOP ? DESKTOP_CONTENT_WIDTH : \"100%\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    marginTop: Spacing.huge + SUB_MENU_HEIGHT,\n                    marginBottom: Spacing.large,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Content;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { StatusBar } from \"expo-status-bar\";\n\nimport { HEADER_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\n\nconst AppHeader = () => {\n    const { background } = useColors();\n    return (\n        <View\n            style={{\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                backgroundColor: background\n            }}>\n            <StatusBar translucent={false} backgroundColor={background} />\n        </View>\n    );\n};\n\nexport default AppHeader;\n","import React, { useContext } from \"react\";\nimport { Image, View } from \"react-native\";\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport Button from \"../Button\";\n\nconst ConnectWallet = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const metaMask = window.ethereum?.isMetaMask || false;\n    const source = metaMask\n        ? darkMode\n            ? require(\"../../../assets/metamask-dark.png\")\n            : require(\"../../../assets/metamask.png\")\n        : require(\"../../../assets/sushiswap.jpg\");\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <Image\n                source={source}\n                style={{ width: metaMask ? 223 : 200, height: metaMask ? 183 : 200, marginBottom: Spacing.normal }}\n            />\n            {window.ethereum && <ConnectButton />}\n            <WalletConnectButton />\n        </View>\n    );\n};\n\nconst ConnectButton = () => {\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        if (window.ethereum) {\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\n            setEthereum(window.ethereum);\n        } else {\n            alert(\"No ethereum provider found.\");\n        }\n    };\n    const metaMask = window.ethereum?.isMetaMask || false;\n    return (\n        <Button\n            size={\"large\"}\n            color={metaMask ? \"#e2761b\" : primary}\n            onPress={onPress}\n            title={metaMask ? \"MetaMask\" : \"Connect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nconst WalletConnectButton = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        const ethereum = new WalletConnectProvider({\n            rpc: {\n                1: \"https://eth-mainnet.alchemyapi.io/v2/fF51JjrwO8qCZW13KRflYpqU_ZeOH1Er\"\n            }\n        });\n        await ethereum.enable();\n        // @ts-ignore\n        setEthereum(ethereum);\n    };\n    return (\n        <Button\n            size={\"large\"}\n            type={\"outline\"}\n            color={darkMode ? \"white\" : primary}\n            onPress={onPress}\n            title={\"WalletConnect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nexport default ConnectWallet;\n","import React, { useContext } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport AppHeader from \"../components/app/AppHeader\";\nimport Text from \"../components/Text\";\nimport ConnectToWallet from \"../components/web/ConnectToWallet\";\nimport { HEADER_HEIGHT } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\n\nconst Screen = props => {\n    return Platform.select({\n        web: <WebScreen {...props} />,\n        default: <AppScreen {...props} />\n    });\n};\n\nconst WebScreen = props => {\n    const { address, chainId } = useContext(EthersContext);\n    if (!address) return <ConnectToWallet />;\n    if (chainId !== 1)\n        return (\n            <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n                <Text light={true} style={{ textAlign: \"center\" }}>\n                    {\"Please switch network to\\n'Ethereum Mainnet'\"}\n                </Text>\n            </View>\n        );\n    return (\n        <View\n            {...props}\n            style={[{ position: \"absolute\", top: HEADER_HEIGHT, right: 0, bottom: 0, left: 0 }, props.style]}\n        />\n    );\n};\n\nconst AppScreen = props => (\n    <View style={{ width: \"100%\", height: \"100%\" }}>\n        <AppHeader />\n        <View {...props} style={[{ flex: 1 }, props.style]} />\n    </View>\n);\n\nexport default Screen;\n","import React, { FC } from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Text from \"./Text\";\n\ninterface TitleProps {\n    text: string;\n}\n\nconst Title: FC<TitleProps> = props => {\n    return (\n        <Text fontWeight={\"bold\"} style={{ marginBottom: Spacing.tiny, fontSize: 40 }}>\n            {props.text}\n        </Text>\n    );\n};\n\nexport default Title;\n","import React, { FC } from \"react\";\nimport { View } from \"react-native\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_WIDTH, IS_DESKTOP, Spacing, SUB_MENU_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebSubMenuItem {\n    title: string;\n    path: string;\n}\n\nexport interface WebSubMenuProps {\n    items: WebSubMenuItem[];\n}\n\nexport const SwapSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"New Order\",\n                path: \"/swap\"\n            },\n            {\n                title: \"My Orders\",\n                path: \"/swap/my-orders\"\n            }\n        ]}\n    />\n);\n\nexport const LiquiditySubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Add Liquidity\",\n                path: \"/liquidity\"\n            },\n            {\n                title: \"Remove Liquidity\",\n                path: \"/liquidity/remove\"\n            }\n        ]}\n    />\n);\n\nexport const MigrateSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Migrate Liquidity\",\n                path: \"/migrate\"\n            }\n        ]}\n    />\n);\n\nexport const StakingSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Stake\",\n                path: \"/staking\"\n            },\n            {\n                title: \"Unstake\",\n                path: \"/staking/unstake\"\n            }\n        ]}\n    />\n);\n\nconst WebSubMenu: FC<WebSubMenuProps> = props => {\n    const { submenu } = useColors();\n    return (\n        <View\n            style={{\n                position: \"absolute\",\n                top: 0,\n                height: SUB_MENU_HEIGHT,\n                width: \"100%\",\n                backgroundColor: submenu\n            }}>\n            <FlexView\n                style={{\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    marginTop: 2,\n                    paddingHorizontal: Spacing.normal,\n                    alignSelf: \"center\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\"\n                }}>\n                {props.items.map(item => (\n                    <MenuItem key={item.path} {...item} />\n                ))}\n            </FlexView>\n        </View>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { accent, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.isExact;\n    return (\n        <Link\n            to={path}\n            style={{\n                marginLeft: Spacing.small,\n                paddingTop: Spacing.tiny,\n                paddingBottom: Spacing.tiny,\n                textDecoration: \"none\"\n            }}>\n            <Text\n                fontWeight={active ? \"regular\" : \"light\"}\n                style={{\n                    fontSize: 13,\n                    color: active ? accent : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nexport default WebSubMenu;\n","import * as React from \"react\";\nimport Svg, {\n    Circle,\n    ClipPath,\n    Defs,\n    Ellipse,\n    G,\n    LinearGradient,\n    Path,\n    RadialGradient,\n    Stop,\n    SvgProps\n} from \"react-native-svg\";\n\n// tslint:disable-next-line:max-func-body-length\nfunction SvgBackground(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 2100 2100\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit={1.5}\n            {...props}>\n            <G transform=\"matrix(.92374 0 0 1.88904 -15674.56 -16430.7)\">\n                <Path fill=\"#fff\" d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                <ClipPath id=\"prefix__a\">\n                    <Path d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                </ClipPath>\n                <G clipPath=\"url(#prefix__a)\">\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear2)\"\n                        strokeWidth={3}\n                        transform=\"matrix(1.08256 0 0 .52937 11950.485 6652.866)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear3)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.70103 0 0 .3428 14109.24 7569.495)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear4)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.65148 0 0 .31857 14389.612 7688.545)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear5)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.59951 0 0 .29316 14683.668 7813.402)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear6)\"\n                        strokeWidth={2.97}\n                        transform=\"matrix(1.45883 0 0 .71336 9821.49 5748.873)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear7)\"\n                        strokeWidth={1.09}\n                        transform=\"matrix(1.98142 0 0 .9689 6864.553 4493.326)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear8)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.08295 0 0 1.01856 6290.06 4249.393)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear9)\"\n                        strokeWidth={0.99}\n                        transform=\"matrix(2.1815 0 0 1.06675 5732.466 4012.633)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear10)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.51596 0 0 1.2303 3840.076 3209.103)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear11)\"\n                        strokeWidth={0.76}\n                        transform=\"matrix(2.84743 0 0 1.39238 1964.432 2412.72)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={2.98}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(1.02642 -.18032 .36875 .50192 -8192.387 8615.588)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.52195 -.0917 .18751 .25523 4129.043 8824.098)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.5544 .00739 .01511 -.2711 5758.093 11686.348)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.46928 .14454 -.29559 .22948 10245.833 3948.758)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(-.05308 -.52873 .90826 -.0218 11138.133 21929.848)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(1.04567 .13701 -.23536 .42952 -4115.147 2068.338)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(.28019 -.51133 .87836 .11509 4233.503 20687.448)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(.81456 -.34867 -.59895 -.33459 4984.583 20568.648)\"\n                    />\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\"\n                        />\n                        <G transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__b\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__b)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .23937 .4057 13752.838 7678.974)\"\n                        />\n                        <G transform=\"matrix(.5441 -.07676 .16282 .27595 15179.303 8147.075)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__c\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__c)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\"\n                        />\n                        <G transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__d\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__d)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .23684 .40605 13983.858 7907.01)\"\n                        />\n                        <G transform=\"matrix(.54457 -.07596 .1611 .27619 15407.406 8377.228)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__e\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__e)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\"\n                        />\n                        <G transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__f\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__f)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.143 .41641 14337.534 7060.022)\"\n                        />\n                        <G transform=\"matrix(.55847 .04586 -.09727 .28324 15209.655 7783.768)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__g\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__g)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\"\n                        />\n                        <G transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__h\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__h)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.17215 .44792 14309.713 6521.024)\"\n                        />\n                        <G transform=\"matrix(.60073 .0552 -.1171 .30467 15219.919 7311.01)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__i\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__i)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\"\n                        />\n                        <G transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__j\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__j)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2407 .4403 12950.42 7711.006)\"\n                        />\n                        <G transform=\"matrix(.59051 -.07719 .16372 .2995 14469.505 8230.993)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__k\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__k)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\"\n                        />\n                        <G transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__l\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__l)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.2057 .24809 17661.276 7556.892)\"\n                        />\n                        <G transform=\"matrix(.33273 .06596 -.1399 .16875 17997.348 8063.5)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__m\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__m)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5429.1 4921.27l-245.63-534.63c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l245.64 534.63-8.29 3.81z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={6.24}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(1.84616 .56078 -1.14678 .90277 13532.107 2379.001)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.34583 -.0828 .11398 -.44301 18137.519 11317.2)\"\n                        />\n                        <Path\n                            d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(-1.34583 -.0828 .1847 -.71786 17867.016 12368.54)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.73}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.34583 -.0828 .1111 -.43178 18148.57 11274.248)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.77}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.34583 -.0828 .1081 -.42012 18160.044 11229.655)\"\n                        />\n                        <Path\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.81}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3139.43h14.614v1166.61h-14.614z\"\n                            transform=\"matrix(-1.34583 -.0828 .10505 -.4083 18171.686 11184.4)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5300.61 5786.96c-.24-.17-.47-.35-.7-.53-17.41-13.86-4.09-63.98 30.06-114.74 1.44-2.13 7.58-10.81 9.18-12.95 35.31-47.46 76.53-76.3 96.18-67.31.9.41 1.75.9 2.55 1.47l125.89 89.04s2.73 2.01 3.31 2.57c15.89 15.44 1.4 66.2-33.58 116.88-.72 1.05-5.39 7.6-7 9.76-36.02 48.39-78.11 77.44-97.17 66.75-.47-.27-2.29-1.52-2.29-1.52l-126.43-89.42z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={11.5}\n                            transform=\"matrix(.99854 .20457 -.41815 .48829 15048.865 5342.07)\"\n                        />\n                        <Path\n                            d=\"M1040.64 697.661c0 22.723-51.581 41.17-115.115 41.17-63.534 0-115.116-18.447-115.116-41.17V546.583l.003.266c.4 22.6 51.827 40.904 115.113 40.904 63.534 0 115.115-18.448 115.115-41.17v151.078z\"\n                            fill=\"#0e0f23\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={5}\n                            transform=\"matrix(.9478 -.28962 .59237 .46355 16830.032 9233.44)\"\n                        />\n                        <Ellipse\n                            cx={925.525}\n                            cy={546.583}\n                            rx={115.115}\n                            ry={41.17}\n                            fill=\"#fff\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={5.19}\n                            transform=\"matrix(.9478 -.28962 .59487 .4655 16828.667 9232.372)\"\n                        />\n                        <G transform=\"matrix(.55592 -.16987 .26032 .2037 17374.22 9264.638)\">\n                            <Ellipse cx={925.525} cy={546.583} rx={115.115} ry={41.17} fill=\"#f14f9b\" />\n                            <Path\n                                d=\"M925.525 496.312c-45.853 0-85.627 9.645-105.389 23.272-11.22 7.737-16.547 17.689-16.547 26.999 0 9.311 5.327 19.262 16.547 26.999 19.762 13.627 59.536 23.272 105.389 23.272 45.852 0 85.625-9.645 105.385-23.272 11.22-7.737 16.55-17.688 16.55-26.999 0-9.31-5.33-19.262-16.55-26.999-19.76-13.627-59.533-23.272-105.385-23.272zm0 9.101c63.534 0 115.115 18.448 115.115 41.17s-51.581 41.17-115.115 41.17c-63.534 0-115.116-18.448-115.116-41.17s51.582-41.17 115.116-41.17z\"\n                                fill=\"#0e0f23\"\n                            />\n                        </G>\n                        <Path\n                            d=\"M11345.5 4849.24c37.3 20.18 78.8 24.3 118.1 24.29 39.4-.02 87.8-6.02 118.1-24.29\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={2.09}\n                            strokeLinejoin=\"round\"\n                            strokeDasharray=\"4.17,4.17,52.17,52.17\"\n                            transform=\"matrix(.79239 -.24213 .49524 .38754 6562.684 10128.41)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5418.56 4898.33l-235.09-511.69c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l235.1 511.69-8.29 3.81z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={6.24}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(2.13363 .20224 -.41358 1.04334 8845.74 3629.144)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.31781 .15716 -.21635 -.43379 19662.657 11177.932)\"\n                        />\n                        <Path\n                            d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(-1.31781 .15716 -.35058 -.70292 20176.097 12207.383)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.73}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.31781 .15716 -.21087 -.4228 19641.681 11135.875)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.77}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.31781 .15716 -.20518 -.41138 19619.904 11092.21)\"\n                        />\n                        <Path\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.81}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3204.63h14.614v1101.41h-14.614z\"\n                            transform=\"matrix(-1.31781 .15716 -.1994 -.3998 19597.802 11047.898)\"\n                        />\n                    </G>\n                    <G>\n                        <Path fill=\"#fff\" fillOpacity={0.4} d=\"M16968.732 8697.914h2273.376v1111.677h-2273.376z\" />\n                    </G>\n                    <G>\n                        <Path\n                            fill=\"url(#prefix___Radial24)\"\n                            d=\"M22952.2 8435.28h1429.52v707.246H22952.2z\"\n                            transform=\"matrix(1.59031 0 0 1.57184 -19532.4 -4560.99)\"\n                        />\n                    </G>\n                </G>\n            </G>\n            <Defs>\n                <LinearGradient\n                    id=\"prefix___Linear2\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(1323.868) rotate(-48.234 5.87 -2.209)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear3\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2019.98) rotate(-48.234 3.706 -1.203)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear4\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2173.61) rotate(-48.234 3.415 -1.068)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear5\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 7345.403 -2188.287) scale(2362.04)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear6\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(982.411) rotate(-48.234 8.054 -3.223)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear7\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8019.154 -3350.118) scale(723.304)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear8\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8033.639 -3375.117) scale(688.047)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear9\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(656.966) rotate(-48.234 12.248 -5.171)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear10\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(569.632) rotate(-48.234 14.189 -6.072)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear11\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8109.595 -3506.09) scale(503.321)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <RadialGradient\n                    id=\"prefix___Radial24\"\n                    cx={0}\n                    cy={0}\n                    r={1}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"matrix(778.647 -360.127 670.211 418.392 23603 8795.41)\">\n                    <Stop offset={0} stopColor=\"#fff\" stopOpacity={0} />\n                    <Stop offset={1} stopColor=\"#fff\" />\n                </RadialGradient>\n            </Defs>\n        </Svg>\n    );\n}\n\nexport default SvgBackground;\n","import * as React from \"react\";\nimport Svg, {\n    Circle,\n    ClipPath,\n    Defs,\n    Ellipse,\n    G,\n    LinearGradient,\n    Path,\n    RadialGradient,\n    Stop,\n    SvgProps\n} from \"react-native-svg\";\n\n// tslint:disable-next-line:max-func-body-length\nfunction SvgBackgroundDark(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 2100 2100\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit={1.5}\n            {...props}>\n            <G transform=\"matrix(.92374 0 0 1.88904 -15674.56 -16430.71)\">\n                <Path fill=\"#0e0f23\" d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                <ClipPath id=\"prefix__a\">\n                    <Path d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                </ClipPath>\n                <G clipPath=\"url(#prefix__a)\">\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear2)\"\n                        strokeWidth={3}\n                        transform=\"matrix(1.08256 0 0 .52937 11950.485 6652.866)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear3)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.70103 0 0 .3428 14109.24 7569.495)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear4)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.65148 0 0 .31857 14389.612 7688.545)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear5)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.59951 0 0 .29316 14683.668 7813.402)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear6)\"\n                        strokeWidth={2.97}\n                        transform=\"matrix(1.45883 0 0 .71336 9821.49 5748.873)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear7)\"\n                        strokeWidth={1.09}\n                        transform=\"matrix(1.98142 0 0 .9689 6864.553 4493.326)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear8)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.08295 0 0 1.01856 6290.06 4249.393)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear9)\"\n                        strokeWidth={0.99}\n                        transform=\"matrix(2.1815 0 0 1.06675 5732.466 4012.633)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear10)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.51596 0 0 1.2303 3840.076 3209.103)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear11)\"\n                        strokeWidth={0.76}\n                        transform=\"matrix(2.84743 0 0 1.39238 1964.432 2412.72)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={2.98}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(1.02642 -.18032 .36875 .50192 -8192.387 8615.588)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.52195 -.0917 .18751 .25523 4129.043 8824.098)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.5544 .00739 .01511 -.2711 5758.093 11686.348)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.46928 .14454 -.29559 .22948 10245.833 3948.758)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(-.05308 -.52873 .90826 -.0218 11138.133 21929.848)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(1.04567 .13701 -.23536 .42952 -4115.147 2068.338)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(.28019 -.51133 .87836 .11509 4233.503 20687.448)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(.81456 -.34867 -.59895 -.33459 4984.583 20568.648)\"\n                    />\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\"\n                        />\n                        <G transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__b\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__b)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .23937 .4057 13752.838 7678.974)\"\n                        />\n                        <G transform=\"matrix(.5441 -.07676 .16282 .27595 15179.303 8147.075)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__c\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__c)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\"\n                        />\n                        <G transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__d\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__d)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .23684 .40605 13983.858 7907.01)\"\n                        />\n                        <G transform=\"matrix(.54457 -.07596 .1611 .27619 15407.406 8377.228)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__e\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__e)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\"\n                        />\n                        <G transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__f\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__f)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.143 .41641 14337.534 7060.022)\"\n                        />\n                        <G transform=\"matrix(.55847 .04586 -.09727 .28324 15209.655 7783.768)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__g\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__g)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\"\n                        />\n                        <G transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__h\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__h)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.17215 .44792 14309.713 6521.024)\"\n                        />\n                        <G transform=\"matrix(.60073 .0552 -.1171 .30467 15219.919 7311.01)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__i\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__i)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\"\n                        />\n                        <G transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__j\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__j)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2407 .4403 12950.42 7711.006)\"\n                        />\n                        <G transform=\"matrix(.59051 -.07719 .16372 .2995 14469.505 8230.993)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__k\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__k)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\"\n                        />\n                        <G transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__l\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__l)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.2057 .24809 17661.276 7556.892)\"\n                        />\n                        <G transform=\"matrix(.33273 .06596 -.1399 .16875 17997.348 8063.5)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__m\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__m)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5429.1 4921.27l-245.63-534.63c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l245.64 534.63-8.29 3.81z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={6.24}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(1.84616 .56078 -1.14678 .90277 13532.107 2379.001)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.34583 -.0828 .11398 -.44301 18137.519 11317.2)\"\n                        />\n                        <Path\n                            d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(-1.34583 -.0828 .1847 -.71786 17867.016 12368.54)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.73}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.34583 -.0828 .1111 -.43178 18148.57 11274.248)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.77}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.34583 -.0828 .1081 -.42012 18160.044 11229.655)\"\n                        />\n                        <Path\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.81}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3139.43h14.614v1166.61h-14.614z\"\n                            transform=\"matrix(-1.34583 -.0828 .10505 -.4083 18171.686 11184.4)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5300.61 5786.96c-.24-.17-.47-.35-.7-.53-17.41-13.86-4.09-63.98 30.06-114.74 1.44-2.13 7.58-10.81 9.18-12.95 35.31-47.46 76.53-76.3 96.18-67.31.9.41 1.75.9 2.55 1.47l125.89 89.04s2.73 2.01 3.31 2.57c15.89 15.44 1.4 66.2-33.58 116.88-.72 1.05-5.39 7.6-7 9.76-36.02 48.39-78.11 77.44-97.17 66.75-.47-.27-2.29-1.52-2.29-1.52l-126.43-89.42z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={11.5}\n                            transform=\"matrix(.99854 .20457 -.41815 .48829 15048.865 5342.07)\"\n                        />\n                        <Path\n                            d=\"M1040.64 697.661c0 22.723-51.581 41.17-115.115 41.17-63.534 0-115.116-18.447-115.116-41.17V546.583l.003.266c.4 22.6 51.827 40.904 115.113 40.904 63.534 0 115.115-18.448 115.115-41.17v151.078z\"\n                            fill=\"#0e0f23\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={5}\n                            transform=\"matrix(.9478 -.28962 .59237 .46355 16830.032 9233.44)\"\n                        />\n                        <Ellipse\n                            cx={925.525}\n                            cy={546.583}\n                            rx={115.115}\n                            ry={41.17}\n                            fill=\"#fff\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={5.19}\n                            transform=\"matrix(.9478 -.28962 .59487 .4655 16828.667 9232.372)\"\n                        />\n                        <G transform=\"matrix(.55592 -.16987 .26032 .2037 17374.22 9264.638)\">\n                            <Ellipse cx={925.525} cy={546.583} rx={115.115} ry={41.17} fill=\"#f14f9b\" />\n                            <Path\n                                d=\"M925.525 496.312c-45.853 0-85.627 9.645-105.389 23.272-11.22 7.737-16.547 17.689-16.547 26.999 0 9.311 5.327 19.262 16.547 26.999 19.762 13.627 59.536 23.272 105.389 23.272 45.852 0 85.625-9.645 105.385-23.272 11.22-7.737 16.55-17.688 16.55-26.999 0-9.31-5.33-19.262-16.55-26.999-19.76-13.627-59.533-23.272-105.385-23.272zm0 9.101c63.534 0 115.115 18.448 115.115 41.17s-51.581 41.17-115.115 41.17c-63.534 0-115.116-18.448-115.116-41.17s51.582-41.17 115.116-41.17z\"\n                                fill=\"#0e0f23\"\n                            />\n                        </G>\n                        <Path\n                            d=\"M11345.5 4849.24c37.3 20.18 78.8 24.3 118.1 24.29 39.4-.02 87.8-6.02 118.1-24.29\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={2.09}\n                            strokeLinejoin=\"round\"\n                            strokeDasharray=\"4.17,4.17,52.17,52.17\"\n                            transform=\"matrix(.79239 -.24213 .49524 .38754 6562.684 10128.41)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5418.56 4898.33l-235.09-511.69c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l235.1 511.69-8.29 3.81z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={6.24}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(2.13363 .20224 -.41358 1.04334 8845.74 3629.144)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.31781 .15716 -.21635 -.43379 19662.657 11177.932)\"\n                        />\n                        <Path\n                            d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(-1.31781 .15716 -.35058 -.70292 20176.097 12207.383)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.73}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.31781 .15716 -.21087 -.4228 19641.681 11135.875)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.77}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.31781 .15716 -.20518 -.41138 19619.904 11092.21)\"\n                        />\n                        <Path\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.81}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3204.63h14.614v1101.41h-14.614z\"\n                            transform=\"matrix(-1.31781 .15716 -.1994 -.3998 19597.802 11047.898)\"\n                        />\n                    </G>\n                    <G>\n                        <Path fill=\"#0e0f23\" fillOpacity={0.4} d=\"M16968.732 8697.914h2273.376v1111.677h-2273.376z\" />\n                    </G>\n                    <G>\n                        <Path\n                            fill=\"url(#prefix___Radial24)\"\n                            d=\"M22952.2 8435.28h1429.52v707.246H22952.2z\"\n                            transform=\"matrix(1.59031 0 0 1.57184 -19532.4 -4560.99)\"\n                        />\n                    </G>\n                </G>\n            </G>\n            <Defs>\n                <LinearGradient\n                    id=\"prefix___Linear2\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(1323.868) rotate(-48.234 5.87 -2.209)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear3\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2019.98) rotate(-48.234 3.706 -1.203)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear4\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2173.61) rotate(-48.234 3.415 -1.068)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear5\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 7345.403 -2188.287) scale(2362.04)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear6\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(982.411) rotate(-48.234 8.054 -3.223)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear7\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8019.154 -3350.118) scale(723.304)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear8\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8033.639 -3375.117) scale(688.047)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear9\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(656.966) rotate(-48.234 12.248 -5.171)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear10\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(569.632) rotate(-48.234 14.189 -6.072)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear11\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8109.595 -3506.09) scale(503.321)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <RadialGradient\n                    id=\"prefix___Radial24\"\n                    cx={0}\n                    cy={0}\n                    r={1}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"matrix(778.647 -360.127 670.211 418.392 23603 8795.41)\">\n                    <Stop offset={0} stopColor=\"#0e0f23\" stopOpacity={0} />\n                    <Stop offset={1} stopColor=\"#0e0f23\" />\n                </RadialGradient>\n            </Defs>\n        </Svg>\n    );\n}\n\nexport default SvgBackgroundDark;\n","import React, { useContext } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport SvgBackground from \"./svg/SvgBackground\";\nimport SvgBackgroundDark from \"./svg/SvgBackgroundDark\";\n\nconst BackgroundImage = ({ style }: { style?: ViewStyle }) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background } = useColors();\n    const props = {\n        width: 1920,\n        height: 1920\n    };\n    return (\n        <View\n            style={[\n                {\n                    position: \"absolute\",\n                    width: \"100%\",\n                    aspectRatio: 1,\n                    backgroundColor: background\n                },\n                style\n            ]}>\n            <View style={{ marginTop: -400, marginLeft: -1000, alignSelf: \"center\" }}>\n                {darkMode ? <SvgBackgroundDark {...props} /> : <SvgBackground {...props} />}\n            </View>\n        </View>\n    );\n};\n\nexport default BackgroundImage;\n","import { FACTORY_ADDRESS as SUSHISWAP_FACTORY } from \"@sushiswap/sdk\";\nimport { FACTORY_ADDRESS as UNISWAP_FACTORY } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { LP_TOKEN_SCANNER, MASTER_CHEF, ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport { ETH } from \"../constants/tokens\";\nimport { ALCHEMY_PROVIDER } from \"../context/EthersContext\";\nimport { Order, OrderStatus } from \"../hooks/useSDK\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { getContract } from \"./index\";\n\nexport const fetchTokens = async (account: string, customTokens?: Token[]) => {\n    const response = await fetch(\"https://lite.sushiswap.fi/tokens.json\");\n    const json = await response.json();\n    const tokens = [...json.tokens, ...(customTokens || [])];\n\n    const balances = await fetchTokenBalances(\n        account,\n        tokens.map(token => token.address)\n    );\n    return [\n        {\n            ...ETH,\n            balance: await ALCHEMY_PROVIDER.getBalance(account)\n        },\n        ...tokens.map((token, i) => ({\n            ...token,\n            balance: ethers.BigNumber.from(balances[i] || 0)\n        }))\n    ].sort((t1, t2) => {\n        return t2.balance\n            .sub(t1.balance)\n            .div(ethers.BigNumber.from(10).pow(10))\n            .toNumber();\n    });\n};\n\nexport const fetchPools = async (account: string, provider: ethers.providers.JsonRpcProvider) => {\n    const response = await fetch(\"https://lite.sushiswap.fi/pools.json\");\n    const pools = await response.json();\n    const balances = await fetchTokenBalances(\n        account,\n        pools.map(pool => pool.address)\n    );\n    return (await Promise.all(\n        pools.map(async (pool, i) => {\n            const poolToken = getContract(\"ERC20\", pool.address, provider);\n            const totalDeposited = await poolToken.balanceOf(MASTER_CHEF);\n            const masterChef = getContract(\"MasterChef\", MASTER_CHEF, provider);\n            const { amount: amountDeposited } = await masterChef.userInfo(i, account);\n            const pendingSushi = await masterChef.pendingSushi(i, account);\n            return {\n                ...pool,\n                id: i,\n                symbol: pool.tokenA.symbol + \"-\" + pool.tokenB.symbol + \" LP\",\n                balance: ethers.BigNumber.from(balances[i] || 0),\n                totalDeposited,\n                amountDeposited,\n                pendingSushi\n            };\n        })\n    )) as LPToken[];\n};\n\nexport const fetchMyLPTokens = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    return await fetchLPTokens(SUSHISWAP_FACTORY, account, tokens, provider);\n};\n\nexport const fetchMyUniswapLPTokens = async (\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    return await fetchLPTokens(UNISWAP_FACTORY, account, tokens, provider);\n};\n\nconst LP_TOKENS_LIMIT = 100;\n\n// tslint:disable-next-line:max-func-body-length\nconst fetchLPTokens = async (\n    factory: string,\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    const factoryContract = getContract(\"IUniswapV2Factory\", factory, provider);\n    const length = await factoryContract.allPairsLength();\n    const scanner = getContract(\"LPTokenScanner\", LP_TOKEN_SCANNER, provider);\n    const pages: number[] = [];\n    for (let i = 0; i < length; i += LP_TOKENS_LIMIT) pages.push(i);\n    const pairs = (\n        await Promise.all(\n            pages.map(page =>\n                scanner.findPairs(account, factory, page, Math.min(page + LP_TOKENS_LIMIT, length.toNumber()))\n            )\n        )\n    ).flat();\n    const balances = await fetchTokenBalances(\n        account,\n        pairs.map(pair => pair.token)\n    );\n    return await Promise.all(\n        pairs.map(async (pair, index) => {\n            const address = pair.token;\n            const balance = ethers.BigNumber.from(balances[index]);\n            const contract = getContract(\"IUniswapV2Pair\", address, provider);\n            const erc20 = getContract(\"ERC20\", address, provider);\n            const decimals = Number(await erc20.decimals());\n            const totalSupply = await erc20.totalSupply();\n            const tokenA = await findOrFetchToken(await contract.token0(), provider, tokens);\n            const tokenB = await findOrFetchToken(await contract.token1(), provider, tokens);\n            const name = tokenA.symbol + \"-\" + tokenB.symbol + \" LP Token\";\n            const symbol = tokenA.symbol + \"-\" + tokenB.symbol;\n            return { address, decimals, name, symbol, balance, totalSupply, tokenA, tokenB } as LPToken;\n        })\n    );\n};\n\nexport const findOrFetchToken = async (\n    address: string,\n    provider: ethers.providers.JsonRpcProvider,\n    tokens?: Token[]\n) => {\n    if (tokens) {\n        const token = tokens.find(t => t.address.toLowerCase() === address.toLowerCase());\n        if (token) {\n            return token;\n        }\n    }\n    let meta = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenMetadata\", [address]);\n    if (!meta.name || meta.symbol || meta.decimals || meta.logoURI) {\n        const erc20 = getContract(\"ERC20\", address, provider);\n        const data = await Promise.all([\"name\", \"symbol\", \"decimals\"].map(field => erc20.callStatic[field]()));\n        meta = {\n            name: data[0],\n            symbol: data[1],\n            decimals: data[2],\n            logoURI: \"\"\n        };\n    }\n    return {\n        address,\n        name: meta.name,\n        symbol: meta.symbol,\n        decimals: meta.decimals,\n        logoURI: meta.logo,\n        balance: ethers.constants.Zero\n    } as Token;\n};\n\nconst fetchTokenBalances = async (account: string, addresses: string[]) => {\n    const balances = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenBalances\", [account, addresses]);\n    return balances.tokenBalances.map(balance => balance.tokenBalance);\n};\n\nconst LIMIT_ORDERS_LIMIT = 20;\n\nexport const fetchMyLimitOrders = async (\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer,\n    kovanSigner: ethers.Signer,\n    tokens?: Token[],\n    canceledHashes?: string[]\n) => {\n    const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, provider);\n    const maker = await signer.getAddress();\n    const length = await orderBook.numberOfHashesOfMaker(maker);\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    const hashes = (await Promise.all(pages.map(page => orderBook.hashesOfMaker(maker, page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n    const myOrders = await Promise.all(\n        hashes.map(async hash => {\n            const args = await orderBook.orderOfHash(hash);\n            return new Order(\n                signer,\n                await findOrFetchToken(args.fromToken, provider, tokens),\n                await findOrFetchToken(args.toToken, provider, tokens),\n                args.amountIn,\n                args.amountOutMin,\n                args.recipient,\n                args.deadline,\n                args.v,\n                args.r,\n                args.s,\n                await settlement.filledAmountInOfHash(hash),\n                canceledHashes && canceledHashes.includes(hash)\n            );\n        })\n    );\n    return myOrders.sort(compareOrders) as Order[];\n};\n\nconst compareOrders = (o0, o1) => {\n    const status = (s: OrderStatus) => (s === \"Open\" ? 0 : s === \"Filled\" ? 1 : 2);\n    const compared = status(o0.status()) - status(o1.status());\n    return compared === 0 ? o1.deadline.toNumber() - o0.deadline.toNumber() : compared;\n};\n\nexport const fetchMyCanceledLimitOrderHashes = async (signer: ethers.providers.JsonRpcSigner) => {\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, signer);\n    const length = await settlement.numberOfCanceledHashesOfMaker(await signer.getAddress());\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    return (await Promise.all(pages.map(page => settlement.allCanceledHashes(page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n};\n","import { Fraction as SDKFraction } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\n\nclass Fraction {\n    static BASE = ethers.BigNumber.from(10).pow(18);\n    static NAN = new Fraction(ethers.constants.Zero, ethers.constants.Zero);\n    static ZERO = new Fraction(ethers.constants.Zero, ethers.constants.One);\n    static convert(sdk: SDKFraction) {\n        return new Fraction(\n            ethers.BigNumber.from(sdk.numerator.toString()),\n            ethers.BigNumber.from(sdk.denominator.toString())\n        );\n    }\n    static from(numerator: ethers.BigNumberish, denominator: ethers.BigNumberish) {\n        return new Fraction(ethers.BigNumber.from(numerator), ethers.BigNumber.from(denominator));\n    }\n    static fromTokens(\n        numerator: ethers.BigNumberish,\n        denominator: ethers.BigNumberish,\n        numeratorToken: Token,\n        denominatorToken: Token\n    ) {\n        return new Fraction(\n            ethers.BigNumber.from(numerator).mul(ethers.BigNumber.from(10).pow(denominatorToken.decimals)),\n            ethers.BigNumber.from(denominator).mul(ethers.BigNumber.from(10).pow(numeratorToken.decimals))\n        );\n    }\n    static parse(value: string) {\n        return value === \"\"\n            ? Fraction.NAN\n            : isEmptyValue(value)\n            ? Fraction.ZERO\n            : new Fraction(parseBalance(value, 18), Fraction.BASE);\n    }\n\n    numerator: ethers.BigNumber;\n    denominator: ethers.BigNumber;\n\n    private constructor(numerator: ethers.BigNumber, denominator: ethers.BigNumber) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n    }\n\n    isZero() {\n        return !this.isNaN() && this.numerator.isZero();\n    }\n\n    isNaN() {\n        return this.denominator.isZero();\n    }\n\n    eq(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .eq(this.denominator);\n    }\n\n    gt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .gt(this.denominator);\n    }\n\n    lt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .lt(this.denominator);\n    }\n\n    toString(maxFractions = 8) {\n        if (this.isNaN()) return \"\";\n        if (this.isZero()) return \"0\";\n        let str = formatBalance(this.numerator.mul(Fraction.BASE).div(this.denominator), 18, maxFractions);\n        if (str.endsWith(\".0\")) str = str.substring(0, str.length - 2);\n        return str;\n    }\n\n    apply(value: ethers.BigNumberish) {\n        return this.denominator.isZero() ? ethers.constants.Zero : this.numerator.mul(value).div(this.denominator);\n    }\n}\n\nexport default Fraction;\n","export const Colors = {\n    common: {\n        white: \"#ffffff\",\n        transparent: \"#ffffff00\",\n        primary: \"#FA52A0\",\n        secondary: \"#27B0E6\",\n        green: \"#32CD32\",\n        red: \"#FF0000\",\n        twitter: \"#1da1f2\",\n        facebook: \"#3B5998\"\n    },\n    light: {\n        accent: \"#FA52A0\",\n        header: \"#ffffffb8\",\n        submenu: \"transparent\",\n        background: \"#ffffff\",\n        backgroundLight: \"#f0f0f0\",\n        border: \"#e5e5e5\",\n        borderDark: \"#cccccc\",\n        textDark: \"#1d1d1f\",\n        textMedium: \"#222222\",\n        textLight: \"#888888\",\n        disabled: \"#b4b4b4\",\n        shadow: \"#444444\",\n        placeholder: \"#b4b4b4\",\n        overlay: \"#ffffffc0\"\n    },\n    dark: {\n        accent: \"#27B0E6\",\n        header: \"#0D0E20\",\n        submenu: \"transparent\",\n        background: \"#0e0f23\",\n        backgroundLight: \"#0D0E20\",\n        border: \"#ffffff33\",\n        borderDark: \"#666666\",\n        textDark: \"#d5d1cc\",\n        textMedium: \"#cccccc\",\n        textLight: \"#aaaaaa\",\n        disabled: \"#aaaaaa80\",\n        shadow: \"#03080c\",\n        placeholder: \"#666666\",\n        overlay: \"#000000c0\"\n    }\n};\n","import { useContext } from \"react\";\n\nimport { Colors } from \"../constants/colors\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useColors = () => {\n    const { darkMode } = useContext(GlobalContext);\n    return {\n        ...Colors[darkMode ? \"dark\" : \"light\"],\n        ...Colors.common\n    };\n};\n\nexport default useColors;\n","import OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\n\n// export const UNISWAP_ROUTER = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nexport const SUSHISWAP_ROUTER = \"0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\";\nexport const ROUTER = SUSHISWAP_ROUTER;\nexport const MASTER_CHEF = \"0xc2edad668740f1aa35e4d8f227fb8e17dca888cd\";\nexport const SUSHI_BAR = \"0x8798249c2e607446efb7ad49ec89dd1865ff4272\";\nexport const SUSHI_ROLL = \"0x16E58463eb9792Bc236d8860F5BC69A81E26E32B\";\nexport const LP_TOKEN_SCANNER = \"0xD132Ce8eA8865348Ac25E416d95ab1Ba84D216AF\";\nexport const ORDER_BOOK = OrderBook.address;\nexport const SETTLEMENT = Settlement.address;\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport * as Analytics from \"expo-firebase-analytics\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ETH } from \"../constants/tokens\";\nimport Ethereum from \"../types/Ethereum\";\nimport Token from \"../types/Token\";\nimport { getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport { fetchTokens } from \"../utils/fetch-utils\";\n\nexport type OnBlockListener = (block?: number) => void | Promise<void>;\n\nconst PRIVATE_KEY = \"0xca417c154948d370f011c5d9ac3fba516d7b15671a069e7d5d48f56b723c9cc1\";\nexport const ALCHEMY_PROVIDER = new ethers.providers.AlchemyProvider(\n    1,\n    __DEV__ ? process.env.MAINNET_API_KEY : \"DgnfFsj5PXR37FkOmUVJ9GtfDsKws446\"\n);\nconst KOVAN_PROVIDER = new ethers.providers.AlchemyProvider(\n    42,\n    __DEV__ ? process.env.KOVAN_API_KEY : \"8a03ORJJcIv8YA49M-cIxg-mBEMJYe0J\"\n);\n\nexport const EthersContext = React.createContext({\n    ethereum: undefined as Ethereum | undefined,\n    setEthereum: (_ethereum: Ethereum | undefined) => {},\n    provider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    signer: undefined as ethers.providers.JsonRpcSigner | undefined,\n    kovanSigner: undefined as ethers.Signer | undefined,\n    chainId: 0,\n    address: null as string | null,\n    ensName: null as string | null,\n    addOnBlockListener: (_name: string, _listener: OnBlockListener) => {},\n    removeOnBlockListener: (_name: string) => {},\n    tokens: [ETH] as Token[],\n    updateTokens: async () => {},\n    loadingTokens: false,\n    customTokens: [ETH] as Token[],\n    addCustomToken: (_token: Token) => {},\n    removeCustomToken: (_token: Token) => {},\n    approveToken: async (_token: string, _spender: string, _amount?: ethers.BigNumber) => {\n        return {} as ethers.providers.TransactionResponse | undefined;\n    },\n    getTokenAllowance: async (_token: string, _spender: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTokenBalance: async (_token: string, _who: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTotalSupply: async (_token: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    }\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const EthersContextProvider = ({ children }) => {\n    const [ethereum, setEthereum] = useState<Ethereum | undefined>(window.ethereum);\n    const [provider, setProvider] = useState<ethers.providers.JsonRpcProvider>();\n    const [signer, setSigner] = useState<ethers.providers.JsonRpcSigner>();\n    const [kovanSigner, setKovanSigner] = useState<ethers.Signer>();\n    const [chainId, setChainId] = useState<number>(1);\n    const [address, setAddress] = useState<string | null>(null);\n    const [ensName, setENSName] = useState<string | null>(null);\n    const [onBlockListeners, setOnBlockListeners] = useState<{ [name: string]: OnBlockListener }>({});\n    const [tokens, setTokens] = useState<Token[]>([]);\n    const [customTokens, setCustomTokens] = useState<Token[]>([]);\n    const [loadingTokens, setLoadingTokens] = useState(true);\n\n    useEffect(() => {\n        // Kovan\n        setKovanSigner(new ethers.Wallet(PRIVATE_KEY, KOVAN_PROVIDER));\n    }, [KOVAN_PROVIDER]);\n\n    useAsyncEffect(async () => {\n        // Mainnet\n        if (ethereum) {\n            const web3 = new ethers.providers.Web3Provider(ethereum);\n            const web3Signer = await web3.getSigner();\n            setProvider(ethereum.isMetaMask ? web3Signer.provider : ALCHEMY_PROVIDER);\n            setSigner(web3Signer);\n        }\n    }, [ethereum]);\n\n    useEffect(() => {\n        if (ethereum) {\n            const onAccountsChanged = async () => {\n                const accounts = await ethereum.request({ method: \"eth_accounts\" });\n                if (accounts?.[0]) {\n                    setAddress(accounts[0]);\n                    Analytics.setUserId(accounts[0]);\n                } else {\n                    setAddress(null);\n                }\n            };\n            const onChainChanged = async () => {\n                setChainId(Number(await ethereum.request({ method: \"eth_chainId\" })));\n            };\n            const onDisconnect = () => {\n                setAddress(null);\n                setEthereum(undefined);\n            };\n            onAccountsChanged();\n            onChainChanged();\n            ethereum.on(\"accountsChanged\", onAccountsChanged);\n            ethereum.on(\"chainChanged\", onChainChanged);\n            ethereum.on(\"disconnect\", onDisconnect);\n            return () => {\n                ethereum.off(\"accountsChanged\", onAccountsChanged);\n                ethereum.off(\"chainChanged\", onAccountsChanged);\n                ethereum.off(\"disconnect\", onDisconnect);\n            };\n        }\n    }, [ethereum]);\n\n    useAsyncEffect(async () => {\n        if (provider && address) {\n            const ens = await provider.lookupAddress(address);\n            setENSName(ens);\n        }\n    }, [provider, address]);\n\n    const updateTokens = async () => {\n        if (address && customTokens) {\n            try {\n                const data = await fetchTokens(address, customTokens);\n                if (data) {\n                    await setTokens(data);\n                }\n            } finally {\n                setLoadingTokens(false);\n            }\n        }\n    };\n\n    useAsyncEffect(async () => {\n        setCustomTokens(JSON.parse((await AsyncStorage.getItem(\"custom_tokens\")) || \"[]\"));\n    }, []);\n\n    useAsyncEffect(async () => {\n        if (address && customTokens) {\n            setLoadingTokens(true);\n            await updateTokens();\n        }\n    }, [address, customTokens]);\n\n    const addCustomToken = useCallback(\n        async (token: Token) => {\n            if (\n                customTokens.findIndex(t => t.address === token.address) === -1 &&\n                tokens.findIndex(t => t.address === token.address) === -1\n            ) {\n                const custom = [...customTokens, token];\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [tokens, customTokens]\n    );\n\n    const removeCustomToken = useCallback(\n        async (token: Token) => {\n            if (customTokens.findIndex(t => t.address === token.address) !== -1) {\n                const custom = customTokens.filter(t => t.address !== token.address);\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [customTokens]\n    );\n\n    const approveToken = useCallback(\n        async (token: string, spender: string, amount?: ethers.BigNumber) => {\n            if (signer) {\n                amount = amount || ethers.constants.MaxUint256;\n                const erc20 = getContract(\"ERC20\", token, signer);\n                const gasLimit = await erc20.estimateGas.approve(spender, amount);\n                const tx = await erc20.approve(spender, amount, {\n                    gasLimit\n                });\n                return await logTransaction(tx, \"ERC20.approve()\", spender, amount.toString());\n            }\n        },\n        [signer]\n    );\n\n    const getTokenAllowance = useCallback(\n        async (token: string, spender: string) => {\n            if (address) {\n                return await ALCHEMY_PROVIDER.send(\"alchemy_getTokenAllowance\", [\n                    {\n                        contract: token,\n                        owner: address,\n                        spender\n                    }\n                ]);\n            }\n        },\n        [address]\n    );\n\n    const getTokenBalance = useCallback(\n        async (token: string, who: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.balanceOf(who);\n            }\n        },\n        [provider]\n    );\n\n    const getTotalSupply = useCallback(\n        async (token: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.totalSupply();\n            }\n        },\n        [provider]\n    );\n\n    const addOnBlockListener = useCallback(\n        (name, listener) => {\n            setOnBlockListeners(old => ({ ...old, [name]: listener }));\n        },\n        [setOnBlockListeners]\n    );\n\n    const removeOnBlockListener = useCallback(\n        name => {\n            setOnBlockListeners(old => {\n                delete old[name];\n                return old;\n            });\n        },\n        [setOnBlockListeners]\n    );\n\n    useEffect(() => {\n        if (provider && chainId === 1) {\n            const onBlock = async (block: number) => {\n                for (const listener of Object.entries(onBlockListeners)) {\n                    await listener[1]?.(block);\n                }\n            };\n            provider.on(\"block\", onBlock);\n            return () => {\n                provider.off(\"block\", onBlock);\n            };\n        }\n    }, [provider, chainId, onBlockListeners]);\n\n    return (\n        <EthersContext.Provider\n            value={{\n                ethereum,\n                setEthereum,\n                provider,\n                signer,\n                kovanSigner,\n                chainId,\n                address,\n                ensName,\n                tokens,\n                updateTokens,\n                loadingTokens,\n                customTokens,\n                addCustomToken,\n                removeCustomToken,\n                approveToken,\n                getTokenAllowance,\n                getTokenBalance,\n                getTotalSupply,\n                addOnBlockListener,\n                removeOnBlockListener\n            }}>\n            {children}\n        </EthersContext.Provider>\n    );\n};\n\nexport const EthersContextConsumer = EthersContext.Consumer;\n","import * as Analytics from \"expo-firebase-analytics\";\n\nimport { ethers } from \"ethers\";\n\nexport const logTransaction = async (\n    tx: ethers.providers.TransactionResponse,\n    name: string,\n    ...args: any[]\n): Promise<ethers.providers.TransactionResponse> => {\n    await Analytics.logEvent(\"tx:\" + name, {\n        args: args || [],\n        hash: tx.hash,\n        value: tx.value.toString(),\n        gasLimit: tx.gasLimit.toString(),\n        gasPrice: tx.gasPrice.toString(),\n        chainId: tx.chainId\n    });\n    return tx;\n};\n","import React, { useState } from \"react\";\nimport { useColorScheme } from \"react-native-appearance\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nexport const GlobalContext = React.createContext({\n    load: async () => {},\n    clear: async () => {},\n    darkMode: false,\n    setDarkMode: async _darkMode => {},\n    mnemonic: \"\",\n    setMnemonic: (_mnemonic: string) => {}\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const GlobalContextProvider = ({ children }) => {\n    const colorScheme = useColorScheme();\n    const [darkMode, setDarkMode] = useState(colorScheme === \"dark\");\n    const [mnemonic, setMnemonic] = useState(\"\");\n    return (\n        <GlobalContext.Provider\n            value={{\n                load: async () => {\n                    const mode = await AsyncStorage.getItem(\"dark_mode\");\n                    setDarkMode(mode === \"true\");\n                    const mne = await AsyncStorage.getItem(\"mnemonic\");\n                    if (mne) {\n                        setMnemonic(mne);\n                    }\n                },\n                clear: async () => {\n                    setDarkMode(false);\n                    await AsyncStorage.removeItem(\"dark_mode\");\n                    await AsyncStorage.removeItem(\"mnemonic\");\n                },\n                darkMode,\n                setDarkMode: async (mode: boolean) => {\n                    await AsyncStorage.setItem(\"dark_mode\", String(mode));\n                    setDarkMode(mode);\n                },\n                mnemonic,\n                setMnemonic: async (mne: string) => {\n                    await AsyncStorage.setItem(\"mnemonic\", mne);\n                    setMnemonic(mne);\n                }\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const GlobalContextConsumer = GlobalContext.Consumer;\n","import React from \"react\";\n\nimport { EthersContextConsumer, EthersContextProvider } from \"./EthersContext\";\nimport { GlobalContextConsumer, GlobalContextProvider } from \"./GlobalContext\";\n\nexport const ContextProvider = ({ children }) => {\n    return (\n        <GlobalContextProvider>\n            <EthersContextProvider>{children}</EthersContextProvider>\n        </GlobalContextProvider>\n    );\n};\n\nexport const ContextConsumer = ({ children }) => {\n    return (\n        <GlobalContextConsumer>\n            {globalContext => (\n                <EthersContextConsumer>\n                    {ethersContext =>\n                        children({\n                            ...globalContext,\n                            ...ethersContext\n                        })\n                    }\n                </EthersContextConsumer>\n            )}\n        </GlobalContextConsumer>\n    );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { View } from \"react-native\";\n\nimport Switch from \"expo-dark-mode-switch\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst DarkModeSwitch = props => {\n    const { darkMode, setDarkMode } = useContext(GlobalContext);\n    const onChange = useCallback(\n        async dark => {\n            await setDarkMode(dark);\n        },\n        [setDarkMode]\n    );\n    return (\n        <View style={props.style}>\n            <Switch\n                value={darkMode}\n                onChange={onChange}\n                style={{\n                    transform: [\n                        {\n                            scale: 0.75\n                        }\n                    ]\n                }}\n            />\n        </View>\n    );\n};\n\nexport default DarkModeSwitch;\n","import React, { useContext } from \"react\";\nimport { TouchableWithoutFeedback, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport Modal from \"modal-react-native-web\";\nimport { Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport useColors from \"../../hooks/useColors\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nconst MobileWebMenu = ({ expanded, onCollapse }) => {\n    const { overlay } = useColors();\n    return (\n        <Modal animationType=\"slide\" transparent={true} visible={expanded}>\n            <TouchableWithoutFeedback style={{ height: \"100%\" }} onPress={onCollapse}>\n                <View\n                    style={{\n                        height: \"100%\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"flex-end\",\n                        paddingRight: Spacing.normal,\n                        paddingBottom: Spacing.normal,\n                        backgroundColor: overlay\n                    }}>\n                    <FlexView style={{ marginTop: Spacing.small }}>\n                        <DarkModeSwitch style={{ marginTop: -2 }} />\n                        <CloseButton onPress={onCollapse} />\n                    </FlexView>\n                    <View style={{ alignItems: \"flex-end\" }}>\n                        <Status />\n                        <View style={{ height: Spacing.large }} />\n                        <MobileWebMenuItem title={\"Swap\"} path={\"/swap\"} />\n                        <MobileWebMenuItem title={\"Liquidity\"} path={\"/liquidity\"} />\n                        <MobileWebMenuItem title={\"Migrate\"} path={\"/migrate\"} />\n                        {/*<MobileWebMenuItem title={\"Farming\"} path={\"/farming\"} />*/}\n                        <MobileWebMenuItem title={\"Staking\"} path={\"/staking\"} />\n                    </View>\n                </View>\n            </TouchableWithoutFeedback>\n        </Modal>\n    );\n};\n\nconst CloseButton = ({ onPress }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={textDark} size={32} onPress={onPress} />;\n};\n\nconst MobileWebMenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ textDecoration: \"none\", marginBottom: Spacing.tiny }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 24,\n                    color: active ? textDark : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst Status = () => {\n    const { textLight, green, accent } = useColors();\n    const { ethereum, chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : \"Not connected\";\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        ethereum?.disconnect?.();\n    };\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.tiny }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginTop: 8 }} />\n                <Text style={{ fontSize: 18, color: textLight, marginLeft: 8 }}>{title}</Text>\n            </FlexView>\n            {ethereum?.isWalletConnect && (\n                <Text\n                    style={{\n                        fontFamily: \"regular\",\n                        fontSize: 15,\n                        color: accent,\n                        alignSelf: \"flex-end\"\n                    }}\n                    onPress={onPress}>\n                    Disconnect\n                </Text>\n            )}\n        </View>\n    );\n};\n\nexport default MobileWebMenu;\n","import * as React from \"react\";\nimport Svg, { Path, SvgProps } from \"react-native-svg\";\n\nfunction SvgLogo(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 76 68\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={1.5}\n            {...props}>\n            <Path fill=\"none\" d=\"M-.005.004h75.412V67.5H-.005z\" />\n            <Path\n                d=\"M17555.2 7266.44c13.9-19.4 61.1-9.44 105.3 22.23 44.2 31.67 68.8 73.13 54.9 92.53l-42.6 59.38c-13.9 19.41-61 9.45-105.2-22.22-44.2-31.67-68.8-73.14-54.9-92.54l42.5-59.38z\"\n                fill=\"none\"\n                stroke=\"#fff\"\n                strokeWidth={14}\n                transform=\"matrix(.26772 0 0 .26772 -4678.27 -1934.9)\"\n            />\n            <Path\n                d=\"M17550.4 7275.75c13.9-19.4 61-9.44 105.2 22.22 44.2 31.67 68.8 73.14 54.9 92.54l-42.5 59.38c-13.9 19.4-61.1 9.44-105.3-22.23-44.2-31.67-68.8-73.13-54.9-92.53l42.6-59.38z\"\n                fill=\"#fff\"\n                stroke=\"#fff\"\n                strokeWidth={4.91}\n                transform=\"matrix(.26772 0 0 .26772 -4676.962 -1937.14)\"\n            />\n            <Path\n                d=\"M20.767 9.743v-.002c1.633-2.31 4.846-3.336 8.995-2.996 5.703.471 13.28 3.512 20.534 8.722 7.282 5.21 12.583 11.402 14.859 16.658 1.66 3.804 1.713 7.169.053 9.48v-.003.002L53.83 57.501c-1.66 2.31-4.872 3.336-8.995 2.996-5.702-.471-13.279-3.512-20.56-8.722-7.256-5.207-12.583-11.4-14.859-16.655-1.66-3.807-1.713-7.17-.053-9.482L20.767 9.74v.002zm24.71 31.819L28.13 52.024c.804.506 1.607.982 2.383 1.432l17.803-10.74a43.599 43.599 0 01-2.838-1.154zm-6.639-3.556l-16.41 9.9c.749.6 1.498 1.19 2.301 1.77l16.76-10.117a54.471 54.471 0 01-2.651-1.553zm-3.453-2.329C28.263 30.51 23.07 24.41 20.82 19.221c-.696-1.588-1.098-3.1-1.232-4.49l-8.647 12.047c-1.312 1.845-1.044 4.525.268 7.563 1.499 3.435 4.364 7.274 8.245 10.95l15.93-9.614zm28.244 4.79c1.311-1.845 1.07-4.527-.268-7.566-2.169-5.009-7.282-10.88-14.19-15.846-6.933-4.964-14.135-7.911-19.57-8.361-3.319-.273-5.942.343-7.254 2.187l-.08.11c-1.232 1.842-.964 4.476.32 7.453 2.196 5.012 7.283 10.883 14.216 15.85 6.934 4.965 14.136 7.913 19.57 8.36 3.24.268 5.837-.316 7.175-2.078l.08-.11zM45.933 21.563c3.48 2.485 6.023 5.416 7.12 7.925.617 1.413.777 2.658.161 3.515-.615.859-1.847 1.1-3.373.974-2.73-.225-6.345-1.708-9.798-4.195-3.48-2.484-6.024-5.416-7.121-7.922-.616-1.413-.777-2.658-.161-3.517.616-.86 1.847-1.1 3.373-.972 2.73.225 6.318 1.708 9.799 4.192z\"\n                fill=\"#191932\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgLogo;\n","import React, { FC, useContext } from \"react\";\nimport { TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_HEIGHT, HEADER_WIDTH, IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport SvgLogo from \"../svg/SvgLogo\";\nimport Text from \"../Text\";\n\nexport interface WebHeaderProps {\n    onExpandMenu?: () => void;\n}\n\nconst WebHeader: FC<WebHeaderProps> = props => {\n    const { header, borderDark } = useColors();\n    return (\n        <View\n            // @ts-ignore\n            style={{\n                position: \"fixed\",\n                top: 0,\n                zIndex: 100,\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                paddingBottom: Spacing.small,\n                backgroundColor: header,\n                borderBottomWidth: 1,\n                borderColor: borderDark\n            }}>\n            <FlexView\n                style={{\n                    flex: 1,\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    alignSelf: \"center\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"flex-end\",\n                    paddingTop: Spacing.small,\n                    paddingHorizontal: Spacing.normal\n                }}>\n                <Title />\n                {IS_DESKTOP ? <Menu /> : <MenuIcon onExpand={props.onExpandMenu} />}\n            </FlexView>\n        </View>\n    );\n};\n\nexport const Title = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { textDark, white } = useColors();\n    const color = darkMode ? white : textDark;\n    return (\n        <FlexView style={{ alignSelf: \"center\", alignItems: \"center\" }}>\n            <SvgLogo width={36} height={36} style={{ marginRight: 4 }} />\n            <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\n                <Text style={{ fontSize: 28, color }}>SushiSwap</Text>\n            </Link>\n        </FlexView>\n    );\n};\n\nconst Menu = () => {\n    return (\n        <FlexView\n            style={{\n                height: \"100%\",\n                alignItems: \"flex-end\"\n            }}>\n            <MenuItem title={\"Swap\"} path={\"/swap\"} />\n            <MenuItem title={\"Liquidity\"} path={\"/liquidity\"} />\n            <MenuItem title={\"Migrate\"} path={\"/migrate\"} />\n            {/*<MenuItem title={\"Farming\"} path={\"/farming\"} />*/}\n            <MenuItem title={\"Stake\"} path={\"/staking\"} />\n            <Status />\n            <DarkModeSwitch style={{ marginLeft: Spacing.tiny, marginRight: -8, marginBottom: -3 }} />\n        </FlexView>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ marginLeft: Spacing.tiny, textDecoration: \"none\" }}>\n            <Text style={{ fontFamily: \"regular\", fontSize: 18, color: active ? textDark : textLight, padding: 3 }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst MenuIcon = ({ onExpand }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"menu\"} size={28} color={textDark} onPress={onExpand} />;\n};\n\nconst Status = () => {\n    const { textLight, green, borderDark } = useColors();\n    const { ethereum, chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : \"Not connected\";\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        if (confirm(\"Do you want to disconnect?\")) ethereum?.disconnect?.();\n    };\n    return (\n        <TouchableHighlight onPress={onPress} disabled={!ethereum?.isWalletConnect}>\n            <FlexView\n                style={{\n                    height: 28,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    marginLeft: Spacing.small,\n                    paddingHorizontal: Spacing.small,\n                    borderRadius: 16,\n                    borderWidth: 1,\n                    borderColor: borderDark\n                }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginRight: 12 }} />\n                <Text style={{ fontSize: 15, color: textLight, marginRight: 2 }}>{title}</Text>\n                {ethereum?.isWalletConnect && <CloseIcon />}\n            </FlexView>\n        </TouchableHighlight>\n    );\n};\n\nconst CloseIcon = () => {\n    const { textLight } = useColors();\n    return (\n        <Icon\n            type={\"material-community\"}\n            name={\"close\"}\n            size={15}\n            color={textLight}\n            style={{ paddingLeft: 2, paddingTop: 2 }}\n        />\n    );\n};\n\nexport default WebHeader;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport Title from \"../components/Title\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport WebSubMenu from \"../components/web/WebSubMenu\";\nimport useColors from \"../hooks/useColors\";\nimport Screen from \"./Screen\";\n\nconst EmptyScreen = () => {\n    const { background } = useColors();\n    return (\n        <View style={{ width: \"100%\", height: \"100%\", backgroundColor: background }}>\n            <Screen>\n                <Container>\n                    <BackgroundImage />\n                    <Content>\n                        <Title text={\"Loading...\"} />\n                    </Content>\n                    <WebHeader />\n                </Container>\n                <WebSubMenu items={[]} />\n            </Screen>\n        </View>\n    );\n};\n\nexport default EmptyScreen;\n","import React, { lazy, Suspense, useContext, useEffect, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { DefaultTheme, NavigationContainer, Theme } from \"@react-navigation/native\";\nimport useAsyncEffect from \"use-async-effect\";\nimport MobileWebMenu from \"../components/web/MobileWebMenu\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport EmptyScreen from \"./EmptyScreen\";\n\nconst FarmingScreen = lazy(() => import(\"./FarmingScreen\"));\nconst LiquidityScreen = lazy(() => import(\"./LiquidityScreen\"));\nconst MigrateScreen = lazy(() => import(\"./MigrateScreen\"));\nconst MyLimitOrdersScreen = lazy(() => import(\"./MyLimitOrdersScreen\"));\nconst RemoveLiquidityScreen = lazy(() => import(\"./RemoveLiquidityScreen\"));\nconst StakeScreen = lazy(() => import(\"./StakeScreen\"));\nconst UnstakeScreen = lazy(() => import(\"./UnstakeScreen\"));\nconst SwapScreen = lazy(() => import(\"./SwapScreen\"));\n\nexport const Screens = () => {\n    const { load } = useContext(GlobalContext);\n    useAsyncEffect(load, []);\n    return Platform.OS === \"web\" ? <WebScreens /> : <AppScreens />;\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst WebScreens = () => {\n    const { address } = useContext(EthersContext);\n    const [menuExpanded, setMenuExpanded] = useState(false);\n    const { background } = useColors();\n    useEffect(() => {\n        if (!address) setMenuExpanded(false);\n    }, [address]);\n    return (\n        <Router>\n            <Suspense fallback={<EmptyScreen />}>\n                <View style={{ flex: 1, backgroundColor: background }}>\n                    <Switch>\n                        <Route path={\"/swap/my-orders\"}>\n                            <MyLimitOrdersScreen />\n                        </Route>\n                        <Route path={\"/swap\"}>\n                            <SwapScreen />\n                        </Route>\n                        <Route path={\"/liquidity/migrate\"}>\n                            <Redirect to={\"/migrate\"} />\n                        </Route>\n                        <Route path={\"/liquidity/remove\"}>\n                            <RemoveLiquidityScreen />\n                        </Route>\n                        <Route path={\"/liquidity\"}>\n                            <LiquidityScreen />\n                        </Route>\n                        {/*<Route path={\"/farming\"}>*/}\n                        {/*    <FarmingScreen />*/}\n                        {/*</Route>*/}\n                        <Route path={\"/migrate\"}>\n                            <MigrateScreen />\n                        </Route>\n                        <Route path={\"/staking/unstake\"}>\n                            <UnstakeScreen />\n                        </Route>\n                        <Route path={\"/staking\"}>\n                            <StakeScreen />\n                        </Route>\n                        <Redirect to={\"/swap\"} />\n                    </Switch>\n                    <WebHeader onExpandMenu={() => setMenuExpanded(true)} />\n                    {!IS_DESKTOP && <MobileWebMenu expanded={menuExpanded} onCollapse={() => setMenuExpanded(false)} />}\n                </View>\n            </Suspense>\n        </Router>\n    );\n};\n\nconst Tab = createBottomTabNavigator();\n\nconst AppScreens = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary, accent, background, border, textDark, disabled } = useColors();\n    const theme: Theme = {\n        ...DefaultTheme,\n        dark: darkMode,\n        colors: {\n            primary,\n            background,\n            border,\n            card: background,\n            notification: background,\n            text: textDark\n        }\n    };\n    return (\n        <NavigationContainer theme={theme}>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: accent,\n                    inactiveTintColor: disabled,\n                    labelStyle: { marginBottom: 4 }\n                }}>\n                <Tab.Screen name=\"Home\" component={SwapScreen} options={tabOptions(\"home\")} />\n                <Tab.Screen name=\"Liquidity\" component={LiquidityScreen} options={tabOptions(\"water\")} />\n                <Tab.Screen name=\"Farming\" component={FarmingScreen} options={tabOptions(\"leaf\")} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n};\n\nconst tabOptions = iconName => ({\n    tabBarIcon: ({ color }) => <Icon type={\"material-community\"} name={iconName} color={color} />\n});\n","/* tslint:disable:ordered-imports */\nimport \"./globals\";\nimport React from \"react\";\n\nimport { OpenSans_300Light, OpenSans_400Regular, OpenSans_600SemiBold } from \"@expo-google-fonts/open-sans\";\nimport { AppLoading } from \"expo\";\nimport { useFonts } from \"expo-font\";\n\nimport { ContextProvider } from \"./src/context\";\nimport { Screens } from \"./src/screens\";\nimport { YellowBox } from \"react-native\";\n\nif (__DEV__) {\n    YellowBox.ignoreWarnings([\"Setting a timer\", \"VirtualizedLists should never be nested\"]);\n}\n\nconst App = () => {\n    const [fontsLoaded] = useFonts({\n        light: OpenSans_300Light,\n        regular: OpenSans_400Regular,\n        bold: OpenSans_600SemiBold\n    });\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    }\n    return (\n        <ContextProvider>\n            <Screens />\n        </ContextProvider>\n    );\n};\n\nexport default App;\n","global.Buffer = require('buffer').Buffer;\n","import React, { FC } from \"react\";\nimport { Text as NativeText, TextProps as NativeTextProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface TextProps extends NativeTextProps {\n    note?: boolean;\n    caption?: boolean;\n    dark?: boolean;\n    medium?: boolean;\n    light?: boolean;\n    disabled?: boolean;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\nconst Text: FC<TextProps> = props => {\n    const { textDark, textMedium, textLight, placeholder } = useColors();\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = props.disabled\n        ? placeholder\n        : props.medium\n        ? textMedium\n        : props.note || props.light\n        ? textLight\n        : textDark;\n    return (\n        <NativeText\n            {...props}\n            h1Style={[{ fontFamily }, props.h1Style]}\n            h2Style={[{ fontFamily }, props.h2Style]}\n            h3Style={[{ fontFamily }, props.h3Style]}\n            h4Style={[{ fontFamily }, props.h4Style]}\n            style={[\n                {\n                    fontFamily,\n                    fontSize: props.note ? 13 : props.caption ? 18 : 15,\n                    color\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Text;\n"],"sourceRoot":""}