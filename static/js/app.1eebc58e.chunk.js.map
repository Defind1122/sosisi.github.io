{"version":3,"sources":["src/utils/analytics-utils.ts","assets/metamask-dark.png","assets/metamask.png","assets/sushiswap.jpg","src/components/FlexView.tsx","src/constants/tokens.ts","src/constants/dimension.ts","src/components/Button.tsx","src/utils/getContract.ts","src/utils/index.ts","src/hooks/useStyles.tsx","src/components/Container.tsx","src/components/Content.tsx","src/components/Title.tsx","src/components/svg/SvgBackgroundDark.tsx","src/components/svg/SvgBackgroundLight.tsx","src/components/BackgroundImage.tsx","src/components/app/AppHeader.tsx","src/components/web/ConnectToWallet.tsx","src/screens/Screen.tsx","src/components/web/WebSubMenu.tsx","src/utils/fetch-utils.ts","src/constants/Fraction.ts","src/hooks/useSwapRouter.tsx","src/constants/colors.ts","src/hooks/useColors.tsx","src/hooks/useSettlement.tsx","src/context/GlobalContext.tsx","src/context/EthersContext.tsx","src/constants/contracts.ts","src/context/index.tsx","src/components/svg/SvgMoon.tsx","src/components/svg/SvgSun.tsx","src/components/DarkModeSwitch.tsx","src/components/web/MobileWebMenu.tsx","src/components/svg/SvgLogo.tsx","src/components/web/WebHeader.tsx","src/screens/EmptyScreen.tsx","src/screens/index.tsx","App.tsx","src/components/Text.tsx","globals.js"],"names":["logTransaction","tx","name","a","async","args","Analytics","hash","value","toString","gasLimit","gasPrice","chainId","module","exports","FlexView","props","flexDirection","direction","style","ETH","address","ethers","constants","AddressZero","decimals","symbol","logoURI","balance","BigNumber","from","SCREEN_WIDTH","Math","round","Dimensions","get","width","SCREEN_HEIGHT","height","HEADER_HEIGHT","HEADER_WIDTH","DESKTOP_CONTENT_WIDTH","SUB_MENU_HEIGHT","IS_DESKTOP","Spacing","tiny","small","normal","large","huge","Button","useColors","accent","textMedium","placeholder","backgroundLight","type","size","fontSize","fontFamily","fontWeight","color","disabled","loading","onPress","undefined","loadingProps","buttonStyle","paddingHorizontal","backgroundColor","borderColor","titleStyle","disabledTitleStyle","disabledStyle","CONTRACTS","ERC20","IUniswapV2Factory","IUniswapV2Pair","IUniswapV2Router02","IWETH","MasterChef","SushiBar","SushiRoll","OrderBook","Settlement","LPTokenScanner","abi","ZapIn","ZapOut","getContract","signerOrProvider","contract","Contract","formatUSD","maxFraction","formatter","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","formatted","String","split","length","substr","formatBalance","utils","formatUnits","parseBalance","parseUnits","isEmptyValue","text","isBigNumber","isZero","replace","isETH","token","toLowerCase","isWETH","WETH","isETHWETHPair","fromToken","toToken","convertToken","SDKToken","ChainId","MAINNET","convertAmount","amount","TokenAmount","parseCurrencyAmount","toExact","deduct","percent","sub","mul","numerator","div","denominator","pow10","exp","pow","useStyles","shadowColor","shadow","borderDark","border","useCallback","attrs","borderWidth","borderRadius","radius","padding","elevation","shadowOffset","shadowOpacity","shadowRadius","overflow","Container","Platform","select","web","contentContainerStyle","flex","default","Content","darkMode","useContext","GlobalContext","background","marginLeft","marginRight","marginTop","marginBottom","Title","SvgBackgroundDark","viewBox","fillRule","clipRule","strokeLinecap","strokeMiterlimit","transform","fill","d","id","clipPath","cx","cy","r","stroke","strokeWidth","strokeLinejoin","rx","ry","strokeDasharray","fillOpacity","x1","y1","x2","y2","gradientUnits","gradientTransform","offset","stopColor","stopOpacity","SvgBackgroundLight","BackgroundImage","View","position","aspectRatio","alignSelf","AppHeader","StatusBar","translucent","ConnectButton","primary","setEthereum","EthersContext","metaMask","window","ethereum","isMetaMask","request","method","alert","title","containerStyle","marginHorizontal","WalletConnectButton","WalletConnectProvider","rpc","1","enable","ConnectWallet","source","require","alignItems","justifyContent","Image","WebScreen","Text","light","textAlign","top","right","bottom","left","ConnectToWallet","AppScreen","Screen","SwapSubMenu","WebSubMenu","items","path","LiquiditySubMenu","MigrateSubMenu","StakingSubMenu","FarmingSubMenu","submenu","map","item","MenuItem","key","textLight","match","useRouteMatch","active","isExact","to","paddingTop","paddingBottom","textDecoration","fetchTokens","account","customTokens","fetch","response","json","tokens","fetchTokenBalances","balances","ALCHEMY_PROVIDER","getBalance","i","sort","t1","t2","toNumber","fetchPools","provider","sushiData","sushi","info","masterchef","masterchefInfo","pools","pool","poolId","reduce","sushiPerBlock","floor","allocPoint","totalAllocPoint","pair","fetchPool","slpBalance","Promise","all","fetchStakedValue","fetchPairTokens","result","apy","calcAPY","derivedETH","totalValueETH","totalSupply","tokenA","tokenB","sushiRewardedPerYear","calcSushiRewardedPerYear","totalValueUSD","multiplier","filter","fetchMyPools","fetchMyPool","fetchMyStake","myStake","amountDeposited","Zero","pendingSushi","lpToken","stakedValue","masterChef","MASTER_CHEF","userInfo","findOrFetchToken","token0","token1","fetchMyLPTokens","fetchLPTokens","SUSHISWAP_FACTORY","fetchMyUniswapLPTokens","UNISWAP_FACTORY","factory","factoryContract","allPairsLength","scanner","LP_TOKEN_SCANNER","pages","push","page","findPairs","min","pairs","flat","index","erc20","Number","find","t","send","meta","fetchTokenMeta","logo","field","callStatic","e","data","addresses","tokenBalances","tokenBalance","fetchMyLimitOrders","signer","kovanSigner","canceledHashes","orderBook","ORDER_BOOK","SETTLEMENT","settlement","getAddress","maker","numberOfHashesOfMaker","hashesOfMaker","hashes","HashZero","orderOfHash","Order","amountIn","amountOutMin","recipient","deadline","v","s","filledAmountInOfHash","includes","myOrders","compareOrders","o0","o1","status","compared","fetchMyCanceledLimitOrderHashes","numberOfCanceledHashesOfMaker","allCanceledHashes","Fraction","this","sdk","numeratorToken","denominatorToken","NAN","ZERO","BASE","isNaN","fraction","eq","gt","lt","maxFractions","str","endsWith","substring","One","FEE","Percent","useSwapRouter","allowedSlippage","swap","trade","Router","feeOnTransfer","ttl","params","swapCallParameters","router","ROUTER","estimateGas","methodName","functions","arg","addLiquidity","fromAmount","toAmount","Date","getTime","removeLiquidityETH","liquidity","amountETH","removeLiquidity","addLiquidityETH","calculateSwapFee","Colors","common","white","transparent","secondary","green","red","twitter","facebook","header","textDark","overlay","dark","now","filledAmountIn","canceled","hashOfOrder","signMessage","arrayify","signature","splitSignature","sign","useSettlement","createOrder","order","toArgs","cancelOrder","slice","queryOrderFilledEvents","filters","OrderFilled","queryFilter","calculateLimitOrderFee","calculateLimitOrderReturn","price","limitOrderFeeDeducted","swapFeeDeducted","parse","apply","React","createContext","load","clear","setDarkMode","_darkMode","mnemonic","setMnemonic","_mnemonic","GlobalContextProvider","children","colorScheme","useColorScheme","useState","Provider","AsyncStorage","getItem","mode","mne","removeItem","setItem","GlobalContextConsumer","Consumer","providers","AlchemyProvider","KOVAN_PROVIDER","_ethereum","ensName","addOnBlockListener","_name","_listener","removeOnBlockListener","updateTokens","loadingTokens","addCustomToken","_token","removeCustomToken","approveToken","_spender","_amount","getTokenAllowance","getTokenBalance","_who","getTotalSupply","EthersContextProvider","setProvider","setSigner","setKovanSigner","setChainId","setAddress","setENSName","onBlockListeners","setOnBlockListeners","setTokens","setCustomTokens","setLoadingTokens","useEffect","Wallet","useAsyncEffect","web3","Web3Provider","getSigner","web3Signer","onAccountsChanged","accounts","onChainChanged","onDisconnect","on","off","lookupAddress","ens","JSON","findIndex","custom","stringify","spender","MaxUint256","approve","allowance","who","balanceOf","listener","old","onBlock","block","Object","entries","EthersContextConsumer","SUSHI_BAR","SUSHI_ROLL","ZAP_IN","ZAP_OUT","ContextProvider","SvgMoon","SvgSun","DarkModeSwitch","TouchableHighlight","activeOpacity","underlayColor","margin","CloseButton","MobileWebMenuItem","startsWith","Status","connected","isWalletConnect","disconnect","MobileWebMenu","expanded","onCollapse","animationType","visible","TouchableWithoutFeedback","paddingRight","SvgLogo","strokeDashoffset","Menu","MenuIcon","onExpand","confirm","CloseIcon","paddingLeft","WebHeader","zIndex","borderBottomWidth","onExpandMenu","EmptyScreen","FarmingScreen","lazy","HarvestScreen","LiquidityScreen","MigrateScreen","MyLimitOrdersScreen","RemoveLiquidityScreen","StakeScreen","UnstakeScreen","SwapScreen","HomeScreen","Screens","OS","WebScreens","menuExpanded","setMenuExpanded","fallback","exact","Tab","createBottomTabNavigator","AppScreens","theme","DefaultTheme","colors","card","notification","NavigationContainer","Navigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","component","options","tabOptions","iconName","tabBarIcon","App","useFonts","OpenSans_300Light","regular","OpenSans_400Regular","bold","OpenSans_600SemiBold","AppLoading","medium","note","h1Style","h2Style","h3Style","h4Style","caption","global","Buffer"],"mappings":"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","file":"static/js/app.1eebc58e.chunk.js","sourcesContent":["import * as Analytics from \"expo-firebase-analytics\";\n\nimport { ethers } from \"ethers\";\n\nexport const logTransaction = async (\n    tx: ethers.providers.TransactionResponse,\n    name: string,\n    ...args: any[]\n): Promise<ethers.providers.TransactionResponse> => {\n    await Analytics.logEvent(\"tx:\" + name, {\n        args: args || [],\n        hash: tx.hash,\n        value: tx.value.toString(),\n        gasLimit: tx.gasLimit.toString(),\n        gasPrice: tx.gasPrice.toString(),\n        chainId: tx.chainId\n    });\n    return tx;\n};\n","module.exports = __webpack_public_path__ + \"static/media/metamask-dark.2137a831.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask.15e22fef.png\";","module.exports = __webpack_public_path__ + \"static/media/sushiswap.ef005f32.jpg\";","import React, { FunctionComponent } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\ninterface FlexViewProps extends ViewProps {\n    direction?: \"row\" | \"column\";\n}\n\nconst FlexView: FunctionComponent<FlexViewProps> = props => {\n    const flexDirection = props.direction || \"row\";\n    return <View {...props} style={[{ flexDirection }, props.style]} />;\n};\nexport default FlexView;\n","import { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\n\nexport const ETH: Token = {\n    name: \"Ethereum\",\n    address: ethers.constants.AddressZero,\n    decimals: 18,\n    symbol: \"ETH\",\n    logoURI: \"https://lite.sushiswap.fi/images/tokens/ETH.png\",\n    balance: ethers.BigNumber.from(0)\n};\n","import { Dimensions } from \"react-native\";\n\nexport const SCREEN_WIDTH = Math.round(Dimensions.get(\"window\").width);\nexport const SCREEN_HEIGHT = Math.round(Dimensions.get(\"window\").height);\nexport const IS_HIGH_RESOLUTION = SCREEN_HEIGHT > 667;\nexport const HEADER_HEIGHT = 64;\nexport const HEADER_WIDTH = 980;\nexport const DESKTOP_CONTENT_WIDTH = 540;\nexport const SUB_MENU_HEIGHT = 40;\nexport const IS_DESKTOP = SCREEN_WIDTH > DESKTOP_CONTENT_WIDTH;\n\nexport const Spacing = IS_HIGH_RESOLUTION\n    ? {\n          tiny: 8,\n          small: 16,\n          normal: 32,\n          large: 48,\n          huge: 64\n      }\n    : {\n          tiny: 6,\n          small: 12,\n          normal: 24,\n          large: 32,\n          huge: 48\n      };\n","import React, { FC } from \"react\";\nimport { Button as NativeButton, ButtonProps as NativeButtonProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nexport interface ButtonProps extends NativeButtonProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Button: FC<ButtonProps> = props => {\n    const { accent, textMedium, placeholder, backgroundLight } = useColors();\n    const type = props.type || \"solid\";\n    const size = props.size || \"normal\";\n    const height = props.size === \"small\" ? 36 : size === \"normal\" ? 45 : 54;\n    const fontSize = props.size === \"small\" ? 13 : size === \"normal\" ? 15 : 18;\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = type === \"solid\" ? \"white\" : props.color || textMedium;\n    return (\n        <NativeButton\n            {...props}\n            disabled={props.loading || props.disabled}\n            onPress={props.loading ? undefined : props.onPress}\n            type={type}\n            loadingProps={{ color: textMedium }}\n            buttonStyle={[\n                {\n                    height,\n                    paddingHorizontal: Spacing.small,\n                    backgroundColor: \"transparent\",\n                    borderColor: color\n                },\n                props.buttonStyle\n            ]}\n            titleStyle={[{ fontSize, fontFamily, color }, props.titleStyle]}\n            disabledTitleStyle={[{ fontSize, fontFamily, color: placeholder }, props.titleStyle]}\n            style={[{ backgroundColor: type === \"solid\" ? props.color || accent : \"transparent\" }, props.style]}\n            disabledStyle={[\n                { backgroundColor: type === \"solid\" ? backgroundLight : \"transparent\" },\n                props.disabledStyle\n            ]}\n        />\n    );\n};\nexport default Button;\n","import ERC20 from \"@sushiswap/core/build/contracts/ERC20.json\";\nimport IUniswapV2Factory from \"@sushiswap/core/build/contracts/IUniswapV2Factory.json\";\nimport IUniswapV2Pair from \"@sushiswap/core/build/contracts/IUniswapV2Pair.json\";\nimport IUniswapV2Router02 from \"@sushiswap/core/build/contracts/IUniswapV2Router02.json\";\nimport IWETH from \"@sushiswap/core/build/contracts/IWETH.json\";\nimport MasterChef from \"@sushiswap/core/build/contracts/MasterChef.json\";\nimport SushiBar from \"@sushiswap/core/build/contracts/SushiBar.json\";\nimport SushiRoll from \"@sushiswap/core/build/contracts/SushiRoll.json\";\nimport OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\nimport ZapIn from \"@sushiswap/zapper/artifacts/Sushiswap_ZapIn_General_V2.json\";\nimport ZapOut from \"@sushiswap/zapper/artifacts/Sushiswap_ZapOut_General_V1.json\";\nimport { ethers } from \"ethers\";\nimport LPTokenScanner from \"../constants/abi/LPTokenScanner.json\";\n\nconst CONTRACTS = {\n    ERC20,\n    IUniswapV2Factory,\n    IUniswapV2Pair,\n    IUniswapV2Router02,\n    IWETH,\n    MasterChef,\n    SushiBar,\n    SushiRoll,\n    OrderBook,\n    Settlement,\n    LPTokenScanner: { abi: LPTokenScanner },\n    ZapIn,\n    ZapOut\n};\n\nconst getContract = (name: string, address: string, signerOrProvider: ethers.Signer | ethers.providers.Provider) => {\n    const contract = CONTRACTS[name];\n    return new ethers.Contract(address, contract.abi, signerOrProvider);\n};\n\nexport default getContract;\n","import { ChainId, CurrencyAmount, Percent, Token as SDKToken, TokenAmount, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { ETH } from \"../constants/tokens\";\nimport Token from \"../types/Token\";\nimport getContract from \"./getContract\";\n\nexport const formatUSD = (value: number, maxFraction = 0) => {\n    const formatter = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction\n    });\n    return formatter.format(value);\n};\n\nexport const formatPercentage = (value: number, maxFraction = 2) => {\n    const formatted = String(value * 100);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const formatBalance = (value: ethers.BigNumberish, decimals = 18, maxFraction = 0) => {\n    const formatted = ethers.utils.formatUnits(value, decimals);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const parseBalance = (value: string, decimals = 18) => {\n    return ethers.utils.parseUnits(value || \"0\", decimals);\n};\n\nexport const isEmptyValue = (text: string) =>\n    ethers.BigNumber.isBigNumber(text)\n        ? ethers.BigNumber.from(text).isZero()\n        : text === \"\" || text.replace(/0/g, \"\").replace(/\\./, \"\") === \"\";\n\nexport const isETH = (token?: Token) => token?.address.toLowerCase() === ETH.address.toLowerCase();\n\nexport const isWETH = (token?: Token) => token?.address.toLowerCase() === WETH[1].address.toLowerCase();\n\nexport const isETHWETHPair = (fromToken?: Token, toToken?: Token) => {\n    return (isETH(fromToken) && isWETH(toToken)) || (isWETH(fromToken) && isETH(toToken));\n};\n\nexport const convertToken = (token: Token) => {\n    return token.symbol === \"ETH\" ? WETH[\"1\"] : new SDKToken(ChainId.MAINNET, token.address, token.decimals);\n};\n\nexport const convertAmount = (token: Token, amount: string) => {\n    return new TokenAmount(convertToken(token), parseBalance(amount, token.decimals).toString());\n};\n\nexport const parseCurrencyAmount = (value: CurrencyAmount, decimals = 18) => {\n    return ethers.BigNumber.from(parseBalance(value.toExact(), decimals));\n};\n\nexport const deduct = (amount: ethers.BigNumber, percent: Percent) => {\n    return amount.sub(amount.mul(percent.numerator.toString()).div(percent.denominator.toString()));\n};\n\nexport const pow10 = (exp: ethers.BigNumberish) => {\n    return ethers.BigNumber.from(10).pow(exp);\n};\n\nexport const formatDate = (date: Date) => {\n    return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n};\n\nexport { getContract };\n","import { useCallback } from \"react\";\nimport { ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"./useColors\";\n\nconst useStyles = () => {\n    const { shadow: shadowColor, borderDark } = useColors();\n    const border = useCallback(\n        (attrs?: { color?: string; radius?: number }) => ({\n            borderColor: attrs?.color || borderDark,\n            borderWidth: 1,\n            borderRadius: attrs?.radius || 8,\n            padding: Spacing.small\n        }),\n        []\n    );\n    const shadow = () =>\n        ({\n            borderRadius: Spacing.tiny,\n            elevation: Spacing.small,\n            shadowColor,\n            shadowOffset: { width: 0, height: 4 },\n            shadowOpacity: 0.5,\n            shadowRadius: 4,\n            overflow: \"visible\"\n        } as ViewStyle);\n    return { border, shadow };\n};\n\nexport default useStyles;\n","import React, { FC } from \"react\";\nimport { Platform, SafeAreaView, ScrollView, ViewProps } from \"react-native\";\n\nexport type ContainerProps = ViewProps;\n\nconst Container: FC<ContainerProps> = props => {\n    return Platform.select({\n        web: (\n            <ScrollView\n                contentContainerStyle={{ flex: 1 }}\n                style={[\n                    {\n                        flex: 1\n                    },\n                    props.style\n                ]}\n                {...props}\n            />\n        ),\n        default: (\n            <SafeAreaView style={{ flex: 1 }}>\n                <ScrollView {...props} />\n            </SafeAreaView>\n        )\n    });\n};\n\nexport default Container;\n","import React, { useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { DESKTOP_CONTENT_WIDTH, IS_DESKTOP, SCREEN_WIDTH, Spacing, SUB_MENU_HEIGHT } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst Content: React.FunctionComponent<ViewProps> = props => {\n    const { darkMode } = useContext(GlobalContext);\n    const { borderDark: borderColor, background } = useColors();\n    const { border, shadow } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: darkMode ? borderColor : undefined }),\n                    ...shadow(),\n                    backgroundColor: background,\n                    width: IS_DESKTOP ? DESKTOP_CONTENT_WIDTH : SCREEN_WIDTH - Spacing.large,\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    marginTop: Spacing.huge + SUB_MENU_HEIGHT,\n                    marginBottom: Spacing.large,\n                    padding: IS_DESKTOP ? Spacing.normal : Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Content;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Text from \"./Text\";\n\ninterface TitleProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst Title: FC<TitleProps> = props => {\n    return (\n        <Text\n            fontWeight={props.fontWeight || \"bold\"}\n            disabled={props.disabled}\n            style={[{ marginBottom: Spacing.tiny, fontSize: IS_DESKTOP ? 40 : 28 }, props.style]}>\n            {props.text}\n        </Text>\n    );\n};\n\nexport default Title;\n","import * as React from \"react\";\nimport Svg, {\n    Circle,\n    ClipPath,\n    Defs,\n    Ellipse,\n    G,\n    LinearGradient,\n    Path,\n    RadialGradient,\n    Stop,\n    SvgProps\n} from \"react-native-svg\";\n\n// tslint:disable-next-line:max-func-body-length\nfunction SvgBackgroundDark(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 2100 2100\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit={1.5}\n            {...props}>\n            <G transform=\"matrix(.92374 0 0 1.88904 -15674.56 -16430.71)\">\n                <Path fill=\"#0e0f23\" d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                <ClipPath id=\"prefix__a\">\n                    <Path d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                </ClipPath>\n                <G clipPath=\"url(#prefix__a)\">\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear2)\"\n                        strokeWidth={3}\n                        transform=\"matrix(1.08256 0 0 .52937 11950.485 6652.866)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear3)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.70103 0 0 .3428 14109.24 7569.495)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear4)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.65148 0 0 .31857 14389.612 7688.545)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear5)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.59951 0 0 .29316 14683.668 7813.402)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear6)\"\n                        strokeWidth={2.97}\n                        transform=\"matrix(1.45883 0 0 .71336 9821.49 5748.873)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear7)\"\n                        strokeWidth={1.09}\n                        transform=\"matrix(1.98142 0 0 .9689 6864.553 4493.326)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear8)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.08295 0 0 1.01856 6290.06 4249.393)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear9)\"\n                        strokeWidth={0.99}\n                        transform=\"matrix(2.1815 0 0 1.06675 5732.466 4012.633)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear10)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.51596 0 0 1.2303 3840.076 3209.103)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear11)\"\n                        strokeWidth={0.76}\n                        transform=\"matrix(2.84743 0 0 1.39238 1964.432 2412.72)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={2.98}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(1.02642 -.18032 .36875 .50192 -8192.387 8615.588)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.52195 -.0917 .18751 .25523 4129.043 8824.098)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.5544 .00739 .01511 -.2711 5758.093 11686.348)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.46928 .14454 -.29559 .22948 10245.833 3948.758)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(-.05308 -.52873 .90826 -.0218 11138.133 21929.848)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(1.04567 .13701 -.23536 .42952 -4115.147 2068.338)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(.28019 -.51133 .87836 .11509 4233.503 20687.448)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(.81456 -.34867 -.59895 -.33459 4984.583 20568.648)\"\n                    />\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\"\n                        />\n                        <G transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__b\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__b)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .23937 .4057 13752.838 7678.974)\"\n                        />\n                        <G transform=\"matrix(.5441 -.07676 .16282 .27595 15179.303 8147.075)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__c\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__c)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\"\n                        />\n                        <G transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__d\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__d)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .23684 .40605 13983.858 7907.01)\"\n                        />\n                        <G transform=\"matrix(.54457 -.07596 .1611 .27619 15407.406 8377.228)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__e\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__e)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\"\n                        />\n                        <G transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__f\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__f)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.143 .41641 14337.534 7060.022)\"\n                        />\n                        <G transform=\"matrix(.55847 .04586 -.09727 .28324 15209.655 7783.768)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__g\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__g)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\"\n                        />\n                        <G transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__h\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__h)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.17215 .44792 14309.713 6521.024)\"\n                        />\n                        <G transform=\"matrix(.60073 .0552 -.1171 .30467 15219.919 7311.01)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__i\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__i)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\"\n                        />\n                        <G transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__j\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__j)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2407 .4403 12950.42 7711.006)\"\n                        />\n                        <G transform=\"matrix(.59051 -.07719 .16372 .2995 14469.505 8230.993)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__k\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__k)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\"\n                        />\n                        <G transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__l\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__l)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.2057 .24809 17661.276 7556.892)\"\n                        />\n                        <G transform=\"matrix(.33273 .06596 -.1399 .16875 17997.348 8063.5)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__m\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__m)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5429.1 4921.27l-245.63-534.63c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l245.64 534.63-8.29 3.81z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={6.24}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(1.96709 .45188 -.9241 .9619 11860.057 2667.155)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00776 -.44649 18561.7 11282.448)\"\n                        />\n                        <Path\n                            d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(-1.35639 -.00564 .01257 -.7235 18543.284 12342.036)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.73}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00756 -.43517 18562.452 11239.16)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.77}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00736 -.42342 18563.234 11194.216)\"\n                        />\n                        <Path\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.81}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3139.43h14.614v1166.61h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00715 -.4115 18564.025 11148.607)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5300.61 5786.96c-.24-.17-.47-.35-.7-.53-17.41-13.86-4.09-63.98 30.06-114.74 1.44-2.13 7.58-10.81 9.18-12.95 35.31-47.46 76.53-76.3 96.18-67.31.9.41 1.75.9 2.55 1.47l125.89 89.04s2.73 2.01 3.31 2.57c15.89 15.44 1.4 66.2-33.58 116.88-.72 1.05-5.39 7.6-7 9.76-36.02 48.39-78.11 77.44-97.17 66.75-.47-.27-2.29-1.52-2.29-1.52l-126.43-89.42z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={11.5}\n                            transform=\"matrix(.99854 .20457 -.41815 .48829 15048.865 5342.07)\"\n                        />\n                        <Path\n                            d=\"M1040.64 697.661c0 22.723-51.581 41.17-115.115 41.17-63.534 0-115.116-18.447-115.116-41.17V546.583l.003.266c.4 22.6 51.827 40.904 115.113 40.904 63.534 0 115.115-18.448 115.115-41.17v151.078z\"\n                            fill=\"#0e0f23\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={5}\n                            transform=\"matrix(.9478 -.28962 .59237 .46355 16830.032 9233.44)\"\n                        />\n                        <Ellipse\n                            cx={925.525}\n                            cy={546.583}\n                            rx={115.115}\n                            ry={41.17}\n                            fill=\"#fff\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={5.19}\n                            transform=\"matrix(.9478 -.28962 .59487 .4655 16828.667 9232.372)\"\n                        />\n                        <G transform=\"matrix(.55592 -.16987 .26032 .2037 17374.22 9264.638)\">\n                            <Ellipse cx={925.525} cy={546.583} rx={115.115} ry={41.17} fill=\"#f14f9b\" />\n                            <Path\n                                d=\"M925.525 496.312c-45.853 0-85.627 9.645-105.389 23.272-11.22 7.737-16.547 17.689-16.547 26.999 0 9.311 5.327 19.262 16.547 26.999 19.762 13.627 59.536 23.272 105.389 23.272 45.852 0 85.625-9.645 105.385-23.272 11.22-7.737 16.55-17.688 16.55-26.999 0-9.31-5.33-19.262-16.55-26.999-19.76-13.627-59.533-23.272-105.385-23.272zm0 9.101c63.534 0 115.115 18.448 115.115 41.17s-51.581 41.17-115.115 41.17c-63.534 0-115.116-18.448-115.116-41.17s51.582-41.17 115.116-41.17z\"\n                                fill=\"#0e0f23\"\n                            />\n                        </G>\n                        <Path\n                            d=\"M11345.5 4849.24c37.3 20.18 78.8 24.3 118.1 24.29 39.4-.02 87.8-6.02 118.1-24.29\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={2.09}\n                            strokeLinejoin=\"round\"\n                            strokeDasharray=\"4.17,4.17,52.17,52.17\"\n                            transform=\"matrix(.79239 -.24213 .49524 .38754 6562.684 10128.41)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5418.56 4898.33l-235.09-511.69c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l235.1 511.69-8.29 3.81z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={6.24}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(1.90515 .51142 -1.04584 .93162 12852.245 2495.204)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35299 -.0473 .0651 -.44537 18433.904 11299.36)\"\n                        />\n                        <Path\n                            d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(-1.35299 -.0473 .1055 -.72168 18279.407 12356.292)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.73}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35299 -.0473 .06345 -.43408 18440.216 11256.18)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.77}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35299 -.0473 .06174 -.42236 18446.77 11211.35)\"\n                        />\n                        <Path\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.81}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3204.63h14.614v1101.41h-14.614z\"\n                            transform=\"matrix(-1.35299 -.0473 .06 -.41046 18453.418 11165.855)\"\n                        />\n                    </G>\n                    <G>\n                        <Path fill=\"#0e0f23\" fillOpacity={0.4} d=\"M16968.732 8697.914h2273.376v1111.677h-2273.376z\" />\n                    </G>\n                    <G>\n                        <Path\n                            fill=\"url(#prefix___Radial24)\"\n                            d=\"M22952.2 8435.28h1429.52v707.246H22952.2z\"\n                            transform=\"matrix(1.59031 0 0 1.57184 -19532.4 -4560.99)\"\n                        />\n                    </G>\n                </G>\n            </G>\n            <Defs>\n                <LinearGradient\n                    id=\"prefix___Linear2\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(1323.868) rotate(-48.234 5.87 -2.209)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear3\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2019.98) rotate(-48.234 3.706 -1.203)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear4\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2173.61) rotate(-48.234 3.415 -1.068)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear5\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 7345.403 -2188.287) scale(2362.04)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear6\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(982.411) rotate(-48.234 8.054 -3.223)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear7\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8019.154 -3350.118) scale(723.304)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear8\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8033.639 -3375.117) scale(688.047)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear9\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(656.966) rotate(-48.234 12.248 -5.171)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear10\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(569.632) rotate(-48.234 14.189 -6.072)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear11\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8109.595 -3506.09) scale(503.321)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <RadialGradient\n                    id=\"prefix___Radial24\"\n                    cx={0}\n                    cy={0}\n                    r={1}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"matrix(778.647 -360.127 670.211 418.392 23603 8795.41)\">\n                    <Stop offset={0} stopColor=\"#0e0f23\" stopOpacity={0} />\n                    <Stop offset={1} stopColor=\"#0e0f23\" />\n                </RadialGradient>\n            </Defs>\n        </Svg>\n    );\n}\n\nexport default SvgBackgroundDark;\n","import * as React from \"react\";\nimport Svg, {\n    Circle,\n    ClipPath,\n    Defs,\n    Ellipse,\n    G,\n    LinearGradient,\n    Path,\n    RadialGradient,\n    Stop,\n    SvgProps\n} from \"react-native-svg\";\n\n// tslint:disable-next-line:max-func-body-length\nfunction SvgBackgroundLight(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 2100 2100\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit={1.5}\n            {...props}>\n            <G transform=\"matrix(.92374 0 0 1.88904 -15674.56 -16430.7)\">\n                <Path fill=\"#fff\" d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                <ClipPath id=\"prefix__a\">\n                    <Path d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                </ClipPath>\n                <G clipPath=\"url(#prefix__a)\">\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear2)\"\n                        strokeWidth={3}\n                        transform=\"matrix(1.08256 0 0 .52937 11950.485 6652.866)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear3)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.70103 0 0 .3428 14109.24 7569.495)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear4)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.65148 0 0 .31857 14389.612 7688.545)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear5)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.59951 0 0 .29316 14683.668 7813.402)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear6)\"\n                        strokeWidth={2.97}\n                        transform=\"matrix(1.45883 0 0 .71336 9821.49 5748.873)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear7)\"\n                        strokeWidth={1.09}\n                        transform=\"matrix(1.98142 0 0 .9689 6864.553 4493.326)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear8)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.08295 0 0 1.01856 6290.06 4249.393)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear9)\"\n                        strokeWidth={0.99}\n                        transform=\"matrix(2.1815 0 0 1.06675 5732.466 4012.633)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear10)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.51596 0 0 1.2303 3840.076 3209.103)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear11)\"\n                        strokeWidth={0.76}\n                        transform=\"matrix(2.84743 0 0 1.39238 1964.432 2412.72)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={2.98}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(1.02642 -.18032 .36875 .50192 -8192.387 8615.588)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.52195 -.0917 .18751 .25523 4129.043 8824.098)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.5544 .00739 .01511 -.2711 5758.093 11686.348)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.46928 .14454 -.29559 .22948 10245.833 3948.758)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(-.05308 -.52873 .90826 -.0218 11138.133 21929.848)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(1.04567 .13701 -.23536 .42952 -4115.147 2068.338)\"\n                    />\n                    <G>\n                        <Path\n                            d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                            fill=\"#fff\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.25}\n                            strokeLinecap=\"butt\"\n                            strokeMiterlimit={4}\n                            transform=\"matrix(.28019 -.51133 .87836 .11509 4233.503 20687.448)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                            fill=\"#fff\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.25}\n                            strokeLinecap=\"butt\"\n                            strokeMiterlimit={4}\n                            transform=\"matrix(.81456 -.34867 -.59895 -.33459 4984.583 20568.648)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\"\n                        />\n                        <G transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__b\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__b)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .23937 .4057 13752.838 7678.974)\"\n                        />\n                        <G transform=\"matrix(.5441 -.07676 .16282 .27595 15179.303 8147.075)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__c\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__c)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\"\n                        />\n                        <G transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__d\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__d)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .23684 .40605 13983.858 7907.01)\"\n                        />\n                        <G transform=\"matrix(.54457 -.07596 .1611 .27619 15407.406 8377.228)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__e\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__e)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\"\n                        />\n                        <G transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__f\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__f)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.143 .41641 14337.534 7060.022)\"\n                        />\n                        <G transform=\"matrix(.55847 .04586 -.09727 .28324 15209.655 7783.768)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__g\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__g)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\"\n                        />\n                        <G transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__h\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__h)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.17215 .44792 14309.713 6521.024)\"\n                        />\n                        <G transform=\"matrix(.60073 .0552 -.1171 .30467 15219.919 7311.01)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__i\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__i)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\"\n                        />\n                        <G transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__j\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__j)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2407 .4403 12950.42 7711.006)\"\n                        />\n                        <G transform=\"matrix(.59051 -.07719 .16372 .2995 14469.505 8230.993)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__k\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__k)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\"\n                        />\n                        <G transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__l\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__l)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.2057 .24809 17661.276 7556.892)\"\n                        />\n                        <G transform=\"matrix(.33273 .06596 -.1399 .16875 17997.348 8063.5)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__m\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__m)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5429.1 4921.27l-245.63-534.63c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l245.64 534.63-8.29 3.81z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={6.24}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(1.96709 .45188 -.9241 .9619 11860.057 2667.169)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00776 -.44649 18561.7 11282.462)\"\n                        />\n                        <Path\n                            d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(-1.35639 -.00564 .01257 -.7235 18543.284 12342.05)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.73}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00756 -.43517 18562.452 11239.173)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.77}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00736 -.42342 18563.234 11194.23)\"\n                        />\n                        <Path\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.81}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3139.43h14.614v1166.61h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00715 -.4115 18564.025 11148.62)\"\n                        />\n                        <G>\n                            <Path\n                                d=\"M5300.61 5786.96c-.24-.17-.47-.35-.7-.53-17.41-13.86-4.09-63.98 30.06-114.74 1.44-2.13 7.58-10.81 9.18-12.95 35.31-47.46 76.53-76.3 96.18-67.31.9.41 1.75.9 2.55 1.47l125.89 89.04s2.73 2.01 3.31 2.57c15.89 15.44 1.4 66.2-33.58 116.88-.72 1.05-5.39 7.6-7 9.76-36.02 48.39-78.11 77.44-97.17 66.75-.47-.27-2.29-1.52-2.29-1.52l-126.43-89.42z\"\n                                fill=\"#fff\"\n                                stroke=\"#fff\"\n                                strokeWidth={11.5}\n                                transform=\"matrix(.99854 .20457 -.41815 .48829 15048.865 5342.095)\"\n                            />\n                            <Path\n                                d=\"M1040.64 697.661c0 22.723-51.581 41.17-115.115 41.17-63.534 0-115.116-18.447-115.116-41.17V546.583l.003.266c.4 22.6 51.827 40.904 115.113 40.904 63.534 0 115.115-18.448 115.115-41.17v151.078z\"\n                                fill=\"#0e0f23\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={5}\n                                transform=\"matrix(.9478 -.28962 .59237 .46355 16830.032 9233.464)\"\n                            />\n                            <Ellipse\n                                cx={925.525}\n                                cy={546.583}\n                                rx={115.115}\n                                ry={41.17}\n                                fill=\"#fff\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={5.19}\n                                transform=\"matrix(.9478 -.28962 .59487 .4655 16828.667 9232.396)\"\n                            />\n                            <G transform=\"matrix(.55592 -.16987 .26032 .2037 17374.22 9264.662)\">\n                                <Ellipse cx={925.525} cy={546.583} rx={115.115} ry={41.17} fill=\"#f14f9b\" />\n                                <Path\n                                    d=\"M925.525 496.312c-45.853 0-85.627 9.645-105.389 23.272-11.22 7.737-16.547 17.689-16.547 26.999 0 9.311 5.327 19.262 16.547 26.999 19.762 13.627 59.536 23.272 105.389 23.272 45.852 0 85.625-9.645 105.385-23.272 11.22-7.737 16.55-17.688 16.55-26.999 0-9.31-5.33-19.262-16.55-26.999-19.76-13.627-59.533-23.272-105.385-23.272zm0 9.101c63.534 0 115.115 18.448 115.115 41.17s-51.581 41.17-115.115 41.17c-63.534 0-115.116-18.448-115.116-41.17s51.582-41.17 115.116-41.17z\"\n                                    fill=\"#0e0f23\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M11345.5 4849.24c37.3 20.18 78.8 24.3 118.1 24.29 39.4-.02 87.8-6.02 118.1-24.29\"\n                                fill=\"none\"\n                                stroke=\"#fff\"\n                                strokeWidth={2.09}\n                                strokeLinejoin=\"round\"\n                                strokeDasharray=\"4.17,4.17,52.17,52.17\"\n                                transform=\"matrix(.79239 -.24213 .49524 .38754 6562.684 10128.433)\"\n                            />\n                        </G>\n                        <G>\n                            <Path\n                                d=\"M5418.56 4898.33l-235.09-511.69c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l235.1 511.69-8.29 3.81z\"\n                                fill=\"#fff\"\n                                stroke=\"#fff\"\n                                strokeWidth={6.24}\n                                strokeLinejoin=\"round\"\n                                transform=\"matrix(1.90515 .51142 -1.04584 .93162 12852.245 2495.218)\"\n                            />\n                            <Path\n                                fill=\"#f9f9f9\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.69}\n                                strokeLinejoin=\"round\"\n                                d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                                transform=\"matrix(-1.35299 -.0473 .0651 -.44537 18433.904 11299.374)\"\n                            />\n                            <Path\n                                d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                                fill=\"#f9f9f9\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.69}\n                                strokeLinejoin=\"round\"\n                                transform=\"matrix(-1.35299 -.0473 .1055 -.72168 18279.407 12356.306)\"\n                            />\n                            <Path\n                                fill=\"#f9f9f9\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.73}\n                                strokeLinejoin=\"round\"\n                                d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                                transform=\"matrix(-1.35299 -.0473 .06345 -.43408 18440.216 11256.194)\"\n                            />\n                            <Path\n                                fill=\"#f9f9f9\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.77}\n                                strokeLinejoin=\"round\"\n                                d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                                transform=\"matrix(-1.35299 -.0473 .06174 -.42236 18446.77 11211.364)\"\n                            />\n                            <Path\n                                fill=\"#fa52a0\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.81}\n                                strokeLinejoin=\"round\"\n                                d=\"M423.791 3204.63h14.614v1101.41h-14.614z\"\n                                transform=\"matrix(-1.35299 -.0473 .06 -.41046 18453.418 11165.869)\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path fill=\"#fff\" fillOpacity={0.4} d=\"M16968.732 8697.914h2273.376v1111.677h-2273.376z\" />\n                    </G>\n                    <G>\n                        <Path\n                            fill=\"url(#prefix___Radial24)\"\n                            d=\"M22952.2 8435.28h1429.52v707.246H22952.2z\"\n                            transform=\"matrix(1.59031 0 0 1.57184 -19532.4 -4560.99)\"\n                        />\n                    </G>\n                </G>\n            </G>\n            <Defs>\n                <LinearGradient\n                    id=\"prefix___Linear2\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(1323.868) rotate(-48.234 5.87 -2.209)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear3\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2019.98) rotate(-48.234 3.706 -1.203)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear4\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2173.61) rotate(-48.234 3.415 -1.068)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear5\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 7345.403 -2188.287) scale(2362.04)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear6\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(982.411) rotate(-48.234 8.054 -3.223)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear7\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8019.154 -3350.118) scale(723.304)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear8\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8033.639 -3375.117) scale(688.047)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear9\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(656.966) rotate(-48.234 12.248 -5.171)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear10\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(569.632) rotate(-48.234 14.189 -6.072)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear11\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8109.595 -3506.09) scale(503.321)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <RadialGradient\n                    id=\"prefix___Radial24\"\n                    cx={0}\n                    cy={0}\n                    r={1}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"matrix(778.647 -360.127 670.211 418.392 23603 8795.41)\">\n                    <Stop offset={0} stopColor=\"#fff\" stopOpacity={0} />\n                    <Stop offset={1} stopColor=\"#fff\" />\n                </RadialGradient>\n            </Defs>\n        </Svg>\n    );\n}\n\nexport default SvgBackgroundLight;\n","import React, { useContext } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport SvgBackgroundDark from \"./svg/SvgBackgroundDark\";\nimport SvgBackgroundLight from \"./svg/SvgBackgroundLight\";\n\nconst BackgroundImage = ({ style }: { style?: ViewStyle }) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background } = useColors();\n    const props = {\n        width: 1920,\n        height: 1920\n    };\n    return (\n        <View\n            style={[\n                {\n                    position: \"absolute\",\n                    width: \"100%\",\n                    aspectRatio: 1,\n                    backgroundColor: background\n                },\n                style\n            ]}>\n            <View style={{ marginTop: -400, marginLeft: -1000, alignSelf: \"center\" }}>\n                {darkMode ? <SvgBackgroundDark {...props} /> : <SvgBackgroundLight {...props} />}\n            </View>\n        </View>\n    );\n};\n\nexport default BackgroundImage;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { StatusBar } from \"expo-status-bar\";\n\nimport { HEADER_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\n\nconst AppHeader = () => {\n    const { background } = useColors();\n    return (\n        <View\n            style={{\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                backgroundColor: background\n            }}>\n            <StatusBar translucent={false} backgroundColor={background} />\n        </View>\n    );\n};\n\nexport default AppHeader;\n","import React, { useContext } from \"react\";\nimport { Image, View } from \"react-native\";\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport Button from \"../Button\";\n\nconst ConnectWallet = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const metaMask = window.ethereum?.isMetaMask || false;\n    const source = metaMask\n        ? darkMode\n            ? require(\"../../../assets/metamask-dark.png\")\n            : require(\"../../../assets/metamask.png\")\n        : require(\"../../../assets/sushiswap.jpg\");\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <Image\n                source={source}\n                style={{ width: metaMask ? 223 : 200, height: metaMask ? 183 : 200, marginBottom: Spacing.normal }}\n            />\n            {window.ethereum && <ConnectButton />}\n            <WalletConnectButton />\n        </View>\n    );\n};\n\nconst ConnectButton = () => {\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        if (window.ethereum) {\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\n            setEthereum(window.ethereum);\n        } else {\n            alert(\"No ethereum provider found.\");\n        }\n    };\n    const metaMask = window.ethereum?.isMetaMask || false;\n    return (\n        <Button\n            size={\"large\"}\n            color={metaMask ? \"#e2761b\" : primary}\n            onPress={onPress}\n            title={metaMask ? \"MetaMask\" : \"Connect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nconst WalletConnectButton = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        const ethereum = new WalletConnectProvider({\n            rpc: {\n                1: \"https://eth-mainnet.alchemyapi.io/v2/fF51JjrwO8qCZW13KRflYpqU_ZeOH1Er\"\n            }\n        });\n        await ethereum.enable();\n        // @ts-ignore\n        setEthereum(ethereum);\n    };\n    return (\n        <Button\n            size={\"large\"}\n            type={\"outline\"}\n            color={darkMode ? \"white\" : primary}\n            onPress={onPress}\n            title={\"WalletConnect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nexport default ConnectWallet;\n","import React, { useContext } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport AppHeader from \"../components/app/AppHeader\";\nimport Text from \"../components/Text\";\nimport ConnectToWallet from \"../components/web/ConnectToWallet\";\nimport { HEADER_HEIGHT } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\n\nconst Screen = props => {\n    return Platform.select({\n        web: <WebScreen {...props} />,\n        default: <AppScreen {...props} />\n    });\n};\n\nconst WebScreen = props => {\n    const { address, chainId } = useContext(EthersContext);\n    if (!address) return <ConnectToWallet />;\n    if (chainId !== 1)\n        return (\n            <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n                <Text light={true} style={{ textAlign: \"center\" }}>\n                    {\"Please switch network to\\n'Ethereum Mainnet'\"}\n                </Text>\n            </View>\n        );\n    return (\n        <View\n            {...props}\n            style={[{ position: \"absolute\", top: HEADER_HEIGHT, right: 0, bottom: 0, left: 0 }, props.style]}\n        />\n    );\n};\n\nconst AppScreen = props => (\n    <View style={{ width: \"100%\", height: \"100%\" }}>\n        <AppHeader />\n        <View {...props} style={[{ flex: 1 }, props.style]} />\n    </View>\n);\n\nexport default Screen;\n","import React, { FC } from \"react\";\nimport { View } from \"react-native\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_WIDTH, IS_DESKTOP, Spacing, SUB_MENU_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebSubMenuItem {\n    title: string;\n    path: string;\n}\n\nexport interface WebSubMenuProps {\n    items: WebSubMenuItem[];\n}\n\nexport const SwapSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"New Order\",\n                path: \"/swap\"\n            },\n            {\n                title: \"My Orders\",\n                path: \"/swap/my-orders\"\n            }\n        ]}\n    />\n);\n\nexport const LiquiditySubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Add Liquidity\",\n                path: \"/liquidity\"\n            },\n            {\n                title: \"Remove Liquidity\",\n                path: \"/liquidity/remove\"\n            }\n        ]}\n    />\n);\n\nexport const MigrateSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Migrate Liquidity\",\n                path: \"/migrate\"\n            }\n        ]}\n    />\n);\n\nexport const StakingSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Stake\",\n                path: \"/staking\"\n            },\n            {\n                title: \"Unstake\",\n                path: \"/staking/unstake\"\n            }\n        ]}\n    />\n);\n\nexport const FarmingSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Plant LP Tokens\",\n                path: \"/farming\"\n            },\n            {\n                title: \"Harvest SUSHI\",\n                path: \"/farming/harvest\"\n            }\n        ]}\n    />\n);\n\nconst WebSubMenu: FC<WebSubMenuProps> = props => {\n    const { submenu } = useColors();\n    return (\n        <View\n            style={{\n                position: \"absolute\",\n                top: 0,\n                height: SUB_MENU_HEIGHT,\n                width: \"100%\",\n                backgroundColor: submenu\n            }}>\n            <FlexView\n                style={{\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    marginTop: 2,\n                    paddingHorizontal: Spacing.normal,\n                    alignSelf: \"center\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\"\n                }}>\n                {props.items.map(item => (\n                    <MenuItem key={item.path} {...item} />\n                ))}\n            </FlexView>\n        </View>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { accent, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.isExact;\n    return (\n        <Link\n            to={path}\n            style={{\n                marginLeft: Spacing.small,\n                paddingTop: Spacing.tiny,\n                paddingBottom: Spacing.tiny,\n                textDecoration: \"none\"\n            }}>\n            <Text\n                fontWeight={active ? \"regular\" : \"light\"}\n                style={{\n                    fontSize: 13,\n                    color: active ? accent : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nexport default WebSubMenu;\n","import { FACTORY_ADDRESS as SUSHISWAP_FACTORY } from \"@sushiswap/sdk\";\nimport sushiData from \"@sushiswap/sushi-data\";\nimport { FACTORY_ADDRESS as UNISWAP_FACTORY } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { LP_TOKEN_SCANNER, MASTER_CHEF, ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport { ETH } from \"../constants/tokens\";\nimport { ALCHEMY_PROVIDER } from \"../context/EthersContext\";\nimport { Order, OrderStatus } from \"../hooks/useSettlement\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { getContract, parseBalance, pow10 } from \"./index\";\n\nconst blocksPerDay = 6500;\n\nexport const fetchTokens = async (account: string, customTokens?: Token[]) => {\n    const response = await fetch(\"https://lite.sushiswap.fi/tokens.json\");\n    const json = await response.json();\n    const tokens = [...json.tokens, ...(customTokens || [])];\n\n    const balances = await fetchTokenBalances(\n        account,\n        tokens.map(token => token.address)\n    );\n    return [\n        {\n            ...ETH,\n            balance: await ALCHEMY_PROVIDER.getBalance(account)\n        },\n        ...tokens.map((token, i) => ({\n            ...token,\n            balance: ethers.BigNumber.from(balances[i] || 0)\n        }))\n    ].sort((t1, t2) => {\n        return t2.balance\n            .sub(t1.balance)\n            .div(ethers.BigNumber.from(10).pow(10))\n            .toNumber();\n    });\n};\n\n// tslint:disable-next-line:max-func-body-length\nexport const fetchPools = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const info = await sushiData.sushi.info();\n    const masterchefInfo = await sushiData.masterchef.info();\n    const pools = await sushiData.masterchef.pools();\n    const reduce = await sushiData.masterchef.pool({ poolId: \"45\" });\n    if (!reduce) return undefined;\n    const sushiPerBlock = Math.floor(100 - 100 * (reduce.allocPoint / masterchefInfo.totalAllocPoint));\n    const balances = await fetchTokenBalances(\n        account,\n        pools.map(pool => pool.pair)\n    );\n    // tslint:disable-next-line:max-func-body-length\n    const fetchPool = async (pool, i): Promise<LPToken | null> => {\n        if (pool.slpBalance === 0) return null;\n        try {\n            const result = await Promise.all([\n                fetchStakedValue(pool.pair),\n                fetchPairTokens(pool.pair, tokens, provider)\n            ]);\n            if (!result[0]) return null;\n            const apy = calcAPY(\n                info.derivedETH,\n                sushiPerBlock,\n                pool.allocPoint,\n                masterchefInfo.totalAllocPoint,\n                result[0].totalValueETH,\n                pool.slpBalance,\n                result[0].totalSupply\n            );\n            if (apy === 0) return null;\n            return {\n                ...pool,\n                apy,\n                address: pool.pair,\n                decimals: 18,\n                tokenA: result[1].tokenA,\n                tokenB: result[1].tokenB,\n                symbol: result[1].tokenA.symbol + \"-\" + result[1].tokenB.symbol + \" LP\",\n                balance: ethers.BigNumber.from(balances[i] || 0),\n                sushiRewardedPerYear: calcSushiRewardedPerYear(\n                    sushiPerBlock,\n                    pool.allocPoint,\n                    masterchefInfo.totalAllocPoint,\n                    result[0].totalSupply\n                ),\n                totalSupply: parseBalance(String(result[0].totalSupply), 18),\n                totalValueUSD: result[0].totalValueUSD,\n                multiplier: pool.allocPoint / 1000\n            };\n        } catch (e) {\n            return null;\n        }\n    };\n    return (await Promise.all(pools.map(fetchPool))).filter(pool => !!pool) as LPToken[];\n};\n\nexport const fetchMyPools = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const pools = await sushiData.masterchef.pools();\n    const fetchMyPool = async (pool): Promise<LPToken | null> => {\n        try {\n            const myStake = await fetchMyStake(pool.id, account, provider);\n            if (myStake.amountDeposited.isZero()) return null;\n            const result = await Promise.all([\n                fetchStakedValue(pool.pair),\n                fetchPairTokens(pool.pair, tokens, provider)\n            ]);\n            return {\n                ...pool,\n                address: pool.pair,\n                decimals: 18,\n                tokenA: result[1].tokenA,\n                tokenB: result[1].tokenB,\n                symbol: result[1].tokenA.symbol + \"-\" + result[1].tokenB.symbol + \" LP\",\n                balance: ethers.constants.Zero,\n                amountDeposited: myStake.amountDeposited,\n                pendingSushi: myStake.pendingSushi,\n                totalSupply: parseBalance(String(result[0].totalSupply), 18)\n            };\n        } catch (e) {\n            return null;\n        }\n    };\n    return (await Promise.all(pools.map(fetchMyPool))).filter(pool => !!pool) as LPToken[];\n};\n\nconst calcAPY = (derivedETH, sushiPerBlock, allocPoint, totalAllocPoint, totalValueETH, slpBalance, totalSupply) => {\n    return (\n        (derivedETH * blocksPerDay * sushiPerBlock * 3 * 365 * (allocPoint / totalAllocPoint)) /\n        (totalValueETH * (slpBalance / totalSupply))\n    );\n};\n\nconst calcSushiRewardedPerYear = (sushiPerBlock, allocPoint, totalAllocPoint, totalSupply) => {\n    return ethers.BigNumber.from(blocksPerDay * sushiPerBlock * 3 * 365 * allocPoint)\n        .mul(pow10(36))\n        .div(totalAllocPoint)\n        .div(parseBalance(String(totalSupply)));\n};\n\nconst fetchStakedValue = async (lpToken: string) => {\n    return await sushiData.masterchef.stakedValue({ lpToken });\n};\n\nconst fetchMyStake = async (poolId: number, account: string, provider: ethers.providers.JsonRpcProvider) => {\n    const masterChef = getContract(\"MasterChef\", MASTER_CHEF, provider);\n    const { amount: amountDeposited } = await masterChef.userInfo(poolId, account);\n    const pendingSushi = await masterChef.pendingSushi(poolId, account);\n    return { amountDeposited, pendingSushi };\n};\n\nconst fetchPairTokens = async (pair: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const contract = getContract(\"IUniswapV2Pair\", pair, provider);\n    const tokenA = await findOrFetchToken(await contract.token0(), provider, tokens);\n    const tokenB = await findOrFetchToken(await contract.token1(), provider, tokens);\n    return { tokenA, tokenB };\n};\n\nexport const fetchMyLPTokens = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    return await fetchLPTokens(SUSHISWAP_FACTORY, account, tokens, provider);\n};\n\nexport const fetchMyUniswapLPTokens = async (\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    return await fetchLPTokens(UNISWAP_FACTORY, account, tokens, provider);\n};\n\nconst LP_TOKENS_LIMIT = 100;\n\n// tslint:disable-next-line:max-func-body-length\nconst fetchLPTokens = async (\n    factory: string,\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    const factoryContract = getContract(\"IUniswapV2Factory\", factory, provider);\n    const length = await factoryContract.allPairsLength();\n    const scanner = getContract(\"LPTokenScanner\", LP_TOKEN_SCANNER, provider);\n    const pages: number[] = [];\n    for (let i = 0; i < length; i += LP_TOKENS_LIMIT) pages.push(i);\n    const pairs = (\n        await Promise.all(\n            pages.map(page =>\n                scanner.findPairs(account, factory, page, Math.min(page + LP_TOKENS_LIMIT, length.toNumber()))\n            )\n        )\n    ).flat();\n    const balances = await fetchTokenBalances(\n        account,\n        pairs.map(pair => pair.token)\n    );\n    return await Promise.all(\n        pairs.map(async (pair, index) => {\n            const erc20 = getContract(\"ERC20\", pair.token, provider);\n            const result = await Promise.all([\n                erc20.decimals(),\n                erc20.totalSupply(),\n                fetchPairTokens(pair.token, tokens, provider)\n            ]);\n            return {\n                address: pair.token,\n                decimals: Number(result[0]),\n                name: result[2].tokenA.symbol + \"-\" + result[2].tokenB.symbol + \" LP Token\",\n                symbol: result[2].tokenA.symbol + \"-\" + result[2].tokenB.symbol,\n                balance: ethers.BigNumber.from(balances[index]),\n                totalSupply: result[1],\n                tokenA: result[2].tokenA,\n                tokenB: result[2].tokenB\n            } as LPToken;\n        })\n    );\n};\n\nexport const findOrFetchToken = async (\n    address: string,\n    provider: ethers.providers.JsonRpcProvider,\n    tokens?: Token[]\n) => {\n    if (tokens) {\n        const token = tokens.find(t => t.address.toLowerCase() === address.toLowerCase());\n        if (token) {\n            return token;\n        }\n    }\n    let meta = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenMetadata\", [address]);\n    if (!meta.name || meta.symbol || meta.decimals || meta.logoURI) {\n        meta = await fetchTokenMeta(address, provider);\n    }\n    return {\n        address,\n        name: meta.name,\n        symbol: meta.symbol,\n        decimals: meta.decimals,\n        logoURI: meta.logo,\n        balance: ethers.constants.Zero\n    } as Token;\n};\n\nconst fetchTokenMeta = async (address: string, provider: ethers.providers.JsonRpcProvider) => {\n    const erc20 = getContract(\"ERC20\", address, provider);\n    const data = await Promise.all(\n        [\"name\", \"symbol\", \"decimals\"].map(field => {\n            try {\n                return erc20.callStatic[field]();\n            } catch (e) {\n                return \"\";\n            }\n        })\n    );\n    return {\n        name: data[0],\n        symbol: data[1],\n        decimals: data[2],\n        logoURI: \"\"\n    };\n};\n\nconst fetchTokenBalances = async (account: string, addresses: string[]) => {\n    const balances = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenBalances\", [account, addresses]);\n    return balances.tokenBalances.map(balance => balance.tokenBalance);\n};\n\nconst LIMIT_ORDERS_LIMIT = 20;\n\nexport const fetchMyLimitOrders = async (\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer,\n    kovanSigner: ethers.Signer,\n    tokens?: Token[],\n    canceledHashes?: string[]\n) => {\n    const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, provider);\n    const maker = await signer.getAddress();\n    const length = await orderBook.numberOfHashesOfMaker(maker);\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    const hashes = (await Promise.all(pages.map(page => orderBook.hashesOfMaker(maker, page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n    const myOrders = await Promise.all(\n        hashes.map(async hash => {\n            const args = await orderBook.orderOfHash(hash);\n            return new Order(\n                signer,\n                await findOrFetchToken(args.fromToken, provider, tokens),\n                await findOrFetchToken(args.toToken, provider, tokens),\n                args.amountIn,\n                args.amountOutMin,\n                args.recipient,\n                args.deadline,\n                args.v,\n                args.r,\n                args.s,\n                await settlement.filledAmountInOfHash(hash),\n                canceledHashes && canceledHashes.includes(hash)\n            );\n        })\n    );\n    return myOrders.sort(compareOrders) as Order[];\n};\n\nconst compareOrders = (o0, o1) => {\n    const status = (s: OrderStatus) => (s === \"Open\" ? 0 : s === \"Filled\" ? 1 : 2);\n    const compared = status(o0.status()) - status(o1.status());\n    return compared === 0 ? o1.deadline.toNumber() - o0.deadline.toNumber() : compared;\n};\n\nexport const fetchMyCanceledLimitOrderHashes = async (signer: ethers.providers.JsonRpcSigner) => {\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, signer);\n    const length = await settlement.numberOfCanceledHashesOfMaker(await signer.getAddress());\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    return (await Promise.all(pages.map(page => settlement.allCanceledHashes(page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n};\n","import { Fraction as SDKFraction } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\n\nclass Fraction {\n    static BASE = ethers.BigNumber.from(10).pow(18);\n    static NAN = new Fraction(ethers.constants.Zero, ethers.constants.Zero);\n    static ZERO = new Fraction(ethers.constants.Zero, ethers.constants.One);\n    static convert(sdk: SDKFraction) {\n        return new Fraction(\n            ethers.BigNumber.from(sdk.numerator.toString()),\n            ethers.BigNumber.from(sdk.denominator.toString())\n        );\n    }\n    static from(numerator: ethers.BigNumberish, denominator: ethers.BigNumberish) {\n        return new Fraction(ethers.BigNumber.from(numerator), ethers.BigNumber.from(denominator));\n    }\n    static fromTokens(\n        numerator: ethers.BigNumberish,\n        denominator: ethers.BigNumberish,\n        numeratorToken: Token,\n        denominatorToken: Token\n    ) {\n        return new Fraction(\n            ethers.BigNumber.from(numerator).mul(ethers.BigNumber.from(10).pow(denominatorToken.decimals)),\n            ethers.BigNumber.from(denominator).mul(ethers.BigNumber.from(10).pow(numeratorToken.decimals))\n        );\n    }\n    static parse(value: string) {\n        return value === \"\"\n            ? Fraction.NAN\n            : isEmptyValue(value)\n            ? Fraction.ZERO\n            : new Fraction(parseBalance(value, 18), Fraction.BASE);\n    }\n\n    numerator: ethers.BigNumber;\n    denominator: ethers.BigNumber;\n\n    private constructor(numerator: ethers.BigNumber, denominator: ethers.BigNumber) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n    }\n\n    isZero() {\n        return !this.isNaN() && this.numerator.isZero();\n    }\n\n    isNaN() {\n        return this.denominator.isZero();\n    }\n\n    eq(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .eq(this.denominator);\n    }\n\n    gt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .gt(this.denominator);\n    }\n\n    lt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .lt(this.denominator);\n    }\n\n    toString(maxFractions = 8) {\n        if (this.isNaN()) return \"\";\n        if (this.isZero()) return \"0\";\n        let str = formatBalance(this.numerator.mul(Fraction.BASE).div(this.denominator), 18, maxFractions);\n        if (str.endsWith(\".0\")) str = str.substring(0, str.length - 2);\n        return str;\n    }\n\n    apply(value: ethers.BigNumberish) {\n        return this.denominator.isZero() ? ethers.constants.Zero : this.numerator.mul(value).div(this.denominator);\n    }\n}\n\nexport default Fraction;\n","import { useCallback } from \"react\";\n\nimport { Percent, Router, Trade } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { ROUTER } from \"../constants/contracts\";\nimport Token from \"../types/Token\";\nimport { deduct, getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\nexport const FEE = new Percent(\"3\", \"1000\"); // 0.3%\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapRouter = () => {\n    const allowedSlippage = new Percent(\"50\", \"10000\"); // 0.05%\n    const ttl = 60 * 20;\n\n    const swap = useCallback(async (trade: Trade, signer: ethers.Signer) => {\n        if (trade) {\n            const params = Router.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                allowedSlippage,\n                recipient: await signer.getAddress(),\n                ttl\n            });\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const gasLimit = await router.estimateGas[params.methodName](...params.args, {\n                value: params.value\n            });\n            const tx = await router.functions[params.methodName](...params.args, {\n                value: params.value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            await logTransaction(\n                tx,\n                \"UniswapV2Router02.\" + params.methodName + \"()\",\n                ...params.args.map(arg => arg.toString())\n            );\n            return {\n                trade,\n                tx\n            };\n        }\n    }, []);\n\n    const addLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                fromAmount,\n                toAmount,\n                deduct(fromAmount, allowedSlippage),\n                deduct(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidity(...args);\n            const tx = await router.functions.addLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidityETH = useCallback(\n        async (\n            token: Token,\n            liquidity: ethers.BigNumber,\n            amount: ethers.BigNumber,\n            amountETH: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                liquidity,\n                deduct(amount, allowedSlippage),\n                deduct(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidityETH(...args);\n            const tx = await router.functions.removeLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            liquidity: ethers.BigNumber,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                liquidity,\n                deduct(fromAmount, allowedSlippage),\n                deduct(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidity(...args);\n            const tx = await router.functions.removeLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const addLiquidityETH = useCallback(\n        async (token: Token, amount: ethers.BigNumber, amountETH: ethers.BigNumber, signer: ethers.Signer) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                amount,\n                deduct(amount, allowedSlippage),\n                deduct(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidityETH(...args, {\n                value: amountETH\n            });\n            const tx = await router.functions.addLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100),\n                value: amountETH\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const calculateSwapFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(3).div(1000);\n    };\n\n    return {\n        allowedSlippage,\n        ttl,\n        swap,\n        addLiquidity,\n        addLiquidityETH,\n        removeLiquidity,\n        removeLiquidityETH,\n        calculateSwapFee\n    };\n};\n\nexport default useSwapRouter;\n","export const Colors = {\n    common: {\n        white: \"#ffffff\",\n        transparent: \"#ffffff00\",\n        primary: \"#FA52A0\",\n        secondary: \"#27B0E6\",\n        green: \"#32CD32\",\n        red: \"#FF0000\",\n        twitter: \"#1da1f2\",\n        facebook: \"#3B5998\"\n    },\n    light: {\n        accent: \"#FA52A0\",\n        header: \"#ffffffb8\",\n        submenu: \"#ffffff80\",\n        background: \"#ffffff\",\n        backgroundLight: \"#f0f0f0\",\n        border: \"#e5e5e5\",\n        borderDark: \"#cccccc\",\n        textDark: \"#1d1d1f\",\n        textMedium: \"#222222\",\n        textLight: \"#888888\",\n        disabled: \"#b4b4b4\",\n        shadow: \"#444444\",\n        placeholder: \"#b4b4b4\",\n        overlay: \"#ffffffc0\"\n    },\n    dark: {\n        accent: \"#27B0E6\",\n        header: \"#0D0E20\",\n        submenu: \"#00000020\",\n        background: \"#0e0f23\",\n        backgroundLight: \"#0D0E20\",\n        border: \"#ffffff33\",\n        borderDark: \"#666666\",\n        textDark: \"#d5d1cc\",\n        textMedium: \"#cccccc\",\n        textLight: \"#aaaaaa\",\n        disabled: \"#aaaaaa80\",\n        shadow: \"#03080c\",\n        placeholder: \"#666666\",\n        overlay: \"#000000c0\"\n    }\n};\n","import { useContext } from \"react\";\n\nimport { Colors } from \"../constants/colors\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useColors = () => {\n    const { darkMode } = useContext(GlobalContext);\n    return {\n        ...Colors[darkMode ? \"dark\" : \"light\"],\n        ...Colors.common\n    };\n};\n\nexport default useColors;\n","import { useCallback } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport { ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport Token from \"../types/Token\";\nimport { getContract, pow10 } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport useSwapRouter from \"./useSwapRouter\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSettlement = () => {\n    const { calculateSwapFee } = useSwapRouter();\n\n    const createOrder = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            amountIn: ethers.BigNumber,\n            amountOutMin: ethers.BigNumber,\n            signer: ethers.Signer,\n            kovanSigner: ethers.Signer\n        ) => {\n            const order = new Order(signer, fromToken, toToken, amountIn, amountOutMin, await signer.getAddress());\n            const args = await order.toArgs();\n\n            const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n            const gasLimit = await orderBook.estimateGas.createOrder(args);\n            const tx = await orderBook.createOrder(args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return await logTransaction(tx, \"OrderBook.createOrder()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const cancelOrder = useCallback(async (order: Order, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const args = (await order.toArgs()).slice(0, 7);\n        const gasLimit = await settlement.estimateGas.cancelOrder(...args);\n        const tx = await settlement.cancelOrder(...args, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return await logTransaction(tx, \"Settlement.cancelOrder()\", ...args.map(arg => arg.toString()));\n    }, []);\n\n    const queryOrderFilledEvents = useCallback(async (hash: string, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const filter = settlement.filters.OrderFilled(hash);\n        return await settlement.queryFilter(filter);\n    }, []);\n\n    const calculateLimitOrderFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(2).div(1000);\n    };\n\n    const calculateLimitOrderReturn = (\n        fromToken: Token,\n        toToken: Token,\n        fromAmount: ethers.BigNumber,\n        price: string\n    ) => {\n        const limitOrderFeeDeducted = fromAmount.sub(calculateLimitOrderFee(fromAmount));\n        const swapFeeDeducted = limitOrderFeeDeducted.sub(calculateSwapFee(limitOrderFeeDeducted));\n        return Fraction.parse(price).apply(swapFeeDeducted.mul(pow10(toToken.decimals)).div(pow10(fromToken.decimals)));\n    };\n\n    return { createOrder, cancelOrder, queryOrderFilledEvents, calculateLimitOrderFee, calculateLimitOrderReturn };\n};\n\nexport type OrderStatus = \"Open\" | \"Expired\" | \"Filled\" | \"Canceled\";\n\nexport class Order {\n    maker: ethers.Signer;\n    fromToken: Token;\n    toToken: Token;\n    amountIn: ethers.BigNumber;\n    amountOutMin: ethers.BigNumber;\n    recipient: string;\n    deadline: ethers.BigNumber;\n    v?: number;\n    r?: string;\n    s?: string;\n    filledAmountIn?: ethers.BigNumber;\n    canceled?: boolean;\n\n    constructor(\n        maker: ethers.Signer,\n        fromToken: Token,\n        toToken: Token,\n        amountIn: ethers.BigNumber,\n        amountOutMin: ethers.BigNumber,\n        recipient: string,\n        deadline = ethers.BigNumber.from(Math.floor(Date.now() / 1000 + 24 * 3600)),\n        v?: number,\n        r?: string,\n        s?: string,\n        filledAmountIn?: ethers.BigNumber,\n        canceled?: boolean\n    ) {\n        this.maker = maker;\n        this.fromToken = fromToken;\n        this.toToken = toToken;\n        this.amountIn = amountIn;\n        this.amountOutMin = amountOutMin;\n        this.recipient = recipient;\n        this.deadline = deadline;\n        this.v = v;\n        this.r = r;\n        this.s = s;\n        this.filledAmountIn = filledAmountIn;\n        this.canceled = canceled;\n    }\n\n    status(): OrderStatus {\n        return this.canceled\n            ? \"Canceled\"\n            : this.filledAmountIn?.eq(this.amountIn)\n            ? \"Filled\"\n            : this.deadline.toNumber() * 1000 < Date.now()\n            ? \"Expired\"\n            : \"Open\";\n    }\n\n    async hash() {\n        const settlement = await getContract(\"Settlement\", SETTLEMENT, this.maker);\n        return await settlement.hashOfOrder(\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline\n        );\n    }\n\n    async sign() {\n        const hash = await this.hash();\n        const signature = await this.maker.signMessage(ethers.utils.arrayify(hash));\n        return ethers.utils.splitSignature(signature);\n    }\n\n    async toArgs() {\n        const { v, r, s } = this.v && this.r && this.s ? { v: this.v, r: this.r, s: this.s } : await this.sign();\n        return [\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline,\n            v,\n            r,\n            s\n        ];\n    }\n}\n\nexport default useSettlement;\n","import React, { useState } from \"react\";\nimport { useColorScheme } from \"react-native-appearance\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nexport const GlobalContext = React.createContext({\n    load: async () => {},\n    clear: async () => {},\n    darkMode: false,\n    setDarkMode: async _darkMode => {},\n    mnemonic: \"\",\n    setMnemonic: (_mnemonic: string) => {}\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const GlobalContextProvider = ({ children }) => {\n    const colorScheme = useColorScheme();\n    const [darkMode, setDarkMode] = useState(colorScheme === \"dark\");\n    const [mnemonic, setMnemonic] = useState(\"\");\n    return (\n        <GlobalContext.Provider\n            value={{\n                load: async () => {\n                    const mode = await AsyncStorage.getItem(\"dark_mode\");\n                    setDarkMode(mode === \"true\");\n                    const mne = await AsyncStorage.getItem(\"mnemonic\");\n                    if (mne) {\n                        setMnemonic(mne);\n                    }\n                },\n                clear: async () => {\n                    setDarkMode(false);\n                    await AsyncStorage.removeItem(\"dark_mode\");\n                    await AsyncStorage.removeItem(\"mnemonic\");\n                },\n                darkMode,\n                setDarkMode: async (mode: boolean) => {\n                    await AsyncStorage.setItem(\"dark_mode\", String(mode));\n                    setDarkMode(mode);\n                },\n                mnemonic,\n                setMnemonic: async (mne: string) => {\n                    await AsyncStorage.setItem(\"mnemonic\", mne);\n                    setMnemonic(mne);\n                }\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const GlobalContextConsumer = GlobalContext.Consumer;\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport * as Analytics from \"expo-firebase-analytics\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ETH } from \"../constants/tokens\";\nimport Ethereum from \"../types/Ethereum\";\nimport Token from \"../types/Token\";\nimport { getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport { fetchTokens } from \"../utils/fetch-utils\";\n\nexport type OnBlockListener = (block?: number) => void | Promise<void>;\n\nconst PRIVATE_KEY = \"0xca417c154948d370f011c5d9ac3fba516d7b15671a069e7d5d48f56b723c9cc1\";\nexport const ALCHEMY_PROVIDER = new ethers.providers.AlchemyProvider(\n    1,\n    __DEV__ ? process.env.MAINNET_API_KEY : \"DgnfFsj5PXR37FkOmUVJ9GtfDsKws446\"\n);\nconst KOVAN_PROVIDER = new ethers.providers.AlchemyProvider(\n    42,\n    __DEV__ ? process.env.KOVAN_API_KEY : \"8a03ORJJcIv8YA49M-cIxg-mBEMJYe0J\"\n);\n\nexport const EthersContext = React.createContext({\n    ethereum: undefined as Ethereum | undefined,\n    setEthereum: (_ethereum: Ethereum | undefined) => {},\n    provider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    signer: undefined as ethers.providers.JsonRpcSigner | undefined,\n    kovanSigner: undefined as ethers.Signer | undefined,\n    chainId: 0,\n    address: null as string | null,\n    ensName: null as string | null,\n    addOnBlockListener: (_name: string, _listener: OnBlockListener) => {},\n    removeOnBlockListener: (_name: string) => {},\n    tokens: [ETH] as Token[],\n    updateTokens: async () => {},\n    loadingTokens: false,\n    customTokens: [ETH] as Token[],\n    addCustomToken: (_token: Token) => {},\n    removeCustomToken: (_token: Token) => {},\n    approveToken: async (_token: string, _spender: string, _amount?: ethers.BigNumber) => {\n        return {} as ethers.providers.TransactionResponse | undefined;\n    },\n    getTokenAllowance: async (_token: string, _spender: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTokenBalance: async (_token: string, _who: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTotalSupply: async (_token: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    }\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const EthersContextProvider = ({ children }) => {\n    const [ethereum, setEthereum] = useState<Ethereum | undefined>(window.ethereum);\n    const [provider, setProvider] = useState<ethers.providers.JsonRpcProvider>();\n    const [signer, setSigner] = useState<ethers.providers.JsonRpcSigner>();\n    const [kovanSigner, setKovanSigner] = useState<ethers.Signer>();\n    const [chainId, setChainId] = useState<number>(1);\n    const [address, setAddress] = useState<string | null>(null);\n    const [ensName, setENSName] = useState<string | null>(null);\n    const [onBlockListeners, setOnBlockListeners] = useState<{ [name: string]: OnBlockListener }>({});\n    const [tokens, setTokens] = useState<Token[]>([]);\n    const [customTokens, setCustomTokens] = useState<Token[]>([]);\n    const [loadingTokens, setLoadingTokens] = useState(true);\n\n    useEffect(() => {\n        // Kovan\n        setKovanSigner(new ethers.Wallet(PRIVATE_KEY, KOVAN_PROVIDER));\n    }, [KOVAN_PROVIDER]);\n\n    useAsyncEffect(async () => {\n        // Mainnet\n        if (ethereum) {\n            const web3 = new ethers.providers.Web3Provider(ethereum);\n            const web3Signer = await web3.getSigner();\n            setProvider(ethereum.isMetaMask ? web3Signer.provider : ALCHEMY_PROVIDER);\n            setSigner(web3Signer);\n        }\n    }, [ethereum]);\n\n    useEffect(() => {\n        if (ethereum) {\n            const onAccountsChanged = async () => {\n                const accounts = await ethereum.request({ method: \"eth_accounts\" });\n                if (accounts?.[0]) {\n                    setAddress(accounts[0]);\n                    Analytics.setUserId(accounts[0]);\n                } else {\n                    setAddress(null);\n                }\n            };\n            const onChainChanged = async () => {\n                setChainId(Number(await ethereum.request({ method: \"eth_chainId\" })));\n            };\n            const onDisconnect = () => {\n                setAddress(null);\n                setEthereum(undefined);\n            };\n            onAccountsChanged();\n            onChainChanged();\n            ethereum.on(\"accountsChanged\", onAccountsChanged);\n            ethereum.on(\"chainChanged\", onChainChanged);\n            ethereum.on(\"disconnect\", onDisconnect);\n            return () => {\n                ethereum.off(\"accountsChanged\", onAccountsChanged);\n                ethereum.off(\"chainChanged\", onAccountsChanged);\n                ethereum.off(\"disconnect\", onDisconnect);\n            };\n        }\n    }, [ethereum]);\n\n    useAsyncEffect(async () => {\n        if (provider && address) {\n            const ens = await provider.lookupAddress(address);\n            setENSName(ens);\n        }\n    }, [provider, address]);\n\n    const updateTokens = async () => {\n        if (address && customTokens) {\n            try {\n                const data = await fetchTokens(address, customTokens);\n                if (data) {\n                    await setTokens(data);\n                }\n            } finally {\n                setLoadingTokens(false);\n            }\n        }\n    };\n\n    useAsyncEffect(async () => {\n        setCustomTokens(JSON.parse((await AsyncStorage.getItem(\"custom_tokens\")) || \"[]\"));\n    }, []);\n\n    useAsyncEffect(async () => {\n        if (address && customTokens) {\n            setLoadingTokens(true);\n            await updateTokens();\n        }\n    }, [address, customTokens]);\n\n    const addCustomToken = useCallback(\n        async (token: Token) => {\n            if (\n                customTokens.findIndex(t => t.address === token.address) === -1 &&\n                tokens.findIndex(t => t.address === token.address) === -1\n            ) {\n                const custom = [...customTokens, token];\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [tokens, customTokens]\n    );\n\n    const removeCustomToken = useCallback(\n        async (token: Token) => {\n            if (customTokens.findIndex(t => t.address === token.address) !== -1) {\n                const custom = customTokens.filter(t => t.address !== token.address);\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [customTokens]\n    );\n\n    const approveToken = useCallback(\n        async (token: string, spender: string, amount?: ethers.BigNumber) => {\n            if (signer) {\n                amount = amount || ethers.constants.MaxUint256;\n                const erc20 = getContract(\"ERC20\", token, signer);\n                const gasLimit = await erc20.estimateGas.approve(spender, amount);\n                const tx = await erc20.approve(spender, amount, {\n                    gasLimit\n                });\n                return await logTransaction(tx, \"ERC20.approve()\", spender, amount.toString());\n            }\n        },\n        [signer]\n    );\n\n    const getTokenAllowance = useCallback(\n        async (token: string, spender: string) => {\n            if (provider && address) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return erc20.allowance(address, spender);\n            }\n        },\n        [provider, address]\n    );\n\n    const getTokenBalance = useCallback(\n        async (token: string, who: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.balanceOf(who);\n            }\n        },\n        [provider]\n    );\n\n    const getTotalSupply = useCallback(\n        async (token: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.totalSupply();\n            }\n        },\n        [provider]\n    );\n\n    const addOnBlockListener = useCallback(\n        (name, listener) => {\n            setOnBlockListeners(old => ({ ...old, [name]: listener }));\n        },\n        [setOnBlockListeners]\n    );\n\n    const removeOnBlockListener = useCallback(\n        name => {\n            setOnBlockListeners(old => {\n                delete old[name];\n                return old;\n            });\n        },\n        [setOnBlockListeners]\n    );\n\n    useEffect(() => {\n        if (provider && chainId === 1) {\n            const onBlock = async (block: number) => {\n                for (const listener of Object.entries(onBlockListeners)) {\n                    await listener[1]?.(block);\n                }\n            };\n            provider.on(\"block\", onBlock);\n            return () => {\n                provider.off(\"block\", onBlock);\n            };\n        }\n    }, [provider, chainId, onBlockListeners]);\n\n    return (\n        <EthersContext.Provider\n            value={{\n                ethereum,\n                setEthereum,\n                provider,\n                signer,\n                kovanSigner,\n                chainId,\n                address,\n                ensName,\n                tokens,\n                updateTokens,\n                loadingTokens,\n                customTokens,\n                addCustomToken,\n                removeCustomToken,\n                approveToken,\n                getTokenAllowance,\n                getTokenBalance,\n                getTotalSupply,\n                addOnBlockListener,\n                removeOnBlockListener\n            }}>\n            {children}\n        </EthersContext.Provider>\n    );\n};\n\nexport const EthersContextConsumer = EthersContext.Consumer;\n","import OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\n\n// export const UNISWAP_ROUTER = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nexport const SUSHISWAP_ROUTER = \"0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\";\nexport const ROUTER = SUSHISWAP_ROUTER;\nexport const MASTER_CHEF = \"0xc2edad668740f1aa35e4d8f227fb8e17dca888cd\";\nexport const SUSHI_BAR = \"0x8798249c2e607446efb7ad49ec89dd1865ff4272\";\nexport const SUSHI_ROLL = \"0x16E58463eb9792Bc236d8860F5BC69A81E26E32B\";\nexport const LP_TOKEN_SCANNER = \"0xD132Ce8eA8865348Ac25E416d95ab1Ba84D216AF\";\nexport const ZAP_IN = \"0xfF350eDc2242Ca4d7252A64746aec4A5487a852B\";\nexport const ZAP_OUT = \"0xf12CAB7Acaa14Eed3bEa82199ea2f5c2C2194B81\";\nexport const ORDER_BOOK = OrderBook.address;\nexport const SETTLEMENT = Settlement.address;\n","import React from \"react\";\n\nimport { EthersContextConsumer, EthersContextProvider } from \"./EthersContext\";\nimport { GlobalContextConsumer, GlobalContextProvider } from \"./GlobalContext\";\n\nexport const ContextProvider = ({ children }) => {\n    return (\n        <GlobalContextProvider>\n            <EthersContextProvider>{children}</EthersContextProvider>\n        </GlobalContextProvider>\n    );\n};\n\nexport const ContextConsumer = ({ children }) => {\n    return (\n        <GlobalContextConsumer>\n            {globalContext => (\n                <EthersContextConsumer>\n                    {ethersContext =>\n                        children({\n                            ...globalContext,\n                            ...ethersContext\n                        })\n                    }\n                </EthersContextConsumer>\n            )}\n        </GlobalContextConsumer>\n    );\n};\n","import * as React from \"react\";\nimport Svg, { Path, SvgProps } from \"react-native-svg\";\n\nfunction SvgMoon(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 520 520\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={2}\n            {...props}>\n            <Path fill=\"none\" d=\"M0 0h519.851v519.851H0z\" />\n            <Path\n                d=\"M248.7 44.15c-33.5 29.48-54.6 72.67-54.6 120.76 0 88.79 72 160.88 160.8 160.88 48.1 0 91.3-21.15 120.8-54.64-5.9 114.05-100.3 204.84-215.8 204.84-119.2 0-216.1-96.81-216.1-216.06C43.8 144.44 134.6 50 248.7 44.15z\"\n                fill=\"#fff\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgMoon;\n","import * as React from \"react\";\nimport Svg, { Circle, Path, SvgProps } from \"react-native-svg\";\n\nfunction SvgSun(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 520 520\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={2}\n            {...props}>\n            <Path fill=\"none\" d=\"M.056 0h519.851v519.851H.056z\" />\n            <Path\n                d=\"M260 476.13l-16.5-62.6a154.397 154.397 0 0032.9 0l-16.4 62.6zM342.7 459.67l-39.1-51.55c10.6-3.13 20.8-7.37 30.3-12.57l8.8 64.12zM186 395.55c9.6 5.23 19.7 9.47 30.4 12.57l-39.2 51.55 8.8-64.12zM412.8 412.8l-55.9-32.67c8.6-6.9 16.4-14.7 23.3-23.26l32.6 55.93zM139.8 356.87a156.5 156.5 0 0023.2 23.26l-55.9 32.67 32.7-55.93zM459.7 342.66l-64.1-8.77c5.2-9.56 9.5-19.72 12.6-30.37l51.5 39.14zM111.8 303.52c3.1 10.64 7.3 20.81 12.6 30.37l-64.2 8.77 51.6-39.14zM476.2 259.93l-62.6 16.43c.6-5.4.9-10.88.9-16.43 0-5.55-.3-11.04-.9-16.43l62.6 16.43zM106.4 243.5c-.6 5.39-.9 10.88-.9 16.43 0 5.55.3 11.03.9 16.43l-62.6-16.43 62.6-16.43zM408.2 216.33c-3.2-10.64-7.4-20.81-12.6-30.36l64.1-8.78-51.5 39.14zM124.4 185.97c-5.3 9.55-9.5 19.71-12.6 30.36l-51.6-39.14 64.2 8.78zM163 139.73c-8.5 6.9-16.3 14.69-23.2 23.25l-32.7-55.93 55.9 32.68zM380.2 162.98c-6.9-8.56-14.7-16.36-23.3-23.25l55.9-32.68-32.6 55.93zM333.9 124.3c-9.5-5.22-19.7-9.47-30.3-12.56l39.1-51.56-8.8 64.12zM216.4 111.74c-10.7 3.12-20.8 7.36-30.4 12.56l-8.8-64.12 39.2 51.56zM276.4 106.33c-5.4-.59-10.9-.88-16.4-.88-5.6 0-11.1.29-16.5.88l16.5-62.6 16.4 62.6z\"\n                fill=\"#FA52A0\"\n            />\n            <Circle\n                cx={26447}\n                cy={9542.46}\n                r={216.2}\n                fill=\"#FA52A0\"\n                transform=\"matrix(.5998 0 0 .5998 -15602.944 -5463.63)\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgSun;\n","import React, { useContext } from \"react\";\nimport { TouchableHighlight, View } from \"react-native\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport SvgMoon from \"./svg/SvgMoon\";\nimport SvgSun from \"./svg/SvgSun\";\n\nconst DarkModeSwitch = props => {\n    const { darkMode, setDarkMode } = useContext(GlobalContext);\n    const { overlay } = useColors();\n    const onPress = async () => {\n        await setDarkMode(!darkMode);\n    };\n    return (\n        <View style={props.style}>\n            <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={onPress}>\n                {darkMode ? (\n                    <SvgMoon width={24} height={24} style={{ margin: 3 }} />\n                ) : (\n                    <SvgSun width={30} height={30} />\n                )}\n            </TouchableHighlight>\n        </View>\n    );\n};\n\nexport default DarkModeSwitch;\n","import React, { useContext } from \"react\";\nimport { TouchableWithoutFeedback, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport Modal from \"modal-react-native-web\";\nimport { Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport useColors from \"../../hooks/useColors\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\n// tslint:disable-next-line:max-func-body-length\nconst MobileWebMenu = ({ expanded, onCollapse }) => {\n    const { overlay } = useColors();\n    return (\n        <Modal animationType=\"slide\" transparent={true} visible={expanded}>\n            <TouchableWithoutFeedback style={{ height: \"100%\" }} onPress={onCollapse}>\n                <View\n                    style={{\n                        height: \"100%\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"flex-end\",\n                        paddingRight: Spacing.normal,\n                        paddingBottom: Spacing.normal,\n                        backgroundColor: overlay\n                    }}>\n                    <View style={{ marginTop: Spacing.small }}>\n                        <CloseButton onPress={onCollapse} />\n                    </View>\n                    <View style={{ alignItems: \"flex-end\" }}>\n                        <DarkModeSwitch style={{ marginBottom: 4 }} />\n                        <Status />\n                        <View style={{ height: Spacing.large }} />\n                        <MobileWebMenuItem title={\"Home\"} path={\"/\"} />\n                        <MobileWebMenuItem title={\"Swap\"} path={\"/swap\"} />\n                        <MobileWebMenuItem title={\"Liquidity\"} path={\"/liquidity\"} />\n                        <MobileWebMenuItem title={\"Migrate\"} path={\"/migrate\"} />\n                        <MobileWebMenuItem title={\"Stake\"} path={\"/staking\"} />\n                        <MobileWebMenuItem title={\"Farm\"} path={\"/farming\"} />\n                    </View>\n                </View>\n            </TouchableWithoutFeedback>\n        </Modal>\n    );\n};\n\nconst CloseButton = ({ onPress }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={textDark} size={32} onPress={onPress} />;\n};\n\nconst MobileWebMenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ textDecoration: \"none\", marginBottom: Spacing.tiny }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 24,\n                    color: active ? textDark : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst Status = () => {\n    const { textLight, green, accent } = useColors();\n    const { ethereum, chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : \"Not connected\";\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        ethereum?.disconnect?.();\n    };\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.tiny }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginTop: 8 }} />\n                <Text style={{ fontSize: 18, color: textLight, marginLeft: 8 }}>{title}</Text>\n            </FlexView>\n            {ethereum?.isWalletConnect && (\n                <Text\n                    style={{\n                        fontFamily: \"regular\",\n                        fontSize: 15,\n                        color: accent,\n                        alignSelf: \"flex-end\"\n                    }}\n                    onPress={onPress}>\n                    Disconnect\n                </Text>\n            )}\n        </View>\n    );\n};\n\nexport default MobileWebMenu;\n","import * as React from \"react\";\nimport Svg, { ClipPath, G, Path, SvgProps } from \"react-native-svg\";\n\n// tslint:disable-next-line:max-func-body-length\nfunction SvgLogo(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 76 68\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={1.5}\n            {...props}>\n            <G>\n                <ClipPath id=\"prefix__a\">\n                    <Path d=\"M0 0h76v68H0z\" />\n                </ClipPath>\n                <G clipPath=\"url(#prefix__a)\">\n                    <Path fill=\"none\" d=\"M-.005.004h75.412V67.5H-.005z\" />\n                    <Path\n                        d=\"M17555.2 7266.44c13.9-19.4 61.1-9.44 105.3 22.23 44.2 31.67 68.8 73.13 54.9 92.53l-42.6 59.38c-13.9 19.41-61 9.45-105.2-22.22-44.2-31.67-68.8-73.14-54.9-92.54l42.5-59.38z\"\n                        fill=\"none\"\n                        stroke=\"#fff\"\n                        strokeWidth={14}\n                        transform=\"matrix(.26772 0 0 .26772 -4678.27 -1934.9)\"\n                    />\n                    <Path\n                        d=\"M17550.4 7275.75c13.9-19.4 61-9.44 105.2 22.22 44.2 31.67 68.8 73.14 54.9 92.54l-42.5 59.38c-13.9 19.4-61.1 9.44-105.3-22.23-44.2-31.67-68.8-73.13-54.9-92.53l42.6-59.38z\"\n                        fill=\"#fff\"\n                        stroke=\"#fff\"\n                        strokeWidth={4.91}\n                        transform=\"matrix(.26772 0 0 .26772 -4676.962 -1937.14)\"\n                    />\n                    <Path\n                        d=\"M20.767 9.743v-.002c1.633-2.31 4.846-3.336 8.995-2.996 5.703.471 13.28 3.512 20.534 8.722 7.282 5.21 12.583 11.402 14.859 16.658 1.66 3.804 1.713 7.169.053 9.48v-.003.002L53.83 57.501c-1.66 2.31-4.872 3.336-8.995 2.996-5.702-.471-13.279-3.512-20.56-8.722-7.256-5.207-12.583-11.4-14.859-16.655-1.66-3.807-1.713-7.17-.053-9.482L20.767 9.74v.002zm24.71 31.819L28.13 52.024c.804.506 1.607.982 2.383 1.432l17.803-10.74a43.599 43.599 0 01-2.838-1.154zm-6.639-3.556l-16.41 9.9c.749.6 1.498 1.19 2.301 1.77l16.76-10.117a54.471 54.471 0 01-2.651-1.553zm-3.453-2.329C28.263 30.51 23.07 24.41 20.82 19.221c-.696-1.588-1.098-3.1-1.232-4.49l-8.647 12.047c-1.312 1.845-1.044 4.525.268 7.563 1.499 3.435 4.364 7.274 8.245 10.95l15.93-9.614zm28.244 4.79c1.311-1.845 1.07-4.527-.268-7.566-2.169-5.009-7.282-10.88-14.19-15.846-6.933-4.964-14.135-7.911-19.57-8.361-3.319-.273-5.942.343-7.254 2.187l-.08.11c-1.232 1.842-.964 4.476.32 7.453 2.196 5.012 7.283 10.883 14.216 15.85 6.934 4.965 14.136 7.913 19.57 8.36 3.24.268 5.837-.316 7.175-2.078l.08-.11zM45.933 21.563c3.48 2.485 6.023 5.416 7.12 7.925.617 1.413.777 2.658.161 3.515-.615.859-1.847 1.1-3.373.974-2.73-.225-6.345-1.708-9.798-4.195-3.48-2.484-6.024-5.416-7.121-7.922-.616-1.413-.777-2.658-.161-3.517.616-.86 1.847-1.1 3.373-.972 2.73.225 6.318 1.708 9.799 4.192z\"\n                        fill=\"#191932\"\n                    />\n                </G>\n            </G>\n            <Path\n                d=\"M65.95 42.047L54.507 57.834c-1.8 2.507-5.293 3.714-9.832 3.345-5.857-.479-13.62-3.542-21.061-8.824-7.442-5.286-12.868-11.582-15.232-16.912-1.8-4.132-1.773-7.78.054-10.29L19.853 9.368c1.826-2.507 5.319-3.714 9.832-3.345 5.856.479 13.646 3.544 21.088 8.827 7.44 5.283 12.867 11.578 15.204 16.909 1.827 4.132 1.773 7.782-.027 10.289zm-43.035-30.51c1.182-1.622 3.546-2.043 6.474-1.803 5.346.436 12.384 3.318 19.18 8.14 6.797 4.82 11.82 10.502 13.97 15.368 1.155 2.666 1.53 5.016.349 6.638l1.531 1.082-1.531-1.082-11.444 15.787c-1.155 1.62-3.519 2.042-6.447 1.8-5.346-.433-12.411-3.318-19.207-8.138-6.797-4.823-11.82-10.504-13.943-15.367-1.182-2.67-1.53-5.02-.349-6.639l11.417-15.787z\"\n                fill=\"#fff\"\n            />\n            <Path\n                d=\"M21.407 10.835c3.734-5.158 16.387-2.51 28.26 5.908 11.874 8.42 18.483 19.445 14.748 24.603L53 57.133c-3.734 5.158-16.414 2.51-28.288-5.91-11.873-8.42-18.482-19.443-14.748-24.6l11.444-15.788z\"\n                fill=\"#fff\"\n            />\n            <Path\n                d=\"M20.584 9.88c1.661-2.301 4.873-3.315 9.025-2.986 5.731.465 13.317 3.507 20.625 8.658 7.282 5.178 12.625 11.343 14.895 16.55 1.66 3.78 1.716 7.123.055 9.425L53.778 57.309c-1.661 2.301-4.9 3.315-9.025 2.986-5.73-.493-13.344-3.507-20.625-8.685-7.31-5.152-12.625-11.316-14.922-16.522-1.662-3.781-1.717-7.124-.056-9.426L20.584 9.88zm43.022 30.523v-.027c1.329-1.809 1.052-4.494-.249-7.508-2.187-4.959-7.309-10.795-14.285-15.727-6.95-4.932-14.175-7.864-19.629-8.302-3.322-.274-5.952.329-7.28 2.165l-.056.11c-1.246 1.835-.97 4.438.332 7.397 2.187 4.987 7.309 10.823 14.258 15.755 6.948 4.932 14.174 7.863 19.628 8.302 3.267.246 5.842-.33 7.198-2.055l.083-.137v.027zM45.833 21.607c3.488 2.466 6.063 5.398 7.142 7.891.637 1.398.803 2.63.166 3.48-.609.85-1.855 1.096-3.377.959-2.741-.22-6.34-1.699-9.828-4.165-3.489-2.466-6.063-5.37-7.143-7.863-.61-1.398-.775-2.63-.166-3.48.609-.85 1.855-1.096 3.405-.987 2.713.247 6.34 1.7 9.8 4.165z\"\n                fill=\"#0e0f23\"\n            />\n            <Path\n                d=\"M18607.7 16015.7c1.1 26.3 27 51.4 46.9 68.4 27.7 23.6 72.3 41.3 97.2 37.3\"\n                fill=\"none\"\n                stroke=\"#fff\"\n                strokeWidth={3}\n                strokeMiterlimit={4}\n                strokeDasharray=\"6,6,75,75\"\n                strokeDashoffset={3}\n                transform=\"matrix(.27685 0 0 .274 -5132.063 -4372.686)\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgLogo;\n","import React, { FC, useContext } from \"react\";\nimport { TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_HEIGHT, HEADER_WIDTH, IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport SvgLogo from \"../svg/SvgLogo\";\nimport Text from \"../Text\";\n\nexport interface WebHeaderProps {\n    onExpandMenu?: () => void;\n}\n\nconst WebHeader: FC<WebHeaderProps> = props => {\n    const { header, borderDark } = useColors();\n    return (\n        <View\n            // @ts-ignore\n            style={{\n                position: \"fixed\",\n                top: 0,\n                zIndex: 100,\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                paddingBottom: Spacing.small,\n                backgroundColor: header,\n                borderBottomWidth: 1,\n                borderColor: borderDark\n            }}>\n            <FlexView\n                style={{\n                    flex: 1,\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    alignSelf: \"center\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"flex-end\",\n                    paddingTop: Spacing.small,\n                    paddingHorizontal: Spacing.normal\n                }}>\n                <Title />\n                {IS_DESKTOP ? <Menu /> : <MenuIcon onExpand={props.onExpandMenu} />}\n            </FlexView>\n        </View>\n    );\n};\n\nexport const Title = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { textDark, white } = useColors();\n    const color = darkMode ? white : textDark;\n    return (\n        <FlexView style={{ alignSelf: \"center\", alignItems: \"center\" }}>\n            <SvgLogo width={32} height={32} style={{ marginRight: 8 }} />\n            <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\n                <Text style={{ fontSize: 28, color }}>SushiSwap</Text>\n                <Text fontWeight={\"light\"} style={{ fontSize: 28, color, marginLeft: 4 }}>\n                    lite\n                </Text>\n            </Link>\n        </FlexView>\n    );\n};\n\nconst Menu = () => {\n    return (\n        <FlexView\n            style={{\n                height: \"100%\",\n                alignItems: \"center\"\n            }}>\n            <MenuItem title={\"Swap\"} path={\"/swap\"} />\n            <MenuItem title={\"Liquidity\"} path={\"/liquidity\"} />\n            <MenuItem title={\"Migrate\"} path={\"/migrate\"} />\n            <MenuItem title={\"Stake\"} path={\"/staking\"} />\n            <MenuItem title={\"Farm\"} path={\"/farming\"} />\n            <DarkModeSwitch style={{ marginLeft: Spacing.small }} />\n            <Status />\n        </FlexView>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ marginLeft: Spacing.tiny, textDecoration: \"none\" }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 18,\n                    color: active ? textDark : textLight,\n                    padding: 3\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst MenuIcon = ({ onExpand }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"menu\"} size={28} color={textDark} onPress={onExpand} />;\n};\n\nconst Status = () => {\n    const { textLight, green, borderDark } = useColors();\n    const { ethereum, chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : \"Not connected\";\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        if (confirm(\"Do you want to disconnect?\")) ethereum?.disconnect?.();\n    };\n    return (\n        <TouchableHighlight onPress={onPress} disabled={!ethereum?.isWalletConnect}>\n            <FlexView\n                style={{\n                    height: 28,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    marginLeft: Spacing.small,\n                    paddingHorizontal: Spacing.small,\n                    borderRadius: 16,\n                    borderWidth: 1,\n                    borderColor: borderDark\n                }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginRight: 12 }} />\n                <Text style={{ fontSize: 15, color: textLight, marginRight: 2 }}>{title}</Text>\n                {ethereum?.isWalletConnect && <CloseIcon />}\n            </FlexView>\n        </TouchableHighlight>\n    );\n};\n\nconst CloseIcon = () => {\n    const { textLight } = useColors();\n    return (\n        <Icon\n            type={\"material-community\"}\n            name={\"close\"}\n            size={15}\n            color={textLight}\n            style={{ paddingLeft: 2, paddingTop: 2 }}\n        />\n    );\n};\n\nexport default WebHeader;\n","import React from \"react\";\n\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport Title from \"../components/Title\";\nimport WebSubMenu from \"../components/web/WebSubMenu\";\nimport Screen from \"./Screen\";\n\nconst EmptyScreen = () => {\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={\"Loading...\"} />\n                </Content>\n            </Container>\n            <WebSubMenu items={[]} />\n        </Screen>\n    );\n};\n\nexport default EmptyScreen;\n","import React, { lazy, Suspense, useContext, useEffect, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { DefaultTheme, NavigationContainer, Theme } from \"@react-navigation/native\";\nimport useAsyncEffect from \"use-async-effect\";\nimport MobileWebMenu from \"../components/web/MobileWebMenu\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport EmptyScreen from \"./EmptyScreen\";\n\nconst FarmingScreen = lazy(() => import(\"./FarmingScreen\"));\nconst HarvestScreen = lazy(() => import(\"./HarvestScreen\"));\nconst LiquidityScreen = lazy(() => import(\"./LiquidityScreen\"));\nconst MigrateScreen = lazy(() => import(\"./MigrateScreen\"));\nconst MyLimitOrdersScreen = lazy(() => import(\"./MyLimitOrdersScreen\"));\nconst RemoveLiquidityScreen = lazy(() => import(\"./RemoveLiquidityScreen\"));\nconst StakeScreen = lazy(() => import(\"./StakeScreen\"));\nconst UnstakeScreen = lazy(() => import(\"./UnstakeScreen\"));\nconst SwapScreen = lazy(() => import(\"./SwapScreen\"));\nconst HomeScreen = lazy(() => import(\"./HomeScreen\"));\n\nexport const Screens = () => {\n    const { load } = useContext(GlobalContext);\n    useAsyncEffect(load, []);\n    return Platform.OS === \"web\" ? <WebScreens /> : <AppScreens />;\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst WebScreens = () => {\n    const { address } = useContext(EthersContext);\n    const [menuExpanded, setMenuExpanded] = useState(false);\n    const { background } = useColors();\n    useEffect(() => {\n        if (!address) setMenuExpanded(false);\n    }, [address]);\n    return (\n        <Router>\n            <View style={{ flex: 1, backgroundColor: background }}>\n                <Suspense fallback={<EmptyScreen />}>\n                    <Switch>\n                        <Route path={\"/swap/my-orders\"}>\n                            <MyLimitOrdersScreen />\n                        </Route>\n                        <Route path={\"/swap\"}>\n                            <SwapScreen />\n                        </Route>\n                        <Route path={\"/liquidity/migrate\"}>\n                            <Redirect to={\"/migrate\"} />\n                        </Route>\n                        <Route path={\"/liquidity/remove\"}>\n                            <RemoveLiquidityScreen />\n                        </Route>\n                        <Route path={\"/liquidity\"}>\n                            <LiquidityScreen />\n                        </Route>\n                        <Route path={\"/farming/harvest\"}>\n                            <HarvestScreen />\n                        </Route>\n                        <Route path={\"/farming\"}>\n                            <FarmingScreen />\n                        </Route>\n                        <Route path={\"/migrate\"}>\n                            <MigrateScreen />\n                        </Route>\n                        <Route path={\"/staking/unstake\"}>\n                            <UnstakeScreen />\n                        </Route>\n                        <Route path={\"/staking\"}>\n                            <StakeScreen />\n                        </Route>\n                        <Route path={\"/\"} exact={true}>\n                            <HomeScreen />\n                        </Route>\n                        <Redirect to={\"/\"} />\n                    </Switch>\n                </Suspense>\n                <WebHeader onExpandMenu={() => setMenuExpanded(true)} />\n                {!IS_DESKTOP && <MobileWebMenu expanded={menuExpanded} onCollapse={() => setMenuExpanded(false)} />}\n            </View>\n        </Router>\n    );\n};\n\nconst Tab = createBottomTabNavigator();\n\nconst AppScreens = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary, accent, background, border, textDark, disabled } = useColors();\n    const theme: Theme = {\n        ...DefaultTheme,\n        dark: darkMode,\n        colors: {\n            primary,\n            background,\n            border,\n            card: background,\n            notification: background,\n            text: textDark\n        }\n    };\n    return (\n        <NavigationContainer theme={theme}>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: accent,\n                    inactiveTintColor: disabled,\n                    labelStyle: { marginBottom: 4 }\n                }}>\n                <Tab.Screen name=\"Home\" component={SwapScreen} options={tabOptions(\"home\")} />\n                <Tab.Screen name=\"Liquidity\" component={LiquidityScreen} options={tabOptions(\"water\")} />\n                <Tab.Screen name=\"Farming\" component={FarmingScreen} options={tabOptions(\"leaf\")} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n};\n\nconst tabOptions = iconName => ({\n    tabBarIcon: ({ color }) => <Icon type={\"material-community\"} name={iconName} color={color} />\n});\n","/* tslint:disable:ordered-imports */\nimport \"./globals\";\nimport React from \"react\";\n\nimport { OpenSans_300Light, OpenSans_400Regular, OpenSans_600SemiBold } from \"@expo-google-fonts/open-sans\";\nimport { AppLoading } from \"expo\";\nimport { useFonts } from \"expo-font\";\n\nimport { ContextProvider } from \"./src/context\";\nimport { Screens } from \"./src/screens\";\nimport { YellowBox } from \"react-native\";\n\nif (__DEV__) {\n    YellowBox.ignoreWarnings([\"Setting a timer\", \"VirtualizedLists should never be nested\"]);\n}\n\nconst App = () => {\n    const [fontsLoaded] = useFonts({\n        light: OpenSans_300Light,\n        regular: OpenSans_400Regular,\n        bold: OpenSans_600SemiBold\n    });\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    }\n    return (\n        <ContextProvider>\n            <Screens />\n        </ContextProvider>\n    );\n};\n\nexport default App;\n","import React, { FC } from \"react\";\nimport { Text as NativeText, TextProps as NativeTextProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface TextProps extends NativeTextProps {\n    note?: boolean;\n    caption?: boolean;\n    dark?: boolean;\n    medium?: boolean;\n    light?: boolean;\n    disabled?: boolean;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\nconst Text: FC<TextProps> = props => {\n    const { textDark, textMedium, textLight, placeholder } = useColors();\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = props.disabled\n        ? placeholder\n        : props.medium\n        ? textMedium\n        : props.note || props.light\n        ? textLight\n        : textDark;\n    return (\n        <NativeText\n            {...props}\n            h1Style={[{ fontFamily }, props.h1Style]}\n            h2Style={[{ fontFamily }, props.h2Style]}\n            h3Style={[{ fontFamily }, props.h3Style]}\n            h4Style={[{ fontFamily }, props.h4Style]}\n            style={[\n                {\n                    fontFamily,\n                    fontSize: props.note ? 13 : props.caption ? 18 : 15,\n                    color\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Text;\n","global.Buffer = require('buffer').Buffer;\n"],"sourceRoot":""}