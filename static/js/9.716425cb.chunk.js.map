{"version":3,"sources":["src/components/Heading.tsx","src/hooks/useLinker.tsx","src/components/TokenLogo.tsx","src/components/Column.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/components/Border.tsx","src/hooks/useAllCommonPairs.tsx","src/hooks/useSDK.tsx","src/components/Loading.tsx","src/components/TokenSymbol.tsx","src/components/TokenAmount.tsx","src/components/TokenName.tsx","assets/empty-token.png","assets/ETH.png","src/hooks/useHomeState.tsx","src/screens/HomeScreen.tsx"],"names":["Heading","props","accent","useColors","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","IS_DESKTOP","paddingBottom","tiny","text","buttonText","type","size","title","onPress","onPressButton","color","buttonStyle","paddingHorizontal","Platform","OS","path","route","target","history","useHistory","useCallback","window","open","push","_target","navigate","useNavigation","TokenLogo","backgroundLight","useState","error","setError","placeholder","require","ETH","source","replaceWETH","isWETH","token","uri","logoURI","width","backgroundColor","borderRadius","onError","opacity","Column","View","marginTop","noTopMargin","large","normal","SocialIcon","darkMode","useContext","GlobalContext","background","textLight","light","iconColor","undefined","borderWidth","borderColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressDiscord","FlexView","justifyContent","name","raised","reverse","reverseColor","containerStyle","WebFooter","padding","Text","note","textAlign","Border","border","DAI","Token","ChainId","MAINNET","USDC","USDT","SUSHI","YAM","AMPL","BASES_TO_CHECK_TRADES_AGAINST","WETH","CUSTOM_BASES","address","wrappedCurrency","currency","ETHER","useAllCommonPairs","loadAllCommonPairs","currencyA","currencyB","provider","a","async","bases","tokenA","tokenB","basePairs","flatMap","base","map","otherBase","filter","t0","t1","allPairCombinations","tokens","Boolean","b","customBases","customBasesA","customBasesB","find","equals","Promise","all","pair","Fetcher","fetchPairData","pairs","useSDK","getTotalSupply","EthersContext","getTrade","fromToken","toToken","fromAmount","eth","isETH","from","convertToken","to","Currency","amount","CurrencyAmount","ether","toString","TokenAmount","Trade","bestTradeExactIn","maxHops","maxNumResults","getPair","calculateAmountOfLPTokenMinted","toAmount","liquidityToken","totalSupply","minted","getLiquidityMinted","ethers","BigNumber","raw","Loading","marginVertical","TokenSymbol","caption","marginLeft","symbol","formatBalance","balance","decimals","TokenName","numberOfLines","ellipsizeMode","module","exports","CACHE","fetchTokenWithValue","weth","wethPriceUSD","cached","t","fetched","priceUSD","Number","valueUSD","apply","priceETH","Fraction","convert","priceOf","numerator","div","pow10","mul","fetchLPTokenWithValue","lpToken","fetchTotalValue","values","add","amountDeposited","lpPair","tokenWithValue","tokenReserve","parseCurrencyAmount","reserveOf","tokenPrice","parseBalance","String","useHomeState","signer","loadingTokens","list","setTokens","lpTokens","setLPTokens","pools","setPools","loading","setLoading","loadingLPTokens","setLoadingLPTokens","loadingPools","setLoadingPools","useEffect","useAsyncEffect","length","splice","sushiData","price","parse","fetchMyLPTokens","getAddress","fetchMyPools","Home","state","MyTokens","goToSwap","TokenItem","MyLPTokens","goToRemoveLiquidity","LPTokenItem","Pools","goToFarming","TokenList","renderItem","item","key","data","useMemo","isZero","sort","t2","FlatList","keyExtractor","ItemSeparatorComponent","EmptyList","margin","paddingVertical","TokenPrice","formatUSD","TokenValue","ExternalIcon","textDark","endsWith","constants","AddressZero","TouchableHighlight","toLowerCase","sum","reduce","previous","current","HomeScreen","totalValue","Screen","Container","BackgroundImage","Content","huge","Title"],"mappings":"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","file":"static/js/9.716425cb.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n    style?: TextStyle;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={props.fontWeight || \"bold\"}\n                disabled={props.disabled}\n                style={[{ flex: 1, fontSize: IS_DESKTOP ? 24 : 18, paddingBottom: Spacing.tiny }, props.style]}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                    buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport useColors from \"../hooks/useColors\";\nimport Token from \"../types/Token\";\nimport { isWETH } from \"../utils\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const { backgroundLight: disabled } = useColors();\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && isWETH(props.token) ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? disabled : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={!props.token.logoURI || error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/sushiswap\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/sushiswap\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/YS8xH7E\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport Column from \"../Column\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst WebFooter = () => (\n    <Column noTopMargin={true}>\n        <View\n            style={{\n                width: \"100%\",\n                padding: Spacing.normal\n            }}>\n            <SocialIcons />\n            <Text note={true} style={{ marginTop: Spacing.tiny, textAlign: \"center\", width: \"100%\" }}>\n                Built with ❤️ by SushiSwap\n            </Text>\n        </View>\n    </Column>\n);\n\nexport default WebFooter;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = props => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: props.small ? Spacing.tiny : Spacing.small,\n                marginBottom: props.small ? Spacing.tiny : Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import { useCallback } from \"react\";\n\nimport { ChainId, Currency, ETHER, Fetcher, Pair, Token, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\n\nconst DAI = new Token(ChainId.MAINNET, \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", 18, \"DAI\", \"Dai Stablecoin\");\nconst USDC = new Token(ChainId.MAINNET, \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\", 6, \"USDC\", \"USD//C\");\nconst USDT = new Token(ChainId.MAINNET, \"0xdAC17F958D2ee523a2206206994597C13D831ec7\", 6, \"USDT\", \"Tether USD\");\nconst SUSHI = new Token(ChainId.MAINNET, \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\", 18, \"SUSHI\", \"SushiToken\");\nconst YAM = new Token(ChainId.MAINNET, \"0x0e2298E3B3390e3b945a5456fBf59eCc3f55DA16\", 18, \"YAM\", \"YAM\");\nconst AMPL = new Token(ChainId.MAINNET, \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\", 9, \"AMPL\", \"Ampleforth\");\n\nconst BASES_TO_CHECK_TRADES_AGAINST = [WETH[ChainId.MAINNET], DAI, USDC, USDT, SUSHI, YAM];\nconst CUSTOM_BASES = {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n};\n\nfunction wrappedCurrency(currency: Currency | undefined): Token | undefined {\n    return currency === ETHER ? WETH[ChainId.MAINNET] : currency instanceof Token ? currency : undefined;\n}\n\n// Source: https://github.com/Uniswap/uniswap-interface/blob/master/src/hooks/Trades.ts\nconst useAllCommonPairs = () => {\n    const loadAllCommonPairs = useCallback(\n        // tslint:disable-next-line:max-func-body-length\n        async (currencyA?: Currency, currencyB?: Currency, provider?: ethers.providers.BaseProvider) => {\n            const bases: Token[] = BASES_TO_CHECK_TRADES_AGAINST;\n            const [tokenA, tokenB] = [wrappedCurrency(currencyA), wrappedCurrency(currencyB)];\n            const basePairs: [Token, Token][] = bases\n                .flatMap((base): [Token, Token][] => bases.map(otherBase => [base, otherBase]))\n                .filter(([t0, t1]) => t0.address !== t1.address);\n\n            const allPairCombinations =\n                tokenA && tokenB\n                    ? [\n                          // the direct pair\n                          [tokenA, tokenB],\n                          // token A against all bases\n                          ...bases.map((base): [Token, Token] => [tokenA, base]),\n                          // token B against all bases\n                          ...bases.map((base): [Token, Token] => [tokenB, base]),\n                          // each base against all bases\n                          ...basePairs\n                      ]\n                          .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n                          .filter(([t0, t1]) => t0.address !== t1.address)\n                          .filter(([a, b]) => {\n                              const customBases = CUSTOM_BASES;\n                              if (!customBases) return true;\n\n                              const customBasesA: Token[] | undefined = customBases[a.address];\n                              const customBasesB: Token[] | undefined = customBases[b.address];\n\n                              if (!customBasesA && !customBasesB) return true;\n\n                              if (customBasesA && !customBasesA.find(base => tokenB.equals(base))) return false;\n                              return !(customBasesB && !customBasesB.find(base => tokenA.equals(base)));\n                          })\n                    : [];\n\n            const pairs = await Promise.all(\n                allPairCombinations.map(async pair => {\n                    try {\n                        return await Fetcher.fetchPairData(pair[0], pair[1], provider);\n                    } catch (e) {\n                        return null;\n                    }\n                })\n            );\n            return pairs.filter(pair => pair !== null) as Pair[];\n        },\n        []\n    );\n\n    return { loadAllCommonPairs };\n};\n\nexport default useAllCommonPairs;\n","import { useCallback, useContext } from \"react\";\n\nimport { Currency, CurrencyAmount, Fetcher, Pair, TokenAmount, Trade } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { convertToken, isETH } from \"../utils\";\nimport useAllCommonPairs from \"./useAllCommonPairs\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSDK = () => {\n    const { getTotalSupply } = useContext(EthersContext);\n    const { loadAllCommonPairs } = useAllCommonPairs();\n\n    const getTrade = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider\n        ) => {\n            if (provider) {\n                const eth = isETH(fromToken);\n                const from = convertToken(fromToken);\n                const to = isETH(toToken) ? Currency.ETHER : convertToken(toToken);\n                const pairs = await loadAllCommonPairs(from, to, provider);\n                const amount = eth\n                    ? CurrencyAmount.ether(fromAmount.toString())\n                    : new TokenAmount(from, fromAmount.toString());\n                return Trade.bestTradeExactIn(pairs, amount, to, { maxHops: 3, maxNumResults: 1 })[0];\n            }\n        },\n        []\n    );\n\n    const getPair = useCallback(async (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => {\n        const from = convertToken(fromToken);\n        const to = convertToken(toToken);\n        return await Fetcher.fetchPairData(from, to, provider);\n    }, []);\n\n    const calculateAmountOfLPTokenMinted = async (pair: Pair, fromAmount: TokenAmount, toAmount: TokenAmount) => {\n        const totalSupply = await getTotalSupply(pair.liquidityToken.address);\n        if (totalSupply) {\n            const minted = pair.getLiquidityMinted(\n                new TokenAmount(pair.liquidityToken, totalSupply.toString()),\n                fromAmount,\n                toAmount\n            );\n            return ethers.BigNumber.from(minted.raw.toString());\n        }\n    };\n\n    return {\n        getTrade,\n        getPair,\n        calculateAmountOfLPTokenMinted\n    };\n};\n\nexport default useSDK;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","import { useContext, useEffect, useState } from \"react\";\n\nimport { Pair } from \"@sushiswap/sdk\";\nimport sushiData from \"@sushiswap/sushi-data\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport LPTokenWithValue from \"../types/LPTokenWithValue\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { convertToken, formatBalance, isETH, isWETH, parseBalance, parseCurrencyAmount, pow10 } from \"../utils\";\nimport { fetchMyLPTokens, fetchMyPools } from \"../utils/fetch-utils\";\nimport useSDK from \"./useSDK\";\n\nexport interface HomeState {\n    loadingTokens: boolean;\n    loadingLPTokens: boolean;\n    loadingPools: boolean;\n    tokens?: TokenWithValue[];\n    lpTokens?: LPTokenWithValue[];\n    pools?: LPTokenWithValue[];\n}\n\nconst CACHE: TokenWithValue[] = [];\n\n// tslint:disable-next-line:max-func-body-length\nconst useHomeState = () => {\n    const { provider, signer, address, loadingTokens, tokens: list } = useContext(EthersContext);\n    const [tokens, setTokens] = useState<TokenWithValue[]>();\n    const [lpTokens, setLPTokens] = useState<LPTokenWithValue[]>();\n    const [pools, setPools] = useState<LPTokenWithValue[]>();\n    const [loading, setLoading] = useState(true);\n    const [loadingLPTokens, setLoadingLPTokens] = useState(true);\n    const [loadingPools, setLoadingPools] = useState(true);\n    const { getPair } = useSDK();\n\n    useEffect(() => {\n        setTokens(undefined);\n        setLPTokens(undefined);\n        setPools(undefined);\n        setLoading(true);\n        setLoadingLPTokens(true);\n        setLoadingPools(true);\n    }, [address]);\n\n    // Load Tokens\n    useAsyncEffect(async () => {\n        const weth = list.find(t => isWETH(t));\n        if (provider && weth && list.length > 0) {\n            setLoading(true);\n            CACHE.splice(0, CACHE.length);\n            try {\n                const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n                setTokens(\n                    await Promise.all(\n                        list.map(async token => await fetchTokenWithValue(token, weth, wethPriceUSD, getPair, provider))\n                    )\n                );\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [getPair, provider, list, fetchTokenWithValue]);\n\n    // Load Liquidity\n    useAsyncEffect(async () => {\n        const weth = list.find(t => isWETH(t));\n        if (provider && signer && weth && tokens && tokens.length > 0) {\n            setLoadingLPTokens(true);\n            const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n            const fetched = await fetchMyLPTokens(await signer.getAddress(), tokens, provider);\n            try {\n                setLPTokens(\n                    await Promise.all(\n                        fetched.map(lpToken => fetchLPTokenWithValue(lpToken, weth, wethPriceUSD, getPair, provider))\n                    )\n                );\n            } finally {\n                setLoadingLPTokens(false);\n            }\n        }\n    }, [getPair, provider, signer, tokens]);\n\n    // Load Farming\n    useAsyncEffect(async () => {\n        const weth = list.find(t => isWETH(t));\n        if (provider && signer && weth && tokens && tokens.length > 0 && lpTokens) {\n            setLoadingPools(true);\n            const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n            const fetched = await fetchMyPools(await signer.getAddress(), tokens, provider);\n            try {\n                setPools(\n                    await Promise.all(\n                        fetched.map(lpToken => fetchLPTokenWithValue(lpToken, weth, wethPriceUSD, getPair, provider))\n                    )\n                );\n            } finally {\n                setLoadingPools(false);\n            }\n        }\n    }, [getPair, provider, signer, tokens, lpTokens]);\n\n    return {\n        loadingTokens: loading || loadingTokens,\n        loadingLPTokens,\n        loadingPools,\n        tokens,\n        lpTokens,\n        pools\n    };\n};\n\nconst fetchTokenWithValue = async (token: Token, weth: Token, wethPriceUSD: Fraction, getPair, provider) => {\n    const cached = CACHE.find(t => t.address === token.address);\n    if (cached) return cached;\n    let fetched: TokenWithValue;\n    if (isETH(token) || isWETH(token)) {\n        fetched = {\n            ...token,\n            priceUSD: Number(wethPriceUSD.toString()),\n            valueUSD: Number(formatBalance(wethPriceUSD.apply(token.balance)))\n        } as TokenWithValue;\n    } else {\n        try {\n            const pair = await getPair(token, weth, provider);\n            const priceETH = Fraction.convert(pair.priceOf(convertToken(token)));\n            const priceUSD = priceETH.apply(wethPriceUSD.numerator).div(pow10(18 - token.decimals));\n            fetched = {\n                ...token,\n                priceUSD: Number(formatBalance(priceUSD)),\n                valueUSD: Number(formatBalance(priceUSD.mul(token.balance).div(pow10(token.decimals))))\n            } as TokenWithValue;\n        } catch (e) {\n            fetched = { ...token, priceUSD: null, valueUSD: null } as TokenWithValue;\n        }\n    }\n    CACHE.push(fetched);\n    return fetched;\n};\n\nconst fetchLPTokenWithValue = async (lpToken: LPToken, weth: Token, wethPriceUSD: Fraction, getPair, provider) => {\n    const pair = await getPair(lpToken.tokenA, lpToken.tokenB, provider);\n    const values = await Promise.all([\n        await fetchTotalValue(lpToken.tokenA, pair, weth, wethPriceUSD, getPair, provider),\n        await fetchTotalValue(lpToken.tokenB, pair, weth, wethPriceUSD, getPair, provider)\n    ]);\n    const priceUSD = values[0]\n        .add(values[1])\n        .mul(pow10(18))\n        .div(lpToken.totalSupply);\n    return {\n        ...lpToken,\n        priceUSD: Number(formatBalance(priceUSD)),\n        valueUSD: Number(\n            formatBalance(priceUSD.mul(lpToken.amountDeposited || lpToken.balance).div(pow10(lpToken.decimals)))\n        )\n    };\n};\n\nconst fetchTotalValue = async (token: Token, lpPair: Pair, weth: Token, wethPriceUSD: Fraction, getPair, provider) => {\n    const tokenWithValue = await fetchTokenWithValue(token, weth, wethPriceUSD, getPair, provider);\n    const tokenReserve = parseCurrencyAmount(lpPair.reserveOf(convertToken(token)), token.decimals);\n    const tokenPrice = parseBalance(String(tokenWithValue.priceUSD || 0));\n    return tokenReserve.mul(tokenPrice).div(pow10(token.decimals));\n};\n\nexport default useHomeState;\n","import React, { FC, useCallback, useMemo } from \"react\";\nimport { FlatList, Platform, TextStyle, TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\n\nimport { ethers } from \"ethers\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport FlexView from \"../components/FlexView\";\nimport Heading from \"../components/Heading\";\nimport Loading from \"../components/Loading\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenAmount from \"../components/TokenAmount\";\nimport TokenLogo from \"../components/TokenLogo\";\nimport TokenName from \"../components/TokenName\";\nimport TokenSymbol from \"../components/TokenSymbol\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useHomeState, { HomeState } from \"../hooks/useHomeState\";\nimport useLinker from \"../hooks/useLinker\";\nimport LPTokenWithValue from \"../types/LPTokenWithValue\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { formatUSD } from \"../utils\";\nimport Screen from \"./Screen\";\n\ninterface TokenItemProps {\n    token: TokenWithValue;\n    disabled?: boolean;\n}\n\ninterface LPTokenItemProps {\n    token: LPTokenWithValue;\n    disabled?: boolean;\n}\n\nconst HomeScreen = () => {\n    const state = useHomeState();\n    const loading = state.loadingTokens || state.loadingLPTokens || state.loadingPools;\n    const totalValue = sum(state.tokens) + sum(state.lpTokens) + sum(state.pools);\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content style={{ paddingBottom: Spacing.huge }}>\n                    <Title text={\"Total Value\"} style={{ flex: 1 }} />\n                    <Title\n                        text={loading ? \"Fetching…\" : formatUSD(totalValue, 4)}\n                        fontWeight={\"light\"}\n                        disabled={loading}\n                        style={{ fontSize: IS_DESKTOP ? 32 : 24 }}\n                    />\n                    <Home state={state} />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n        </Screen>\n    );\n};\n\nconst Home = ({ state }: { state: HomeState }) => {\n    return (\n        <View style={{ marginTop: IS_DESKTOP ? Spacing.large : Spacing.normal }}>\n            <MyTokens state={state} />\n            <View style={{ height: Spacing.large }} />\n            <MyLPTokens state={state} />\n            <View style={{ height: Spacing.large }} />\n            <Pools state={state} />\n        </View>\n    );\n};\n\nconst MyTokens = ({ state }: { state: HomeState }) => {\n    const goToSwap = useLinker(\"/swap\", \"Swap\");\n    return (\n        <View>\n            <Heading text={\"Tokens\"} buttonText={\"Manage\"} onPressButton={goToSwap} />\n            <TokenList loading={state.loadingTokens} tokens={state.tokens} TokenItem={TokenItem} />\n        </View>\n    );\n};\n\nconst MyLPTokens = ({ state }: { state: HomeState }) => {\n    const goToRemoveLiquidity = useLinker(\"/liquidity/remove\", \"RemoveLiquidity\");\n    return (\n        <View>\n            <Heading text={\"Liquidity\"} buttonText={\"Manage\"} onPressButton={goToRemoveLiquidity} />\n            {/* @ts-ignore */}\n            <TokenList loading={state.loadingLPTokens} tokens={state.lpTokens} TokenItem={LPTokenItem} />\n        </View>\n    );\n};\n\nconst Pools = ({ state }: { state: HomeState }) => {\n    const goToFarming = useLinker(\"/farming\", \"Farming\");\n    return (\n        <View>\n            <Heading text={\"Farms\"} buttonText={\"manage\"} onPressButton={goToFarming} />\n            {/* @ts-ignore */}\n            <TokenList loading={state.loadingPools} tokens={state.pools} TokenItem={LPTokenItem} />\n        </View>\n    );\n};\n\nconst TokenList = (props: {\n    loading: boolean;\n    tokens?: TokenWithValue[] | LPTokenWithValue[];\n    TokenItem: FC<TokenItemProps | LPTokenItemProps>;\n}) => {\n    const renderItem = useCallback(({ item }) => {\n        return <props.TokenItem key={item.address} token={item} />;\n    }, []);\n    const data = useMemo(\n        () =>\n            (props.tokens || [])\n                // @ts-ignore\n                .filter(token => !(token.amountDeposited ? token.amountDeposited.isZero() : token.balance.isZero()))\n                .sort((t1, t2) => (t2.valueUSD || 0) - (t1.valueUSD || 0)),\n        [props.tokens]\n    );\n    return props.loading ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList\n            keyExtractor={item => item.address}\n            data={data}\n            renderItem={renderItem}\n            ItemSeparatorComponent={() => <Border small={true} />}\n        />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any matching asset.\"}\n            </Text>\n        </View>\n    );\n};\n\nconst TokenItem = (props: TokenItemProps) => {\n    return (\n        <FlexView style={{ alignItems: \"center\", paddingHorizontal: Spacing.tiny, paddingVertical: 4 }}>\n            <TokenLogo token={props.token} disabled={props.disabled} />\n            <View>\n                <TokenPrice token={props.token} disabled={props.disabled} style={{ marginLeft: Spacing.small }} />\n                <TokenName token={props.token} disabled={props.disabled} />\n            </View>\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                <TokenValue token={props.token} disabled={props.disabled} />\n                <FlexView>\n                    <TokenAmount token={props.token} disabled={props.disabled} />\n                    {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\n                </FlexView>\n            </View>\n            <ExternalIcon path={\"/tokens/\" + props.token.address} />\n        </FlexView>\n    );\n};\n\nconst LPTokenItem = (props: LPTokenItemProps) => {\n    return (\n        <FlexView style={{ alignItems: \"center\", paddingHorizontal: Spacing.tiny, paddingVertical: 4 }}>\n            <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\n            <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\n            <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\n                {props.token.tokenA.symbol}-{props.token.tokenB.symbol}\n            </Text>\n            <View style={{ flex: 1, alignItems: \"flex-end\" }}>\n                <TokenValue token={props.token} disabled={props.disabled} />\n                <FlexView>\n                    <TokenAmount token={props.token} amount={props.token.amountDeposited} disabled={props.disabled} />\n                </FlexView>\n            </View>\n            <ExternalIcon path={\"/pairs/\" + props.token.address} />\n        </FlexView>\n    );\n};\n\nconst TokenPrice = (props: { token: TokenWithValue; disabled?: boolean; style?: TextStyle }) => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.priceUSD || 0, 4)}\n        </Text>\n    );\n};\n\nconst TokenValue = (props: { token: TokenWithValue; disabled?: boolean; style?: TextStyle }) => {\n    return (\n        <Text note={true} fontWeight={\"light\"} disabled={props.disabled} style={props.style}>\n            {formatUSD(props.token.valueUSD || 0, 4)}\n        </Text>\n    );\n};\n\nconst ExternalIcon = ({ path }) => {\n    const { textDark, disabled } = useColors();\n    const onPress = () => window.open(\"https://sushiswapanalytics.com/\" + path.toLowerCase(), \"_blank\");\n    const isETH = path.endsWith(ethers.constants.AddressZero);\n    return (\n        <TouchableHighlight onPress={onPress} disabled={isETH}>\n            <Icon\n                type={\"evilicon\"}\n                name={\"external-link\"}\n                color={isETH ? disabled : textDark}\n                style={{ marginLeft: Spacing.tiny }}\n            />\n        </TouchableHighlight>\n    );\n};\n\nconst sum = tokens => (tokens ? tokens.reduce((previous, current) => previous + (current.valueUSD || 0), 0) : 0);\n\nexport default HomeScreen;\n"],"sourceRoot":""}