{"version":3,"sources":["src/hooks/useStyles.tsx","src/components/Heading.tsx","src/hooks/useLinker.tsx","src/components/ErrorMessage.tsx","src/components/ItemSeparator.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/components/Selectable.tsx","src/components/Column.tsx","src/components/FetchingButton.tsx","src/components/InsufficientBalanceButton.tsx","src/components/TokenLogo.tsx","src/components/Meta.tsx","src/components/TokenInput.tsx","src/components/InfoBox.tsx","src/components/Expandable.tsx","src/components/Input.tsx","src/components/Loading.tsx","index.tsx","assets/empty-token.png","src/hooks/useDelayedOnBlockEffect.tsx","src/hooks/useTokenPairState.tsx","assets/ETH.png","src/components/Border.tsx"],"names":["useStyles","useColors","shadowColor","shadow","borderDark","border","useCallback","attrs","borderColor","color","borderWidth","borderRadius","radius","padding","Spacing","small","tiny","elevation","shadowOffset","width","height","shadowOpacity","shadowRadius","overflow","Heading","props","accent","style","alignItems","marginBottom","disabled","medium","fontWeight","flex","fontSize","paddingBottom","text","buttonText","type","size","title","onPress","onPressButton","Platform","OS","path","route","target","history","useHistory","window","open","push","_target","navigate","useNavigation","ErrorMessage","error","marginTop","code","note","message","ITEM_SEPARATOR_HEIGHT","ItemSeparator","SocialIcon","darkMode","useContext","GlobalContext","background","textLight","light","iconColor","undefined","backgroundColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressDiscord","FlexView","justifyContent","name","raised","reverse","reverseColor","containerStyle","Link","to","Text","textDecorationLine","WebFooter","Column","noTopMargin","View","normal","huge","textAlign","Selectable","overlay","backgroundLight","hovered","activeOpacity","underlayColor","selected","large","FetchingButton","InsufficientBalanceButton","symbol","TokenLogo","useState","setError","placeholder","require","ETH","source","replaceWETH","token","uri","logoURI","onError","opacity","Meta","textMedium","url","suffix","label","MaxButton","onPressMax","balance","fee","pow10","gt","sub","ethers","constants","Zero","updateAmount","formatBalance","decimals","position","right","bottom","maxButtonText","IS_DESKTOP","buttonStyle","paddingHorizontal","TokenInput","onChangeText","onAmountChanged","parseBalance","e","endsWith","indexOf","length","value","amount","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","labelStyle","fontFamily","paddingTop","hideMaxButton","InfoBox","Expandable","expanded","setExpanded","shouldExpand","onExpand","display","children","Input","textDark","errors","forbidden","forEach","validation","match","regexp","allowed","join","minHeight","outline","placeholderTextColor","errorStyle","Loading","marginVertical","isServer","process","hoverListener","hasMouse","refs","mousePosition","x","y","hover","hoverFunc","containsEvent","r","previousHoverFunc","unhover","document","event","add","ref","remove","createHoverListener","Hoverable","rest","hostRef","React","hr","setHovered","parent","enhanceScrollView","WrappedComponent","EnhancedScrollView","onScroll","scrollEventThrottle","forwardedRef","setRef","setLocalRef","getForwardedRef","setAndForwardRef","hostNode","interactionState","module","exports","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","EthersContext","addOnBlockListener","removeOnBlockListener","eventName","useAsyncEffect","setTimeout","handles","handle","clearTimeout","useTokenPairState","provider","signer","address","tokens","updateTokens","getTokenAllowance","useSDK","wrapETH","unwrapETH","fromSymbol","setFromSymbol","toSymbol","setToSymbol","fromAmount","setFromAmount","toAmount","setToAmount","fromTokenAllowed","setFromTokenAllowed","toTokenAllowed","setToTokenAllowed","loading","setLoading","wrapping","setWrapping","unwrapping","setUnwrapping","fromToken","find","toToken","useEffect","a","async","minAllowance","BigNumber","from","pow","ROUTER","fromAllowance","gte","toAllowance","onWrap","tx","wait","onUnwrap","Border"],"mappings":"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","file":"static/js/0.74e8c196.chunk.js","sourcesContent":["import { useCallback } from \"react\";\nimport { ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"./useColors\";\n\nconst useStyles = () => {\n    const { shadow: shadowColor, borderDark } = useColors();\n    const border = useCallback(\n        (attrs?: { color?: string; radius?: number }) => ({\n            borderColor: attrs?.color || borderDark,\n            borderWidth: 1,\n            borderRadius: attrs?.radius || 8,\n            padding: Spacing.small\n        }),\n        []\n    );\n    const shadow = () =>\n        ({\n            borderRadius: Spacing.tiny,\n            elevation: Spacing.small,\n            shadowColor,\n            shadowOffset: { width: 0, height: 2 },\n            shadowOpacity: 0.5,\n            shadowRadius: 4,\n            overflow: \"visible\"\n        } as ViewStyle);\n    return { border, shadow };\n};\n\nexport default useStyles;\n","import React, { FC } from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={\"bold\"}\n                disabled={props.disabled}\n                style={{ flex: 1, fontSize: 18, paddingBottom: Spacing.tiny }}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport const ITEM_SEPARATOR_HEIGHT = 10;\n\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\n\nexport default ItemSeparator;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/sushiswap\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/sushiswap\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/YS8xH7E\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React, { useCallback } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport Column from \"../Column\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst WebFooter = () => (\n    <Column noTopMargin={true}>\n        <View\n            style={{\n                width: \"100%\",\n                padding: Spacing.normal,\n                marginTop: Spacing.huge\n            }}>\n            <SocialIcons />\n            <Text note={true} style={{ marginTop: Spacing.tiny, textAlign: \"center\", width: \"100%\" }}>\n                2020 Built by <Link to={\"https://levx.io\"} text={\"LevX Team\"} />\n            </Text>\n        </View>\n    </Column>\n);\n\nconst Link = ({ to, text }) => {\n    const onPress = useCallback(() => {\n        window.open(to, \"_blank\");\n    }, []);\n    return (\n        <Text note={true} style={{ textDecorationLine: \"underline\" }} onPress={onPress}>\n            {text}\n        </Text>\n    );\n};\n\nexport default WebFooter;\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps, ViewStyle } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n    containerStyle?: ViewStyle;\n}\n\nconst Selectable: FC<SelectableProps> = props => {\n    const { borderDark, accent, overlay } = useColors();\n    const { border } = useStyles();\n    const { background, backgroundLight } = useColors();\n    return (\n        <Hoverable style={props.containerStyle}>\n            {({ hovered }) => (\n                <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={props.onPress}>\n                    <View\n                        {...props}\n                        style={[\n                            {\n                                ...border({ color: props.selected ? accent : borderDark }),\n                                backgroundColor: hovered && !props.disabled ? backgroundLight : background\n                            },\n                            props.style\n                        ]}\n                    />\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nexport default Selectable;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst FetchingButton = () => {\n    return <Button title={\"Fetching…\"} disabled={true} />;\n};\nexport default FetchingButton;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    return <Button title={\"Insufficient \" + (symbol ? symbol : \"Balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport Token from \"../types/Token\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && props.token.symbol === \"WETH\" ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? \"black\" : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React, { FC } from \"react\";\n\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    url?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const { textMedium, textLight, placeholder } = useColors();\n    const onPress = useLinker(props.url || \"\", \"\", \"_blank\");\n    const text = props.disabled\n        ? \"N/A\"\n        : props.text\n        ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n        : \"Fetching…\";\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4 }}>\n            <Text fontWeight={\"bold\"} style={{ fontSize: 13, color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text\n                onPress={props.url ? onPress : undefined}\n                style={{\n                    fontSize: 13,\n                    color: props.disabled ? placeholder : props.text ? textMedium : textLight,\n                    textDecorationLine: props.url ? \"underline\" : \"none\"\n                }}>\n                {text}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    token?: Token;\n    amount: string;\n    onAmountChanged: (amount: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenInput: FC<TokenInputProps> = props => {\n    const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.token && props.onAmountChanged) {\n                try {\n                    parseBalance(text, props.token.decimals);\n                    props.onAmountChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAmountChanged(text);\n                    }\n                }\n            }\n        },\n        [props.token, props.onAmountChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.amount}\n                    onChangeText={onChangeText}\n                    placeholder={\"0.0\"}\n                    autoFocus={props.autoFocus || false}\n                    inputStyle={{ marginHorizontal: 4 }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 15,\n                        paddingBottom: 2\n                    }}\n                />\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\n                    <MaxButton\n                        token={props.token}\n                        maxButtonText={props.maxButtonText}\n                        updateAmount={props.onAmountChanged}\n                    />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(() => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (props.token.symbol === \"ETH\") {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount]);\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 12 : 24 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || (IS_DESKTOP ? \"MAX \" + props.token.symbol : \"MAX\")}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: 4 }}\n            />\n        </View>\n    );\n};\n\nexport default TokenInput;\n","import React, { PropsWithChildren } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\n    const { backgroundLight } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: backgroundLight }),\n                    backgroundColor: backgroundLight,\n                    marginTop: Spacing.normal + Spacing.small,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\n\nexport default InfoBox;\n","import React, { FC, ReactNode, useState } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport Heading from \"./Heading\";\n\nexport interface ExpandableProps {\n    title: string;\n    expanded: boolean;\n    onExpand?: () => void;\n    style?: ViewStyle;\n    children?: ReactNode;\n}\n\nconst Expandable: FC<ExpandableProps> = props => {\n    const [expanded, setExpanded] = useState(true);\n    const shouldExpand = props.expanded && expanded;\n    const buttonText = shouldExpand ? undefined : \"Change\";\n    const onPress = () => {\n        setExpanded(true);\n        props.onExpand?.();\n    };\n\n    return (\n        <View style={props.style}>\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\n        </View>\n    );\n};\n\nexport default Expandable;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface Validation {\n    regexp: RegExp;\n    error: string;\n}\n\nexport interface InputProps extends NativeInputProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    allowed?: Validation[];\n    forbidden?: Validation[];\n    onError?: (error: string) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Input: FC<InputProps> = props => {\n    const { textDark, textMedium, textLight } = useColors();\n    const size = props.size || \"normal\";\n    const color = props.color || textDark;\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\n    const onChangeText = useCallback(\n        (text: string) => {\n            props.onChangeText?.(text);\n            props.onError?.(\"\");\n            const errors = [] as string[];\n            if (text !== \"\" && props.forbidden) {\n                props.forbidden.forEach(validation => {\n                    if (text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (text !== \"\" && props.allowed) {\n                props.allowed.forEach(validation => {\n                    if (!text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (errors.length > 0) {\n                props.onError?.(errors.join(\"\\n\"));\n            }\n        },\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\n    );\n    return (\n        <NativeInput\n            {...props}\n            inputStyle={[\n                { fontSize, fontFamily: \"regular\", paddingBottom: 4, color, marginTop: 0, minHeight: 32 },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\n                props.inputStyle\n            ]}\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\n            placeholderTextColor={props.placeholderTextColor || textLight}\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\n            onChangeText={onChangeText}\n        />\n    );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import * as React from 'react';\nimport type {\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  PressableStateCallbackType,\n  FlatListProps,\n  VirtualizedListProps,\n  ScrollViewProps,\n} from 'react-native';\n\nimport {\n  View,\n  Pressable as NativePressable,\n  ScrollView as NativeScrollView,\n  FlatList as NativeFlatList,\n  VirtualizedList as NativeVirtualizedList,\n  //@ts-ignore\n} from 'react-native-web';\n\nconst isServer =\n  typeof process !== 'undefined' &&\n  process.release &&\n  process.release.name === 'node';\n\nconst hoverListener = createHoverListener();\n\ninterface PressableStateCallbackTypeWeb extends PressableStateCallbackType {\n  focused?: boolean;\n  hovered?: boolean;\n}\n\ntype ChildrenType =\n  | React.ReactNode\n  | ((state: PressableStateCallbackTypeWeb) => React.ReactNode);\n\ntype StylesType =\n  | StyleProp<ViewStyle>\n  | ((state: PressableStateCallbackTypeWeb) => StyleProp<ViewStyle>);\n\ninterface HoverableProps extends ViewProps {\n  children:\n    | React.ReactNode\n    | ((state: { hovered: boolean }) => React.ReactNode);\n}\n\ninterface PressableProps extends Omit<ViewProps, 'style'> {\n  children: ChildrenType;\n  style?: StylesType;\n}\n\nexport function Hoverable({ children, ...rest }: HoverableProps) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <View\n      ref={hostRef}\n      children={\n        typeof children === 'function' ? children({ hovered }) : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction PressableWithoutRef(\n  { style, children, ...rest }: PressableProps,\n  forwardedRef: any\n) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n\n  const setRef = setAndForwardRef({\n    getForwardedRef: () => forwardedRef,\n    setLocalRef: (hostNode: any) => {\n      hostRef.current = hostNode;\n    },\n  });\n\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <NativePressable\n      //@ts-ignore\n      ref={setRef}\n      style={(interactionState: any) =>\n        typeof style === 'function'\n          ? style({ ...interactionState, hovered })\n          : style\n      }\n      children={(interactionState: any) =>\n        typeof children === 'function'\n          ? children({ ...interactionState, hovered })\n          : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction containsEvent(parent: any, clickTarget: any) {\n  if (parent === clickTarget) {\n    return true;\n  }\n  if (!parent) {\n    return false;\n  }\n  for (let child of parent.childNodes) {\n    if (containsEvent(child, clickTarget)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction createHoverListener() {\n  let hasMouse = isServer ? false : window.matchMedia('(pointer:fine)').matches;\n\n  let refs = new Map<any, (h: boolean) => any>();\n  let previousHoverFunc: undefined | ((h: boolean) => any);\n  let mousePosition = {\n    x: 0,\n    y: 0,\n  };\n\n  function hover(target: any) {\n    // hover is targeted directly\n    let hoverFunc = refs.get(target);\n\n    // let's try to see if any of the children of the hover event are hovered\n    if (!hoverFunc) {\n      for (let r of refs.keys()) {\n        if (containsEvent(r, target)) {\n          hoverFunc = refs.get(r);\n        }\n      }\n    }\n\n    previousHoverFunc && previousHoverFunc(false);\n    hoverFunc && hoverFunc(true);\n\n    // cache the previous hover so we can un-hover this later on\n    previousHoverFunc = hoverFunc;\n  }\n\n  function hoverEvent(event: any) {\n    hover(event.target);\n  }\n\n  function unhover() {\n    previousHoverFunc && previousHoverFunc(false);\n  }\n\n  function captureMousePosition(event: any) {\n    mousePosition.x = event.pageX;\n    mousePosition.y = event.pageY;\n  }\n\n  // touch devices have a bug where the onMouseOver is handled while it should not\n  // if the user would click something it keeps hovered while it should unhover\n  // so only listen to these events if the device has a mouse\n  if (hasMouse) {\n    document.onmouseover = hoverEvent;\n    document.onmousemove = captureMousePosition;\n    document.ontouchstart = unhover;\n    document.ontouchend = unhover;\n    document.ontouchcancel = unhover;\n    document.ontouchmove = unhover;\n  }\n\n  function add(ref: any, setHovered: any) {\n    refs.set(ref, setHovered);\n  }\n\n  function remove(ref: any) {\n    refs.delete(ref);\n  }\n\n  return {\n    add,\n    remove,\n    mousePosition,\n    hover,\n  };\n}\n\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }: any) {\n  return function forwardRef(ref: React.ElementRef<any>) {\n    const forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nfunction enhanceScrollView(WrappedComponent: any) {\n  const EnhancedScrollView = ({\n    forwardedRef,\n    onScroll,\n    scrollEventThrottle,\n    ...rest\n  }: any) => {\n    const onScrollInner = (e: any) => {\n      onScroll && onScroll(e);\n      const { mousePosition, hover } = hoverListener;\n      hover(document.elementFromPoint(mousePosition.x, mousePosition.y));\n    };\n    return (\n      <WrappedComponent\n        ref={forwardedRef}\n        onScroll={onScrollInner}\n        scrollEventThrottle={scrollEventThrottle || 25}\n        {...rest}\n      />\n    );\n  };\n\n  return React.forwardRef((props, ref) => {\n    return <EnhancedScrollView {...props} forwardedRef={ref} />;\n  });\n}\n\nexport const Pressable = React.forwardRef(PressableWithoutRef);\nexport const ScrollView = enhanceScrollView(\n  NativeScrollView\n) as React.ElementType<ScrollViewProps>;\nexport const FlatList = enhanceScrollView(NativeFlatList) as React.ElementType<\n  FlatListProps<unknown>\n>;\nexport const VirtualizedList = enhanceScrollView(\n  NativeVirtualizedList\n) as React.ElementType<VirtualizedListProps<unknown>>;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { parseBalance } from \"../utils\";\nimport useSDK from \"./useSDK\";\n\nexport interface TokenPairState {\n    fromSymbol: string;\n    setFromSymbol: (symbol: string) => void;\n    toSymbol: string;\n    setToSymbol: (symbol: string) => void;\n    fromToken?: Token;\n    toToken?: Token;\n    fromAmount: string;\n    setFromAmount: (amount: string) => void;\n    toAmount: string;\n    setToAmount: (amount: string) => void;\n    fromTokenAllowed: boolean;\n    setFromTokenAllowed: (allowed: boolean) => void;\n    toTokenAllowed: boolean;\n    setToTokenAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onWrap: () => Promise<void>;\n    wrapping: boolean;\n    onUnwrap: () => Promise<void>;\n    unwrapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useTokenPairState: () => TokenPairState = () => {\n    const { provider, signer, address, tokens, updateTokens, getTokenAllowance } = useContext(EthersContext);\n    const { wrapETH, unwrapETH } = useSDK();\n    const [fromSymbol, setFromSymbol] = useState(\"\");\n    const [toSymbol, setToSymbol] = useState(\"\");\n    const [fromAmount, setFromAmount] = useState(\"\");\n    const [toAmount, setToAmount] = useState(\"\");\n    const [fromTokenAllowed, setFromTokenAllowed] = useState(false);\n    const [toTokenAllowed, setToTokenAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [wrapping, setWrapping] = useState(false);\n    const [unwrapping, setUnwrapping] = useState(false);\n\n    const fromToken = tokens.find(token => token.symbol === fromSymbol);\n    const toToken = tokens.find(token => token.symbol === toSymbol);\n\n    useEffect(() => {\n        if (fromSymbol === \"\") {\n            setToSymbol(\"\");\n        }\n        setFromAmount(\"\");\n        setToAmount(\"\");\n    }, [fromSymbol, toSymbol]);\n\n    useEffect(() => {\n        setFromSymbol(\"\");\n    }, [address]);\n\n    useAsyncEffect(async () => {\n        if (fromToken && toToken && provider && signer) {\n            setFromTokenAllowed(false);\n            setToTokenAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                if (fromToken.symbol !== \"ETH\") {\n                    const fromAllowance = await getTokenAllowance(fromToken.address, ROUTER);\n                    setFromTokenAllowed(ethers.BigNumber.from(fromAllowance).gte(minAllowance));\n                }\n                if (toToken.symbol !== \"ETH\") {\n                    const toAllowance = await getTokenAllowance(toToken.address, ROUTER);\n                    setToTokenAllowed(ethers.BigNumber.from(toAllowance).gte(minAllowance));\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [fromToken, toToken, provider, signer]);\n\n    const onWrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setWrapping(true);\n            try {\n                const tx = await wrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setWrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    const onUnwrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setUnwrapping(true);\n            try {\n                const tx = await unwrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setUnwrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    return {\n        fromSymbol,\n        setFromSymbol,\n        toSymbol,\n        setToSymbol,\n        fromToken,\n        toToken,\n        fromAmount,\n        setFromAmount,\n        toAmount,\n        setToAmount,\n        fromTokenAllowed,\n        setFromTokenAllowed,\n        toTokenAllowed,\n        setToTokenAllowed,\n        loading,\n        onWrap,\n        wrapping,\n        onUnwrap,\n        unwrapping\n    };\n};\n\nexport default useTokenPairState;\n","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = () => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: Spacing.small,\n                marginBottom: Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n"],"sourceRoot":""}