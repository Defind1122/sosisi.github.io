{"version":3,"sources":["assets/empty-token.png","src/constants/tokens.ts","src/utils/index.ts","src/utils/analytics-utils.ts","src/constants/contracts.ts","src/constants/Fraction.ts","src/hooks/useAllCommonPairs.tsx","src/hooks/useSDK.tsx","src/utils/fetch-utils.ts","src/context/EthersContext.tsx","src/context/GlobalContext.tsx","src/context/index.tsx","src/constants/dimension.ts","src/constants/colors.ts","src/hooks/useColors.tsx","src/components/FlexView.tsx","src/components/Text.tsx","src/components/web/WebHeader.tsx","src/components/Button.tsx","src/components/ApproveButton.tsx","src/hooks/useStyles.tsx","src/components/ButtonGroup.tsx","src/components/CloseIcon.tsx","src/components/Column.tsx","src/components/Container.tsx","src/components/Content.tsx","src/components/ErrorMessage.tsx","src/components/FetchingButton.tsx","src/components/Heading.tsx","src/components/InsufficientBalanceButton.tsx","src/components/Expandable.tsx","src/components/ItemSeparator.tsx","src/components/Loading.tsx","src/components/Selectable.tsx","src/components/TokenLogo.tsx","src/components/TokenSymbol.tsx","src/components/LPTokenSelect.tsx","src/components/Meta.tsx","src/components/Notice.tsx","src/components/SelectIcon.tsx","src/components/Input.tsx","src/components/TokenInput.tsx","src/hooks/useLinker.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/hooks/useDelayedOnBlockEffect.tsx","src/hooks/useTokenPairState.tsx","src/hooks/useLiquidityState.tsx","src/hooks/useLPTokensState.tsx","src/hooks/useFarmingState.tsx","src/components/app/AppHeader.tsx","src/components/web/ConnectToWallet.tsx","src/components/web/MobileNotSupported.tsx","src/screens/Screen.tsx","src/screens/FarmingScreen.tsx","src/components/Border.tsx","src/components/InfoBox.tsx","src/components/Title.tsx","src/hooks/useDelayedEffect.tsx","src/components/TokenAmount.tsx","src/components/TokenName.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/components/UnsupportedButton.tsx","src/components/web/WebSubMenu.tsx","src/hooks/useAddLiquidityState.tsx","src/screens/LiquidityScreen.tsx","src/components/ExperimentalNotice.tsx","src/hooks/useMigrateState.tsx","src/screens/MigrateScreen.tsx","src/hooks/useMyLimitOrdersState.tsx","src/screens/MyLimitOrdersScreen.tsx","src/hooks/useRemoveLiquidityState.tsx","src/screens/RemoveLiquidityScreen.tsx","src/hooks/useStakingState.tsx","src/screens/StakingScreen.tsx","src/hooks/useSwapState.tsx","src/screens/SwapScreen.tsx","src/screens/index.tsx","App.tsx","web-build/register-service-worker.js","globals.js","assets/ETH.png","assets/metamask-dark.png","assets/metamask.png","assets/sushiswap.jpg","node_modules/moment/locale sync /^/.//.*$"],"names":["module","exports","ETH","name","address","ethers","constants","AddressZero","decimals","symbol","logoURI","balance","BigNumber","from","CONTRACTS","ERC20","IUniswapV2Factory","IUniswapV2Pair","IUniswapV2Router02","IWETH","MasterChef","Migrator2","SushiBar","OrderBook","Settlement","LPTokenScanner","abi","formatBalance","value","maxFraction","formatted","utils","formatUnits","split","length","substr","parseBalance","parseUnits","isEmptyValue","text","isBigNumber","isZero","replace","convertToken","token","WETH","SDKToken","ChainId","MAINNET","convertAmount","amount","TokenAmount","toString","parseCurrencyAmount","toExact","getContract","signer","contract","ContractFactory","pow10","exp","pow","logTransaction","tx","a","async","args","Analytics","hash","gasLimit","gasPrice","chainId","ROUTER","MASTER_CHEF","SUSHI_BAR","MIGRATOR2","ORDER_BOOK","SETTLEMENT","Fraction","numerator","denominator","this","sdk","numeratorToken","denominatorToken","mul","NAN","ZERO","BASE","isNaN","fraction","div","eq","gt","lt","maxFractions","str","endsWith","substring","Zero","One","DAI","Token","USDC","USDT","SUSHI","YAM","AMPL","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","wrappedCurrency","currency","ETHER","undefined","useAllCommonPairs","loadAllCommonPairs","useCallback","currencyA","currencyB","provider","bases","tokenA","tokenB","basePairs","flatMap","base","map","otherBase","filter","t0","t1","allPairCombinations","tokens","Boolean","b","customBases","customBasesA","customBasesB","find","equals","Promise","all","pair","Fetcher","fetchPairData","pairs","minAmount","percent","sub","Order","maker","fromToken","toToken","amountIn","amountOutMin","recipient","deadline","Math","floor","Date","now","v","r","s","filledAmountIn","toNumber","settlement","getAddress","hashOfOrder","signMessage","arrayify","signature","splitSignature","sign","useSDK","getTotalSupply","useContext","EthersContext","allowedSlippage","Percent","getTrade","fromAmount","isETH","to","CurrencyAmount","ether","Trade","bestTradeExactIn","maxHops","maxNumResults","swap","trade","Router","feeOnTransfer","ttl","params","swapCallParameters","router","estimateGas","methodName","functions","arg","createOrder","kovanSigner","order","toArgs","orderBook","cancelOrder","wrapETH","weth","deposit","unwrapETH","withdraw","getPair","addLiquidity","toAmount","getTime","removeLiquidityETH","liquidity","amountETH","removeLiquidity","addLiquidityETH","getExpectedSushiRewardPerBlock","masterChef","totalAllocPoint","sushiPerBlock","poolInfo","id","allocPoint","lpTokenId","enterSushiBar","sushiBar","enter","leaveSushiBar","leave","migrate","lpToken","migrator2","calculateSwapFee","calculateLimitOrderFee","calculateLimitOrderReturn","price","limitOrderFeeDeducted","swapFeeDeducted","parse","apply","calculateAmountOfLPTokenMinted","liquidityToken","totalSupply","getLiquidityMinted","fetchTokens","fetch","response","json","send","balances","getBalance","i","tokenBalances","tokenBalance","sort","t2","fetchPools","pools","pool","poolToken","balanceOf","totalDeposited","userInfo","amountDeposited","pendingSushi","fetchMyLPTokens","fetchLPTokens","SUSHISWAP_FACTORY","fetchMyUniswapLPTokens","UNISWAP_FACTORY","factory","factoryContract","allPairsLength","scanner","account","pages","push","page","findPairs","min","flat","index","erc20","Number","findOrFetchToken","token0","token1","t","toLowerCase","meta","logo","fetchMyLimitOrders","canceledHashes","numberOfHashesOfMaker","hashesOfMaker","hashes","HashZero","includes","orderOfHash","filledAmountInOfHash","myOrders","compareOrders","o0","o1","status","compared","fetchMyCanceledLimitOrderHashes","numberOfCanceledHashesOfMaker","allCanceledHashes","React","createContext","kovanProvider","ensName","addOnBlockListener","_name","_listener","removeOnBlockListener","setTokens","_tokens","updateTokens","loadingTokens","approveToken","_token","_spender","_amount","getTokenAllowance","getTokenBalance","_who","EthersContextProvider","children","useState","setProvider","setKovanProvider","setSigner","setKovanSigner","setChainId","setAddress","setENSName","onBlockListeners","setOnBlockListeners","setLoadingTokens","useEffect","kovan","providers","AlchemyProvider","wallet","Wallet","useAsyncEffect","window","ethereum","web3","Web3Provider","alchemy","network","getSigner","onAccountsChanged","selectedAddress","onChainChanged","on","off","lookupAddress","ens","data","spender","MaxUint256","approve","owner","who","listener","old","onBlock","block","Object","entries","Provider","Consumer","GlobalContext","load","clear","deviceType","darkMode","setDarkMode","mnemonic","setMnemonic","GlobalContextProvider","colorScheme","useColorScheme","setDeviceType","getDeviceTypeAsync","AsyncStorage","getItem","mode","mne","removeItem","setItem","String","ContextProvider","SCREEN_HEIGHT","round","Dimensions","get","width","height","Spacing","tiny","small","normal","large","huge","Colors","common","white","transparent","primary","secondary","green","red","twitter","facebook","light","accent","header","submenu","background","backgroundLight","border","borderDark","textDark","textMedium","textLight","disabled","shadow","placeholder","dark","useColors","FlexView","props","flexDirection","direction","View","style","Text","fontFamily","fontWeight","color","medium","note","h1Style","h2Style","h3Style","h4Style","fontSize","caption","Title","alignSelf","alignItems","textDecoration","Menu","title","path","MenuItem","match","useRouteMatch","active","startsWith","marginLeft","padding","Status","connected","justifyContent","paddingHorizontal","borderRadius","borderWidth","borderColor","backgroundColor","marginRight","DarkModeSwitch","onChange","marginBottom","transform","scale","WebHeader","position","top","zIndex","paddingBottom","flex","paddingTop","Button","type","size","loading","onPress","loadingProps","buttonStyle","titleStyle","disabledTitleStyle","disabledStyle","ApproveButton","setLoading","onError","wait","onSuccess","hidden","containerStyle","useStyles","shadowColor","attrs","radius","elevation","shadowOffset","shadowOpacity","shadowRadius","overflow","ButtonGroup","setIndex","selectedIndex","textStyle","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","buttons","borderBottomRightRadius","selectedButtonStyle","marginHorizontal","marginVertical","CloseIcon","Column","marginTop","noTopMargin","Platform","OS","Container","Universal","select","web","ScrollView","contentContainerStyle","default","SafeAreaView","Content","paddingVertical","ErrorMessage","error","code","message","FetchingButton","Heading","buttonText","onPressButton","InsufficientBalanceButton","Expandable","expanded","setExpanded","shouldExpand","onExpand","display","ItemSeparator","Loading","ActivityIndicator","Selectable","hovered","TouchableHighlight","selected","TokenLogo","setError","require","source","replaceWETH","uri","Image","opacity","TokenSymbol","LPTokenList","state","emptyText","Item","renderItem","item","key","onSelectToken","setSelectedLPToken","lpTokens","FlatList","keyExtractor","JSON","stringify","EmptyList","margin","textAlign","LPTokenItem","LPTokenSelect","selectedLPToken","Meta","label","suffix","Notice","borderStyle","SelectIcon","Input","onChangeText","errors","forbidden","forEach","validation","regexp","allowed","join","inputStyle","minHeight","outline","labelStyle","placeholderTextColor","errorStyle","MaxButton","onPressMax","fee","updateAmount","right","bottom","maxButtonText","TokenInput","onAmountChanged","e","indexOf","autoFocus","inputContainerStyle","borderBottomWidth","hideMaxButton","route","target","history","useHistory","open","_target","navigate","useNavigation","SocialIcon","iconColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressDiscord","raised","reverse","reverseColor","Link","textDecorationLine","WebFooter","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","eventName","setTimeout","handles","handle","clearTimeout","useTokenPairState","fromSymbol","setFromSymbol","toSymbol","setToSymbol","setFromAmount","setToAmount","fromTokenAllowed","setFromTokenAllowed","toTokenAllowed","setToTokenAllowed","wrapping","setWrapping","unwrapping","setUnwrapping","minAllowance","fromAllowance","gte","toAllowance","onWrap","onUnwrap","useLiquidityState","setPair","useLPTokensState","lastTimeRefreshed","setLastTimeRefreshed","setLPTokens","selectedLPTokenAllowed","setSelectedLPTokenAllowed","setAmount","updateLPTokens","updateLastTimeRefreshed","useFarmingState","filteredBy","setFilteredBy","action","setAction","expectedSushiRewardPerBlock","setExpectedSushiRewardPerBlock","depositing","setDepositing","withdrawing","setWithdrawing","allowance","onDeposit","onWithdraw","AppHeader","StatusBar","translucent","ConnectWallet","enable","Linking","MobileNotSupported","Screen","DeviceType","PHONE","left","ConnectToWallet","AppLoading","Actions","Farming","h4","showFilter","onFilterChanged","TokenItem","field","LogoSymbol","isEmpty","setIsEmpty","ActionSelect","element","DepositText","WithdrawText","Deposit","AddLiquidityNotice","DepositInfo","sushiReward","DepositControls","approveRequired","AddLiquidityButton","DepositButton","catch","Withdraw","NoLPTokenNotice","WithdrawInfo","WithdrawControls","WithdrawButton","FarmingScreen","Border","InfoBox","useDelayedEffect","timeout","TokenName","numberOfLines","ellipsizeMode","TokenSearch","TokenList","useMemo","localeCompare","selectable","TokenSelect","search","setSearch","query","setQuery","trim","onChangeSymbol","onAddToken","hide","isAddress","UnsupportedButton","SwapSubMenu","items","LiquiditySubMenu","WebSubMenu","isExact","useAddLiquidityState","adding","setAdding","onAdd","AddLiquidity","ToTokenSelect","FromTokenInput","newAmount","priceOf","quote","ToTokenInput","PriceInfo","FirstProviderInfo","noAmount","initialPrice","PairPriceInfo","minted","toFixed","PriceMeta","Controls","fromApproveRequired","toApproveRequired","SupplyButton","LiquidityScreen","ExperimentalNotice","onPressContract","contractURL","useMigrateState","migrating","setMigrating","onMigrate","Migrate","AmountInput","AmountInfo","MigrateButton","MigrateScreen","useMyLimitOrdersState","setMyOrders","selectedOrder","setSelectedOrder","cancellingOrder","setCancellingOrder","orders","onCancelOrder","MyLimitOrders","OrderSelect","onSelectOrder","OrderList","OrderItem","fromTokens","buy","minWidth","colorDisabled","Field","OrderInfo","expiry","diff","moment","isAfter","utc","format","date","toLocaleDateString","toLocaleTimeString","CancelButton","MyLimitOrdersScreen","useRemoveLiquidityState","removing","setRemoving","fromReserve","reserveOf","toReserve","onRemove","amountToRemove","amountToRemoveETH","RemoveLiquidity","RemoveButton","RemoveLiquidityScreen","useStakingState","sushiStaked","setSushiStaked","sushiSupply","setSushiSupply","xSushiSupply","setXSushiSupply","sushiAllowed","setSushiAllowed","xSushiAllowed","setXSushiAllowed","entering","setEntering","leaving","setLeaving","sushi","xSushi","sushiAllowance","xSushiAllowance","sushiContract","xSushiContract","onEnter","onLeave","Staking","StakeText","UnstakeText","Line","NoSushiNotice","NoXSushiNotice","StakeInfo","xSushiAmount","share","StakeButton","UnstakeButton","StakingScreen","useSwapState","orderType","setOrderType","priceInETH","setPriceInETH","setTrade","unsupported","setUnsupported","swapFee","setSwapFee","limitOrderPrice","setLimitOrderPrice","limitOrderFee","setLimitOrderFee","limitOrderSwapFee","setLimitOrderSwapFee","limitOrderReturn","setLimitOrderReturn","swapping","setSwapping","creatingOrder","setCreatingOrder","WeiPerEther","getNetwork","onSwap","result","onCreateOrder","limitOrderUnsupported","Swap","OrderTypeSelect","OrderTypeItem","desc","FromTokenSelect","findIndex","AmountNotice","lte","PriceInput","marketPrice","executionPrice","LimitOrderUnsupportedNotice","TradeInfo","WrapInfo","SwapInfo","outputAmount","impact","priceImpact","SwapControls","SwapButton","WrapButton","UnwrapButton","LimitOrderInfo","d","LimitOrderControls","setAllowed","PriceTooLowButton","PlaceOrderButton","goToLimitOrders","SwapScreen","Screens","WebScreens","Tab","createBottomTabNavigator","AppScreens","theme","DefaultTheme","colors","card","notification","NavigationContainer","Navigator","tabBarOptions","activeTintColor","inactiveTintColor","component","options","tabOptions","iconName","tabBarIcon","App","useFonts","OpenSans_300Light","regular","OpenSans_400Regular","bold","OpenSans_600SemiBold","navigator","addEventListener","serviceWorker","register","scope","then","info","console","global","Buffer","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","resolve"],"mappings":"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","file":"static/js/app.b2c12ca3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","import { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\n\nexport const ETH: Token = {\n    name: \"Ethereum\",\n    address: ethers.constants.AddressZero,\n    decimals: 18,\n    symbol: \"ETH\",\n    logoURI: \"https://lite.sushiswap.fi/images/tokens/ETH.png\",\n    balance: ethers.BigNumber.from(0)\n};\n","import ERC20 from \"@sushiswap/core/build/contracts/ERC20.json\";\nimport IUniswapV2Factory from \"@sushiswap/core/build/contracts/IUniswapV2Factory.json\";\nimport IUniswapV2Pair from \"@sushiswap/core/build/contracts/IUniswapV2Pair.json\";\nimport IUniswapV2Router02 from \"@sushiswap/core/build/contracts/IUniswapV2Router02.json\";\nimport IWETH from \"@sushiswap/core/build/contracts/IWETH.json\";\nimport MasterChef from \"@sushiswap/core/build/contracts/MasterChef.json\";\nimport Migrator2 from \"@sushiswap/core/build/contracts/Migrator2.json\";\nimport SushiBar from \"@sushiswap/core/build/contracts/SushiBar.json\";\nimport { ChainId, CurrencyAmount, Token as SDKToken, TokenAmount, WETH } from \"@sushiswap/sdk\";\nimport OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\nimport { ethers } from \"ethers\";\nimport LPTokenScanner from \"../constants/abi/LPTokenScanner.json\";\nimport Token from \"../types/Token\";\n\nconst CONTRACTS = {\n    ERC20,\n    IUniswapV2Factory,\n    IUniswapV2Pair,\n    IUniswapV2Router02,\n    IWETH,\n    MasterChef,\n    Migrator2,\n    SushiBar,\n    OrderBook,\n    Settlement,\n    LPTokenScanner: { abi: LPTokenScanner }\n};\n\nexport const formatBalance = (value: ethers.BigNumberish, decimals = 18, maxFraction = 0) => {\n    const formatted = ethers.utils.formatUnits(value, decimals);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const parseBalance = (value: string, decimals = 18) => {\n    return ethers.utils.parseUnits(value || \"0\", decimals);\n};\n\nexport const isEmptyValue = (text: string) =>\n    ethers.BigNumber.isBigNumber(text)\n        ? ethers.BigNumber.from(text).isZero()\n        : text === \"\" || text.replace(/0/g, \"\").replace(/\\./, \"\") === \"\";\n\nexport const convertToken = (token: Token) => {\n    return token.symbol === \"ETH\" ? WETH[\"1\"] : new SDKToken(ChainId.MAINNET, token.address, token.decimals);\n};\n\nexport const convertAmount = (token: Token, amount: string) => {\n    return new TokenAmount(convertToken(token), parseBalance(amount, token.decimals).toString());\n};\n\nexport const parseCurrencyAmount = (value: CurrencyAmount, decimals = 18) => {\n    return ethers.BigNumber.from(parseBalance(value.toExact(), decimals));\n};\n\nexport const getContract = (name: string, address: string, signer: ethers.Signer) => {\n    const contract = CONTRACTS[name];\n    return ethers.ContractFactory.getContract(address, contract.abi, signer);\n};\n\nexport const pow10 = (exp: ethers.BigNumberish) => {\n    return ethers.BigNumber.from(10).pow(exp);\n};\n\nexport const formatDate = (date: Date) => {\n    return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n};\n","import * as Analytics from \"expo-firebase-analytics\";\n\nimport { ethers } from \"ethers\";\n\nexport const logTransaction = async (\n    tx: ethers.providers.TransactionResponse,\n    name: string,\n    ...args: any[]\n): Promise<ethers.providers.TransactionResponse> => {\n    await Analytics.logEvent(\"tx:\" + name, {\n        args: args || [],\n        hash: tx.hash,\n        value: tx.value.toString(),\n        gasLimit: tx.gasLimit.toString(),\n        gasPrice: tx.gasPrice.toString(),\n        chainId: tx.chainId\n    });\n    return tx;\n};\n","import OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\n\n// export const UNISWAP_ROUTER = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nexport const SUSHISWAP_ROUTER = \"0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\";\nexport const ROUTER = SUSHISWAP_ROUTER;\nexport const MASTER_CHEF = \"0xc2edad668740f1aa35e4d8f227fb8e17dca888cd\";\nexport const SUSHI_BAR = \"0x8798249c2e607446efb7ad49ec89dd1865ff4272\";\nexport const SUSHI_ROLL = \"0x94CfE11E6b57f6f84bBa2c6DfB0fAeA47C4741D6\";\nexport const LP_TOKEN_SCANNER = \"0xD132Ce8eA8865348Ac25E416d95ab1Ba84D216AF\";\nexport const MIGRATOR2 = \"0x60A02cD1e3443E8ab7825DccF8d7080Eb78BCA6F\";\nexport const ORDER_BOOK = OrderBook.address;\nexport const SETTLEMENT = Settlement.address;\n","import { Fraction as SDKFraction } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\n\nclass Fraction {\n    static BASE = ethers.BigNumber.from(10).pow(18);\n    static NAN = new Fraction(ethers.constants.Zero, ethers.constants.Zero);\n    static ZERO = new Fraction(ethers.constants.Zero, ethers.constants.One);\n    static convert(sdk: SDKFraction) {\n        return new Fraction(\n            ethers.BigNumber.from(sdk.numerator.toString()),\n            ethers.BigNumber.from(sdk.denominator.toString())\n        );\n    }\n    static from(numerator: ethers.BigNumberish, denominator: ethers.BigNumberish) {\n        return new Fraction(ethers.BigNumber.from(numerator), ethers.BigNumber.from(denominator));\n    }\n    static fromTokens(\n        numerator: ethers.BigNumberish,\n        denominator: ethers.BigNumberish,\n        numeratorToken: Token,\n        denominatorToken: Token\n    ) {\n        return new Fraction(\n            ethers.BigNumber.from(numerator).mul(ethers.BigNumber.from(10).pow(denominatorToken.decimals)),\n            ethers.BigNumber.from(denominator).mul(ethers.BigNumber.from(10).pow(numeratorToken.decimals))\n        );\n    }\n    static parse(value: string) {\n        return value === \"\"\n            ? Fraction.NAN\n            : isEmptyValue(value)\n            ? Fraction.ZERO\n            : new Fraction(parseBalance(value, 18), Fraction.BASE);\n    }\n\n    numerator: ethers.BigNumber;\n    denominator: ethers.BigNumber;\n\n    private constructor(numerator: ethers.BigNumber, denominator: ethers.BigNumber) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n    }\n\n    isZero() {\n        return !this.isNaN() && this.numerator.isZero();\n    }\n\n    isNaN() {\n        return this.denominator.isZero();\n    }\n\n    eq(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .eq(this.denominator);\n    }\n\n    gt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .gt(this.denominator);\n    }\n\n    lt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .lt(this.denominator);\n    }\n\n    toString(maxFractions = 8) {\n        if (this.isNaN()) return \"\";\n        if (this.isZero()) return \"0\";\n        let str = formatBalance(this.numerator.mul(Fraction.BASE).div(this.denominator), 18, maxFractions);\n        if (str.endsWith(\".0\")) str = str.substring(0, str.length - 2);\n        return str;\n    }\n\n    apply(value: ethers.BigNumberish) {\n        return this.denominator.isZero() ? ethers.constants.Zero : this.numerator.mul(value).div(this.denominator);\n    }\n}\n\nexport default Fraction;\n","import { useCallback } from \"react\";\n\nimport { ChainId, Currency, ETHER, Fetcher, Pair, Token, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\n\nconst DAI = new Token(ChainId.MAINNET, \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", 18, \"DAI\", \"Dai Stablecoin\");\nconst USDC = new Token(ChainId.MAINNET, \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\", 6, \"USDC\", \"USD//C\");\nconst USDT = new Token(ChainId.MAINNET, \"0xdAC17F958D2ee523a2206206994597C13D831ec7\", 6, \"USDT\", \"Tether USD\");\nconst SUSHI = new Token(ChainId.MAINNET, \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\", 18, \"SUSHI\", \"SushiToken\");\nconst YAM = new Token(ChainId.MAINNET, \"0x0e2298E3B3390e3b945a5456fBf59eCc3f55DA16\", 18, \"YAM\", \"YAM\");\nconst AMPL = new Token(ChainId.MAINNET, \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\", 9, \"AMPL\", \"Ampleforth\");\n\nconst BASES_TO_CHECK_TRADES_AGAINST = [WETH[ChainId.MAINNET], DAI, USDC, USDT, SUSHI, YAM];\nconst CUSTOM_BASES = {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n};\n\nfunction wrappedCurrency(currency: Currency | undefined): Token | undefined {\n    return currency === ETHER ? WETH[ChainId.MAINNET] : currency instanceof Token ? currency : undefined;\n}\n\n// Source: https://github.com/Uniswap/uniswap-interface/blob/master/src/hooks/Trades.ts\nconst useAllCommonPairs = () => {\n    const loadAllCommonPairs = useCallback(\n        // tslint:disable-next-line:max-func-body-length\n        async (currencyA?: Currency, currencyB?: Currency, provider?: ethers.providers.BaseProvider) => {\n            const bases: Token[] = BASES_TO_CHECK_TRADES_AGAINST;\n            const [tokenA, tokenB] = [wrappedCurrency(currencyA), wrappedCurrency(currencyB)];\n            const basePairs: [Token, Token][] = bases\n                .flatMap((base): [Token, Token][] => bases.map(otherBase => [base, otherBase]))\n                .filter(([t0, t1]) => t0.address !== t1.address);\n\n            const allPairCombinations =\n                tokenA && tokenB\n                    ? [\n                          // the direct pair\n                          [tokenA, tokenB],\n                          // token A against all bases\n                          ...bases.map((base): [Token, Token] => [tokenA, base]),\n                          // token B against all bases\n                          ...bases.map((base): [Token, Token] => [tokenB, base]),\n                          // each base against all bases\n                          ...basePairs\n                      ]\n                          .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n                          .filter(([t0, t1]) => t0.address !== t1.address)\n                          .filter(([a, b]) => {\n                              const customBases = CUSTOM_BASES;\n                              if (!customBases) return true;\n\n                              const customBasesA: Token[] | undefined = customBases[a.address];\n                              const customBasesB: Token[] | undefined = customBases[b.address];\n\n                              if (!customBasesA && !customBasesB) return true;\n\n                              if (customBasesA && !customBasesA.find(base => tokenB.equals(base))) return false;\n                              return !(customBasesB && !customBasesB.find(base => tokenA.equals(base)));\n                          })\n                    : [];\n\n            const pairs = await Promise.all(\n                allPairCombinations.map(async pair => {\n                    try {\n                        return await Fetcher.fetchPairData(pair[0], pair[1], provider);\n                    } catch (e) {\n                        return null;\n                    }\n                })\n            );\n            return pairs.filter(pair => pair !== null) as Pair[];\n        },\n        []\n    );\n\n    return { loadAllCommonPairs };\n};\n\nexport default useAllCommonPairs;\n","import { useCallback, useContext } from \"react\";\n\nimport { CurrencyAmount, Fetcher, Pair, Percent, Router, TokenAmount, Trade, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { MASTER_CHEF, MIGRATOR2, ORDER_BOOK, ROUTER, SETTLEMENT, SUSHI_BAR } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { convertToken, getContract, pow10 } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport useAllCommonPairs from \"./useAllCommonPairs\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSDK = () => {\n    const { getTotalSupply } = useContext(EthersContext);\n    const { loadAllCommonPairs } = useAllCommonPairs();\n    const allowedSlippage = new Percent(\"50\", \"10000\"); // 0.05%\n    const ttl = 60 * 20;\n\n    const getTrade = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider\n        ) => {\n            if (provider) {\n                const isETH = fromToken.symbol === \"ETH\";\n                const from = convertToken(fromToken);\n                const to = convertToken(toToken);\n                const pairs = await loadAllCommonPairs(from, to, provider);\n                const amount = isETH\n                    ? CurrencyAmount.ether(fromAmount.toString())\n                    : new TokenAmount(from, fromAmount.toString());\n                return Trade.bestTradeExactIn(pairs, amount, to, { maxHops: 3, maxNumResults: 1 })[0];\n            }\n        },\n        []\n    );\n\n    const swap = useCallback(async (trade: Trade, signer: ethers.Signer) => {\n        if (trade) {\n            const params = Router.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                allowedSlippage,\n                recipient: await signer.getAddress(),\n                ttl\n            });\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const gasLimit = await router.estimateGas[params.methodName](...params.args, {\n                value: params.value\n            });\n            const tx = await router.functions[params.methodName](...params.args, {\n                value: params.value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            await logTransaction(\n                tx,\n                \"UniswapV2Router02.\" + params.methodName + \"()\",\n                ...params.args.map(arg => arg.toString())\n            );\n            return {\n                trade,\n                tx\n            };\n        }\n    }, []);\n\n    const createOrder = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            amountIn: ethers.BigNumber,\n            amountOutMin: ethers.BigNumber,\n            signer: ethers.Signer,\n            kovanSigner: ethers.Signer\n        ) => {\n            const order = new Order(signer, fromToken, toToken, amountIn, amountOutMin, await signer.getAddress());\n            const args = await order.toArgs();\n\n            const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n            const gasLimit = await orderBook.estimateGas.createOrder(args);\n            const tx = await orderBook.createOrder(args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return await logTransaction(tx, \"OrderBook.createOrder()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const cancelOrder = useCallback(async (order: Order, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const args = await order.toArgs();\n        const gasLimit = await settlement.estimateGas.cancelOrder(args);\n        const tx = await settlement.cancelOrder(args, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return await logTransaction(tx, \"Settlement.cancelOrder()\", ...args.map(arg => arg.toString()));\n    }, []);\n\n    const wrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.deposit({\n            value: amount\n        });\n        const tx = await weth.deposit({\n            value: amount,\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.deposit()\");\n    }, []);\n\n    const unwrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.withdraw(amount);\n        const tx = await weth.withdraw(amount, {\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.withdraw()\");\n    }, []);\n\n    const getPair = useCallback(async (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => {\n        const from = convertToken(fromToken);\n        const to = convertToken(toToken);\n        return await Fetcher.fetchPairData(from, to, provider);\n    }, []);\n\n    const addLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                fromAmount,\n                toAmount,\n                minAmount(fromAmount, allowedSlippage),\n                minAmount(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidity(...args);\n            const tx = await router.functions.addLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidityETH = useCallback(\n        async (\n            token: Token,\n            liquidity: ethers.BigNumber,\n            amount: ethers.BigNumber,\n            amountETH: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                liquidity,\n                minAmount(amount, allowedSlippage),\n                minAmount(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidityETH(...args);\n            const tx = await router.functions.removeLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            liquidity: ethers.BigNumber,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                liquidity,\n                minAmount(fromAmount, allowedSlippage),\n                minAmount(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidity(...args);\n            const tx = await router.functions.removeLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const addLiquidityETH = useCallback(\n        async (token: Token, amount: ethers.BigNumber, amountETH: ethers.BigNumber, signer: ethers.Signer) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                amount,\n                minAmount(amount, allowedSlippage),\n                minAmount(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidityETH(...args, {\n                value: amountETH\n            });\n            const tx = await router.functions.addLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100),\n                value: amountETH\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const getExpectedSushiRewardPerBlock = useCallback(async (token: LPToken, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const totalAllocPoint = await masterChef.totalAllocPoint();\n        const sushiPerBlock = await masterChef.sushiPerBlock();\n        const { allocPoint } = await masterChef.poolInfo(token.id);\n        return ethers.BigNumber.from(sushiPerBlock)\n            .mul(allocPoint)\n            .div(totalAllocPoint);\n    }, []);\n\n    const deposit = useCallback(async (lpTokenId: number, amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const gasLimit = await masterChef.estimateGas.deposit(lpTokenId, amount);\n        const tx = await masterChef.deposit(lpTokenId, amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"MasterChef.deposit()\", lpTokenId, amount.toString());\n    }, []);\n\n    const withdraw = useCallback(async (lpTokenId: number, amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const gasLimit = await masterChef.estimateGas.withdraw(lpTokenId, amount);\n        const tx = await masterChef.withdraw(lpTokenId, amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"MasterChef.withdraw()\", lpTokenId, amount.toString());\n    }, []);\n\n    const enterSushiBar = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const sushiBar = getContract(\"SushiBar\", SUSHI_BAR, signer);\n        const gasLimit = await sushiBar.estimateGas.enter(amount);\n        const tx = await sushiBar.enter(amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"SushiBar.enter()\", amount.toString());\n    }, []);\n\n    const leaveSushiBar = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const sushiBar = getContract(\"SushiBar\", SUSHI_BAR, signer);\n        const gasLimit = await sushiBar.estimateGas.leave(amount);\n        const tx = await sushiBar.leave(amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"SushiBar.leave()\", amount.toString());\n    }, []);\n\n    const migrate = useCallback(async (lpToken: LPToken, amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const migrator2 = getContract(\"Migrator2\", MIGRATOR2, signer);\n        const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n        const args = [\n            lpToken.tokenA.address,\n            lpToken.tokenB.address,\n            amount,\n            ethers.constants.Zero,\n            ethers.constants.Zero,\n            deadline\n        ];\n        const gasLimit = await migrator2.estimateGas.migrate(...args);\n        const tx = await migrator2.migrate(...args, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"Migrator2.migrate()\", ...args.map(arg => arg.toString()));\n    }, []);\n\n    const calculateSwapFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(3).div(1000);\n    };\n\n    const calculateLimitOrderFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(2).div(1000);\n    };\n\n    const calculateLimitOrderReturn = (\n        fromToken: Token,\n        toToken: Token,\n        fromAmount: ethers.BigNumber,\n        price: string\n    ) => {\n        const limitOrderFeeDeducted = fromAmount.sub(calculateLimitOrderFee(fromAmount));\n        const swapFeeDeducted = limitOrderFeeDeducted.sub(calculateSwapFee(limitOrderFeeDeducted));\n        return Fraction.parse(price).apply(swapFeeDeducted.mul(pow10(toToken.decimals)).div(pow10(fromToken.decimals)));\n    };\n\n    const calculateAmountOfLPTokenMinted = async (pair: Pair, fromAmount: TokenAmount, toAmount: TokenAmount) => {\n        const totalSupply = await getTotalSupply(pair.liquidityToken.address);\n        if (totalSupply) {\n            return pair.getLiquidityMinted(\n                new TokenAmount(pair.liquidityToken, totalSupply.toString()),\n                fromAmount,\n                toAmount\n            );\n        }\n    };\n\n    return {\n        allowedSlippage,\n        getTrade,\n        swap,\n        createOrder,\n        cancelOrder,\n        wrapETH,\n        unwrapETH,\n        getPair,\n        addLiquidity,\n        addLiquidityETH,\n        removeLiquidity,\n        removeLiquidityETH,\n        getExpectedSushiRewardPerBlock,\n        deposit,\n        withdraw,\n        enterSushiBar,\n        leaveSushiBar,\n        migrate,\n        calculateSwapFee,\n        calculateLimitOrderFee,\n        calculateLimitOrderReturn,\n        calculateAmountOfLPTokenMinted\n    };\n};\n\nconst minAmount = (amount: ethers.BigNumber, percent: Percent) => {\n    return amount.sub(amount.mul(percent.numerator.toString()).div(percent.denominator.toString()));\n};\n\nexport type OrderStatus = \"Open\" | \"Expired\" | \"Filled\";\n\nexport class Order {\n    maker: ethers.Signer;\n    fromToken: Token;\n    toToken: Token;\n    amountIn: ethers.BigNumber;\n    amountOutMin: ethers.BigNumber;\n    recipient: string;\n    deadline: ethers.BigNumber;\n    v?: number;\n    r?: string;\n    s?: string;\n    filledAmountIn?: ethers.BigNumber;\n\n    constructor(\n        maker: ethers.Signer,\n        fromToken: Token,\n        toToken: Token,\n        amountIn: ethers.BigNumber,\n        amountOutMin: ethers.BigNumber,\n        recipient: string,\n        deadline = ethers.BigNumber.from(Math.floor(Date.now() / 1000 + 24 * 3600)),\n        v?: number,\n        r?: string,\n        s?: string,\n        filledAmountIn?: ethers.BigNumber\n    ) {\n        this.maker = maker;\n        this.fromToken = fromToken;\n        this.toToken = toToken;\n        this.amountIn = amountIn;\n        this.amountOutMin = amountOutMin;\n        this.recipient = recipient;\n        this.deadline = deadline;\n        this.v = v;\n        this.r = r;\n        this.s = s;\n        this.filledAmountIn = filledAmountIn;\n    }\n\n    status(): OrderStatus {\n        return this.filledAmountIn?.eq(this.amountIn)\n            ? \"Filled\"\n            : this.deadline.toNumber() * 1000 < Date.now()\n            ? \"Expired\"\n            : \"Open\";\n    }\n\n    async hash() {\n        const settlement = await getContract(\"Settlement\", SETTLEMENT, this.maker);\n        return await settlement.hashOfOrder(\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline\n        );\n    }\n\n    async sign() {\n        const hash = await this.hash();\n        const signature = await this.maker.signMessage(ethers.utils.arrayify(hash));\n        return ethers.utils.splitSignature(signature);\n    }\n\n    async toArgs() {\n        const { v, r, s } = this.v && this.r && this.s ? { v: this.v, r: this.r, s: this.s } : await this.sign();\n        return [\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline,\n            v,\n            r,\n            s\n        ];\n    }\n}\n\nexport default useSDK;\n","import { FACTORY_ADDRESS as SUSHISWAP_FACTORY } from \"@sushiswap/sdk\";\nimport { FACTORY_ADDRESS as UNISWAP_FACTORY } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { LP_TOKEN_SCANNER, MASTER_CHEF, ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport { ETH } from \"../constants/tokens\";\nimport { Order, OrderStatus } from \"../hooks/useSDK\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { getContract } from \"./index\";\n\nexport const fetchTokens = async (address: string, provider?: ethers.providers.JsonRpcProvider) => {\n    if (provider) {\n        const response = await fetch(\"https://lite.sushiswap.fi/tokens.json\");\n        const json = await response.json();\n\n        const balances = await provider.send(\"alchemy_getTokenBalances\", [\n            address,\n            json.tokens.map(token => token.address)\n        ]);\n        return [\n            {\n                ...ETH,\n                balance: await provider.getBalance(address)\n            },\n            ...json.tokens.map((token, i) => ({\n                ...token,\n                balance: ethers.BigNumber.from(balances.tokenBalances[i].tokenBalance || 0)\n            }))\n        ].sort((t1, t2) => {\n            return t2.balance\n                .sub(t1.balance)\n                .div(ethers.BigNumber.from(10).pow(10))\n                .toNumber();\n        });\n    }\n};\n\nexport const fetchPools = async (provider?: ethers.providers.JsonRpcProvider, signer?: ethers.Signer) => {\n    if (provider && signer) {\n        const response = await fetch(\"https://lite.sushiswap.fi/pools.json\");\n        const pools = await response.json();\n        const address = await signer.getAddress();\n        const balances = await provider.send(\"alchemy_getTokenBalances\", [address, pools.map(pool => pool.address)]);\n        return (await Promise.all(\n            pools.map(async (pool, i) => {\n                const poolToken = getContract(\"ERC20\", pool.address, signer);\n                const totalDeposited = await poolToken.balanceOf(MASTER_CHEF);\n                const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n                const { amount: amountDeposited } = await masterChef.userInfo(i, address);\n                const pendingSushi = await masterChef.pendingSushi(i, address);\n                return {\n                    ...pool,\n                    id: i,\n                    symbol: pool.tokenA.symbol + \"-\" + pool.tokenB.symbol + \" LP\",\n                    balance: ethers.BigNumber.from(balances.tokenBalances[i].tokenBalance || 0),\n                    totalDeposited,\n                    amountDeposited,\n                    pendingSushi\n                };\n            })\n        )) as LPToken[];\n    }\n};\n\nexport const fetchMyLPTokens = async (\n    tokens: Token[],\n    provider?: ethers.providers.JsonRpcProvider,\n    signer?: ethers.Signer\n) => {\n    if (provider && signer) {\n        return await fetchLPTokens(SUSHISWAP_FACTORY, tokens, provider, signer);\n    }\n};\n\nexport const fetchMyUniswapLPTokens = async (\n    tokens: Token[],\n    provider?: ethers.providers.JsonRpcProvider,\n    signer?: ethers.Signer\n) => {\n    if (provider && signer) {\n        return await fetchLPTokens(UNISWAP_FACTORY, tokens, provider, signer);\n    }\n};\n\nconst LP_TOKENS_LIMIT = 2000;\n\nconst fetchLPTokens = async (\n    factory: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer\n) => {\n    const factoryContract = getContract(\"IUniswapV2Factory\", factory, signer);\n    const length = await factoryContract.allPairsLength();\n    const scanner = getContract(\"LPTokenScanner\", LP_TOKEN_SCANNER, signer);\n    const account = await signer.getAddress();\n    const pages: number[] = [];\n    for (let i = 0; i < length; i += LP_TOKENS_LIMIT) pages.push(i);\n    const pairs = (\n        await Promise.all(\n            pages.map(page =>\n                scanner.findPairs(account, factory, page, Math.min(page + LP_TOKENS_LIMIT, length.toNumber()))\n            )\n        )\n    ).flat();\n    const balances = await provider.send(\"alchemy_getTokenBalances\", [account, pairs.map(pair => pair.token)]);\n    return await Promise.all(\n        pairs.map(async (pair, index) => {\n            const address = pair.token;\n            const balance = ethers.BigNumber.from(balances.tokenBalances[index].tokenBalance);\n            const contract = getContract(\"IUniswapV2Pair\", address, signer);\n            const erc20 = getContract(\"ERC20\", address, signer);\n            const decimals = Number(await erc20.decimals());\n            const totalSupply = await erc20.totalSupply();\n            const tokenA = await findOrFetchToken(provider, await contract.token0(), tokens);\n            const tokenB = await findOrFetchToken(provider, await contract.token1(), tokens);\n            const name = tokenA.symbol + \"-\" + tokenB.symbol + \" LP Token\";\n            const symbol = tokenA.symbol + \"-\" + tokenB.symbol;\n            return { address, decimals, name, symbol, balance, totalSupply, tokenA, tokenB } as LPToken;\n        })\n    );\n};\n\nexport const findOrFetchToken = async (\n    provider: ethers.providers.JsonRpcProvider,\n    address: string,\n    tokens?: Token[]\n) => {\n    if (tokens) {\n        const token = tokens.find(t => t.address.toLowerCase() === address.toLowerCase());\n        if (token) {\n            return token;\n        }\n    }\n    const meta = await provider.send(\"alchemy_getTokenMetadata\", [address]);\n    return {\n        address,\n        symbol: meta.symbol,\n        decimals: meta.decimals,\n        logoURI: meta.logo,\n        balance: ethers.constants.Zero\n    } as Token;\n};\n\nconst LIMIT_ORDERS_LIMIT = 20;\n\nexport const fetchMyLimitOrders = async (\n    signer: ethers.Signer,\n    kovanSigner: ethers.Signer,\n    provider: ethers.providers.JsonRpcProvider,\n    tokens?: Token[],\n    canceledHashes?: string[]\n) => {\n    const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, signer);\n    const maker = await signer.getAddress();\n    const length = await orderBook.numberOfHashesOfMaker(maker);\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    const hashes = (await Promise.all(pages.map(page => orderBook.hashesOfMaker(maker, page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero)\n        .filter(hash => (canceledHashes ? !canceledHashes.includes(hash) : true));\n    const myOrders = await Promise.all(\n        hashes.map(async hash => {\n            const args = await orderBook.orderOfHash(hash);\n            return new Order(\n                signer,\n                await findOrFetchToken(provider, args.fromToken, tokens),\n                await findOrFetchToken(provider, args.toToken, tokens),\n                args.amountIn,\n                args.amountOutMin,\n                args.recipient,\n                args.deadline,\n                args.v,\n                args.r,\n                args.s,\n                await settlement.filledAmountInOfHash(hash)\n            );\n        })\n    );\n    return myOrders.sort(compareOrders) as Order[];\n};\n\nconst compareOrders = (o0, o1) => {\n    const status = (s: OrderStatus) => (s === \"Open\" ? 0 : s === \"Filled\" ? 1 : 2);\n    const compared = status(o0.status()) - status(o1.status());\n    return compared === 0 ? o0.deadline.toNumber() - o1.deadline.toNumber() : compared;\n};\n\nexport const fetchMyCanceledLimitOrderHashes = async (signer: ethers.Signer) => {\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, signer);\n    const length = await settlement.numberOfCanceledHashesOfMaker(await signer.getAddress());\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    return (await Promise.all(pages.map(page => settlement.allCanceledHashes(page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport * as Analytics from \"expo-firebase-analytics\";\n\nimport { EventType, Listener } from \"@ethersproject/abstract-provider\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ETH } from \"../constants/tokens\";\nimport Token from \"../types/Token\";\nimport { getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport { fetchTokens } from \"../utils/fetch-utils\";\n\nexport type OnBlockListener = (block?: number) => void | Promise<void>;\n\nconst PRIVATE_KEY = \"0xca417c154948d370f011c5d9ac3fba516d7b15671a069e7d5d48f56b723c9cc1\";\n\nexport const EthersContext = React.createContext({\n    provider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    signer: undefined as ethers.providers.JsonRpcSigner | undefined,\n    kovanProvider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    kovanSigner: undefined as ethers.Signer | undefined,\n    chainId: 0,\n    address: null as string | null,\n    ensName: null as string | null,\n    addOnBlockListener: (_name: string, _listener: OnBlockListener) => {},\n    removeOnBlockListener: (_name: string) => {},\n    tokens: [ETH] as Token[],\n    setTokens: (_tokens: Token[]) => {},\n    updateTokens: async () => {},\n    loadingTokens: false,\n    approveToken: async (_token: string, _spender: string, _amount?: ethers.BigNumber) => {\n        return {} as ethers.providers.TransactionResponse | undefined;\n    },\n    getTokenAllowance: async (_token: string, _spender: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTokenBalance: async (_token: string, _who: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTotalSupply: async (_token: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    }\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const EthersContextProvider = ({ children }) => {\n    // const { mnemonic } = useContext(GlobalContext);\n    const [provider, setProvider] = useState<ethers.providers.JsonRpcProvider>();\n    const [kovanProvider, setKovanProvider] = useState<ethers.providers.JsonRpcProvider>();\n    const [signer, setSigner] = useState<ethers.providers.JsonRpcSigner>();\n    const [kovanSigner, setKovanSigner] = useState<ethers.Signer>();\n    const [chainId, setChainId] = useState<number>(1);\n    const [address, setAddress] = useState<string | null>(null);\n    const [ensName, setENSName] = useState<string | null>(null);\n    const [onBlockListeners, setOnBlockListeners] = useState<{ [name: string]: OnBlockListener }>({});\n    const [tokens, setTokens] = useState<Token[]>([]);\n    const [loadingTokens, setLoadingTokens] = useState(true);\n\n    useEffect(() => {\n        // Kovan\n        const kovan = new ethers.providers.AlchemyProvider(42, \"3NGZpyMoljbXikGsz9hWzKZ_bnqbZny2\");\n        const wallet = new ethers.Wallet(PRIVATE_KEY, kovan);\n        setKovanProvider(kovan);\n        setKovanSigner(wallet);\n    }, []);\n\n    useAsyncEffect(async () => {\n        // Mainnet\n        if (window.ethereum) {\n            const web3 = new ethers.providers.Web3Provider(window.ethereum);\n            const alchemy = new ethers.providers.AlchemyProvider(\n                web3.network,\n                __DEV__ ? \"gSgAj0Ntfsn-DOKKlUhjqeUlePrVX8va\" : \"yLD5iJzUEo_Kvlg_PwMXl7N9ESK2_b6E\"\n            );\n            setProvider(alchemy);\n            setSigner(await web3.getSigner());\n        }\n    }, [window.ethereum]);\n\n    useEffect(() => {\n        if (window.ethereum) {\n            const onAccountsChanged = () => {\n                setAddress(window.ethereum.selectedAddress);\n                if (window.ethereum.chainId && window.ethereum.selectedAddress) {\n                    Analytics.setUserId(Number(window.ethereum.chainId) + \":\" + window.ethereum.selectedAddress);\n                }\n            };\n            const onChainChanged = () => {\n                setChainId(Number(window.ethereum.chainId));\n            };\n            onAccountsChanged();\n            onChainChanged();\n            window.ethereum.on(\"accountsChanged\", onAccountsChanged);\n            window.ethereum.on(\"chainChanged\", onChainChanged);\n            return () => {\n                window.ethereum.off(\"accountsChanged\", onAccountsChanged);\n                window.ethereum.off(\"chainChanged\", onAccountsChanged);\n            };\n        }\n    }, [window.ethereum, signer]);\n\n    useAsyncEffect(async () => {\n        if (signer && address) {\n            const ens = await signer.provider.lookupAddress(address);\n            setENSName(ens);\n        }\n    }, [signer, address]);\n\n    // Set provider and signer for mobile app\n    // useEffect(() => {\n    //     if (mnemonic) {\n    //         const alchemy = new ethers.providers.AlchemyProvider(1, Constants.manifest.extra.alchemyApiKey);\n    //         setProvider(alchemy);\n    //         const wallet = ethers.Wallet.fromMnemonic(mnemonic).connect(alchemy);\n    //         setSigner(wallet);\n    //     }\n    // }, [mnemonic]);\n\n    const updateTokens = async () => {\n        if (address) {\n            try {\n                const data = await fetchTokens(address, provider);\n                if (data) {\n                    await setTokens(data);\n                }\n            } finally {\n                setLoadingTokens(false);\n            }\n        }\n    };\n\n    useAsyncEffect(async () => {\n        if (provider) {\n            setLoadingTokens(true);\n            await updateTokens();\n        }\n    }, [provider, address]);\n\n    const approveToken = useCallback(\n        async (token: string, spender: string, amount?: ethers.BigNumber) => {\n            if (signer) {\n                amount = amount || ethers.constants.MaxUint256;\n                const erc20 = getContract(\"ERC20\", token, signer);\n                const gasLimit = await erc20.estimateGas.approve(spender, amount);\n                const tx = await erc20.approve(spender, amount, {\n                    gasLimit\n                });\n                return await logTransaction(tx, \"ERC20.approve()\", spender, amount.toString());\n            }\n        },\n        [signer]\n    );\n\n    const getTokenAllowance = useCallback(\n        async (token: string, spender: string) => {\n            if (provider && address) {\n                return await provider.send(\"alchemy_getTokenAllowance\", [\n                    {\n                        contract: token,\n                        owner: address,\n                        spender\n                    }\n                ]);\n            }\n        },\n        [provider, address]\n    );\n\n    const getTokenBalance = useCallback(\n        async (token: string, who: string) => {\n            if (provider && signer) {\n                const erc20 = getContract(\"ERC20\", token, signer);\n                return await erc20.balanceOf(who);\n            }\n        },\n        [provider, signer]\n    );\n\n    const getTotalSupply = useCallback(\n        async (token: string) => {\n            if (signer) {\n                const erc20 = getContract(\"ERC20\", token, signer);\n                return await erc20.totalSupply();\n            }\n        },\n        [signer]\n    );\n\n    const addOnBlockListener = useCallback(\n        (name, listener) => {\n            setOnBlockListeners(old => ({ ...old, [name]: listener }));\n        },\n        [setOnBlockListeners]\n    );\n\n    const removeOnBlockListener = useCallback(\n        name => {\n            setOnBlockListeners(old => {\n                delete old[name];\n                return old;\n            });\n        },\n        [setOnBlockListeners]\n    );\n\n    useEffect(() => {\n        if (provider && chainId === 1) {\n            const onBlock = async (block: number) => {\n                for (const listener of Object.entries(onBlockListeners)) {\n                    await listener[1]?.(block);\n                }\n            };\n            provider.on(\"block\", onBlock);\n            return () => {\n                provider.off(\"block\", onBlock);\n            };\n        }\n    }, [provider, chainId, onBlockListeners]);\n\n    return (\n        <EthersContext.Provider\n            value={{\n                provider,\n                signer,\n                kovanProvider,\n                kovanSigner,\n                chainId,\n                address,\n                ensName,\n                tokens,\n                setTokens,\n                updateTokens,\n                loadingTokens,\n                approveToken,\n                getTokenAllowance,\n                getTokenBalance,\n                getTotalSupply,\n                addOnBlockListener,\n                removeOnBlockListener\n            }}>\n            {children}\n        </EthersContext.Provider>\n    );\n};\n\ninterface JsonRPCRequest {\n    jsonrpc: string;\n    method: string;\n    params: any[];\n    id: number;\n}\n\ninterface JsonRPCResponse {\n    jsonrpc: string;\n    id: number;\n    result?: any;\n    error?: string;\n}\n\ninterface Callback<ResultType> {\n    (error: Error): void;\n    (error: null, val: ResultType): void;\n}\n\ndeclare global {\n    interface Window {\n        ethereum: {\n            enable(): void;\n            send(payload: any, callback: any): any;\n            send(payload: JsonRPCRequest, callback: Callback<JsonRPCResponse>): any;\n            selectedAddress: string;\n            chainId: string;\n            on(eventName: EventType, listener: Listener);\n            off(eventName: EventType, listener: Listener);\n        };\n    }\n}\n\nexport const EthersContextConsumer = EthersContext.Consumer;\n","import React, { useState } from \"react\";\nimport { useColorScheme } from \"react-native-appearance\";\n\nimport { DeviceType, getDeviceTypeAsync } from \"expo-device\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport useAsyncEffect from \"use-async-effect\";\n\nexport const GlobalContext = React.createContext({\n    load: async () => {},\n    clear: async () => {},\n    deviceType: undefined as DeviceType | undefined,\n    darkMode: false as boolean,\n    setDarkMode: async darkMode => {},\n    mnemonic: \"\",\n    setMnemonic: (mnemonic: string) => {}\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const GlobalContextProvider = ({ children }) => {\n    const colorScheme = useColorScheme();\n    const [deviceType, setDeviceType] = useState<DeviceType>();\n    const [darkMode, setDarkMode] = useState(colorScheme === \"dark\");\n    const [mnemonic, setMnemonic] = useState(\"\");\n    useAsyncEffect(async () => {\n        setDeviceType(await getDeviceTypeAsync());\n    }, []);\n    return (\n        <GlobalContext.Provider\n            value={{\n                load: async () => {\n                    const mode = await AsyncStorage.getItem(\"dark_mode\");\n                    setDarkMode(mode === \"true\");\n                    const mne = await AsyncStorage.getItem(\"mnemonic\");\n                    if (mne) {\n                        setMnemonic(mne);\n                    }\n                },\n                clear: async () => {\n                    setDarkMode(false);\n                    await AsyncStorage.removeItem(\"dark_mode\");\n                    await AsyncStorage.removeItem(\"mnemonic\");\n                },\n                deviceType,\n                darkMode,\n                setDarkMode: async (mode: boolean) => {\n                    await AsyncStorage.setItem(\"dark_mode\", String(mode));\n                    setDarkMode(mode);\n                },\n                mnemonic,\n                setMnemonic: async (mne: string) => {\n                    await AsyncStorage.setItem(\"mnemonic\", mne);\n                    setMnemonic(mne);\n                }\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const GlobalContextConsumer = GlobalContext.Consumer;\n","import React from \"react\";\n\nimport { EthersContextConsumer, EthersContextProvider } from \"./EthersContext\";\nimport { GlobalContextConsumer, GlobalContextProvider } from \"./GlobalContext\";\n\nexport const ContextProvider = ({ children }) => {\n    return (\n        <GlobalContextProvider>\n            <EthersContextProvider>{children}</EthersContextProvider>\n        </GlobalContextProvider>\n    );\n};\n\nexport const ContextConsumer = ({ children }) => {\n    return (\n        <GlobalContextConsumer>\n            {globalContext => (\n                <EthersContextConsumer>\n                    {ethersContext =>\n                        children({\n                            ...globalContext,\n                            ...ethersContext\n                        })\n                    }\n                </EthersContextConsumer>\n            )}\n        </GlobalContextConsumer>\n    );\n};\n","import { Dimensions } from \"react-native\";\n\nexport const SCREEN_WIDTH = Math.round(Dimensions.get(\"window\").width);\nexport const SCREEN_HEIGHT = Math.round(Dimensions.get(\"window\").height);\nexport const IS_HIGH_RESOLUTION = SCREEN_HEIGHT > 667;\nexport const HEADER_HEIGHT = 64;\nexport const HEADER_WIDTH = 980;\nexport const WEB_WIDTH = 540;\nexport const SUB_MENU_HEIGHT = 40;\n\nexport const Spacing = IS_HIGH_RESOLUTION\n    ? {\n          tiny: 8,\n          small: 16,\n          normal: 32,\n          large: 48,\n          huge: 64\n      }\n    : {\n          tiny: 6,\n          small: 12,\n          normal: 24,\n          large: 32,\n          huge: 48\n      };\n","export const Colors = {\n    common: {\n        white: \"#ffffff\",\n        transparent: \"#ffffff00\",\n        primary: \"#291C64\",\n        secondary: \"#9BECEE\",\n        green: \"#32CD32\",\n        red: \"#FF0000\",\n        twitter: \"#1da1f2\",\n        facebook: \"#3B5998\"\n    },\n    light: {\n        accent: \"#291C64\",\n        header: \"#ffffffb8\",\n        submenu: \"#ffffffb8\",\n        background: \"#f8f8f8\",\n        backgroundLight: \"#f0f0f0\",\n        border: \"#e5e5e5\",\n        borderDark: \"#cccccc\",\n        textDark: \"#1d1d1f\",\n        textMedium: \"#222222\",\n        textLight: \"#888888\",\n        disabled: \"#b4b4b4\",\n        shadow: \"#444444\",\n        placeholder: \"#b4b4b4\"\n    },\n    dark: {\n        accent: \"#9BECEE\",\n        header: \"#000000\",\n        submenu: \"#121212\",\n        background: \"#121212\",\n        backgroundLight: \"#1a1a1a\",\n        border: \"#ffffff33\",\n        borderDark: \"#666666\",\n        textDark: \"#d5d1cc\",\n        textMedium: \"#cccccc\",\n        textLight: \"#aaaaaa\",\n        disabled: \"#aaaaaa80\",\n        shadow: \"#03080c\",\n        placeholder: \"#666666\"\n    }\n};\n","import { useContext } from \"react\";\n\nimport { Colors } from \"../constants/colors\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useColors = () => {\n    const { darkMode } = useContext(GlobalContext);\n    return {\n        ...Colors[darkMode ? \"dark\" : \"light\"],\n        ...Colors.common\n    };\n};\n\nexport default useColors;\n","import React, { FunctionComponent } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\ninterface FlexViewProps extends ViewProps {\n    direction?: \"row\" | \"column\";\n}\n\nconst FlexView: FunctionComponent<FlexViewProps> = props => {\n    const flexDirection = props.direction || \"row\";\n    return <View {...props} style={[{ flexDirection }, props.style]} />;\n};\nexport default FlexView;\n","import React, { FC } from \"react\";\nimport { Text as NativeText, TextProps as NativeTextProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface TextProps extends NativeTextProps {\n    note?: boolean;\n    caption?: boolean;\n    dark?: boolean;\n    medium?: boolean;\n    light?: boolean;\n    disabled?: boolean;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\nconst Text: FC<TextProps> = props => {\n    const { textDark, textMedium, textLight, placeholder } = useColors();\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = props.disabled\n        ? placeholder\n        : props.medium\n        ? textMedium\n        : props.note || props.light\n        ? textLight\n        : textDark;\n    return (\n        <NativeText\n            {...props}\n            h1Style={[{ fontFamily }, props.h1Style]}\n            h2Style={[{ fontFamily }, props.h2Style]}\n            h3Style={[{ fontFamily }, props.h3Style]}\n            h4Style={[{ fontFamily }, props.h4Style]}\n            style={[\n                {\n                    fontFamily,\n                    fontSize: props.note ? 13 : props.caption ? 18 : 15,\n                    color\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Text;\n","import React, { useCallback, useContext } from \"react\";\nimport { View } from \"react-native\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport Switch from \"expo-dark-mode-switch\";\n\nimport { HEADER_HEIGHT, HEADER_WIDTH, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nconst WebHeader = () => {\n    const { header } = useColors();\n    return (\n        <View\n            // @ts-ignore\n            style={{\n                position: \"fixed\",\n                top: 0,\n                zIndex: 100,\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                paddingBottom: Spacing.small,\n                backgroundColor: header\n            }}>\n            <FlexView\n                style={{\n                    flex: 1,\n                    width: HEADER_WIDTH,\n                    alignSelf: \"center\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"flex-end\",\n                    paddingTop: Spacing.small,\n                    paddingHorizontal: Spacing.normal\n                }}>\n                <Title />\n                <Menu />\n            </FlexView>\n        </View>\n    );\n};\n\nexport const Title = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { textDark, white } = useColors();\n    const color = darkMode ? white : textDark;\n    return (\n        <View style={{ alignSelf: \"center\", alignItems: \"center\" }}>\n            <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\n                <Text style={{ fontSize: 28, color }}>SushiSwap</Text>\n            </Link>\n        </View>\n    );\n};\n\nconst Menu = () => {\n    return (\n        <FlexView\n            style={{\n                height: \"100%\",\n                alignItems: \"flex-end\"\n            }}>\n            <MenuItem title={\"Swap\"} path={\"/swap\"} />\n            <MenuItem title={\"Liquidity\"} path={\"/liquidity\"} />\n            {/*<MenuItem title={\"Farming\"} path={\"/farming\"} />*/}\n            {/*<MenuItem title={\"Stake/Unstake\"} path={\"/staking\"} />*/}\n            <Status />\n            <DarkModeSwitch />\n        </FlexView>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ marginLeft: Spacing.tiny, textDecoration: \"none\" }}>\n            <View>\n                <Text style={{ fontFamily: \"regular\", fontSize: 18, color: active ? textDark : textLight, padding: 4 }}>\n                    {title}\n                </Text>\n            </View>\n        </Link>\n    );\n};\n\nconst Status = () => {\n    const { textLight, green, borderDark } = useColors();\n    const { chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : \"Not connected\";\n    const color = connected ? green : textLight;\n    return (\n        <FlexView\n            style={{\n                height: 28,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginLeft: Spacing.small,\n                paddingHorizontal: Spacing.small,\n                borderRadius: 16,\n                borderWidth: 1,\n                borderColor: borderDark\n            }}>\n            <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginRight: 12 }} />\n            <Text style={{ fontSize: 15, color: textLight, marginRight: 2 }}>{title}</Text>\n        </FlexView>\n    );\n};\n\nconst DarkModeSwitch = () => {\n    const { darkMode, setDarkMode } = useContext(GlobalContext);\n    const onChange = useCallback(\n        async dark => {\n            await setDarkMode(dark);\n        },\n        [setDarkMode]\n    );\n    return (\n        <View style={{ marginLeft: Spacing.tiny, marginRight: -8, marginBottom: -3 }}>\n            <Switch\n                value={darkMode}\n                onChange={onChange}\n                style={{\n                    transform: [\n                        {\n                            scale: 0.75\n                        }\n                    ]\n                }}\n            />\n        </View>\n    );\n};\n\nexport default WebHeader;\n","import React, { FC } from \"react\";\nimport { Button as NativeButton, ButtonProps as NativeButtonProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nexport interface ButtonProps extends NativeButtonProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Button: FC<ButtonProps> = props => {\n    const { primary, textMedium, placeholder, backgroundLight } = useColors();\n    const type = props.type || \"solid\";\n    const size = props.size || \"normal\";\n    const height = props.size === \"small\" ? 36 : size === \"normal\" ? 45 : 54;\n    const fontSize = props.size === \"small\" ? 13 : size === \"normal\" ? 15 : 18;\n    const fontFamily = props.fontWeight || \"regular\";\n    return (\n        <NativeButton\n            {...props}\n            disabled={props.loading || props.disabled}\n            onPress={props.loading ? undefined : props.onPress}\n            type={type}\n            loadingProps={{ color: textMedium }}\n            buttonStyle={[\n                {\n                    height,\n                    paddingHorizontal: Spacing.small,\n                    backgroundColor: \"transparent\"\n                },\n                props.buttonStyle\n            ]}\n            titleStyle={[\n                { fontSize, fontFamily, color: type === \"solid\" ? \"white\" : props.color || textMedium },\n                props.titleStyle\n            ]}\n            disabledTitleStyle={[{ fontSize, fontFamily, color: placeholder }, props.titleStyle]}\n            style={[{ backgroundColor: type === \"solid\" ? props.color || primary : \"transparent\" }, props.style]}\n            disabledStyle={[\n                { backgroundColor: type === \"solid\" ? backgroundLight : \"transparent\" },\n                props.disabledStyle\n            ]}\n        />\n    );\n};\nexport default Button;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={\"Approve \" + (props.token?.symbol || \"\")}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import { useCallback } from \"react\";\nimport { ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"./useColors\";\n\nconst useStyles = () => {\n    const { shadow: shadowColor, borderDark } = useColors();\n    const border = useCallback(\n        (attrs?: { color?: string; radius?: number }) => ({\n            borderColor: attrs?.color || borderDark,\n            borderWidth: 1,\n            borderRadius: attrs?.radius || 8,\n            padding: Spacing.small\n        }),\n        []\n    );\n    const shadow = () =>\n        ({\n            borderRadius: Spacing.tiny,\n            elevation: Spacing.small,\n            shadowColor,\n            shadowOffset: { width: 0, height: 2 },\n            shadowOpacity: 0.5,\n            shadowRadius: 4,\n            overflow: \"visible\"\n        } as ViewStyle);\n    return { border, shadow };\n};\n\nexport default useStyles;\n","import React, { FC, useCallback, useState } from \"react\";\nimport { ButtonGroup as NativeButtonGroup, ButtonGroupProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\n// tslint:disable-next-line:max-func-body-length\nconst ButtonGroup: FC<ButtonGroupProps> = props => {\n    const { borderDark } = useColors();\n    const { shadow } = useStyles();\n    const [index, setIndex] = useState<number>();\n    const onPress = useCallback(i => {\n        setIndex(i);\n        props.onPress(i);\n    }, []);\n    return (\n        <NativeButtonGroup\n            {...props}\n            selectedIndex={props.selectedIndex || index}\n            onPress={onPress}\n            textStyle={[\n                {\n                    fontFamily: \"regular\"\n                },\n                props.textStyle\n            ]}\n            buttonStyle={[\n                {\n                    borderTopLeftRadius: index === 0 ? Spacing.tiny : 0,\n                    borderBottomLeftRadius: index === 0 ? Spacing.tiny : 0,\n                    borderTopRightRadius:\n                        props.buttons.length > 0 && index === props.buttons.length - 1 ? Spacing.tiny : 0,\n                    borderBottomRightRadius:\n                        props.buttons.length > 0 && index === props.buttons.length - 1 ? Spacing.tiny : 0\n                },\n                props.buttonStyle\n            ]}\n            selectedButtonStyle={[\n                {\n                    backgroundColor: borderDark\n                },\n                props.selectedButtonStyle\n            ]}\n            containerStyle={[\n                {\n                    marginHorizontal: 0,\n                    marginVertical: 0,\n                    height: 56,\n                    ...shadow()\n                },\n                props.containerStyle\n            ]}\n        />\n    );\n};\n\nexport default ButtonGroup;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst CloseIcon = () => {\n    const { textLight } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={textLight} style={{ marginLeft: Spacing.tiny }} />;\n};\n\nexport default CloseIcon;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React, { FC } from \"react\";\nimport { Platform, SafeAreaView, ScrollView, ViewProps } from \"react-native\";\n\nexport type ContainerProps = ViewProps;\n\n// tslint:disable-next-line:max-func-body-length\nconst Container: FC<ContainerProps> = props => {\n    const Universal = Platform.select({\n        web: () => (\n            <ScrollView\n                contentContainerStyle={{ flex: 1 }}\n                style={[\n                    {\n                        flex: 1\n                    },\n                    props.style\n                ]}\n                {...props}\n            />\n        ),\n        default: () => (\n            <SafeAreaView style={{ flex: 1 }}>\n                <ScrollView {...props} />\n            </SafeAreaView>\n        )\n    });\n    return <Universal />;\n};\n\nexport default Container;\n","import React from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { Spacing, WEB_WIDTH } from \"../constants/dimension\";\n\nconst Content: React.FunctionComponent<ViewProps> = props => {\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    width: WEB_WIDTH,\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    paddingHorizontal: Spacing.normal,\n                    paddingVertical: Spacing.huge\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Content;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst FetchingButton = () => {\n    return <Button title={\"Fetching…\"} disabled={true} />;\n};\nexport default FetchingButton;\n","import React, { FC } from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={\"bold\"}\n                disabled={props.disabled}\n                style={{ flex: 1, fontSize: 18, paddingBottom: Spacing.tiny }}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    return <Button title={\"Insufficient \" + (symbol ? symbol : \"Balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React, { FC, ReactNode, useState } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport Heading from \"./Heading\";\n\nexport interface ExpandableProps {\n    title: string;\n    expanded: boolean;\n    onExpand?: () => void;\n    style?: ViewStyle;\n    children?: ReactNode;\n}\n\nconst Expandable: FC<ExpandableProps> = props => {\n    const [expanded, setExpanded] = useState(true);\n    const shouldExpand = props.expanded && expanded;\n    const buttonText = shouldExpand ? undefined : \"Change\";\n    const onPress = () => {\n        setExpanded(true);\n        props.onExpand?.();\n    };\n\n    return (\n        <View style={props.style}>\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\n        </View>\n    );\n};\n\nexport default Expandable;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport const ITEM_SEPARATOR_HEIGHT = 10;\n\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\n\nexport default ItemSeparator;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n}\n\nconst Selectable: FC<SelectableProps> = props => {\n    const { borderDark, accent } = useColors();\n    const { border } = useStyles();\n    const { background, backgroundLight } = useColors();\n    return (\n        <Hoverable>\n            {({ hovered }) => (\n                <TouchableHighlight onPress={props.onPress}>\n                    <View\n                        {...props}\n                        style={[\n                            {\n                                ...border({ color: props.selected ? accent : borderDark }),\n                                backgroundColor: hovered && !props.disabled ? backgroundLight : background\n                            },\n                            props.style\n                        ]}\n                    />\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nexport default Selectable;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport Token from \"../types/Token\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && props.token.symbol === \"WETH\" ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? \"grey\" : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import React, { FC, useCallback } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport { LPTokensState } from \"../hooks/useLPTokensState\";\nimport LPToken from \"../types/LPToken\";\nimport { formatBalance, pow10 } from \"../utils\";\nimport CheckBox from \"./CheckBox\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport Text from \"./Text\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenSymbol from \"./TokenSymbol\";\n\nexport type LPTokenSelectFilter = \"balance\" | \"amountDeposited\" | \"\";\n\nexport interface LPTokenSelectProps {\n    state: LPTokensState;\n    title: string;\n    emptyText: string;\n    showFilter?: boolean;\n    filter?: LPTokenSelectFilter;\n    onFilterChanged?: (filter: LPTokenSelectFilter) => void;\n    Item: FC<LPTokenItemProps>;\n    style?: ViewStyle;\n}\n\nexport interface LPTokenItemProps {\n    token: LPToken;\n    selected: boolean;\n    filter?: LPTokenSelectFilter;\n    onSelectToken: (token: LPToken) => void;\n}\n\nconst LPTokenSelect: FC<LPTokenSelectProps> = props => {\n    const onUnselectToken = () => props.state.setSelectedLPToken();\n    return (\n        <View style={props.style}>\n            <Expandable\n                title={props.title}\n                expanded={!props.state.selectedLPToken}\n                onExpand={() => props.state.setSelectedLPToken()}>\n                <LPTokenList state={props.state} filter={props.filter} emptyText={props.emptyText} Item={props.Item} />\n            </Expandable>\n            {props.state.selectedLPToken && (\n                <LPTokenItem token={props.state.selectedLPToken} selected={true} onSelectToken={onUnselectToken} />\n            )}\n        </View>\n    );\n};\n\nconst Filter = ({ filter, onFilterChanged }) => {\n    const handler = (f: string) => () => onFilterChanged(f);\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"flex-end\" }}>\n            <CheckBox checked={filter === \"balance\"} onPress={handler(\"balance\")} title={\"with balance\"} />\n            <CheckBox\n                checked={filter === \"amountDeposited\"}\n                onPress={handler(\"amountDeposited\")}\n                title={\"with deposit\"}\n            />\n            <CheckBox checked={!filter} onPress={handler(\"\")} title={\"all\"} />\n        </FlexView>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LPTokenList = ({\n    state,\n    emptyText,\n    filter,\n    Item\n}: {\n    state: LPTokensState;\n    emptyText: string;\n    filter?: LPTokenSelectFilter;\n    Item: FC<LPTokenItemProps>;\n}) => {\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <Item\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    filter={filter}\n                    onSelectToken={state.setSelectedLPToken}\n                />\n            );\n        },\n        [filter, state.setSelectedLPToken]\n    );\n    let data = state.lpTokens.sort((t1, t2) => {\n        return (t2.totalDeposited || ethers.constants.Zero)\n            .sub(t1.totalDeposited || ethers.constants.Zero)\n            .div(pow10(14))\n            .toNumber();\n    });\n    if (filter === \"amountDeposited\") {\n        data = data.filter(token => token.amountDeposited?.gt(0));\n    } else if (filter === \"balance\") {\n        data = data.filter(token => token.balance.gt(0));\n    }\n    return state.loading ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList text={emptyText} />\n    ) : (\n        <FlatList keyExtractor={item => JSON.stringify(item)} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = ({ text }: { text: string }) => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {text}\n            </Text>\n        </View>\n    );\n};\n\nexport const LPTokenItem: FC<LPTokenItemProps> = props => {\n    const { textMedium, textLight } = useColors();\n    const balance = formatBalance(props.token.balance, props.token.decimals, 8);\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable selected={props.selected} onPress={onPress} style={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\n                <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\n                <TokenSymbol token={props.token} />\n                <View style={{ flex: 1, marginLeft: Spacing.tiny }}>\n                    {/*<Text note={true} style={{ textAlign: \"right\", color: textLight }}>*/}\n                    {/*    My Balance*/}\n                    {/*</Text>*/}\n                    <Text caption={true} light={true} style={{ textAlign: \"right\", color: textMedium }}>\n                        {balance}\n                    </Text>\n                </View>\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default LPTokenSelect;\n","import React, { FC } from \"react\";\n\nimport useColors from \"../hooks/useColors\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const { textMedium, textLight, placeholder } = useColors();\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4 }}>\n            <Text fontWeight={\"bold\"} style={{ fontSize: 13, color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text style={{ fontSize: 13, color: props.disabled ? placeholder : props.text ? textMedium : textLight }}>\n                {props.disabled\n                    ? \"N/A\"\n                    : props.text\n                    ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n                    : \"Fetching…\"}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || borderStyle.borderColor;\n    return (\n        <View style={[props.clear ? { paddingHorizontal: Spacing.tiny } : borderStyle, props.style]}>\n            <Text\n                note={true}\n                style={{\n                    color\n                }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst SelectIcon = () => {\n    const { accent } = useColors();\n    return (\n        <Icon type={\"material-community\"} name={\"chevron-right\"} color={accent} style={{ marginLeft: Spacing.tiny }} />\n    );\n};\n\nexport default SelectIcon;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface Validation {\n    regexp: RegExp;\n    error: string;\n}\n\nexport interface InputProps extends NativeInputProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    allowed?: Validation[];\n    forbidden?: Validation[];\n    onError?: (error: string) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Input: FC<InputProps> = props => {\n    const { textDark, textMedium, textLight } = useColors();\n    const size = props.size || \"normal\";\n    const color = props.color || textDark;\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\n    const onChangeText = useCallback(\n        (text: string) => {\n            props.onChangeText?.(text);\n            props.onError?.(\"\");\n            const errors = [] as string[];\n            if (text !== \"\" && props.forbidden) {\n                props.forbidden.forEach(validation => {\n                    if (text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (text !== \"\" && props.allowed) {\n                props.allowed.forEach(validation => {\n                    if (!text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (errors.length > 0) {\n                props.onError?.(errors.join(\"\\n\"));\n            }\n        },\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\n    );\n    return (\n        <NativeInput\n            {...props}\n            inputStyle={[\n                { fontSize, fontFamily: \"regular\", paddingBottom: 4, color, marginTop: 0, minHeight: 32 },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\n                props.inputStyle\n            ]}\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\n            placeholderTextColor={props.placeholderTextColor || textLight}\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\n            onChangeText={onChangeText}\n        />\n    );\n};\n\nexport default Input;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    token?: Token;\n    amount: string;\n    onAmountChanged: (amount: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenInput: FC<TokenInputProps> = props => {\n    const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.token && props.onAmountChanged) {\n                try {\n                    parseBalance(text, props.token.decimals);\n                    props.onAmountChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAmountChanged(text);\n                    }\n                }\n            }\n        },\n        [props.token, props.onAmountChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.amount}\n                    onChangeText={onChangeText}\n                    placeholder={\"0.0\"}\n                    autoFocus={props.autoFocus || false}\n                    inputStyle={{ marginHorizontal: 4 }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 12,\n                        paddingBottom: 0\n                    }}\n                />\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\n                    <MaxButton\n                        token={props.token}\n                        maxButtonText={props.maxButtonText}\n                        updateAmount={props.onAmountChanged}\n                    />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(() => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (props.token.symbol === \"ETH\") {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount]);\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 10 : 20 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || \"MAX\"}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: 4 }}\n            />\n        </View>\n    );\n};\n\nexport default TokenInput;\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/sushiswap\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/sushiswap\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/YS8xH7E\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React, { useCallback } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport Column from \"../Column\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst WebFooter = () => (\n    <Column noTopMargin={true}>\n        <View\n            style={{\n                width: \"100%\",\n                padding: Spacing.normal,\n                marginTop: Spacing.huge\n            }}>\n            <SocialIcons />\n            <Text note={true} style={{ marginTop: Spacing.tiny, textAlign: \"center\", width: \"100%\" }}>\n                2020 Built by <Link to={\"https://levx.io\"} text={\"LevX Team\"} />\n            </Text>\n        </View>\n    </Column>\n);\n\nconst Link = ({ to, text }) => {\n    const onPress = useCallback(() => {\n        window.open(to, \"_blank\");\n    }, []);\n    return (\n        <Text note={true} style={{ textDecorationLine: \"underline\" }} onPress={onPress}>\n            {text}\n        </Text>\n    );\n};\n\nexport default WebFooter;\n","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { parseBalance } from \"../utils\";\nimport useSDK from \"./useSDK\";\n\nexport interface TokenPairState {\n    fromSymbol: string;\n    setFromSymbol: (symbol: string) => void;\n    toSymbol: string;\n    setToSymbol: (symbol: string) => void;\n    fromToken?: Token;\n    toToken?: Token;\n    fromAmount: string;\n    setFromAmount: (amount: string) => void;\n    toAmount: string;\n    setToAmount: (amount: string) => void;\n    fromTokenAllowed: boolean;\n    setFromTokenAllowed: (allowed: boolean) => void;\n    toTokenAllowed: boolean;\n    setToTokenAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onWrap: () => Promise<void>;\n    wrapping: boolean;\n    onUnwrap: () => Promise<void>;\n    unwrapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useTokenPairState: () => TokenPairState = () => {\n    const { provider, signer, address, tokens, updateTokens, getTokenAllowance } = useContext(EthersContext);\n    const { wrapETH, unwrapETH } = useSDK();\n    const [fromSymbol, setFromSymbol] = useState(\"\");\n    const [toSymbol, setToSymbol] = useState(\"\");\n    const [fromAmount, setFromAmount] = useState(\"\");\n    const [toAmount, setToAmount] = useState(\"\");\n    const [fromTokenAllowed, setFromTokenAllowed] = useState(false);\n    const [toTokenAllowed, setToTokenAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [wrapping, setWrapping] = useState(false);\n    const [unwrapping, setUnwrapping] = useState(false);\n\n    const fromToken = tokens.find(token => token.symbol === fromSymbol);\n    const toToken = tokens.find(token => token.symbol === toSymbol);\n\n    useEffect(() => {\n        if (fromSymbol === \"\") {\n            setToSymbol(\"\");\n        }\n        setFromAmount(\"\");\n        setToAmount(\"\");\n    }, [fromSymbol, toSymbol]);\n\n    useEffect(() => {\n        setFromSymbol(\"\");\n    }, [address]);\n\n    useAsyncEffect(async () => {\n        if (fromToken && toToken && provider && signer) {\n            setFromTokenAllowed(false);\n            setToTokenAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                if (fromToken.symbol !== \"ETH\") {\n                    const fromAllowance = await getTokenAllowance(fromToken.address, ROUTER);\n                    setFromTokenAllowed(ethers.BigNumber.from(fromAllowance).gte(minAllowance));\n                }\n                if (toToken.symbol !== \"ETH\") {\n                    const toAllowance = await getTokenAllowance(toToken.address, ROUTER);\n                    setToTokenAllowed(ethers.BigNumber.from(toAllowance).gte(minAllowance));\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [fromToken, toToken, provider, signer]);\n\n    const onWrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setWrapping(true);\n            try {\n                const tx = await wrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setWrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    const onUnwrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setUnwrapping(true);\n            try {\n                const tx = await unwrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setUnwrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    return {\n        fromSymbol,\n        setFromSymbol,\n        toSymbol,\n        setToSymbol,\n        fromToken,\n        toToken,\n        fromAmount,\n        setFromAmount,\n        toAmount,\n        setToAmount,\n        fromTokenAllowed,\n        setFromTokenAllowed,\n        toTokenAllowed,\n        setToTokenAllowed,\n        loading,\n        onWrap,\n        wrapping,\n        onUnwrap,\n        unwrapping\n    };\n};\n\nexport default useTokenPairState;\n","import { useContext, useState } from \"react\";\n\nimport { Pair } from \"@sushiswap/sdk\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport interface LiquidityState extends TokenPairState {\n    pair?: Pair;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useLiquidityState: () => LiquidityState = () => {\n    const state = useTokenPairState();\n    const { provider } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const [pair, setPair] = useState<Pair>();\n    const { getPair } = useSDK();\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n                setPair(undefined);\n            }\n            if (state.fromToken && state.toToken && provider) {\n                try {\n                    setPair(await getPair(state.fromToken, state.toToken, provider));\n                } catch (e) {\n                } finally {\n                    setLoading(false);\n                }\n            } else {\n                setLoading(false);\n            }\n        },\n        () => \"getPair(\" + state.fromSymbol + \",\" + state.toSymbol + \")\",\n        [state.fromSymbol, state.toSymbol, provider],\n        0\n    );\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        pair\n    };\n};\n\nexport default useLiquidityState;\n","import { useContext, useEffect, useState } from \"react\";\n\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport { fetchMyLPTokens, fetchMyUniswapLPTokens, fetchPools } from \"../utils/fetch-utils\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useLiquidityState, { LiquidityState } from \"./useLiquidityState\";\n\nexport interface LPTokensState extends LiquidityState {\n    updateLPTokens: () => Promise<void>;\n    lastTimeRefreshed: number;\n    updateLastTimeRefreshed: () => void;\n    lpTokens: LPToken[];\n    selectedLPToken?: LPToken;\n    setSelectedLPToken: (token?: LPToken) => void;\n    selectedLPTokenAllowed: boolean;\n    setSelectedLPTokenAllowed: (allowed: boolean) => void;\n    amount: string;\n    setAmount: (amount: string) => void;\n}\n\ntype Mode = \"pools\" | \"my-lp-tokens\" | \"my-uniswap-lp-tokens\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useLPTokensState: (mode: Mode) => LPTokensState = mode => {\n    const state = useLiquidityState();\n    const { provider, signer, address, tokens } = useContext(EthersContext);\n    const [lastTimeRefreshed, setLastTimeRefreshed] = useState(0);\n    const [loading, setLoading] = useState(true);\n    const [lpTokens, setLPTokens] = useState<LPToken[]>([]);\n    const [selectedLPToken, setSelectedLPToken] = useState<LPToken>();\n    const [selectedLPTokenAllowed, setSelectedLPTokenAllowed] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n\n    const updateLPTokens = async () => {\n        try {\n            const data = await (mode === \"pools\"\n                ? fetchPools(provider, signer)\n                : mode === \"my-lp-tokens\"\n                ? fetchMyLPTokens(tokens, provider, signer)\n                : fetchMyUniswapLPTokens(tokens, provider, signer));\n            if (data) {\n                setLPTokens(data);\n            }\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        if (!selectedLPToken) {\n            setAmount(\"\");\n        }\n    }, [selectedLPToken]);\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (address && (mode === \"pools\" || tokens.length > 0)) {\n                if (!block) {\n                    setLoading(true);\n                }\n                await updateLPTokens();\n            }\n        },\n        () => \"updateLPTokens()\",\n        [tokens.length, address, lastTimeRefreshed],\n        0\n    );\n\n    return {\n        ...state,\n        updateLPTokens,\n        loading: state.loading || loading,\n        lastTimeRefreshed,\n        updateLastTimeRefreshed: () => {\n            setLastTimeRefreshed(Date.now());\n        },\n        lpTokens,\n        selectedLPToken,\n        setSelectedLPToken,\n        selectedLPTokenAllowed,\n        setSelectedLPTokenAllowed,\n        amount,\n        setAmount\n    };\n};\n\nexport default useLPTokensState;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { LPTokenSelectFilter } from \"../components/LPTokenSelect\";\nimport { MASTER_CHEF } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { parseBalance } from \"../utils\";\nimport useLPTokensState, { LPTokensState } from \"./useLPTokensState\";\nimport useSDK from \"./useSDK\";\n\nexport interface FarmingState extends LPTokensState {\n    action?: Action;\n    setAction: (action?: Action) => void;\n    expectedSushiRewardPerBlock?: ethers.BigNumber;\n    filteredBy: LPTokenSelectFilter;\n    setFilteredBy: (filter: LPTokenSelectFilter) => void;\n    onDeposit: () => Promise<void>;\n    depositing: boolean;\n    onWithdraw: () => Promise<void>;\n    withdrawing: boolean;\n}\n\nexport type Action = \"deposit\" | \"withdraw\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useFarmingState: () => FarmingState = () => {\n    const state = useLPTokensState(\"pools\");\n    const { provider, signer, getTokenAllowance } = useContext(EthersContext);\n    const { getExpectedSushiRewardPerBlock, deposit, withdraw } = useSDK();\n    const [filteredBy, setFilteredBy] = useState(\"\" as LPTokenSelectFilter);\n    const [action, setAction] = useState<Action>();\n    const [loading, setLoading] = useState(false);\n    const [expectedSushiRewardPerBlock, setExpectedSushiRewardPerBlock] = useState<ethers.BigNumber>();\n    const [depositing, setDepositing] = useState(false);\n    const [withdrawing, setWithdrawing] = useState(false);\n\n    useEffect(() => {\n        setFilteredBy(\"\");\n        setAction(undefined);\n        setLoading(false);\n        setDepositing(false);\n        setWithdrawing(false);\n        setExpectedSushiRewardPerBlock(undefined);\n    }, [state.selectedLPToken]);\n\n    useAsyncEffect(async () => {\n        if (signer && state.selectedLPToken) {\n            setLoading(true);\n            try {\n                setExpectedSushiRewardPerBlock(await getExpectedSushiRewardPerBlock(state.selectedLPToken, signer));\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [signer, state.selectedLPToken]);\n\n    useAsyncEffect(async () => {\n        if (provider && signer && state.selectedLPToken) {\n            setLoading(true);\n            state.setSelectedLPTokenAllowed(false);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const allowance = await getTokenAllowance(state.selectedLPToken.address, MASTER_CHEF);\n                state.setSelectedLPTokenAllowed(ethers.BigNumber.from(allowance).gte(minAllowance));\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [provider, signer, state.selectedLPToken]);\n\n    useEffect(() => {\n        state.setAmount(\"\");\n    }, [action]);\n\n    const onDeposit = useCallback(async () => {\n        if (state.selectedLPToken?.id && state.amount && signer) {\n            setDepositing(true);\n            try {\n                const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\n                const tx = await deposit(state.selectedLPToken.id, amount, signer);\n                await tx.wait();\n                state.setSelectedLPToken(undefined);\n                await state.updateLastTimeRefreshed();\n            } finally {\n                setDepositing(false);\n            }\n        }\n    }, [state.selectedLPToken, state.amount, signer]);\n\n    const onWithdraw = useCallback(async () => {\n        if (state.selectedLPToken?.id && state.amount && signer) {\n            setWithdrawing(true);\n            try {\n                const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\n                const tx = await withdraw(state.selectedLPToken.id, amount, signer);\n                await tx.wait();\n                state.setSelectedLPToken(undefined);\n                await state.updateLastTimeRefreshed();\n            } finally {\n                setWithdrawing(false);\n            }\n        }\n    }, [state.selectedLPToken, state.amount, signer]);\n\n    return {\n        ...state,\n        loading: state.loading || loading,\n        filteredBy,\n        setFilteredBy,\n        action,\n        setAction,\n        expectedSushiRewardPerBlock,\n        onDeposit,\n        depositing,\n        onWithdraw,\n        withdrawing\n    };\n};\n\nexport default useFarmingState;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { StatusBar } from \"expo-status-bar\";\n\nimport { HEADER_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\n\nconst AppHeader = () => {\n    const { background } = useColors();\n    return (\n        <View\n            style={{\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                backgroundColor: background\n            }}>\n            <StatusBar translucent={false} backgroundColor={background} />\n        </View>\n    );\n};\n\nexport default AppHeader;\n","import React, { useCallback, useContext } from \"react\";\nimport { Image, View } from \"react-native\";\n\nimport * as Linking from \"expo-linking\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport Button from \"../Button\";\n\nconst ConnectWallet = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const onPress = useCallback(async () => {\n        if (window.ethereum) {\n            await window.ethereum.enable();\n        } else {\n            await Linking.openURL(\"https://metamask.io/\");\n        }\n    }, [window.ethereum]);\n    const title = window.ethereum ? \"Connect\" : \"Install MetaMask\";\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <Image\n                source={\n                    darkMode ? require(\"../../../assets/metamask-dark.png\") : require(\"../../../assets/metamask.png\")\n                }\n                style={{ width: 223, height: 183, marginBottom: Spacing.huge }}\n            />\n            <Button size={\"large\"} color={\"#e2761b\"} onPress={onPress} title={title} containerStyle={{ width: 440 }} />\n        </View>\n    );\n};\nexport default ConnectWallet;\n","import React from \"react\";\nimport { Image, View } from \"react-native\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\nimport { Title } from \"./WebHeader\";\n\nconst MobileNotSupported = () => {\n    return (\n        <View\n            style={{\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                width: \"100%\",\n                minHeight: \"100%\",\n                padding: Spacing.normal\n            }}>\n            <Image\n                source={require(\"../../../assets/sushiswap.jpg\")}\n                style={{ width: 192, height: 192, marginBottom: Spacing.normal }}\n            />\n            <Title />\n            <Text style={{ marginTop: Spacing.normal }}>Mobile devices not supported yet.</Text>\n            <SocialIcons />\n        </View>\n    );\n};\n\nexport default MobileNotSupported;\n","import React, { useContext } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { AppLoading } from \"expo\";\nimport { DeviceType } from \"expo-device\";\n\nimport AppHeader from \"../components/app/AppHeader\";\nimport Text from \"../components/Text\";\nimport ConnectToWallet from \"../components/web/ConnectToWallet\";\nimport MobileNotSupported from \"../components/web/MobileNotSupported\";\nimport { HEADER_HEIGHT } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst Screen = props => {\n    const { deviceType } = useContext(GlobalContext);\n    const { address, chainId } = useContext(EthersContext);\n    if (!deviceType) {\n        return <AppLoading />;\n    }\n    if (Platform.OS === \"web\") {\n        if (deviceType === DeviceType.PHONE) return <MobileNotSupported />;\n        if (!address) return <ConnectToWallet />;\n        if (chainId !== 1)\n            return (\n                <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n                    <Text light={true} style={{ textAlign: \"center\" }}>\n                        {\"Please switch network to\\n'Ethereum Mainnet'\"}\n                    </Text>\n                </View>\n            );\n        return (\n            <View\n                {...props}\n                style={[{ position: \"absolute\", top: HEADER_HEIGHT, right: 0, bottom: 0, left: 0 }, props.style]}\n            />\n        );\n    } else {\n        return (\n            <View style={{ width: \"100%\", height: \"100%\" }}>\n                <AppHeader />\n                <View {...props} style={[{ flex: 1 }, props.style]} />\n            </View>\n        );\n    }\n};\n\nexport default Screen;\n","import React, { FC, useCallback, useState } from \"react\";\nimport { Image, Platform, TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Button from \"../components/Button\";\nimport ButtonGroup from \"../components/ButtonGroup\";\nimport CloseIcon from \"../components/CloseIcon\";\nimport Column from \"../components/Column\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport FlexView from \"../components/FlexView\";\nimport Heading from \"../components/Heading\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport LPTokenSelect, { LPTokenItemProps } from \"../components/LPTokenSelect\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport SelectIcon from \"../components/SelectIcon\";\nimport Text from \"../components/Text\";\nimport TokenInput from \"../components/TokenInput\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { MASTER_CHEF } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useFarmingState, { Action, FarmingState } from \"../hooks/useFarmingState\";\nimport useLinker from \"../hooks/useLinker\";\nimport LPToken from \"../types/LPToken\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { formatBalance, isEmptyValue, parseBalance, pow10 } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst Actions = [\"deposit\", \"withdraw\"];\n\nconst FarmingScreen = () => {\n    return (\n        <Screen>\n            <Container>\n                <Content>\n                    <Farming />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst Farming = () => {\n    const state = useFarmingState();\n    const emptyText =\n        state.filteredBy === \"amountDeposited\"\n            ? \"You don't have any pool with deposit.\"\n            : state.filteredBy === \"balance\"\n            ? \"You don't have any pool with balance.\"\n            : \"Temporarily unable to load pools.\";\n    return (\n        <>\n            <Column>\n                <Text h4={true} style={{ textAlign: \"center\", marginBottom: Spacing.normal }}>\n                    🌾 Farming\n                </Text>\n            </Column>\n            <LPTokenSelect\n                state={state}\n                title={\"1. Select a pool for yield farming:\"}\n                emptyText={emptyText}\n                showFilter={!state.selectedLPToken}\n                filter={state.filteredBy}\n                onFilterChanged={state.setFilteredBy}\n                Item={TokenItem}\n            />\n            <ActionSelect state={state} />\n            <Deposit state={state} />\n            <Withdraw state={state} />\n        </>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenItem: FC<LPTokenItemProps> = props => {\n    const { background, backgroundLight, textMedium } = useColors();\n    const amount =\n        (props.filter === \"balance\"\n            ? props.token.balance\n            : props.filter === \"amountDeposited\"\n            ? props.token.amountDeposited\n            : props.token.totalDeposited) || \"0\";\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    const field =\n        props.filter === \"amountDeposited\" ? \"My Deposit\" : props.filter === \"balance\" ? \"My Balance\" : \"Total Deposit\";\n    return (\n        <Hoverable>\n            {({ hovered }) => (\n                <TouchableHighlight onPress={onPress}>\n                    <View style={{ backgroundColor: hovered ? backgroundLight : background }}>\n                        <FlexView style={{ alignItems: \"center\", margin: Spacing.small }}>\n                            <View>\n                                <LogoSymbol token={props.token.tokenA} />\n                                <LogoSymbol token={props.token.tokenB} />\n                            </View>\n                            <View style={{ flex: 1 }}>\n                                <Text style={{ textAlign: \"right\", fontSize: 15 }}>{field}</Text>\n                                <Text light={true} style={{ textAlign: \"right\", fontSize: 22, color: textMedium }}>\n                                    {formatBalance(amount, props.token.decimals, 8)}\n                                </Text>\n                            </View>\n                            {props.selected ? <CloseIcon /> : <SelectIcon />}\n                        </FlexView>\n                    </View>\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nconst LogoSymbol = ({ token }) => {\n    const { textMedium } = useColors();\n    const [isEmpty, setIsEmpty] = useState(false);\n    const source = !token.logoURI || isEmpty ? require(\"../../assets/empty-token.png\") : { uri: token.logoURI };\n    return (\n        <FlexView style={{ alignItems: \"center\", marginBottom: Spacing.tiny }}>\n            <Image\n                source={source}\n                onError={() => setIsEmpty(true)}\n                style={{ width: 24, height: 24, backgroundColor: \"white\", borderRadius: 12 }}\n            />\n            <Text light={true} style={{ fontSize: 22, color: textMedium, marginLeft: Spacing.small }}>\n                {token.symbol.replace(/\\+/g, \"+\\n\")}\n            </Text>\n        </FlexView>\n    );\n};\n\nconst ActionSelect = ({ state }: { state: FarmingState }) => {\n    if (!state.selectedLPToken) {\n        return <Column noTopMargin={true} />;\n    }\n    const index = state.action ? Actions.indexOf(state.action) : null;\n    const onPress = useCallback((i: number) => {\n        state.setAction(Actions[i] as Action);\n    }, []);\n    const balance = formatBalance(state.selectedLPToken!.balance, state.selectedLPToken!.decimals);\n    const deposit = formatBalance(state.selectedLPToken.amountDeposited || \"0\", state.selectedLPToken!.decimals);\n    return (\n        <Column>\n            <Heading text={\"2. Do you want to DEPOSIT or WITHDRAW?\"} />\n            <View style={{ marginHorizontal: Spacing.small, marginBottom: Spacing.normal }}>\n                <Meta label={\"My Balance\"} text={balance} />\n                <Meta label={\"My Deposit\"} text={deposit} />\n            </View>\n            <ButtonGroup\n                selectedIndex={index}\n                onPress={onPress}\n                buttons={[{ element: DepositText }, { element: WithdrawText }]}\n                containerStyle={{ marginHorizontal: Spacing.small }}\n            />\n        </Column>\n    );\n};\n\nconst DepositText = () => {\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <Text style={{ color: \"black\" }}>Deposit</Text>\n            <Icon\n                type={\"material-community\"}\n                name={\"chevron-right\"}\n                color={\"black\"}\n                style={{ marginLeft: Spacing.tiny, marginTop: 2 }}\n            />\n        </FlexView>\n    );\n};\n\nconst WithdrawText = () => {\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <Text style={{ color: \"black\" }}>Withdraw</Text>\n            <Icon\n                type={\"material-community\"}\n                name={\"chevron-right\"}\n                color={\"black\"}\n                style={{ marginLeft: Spacing.tiny, marginTop: 2 }}\n            />\n        </FlexView>\n    );\n};\n\nconst Deposit = ({ state }: { state: FarmingState }) => {\n    if (!state.selectedLPToken || state.action !== \"deposit\") {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <Column>\n            <AddLiquidityNotice state={state} />\n            <TokenInput\n                title={\"3. Amount of tokens to DEPOSIT:\"}\n                token={state.selectedLPToken}\n                hidden={state.selectedLPToken.balance.isZero()}\n                amount={state.amount}\n                onAmountChanged={state.setAmount}\n            />\n            <DepositInfo state={state} />\n            <DepositControls state={state} />\n        </Column>\n    );\n};\n\nconst AddLiquidityNotice = ({ state }: { state: FarmingState }) => {\n    const { green } = useColors();\n    if (!state.selectedLPToken!.balance.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <>\n            <View style={{ marginHorizontal: Spacing.small }}>\n                <Notice\n                    color={green}\n                    text={\n                        \"You need some \" +\n                        state.selectedLPToken!.symbol +\n                        \" token to start farming. Add liquidity to get the LP token.\"\n                    }\n                />\n            </View>\n            <AddLiquidityButton />\n        </>\n    );\n};\n\nconst DepositInfo = ({ state }: { state: FarmingState }) => {\n    if (state.selectedLPToken!.balance.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    const balance = formatBalance(state.selectedLPToken!.balance, state.selectedLPToken!.decimals);\n    const sushiReward =\n        state.expectedSushiRewardPerBlock && state.amount\n            ? formatBalance(state.expectedSushiRewardPerBlock.mul(parseBalance(state.amount, 18)).div(pow10(18)), 18)\n            : undefined;\n    return (\n        <Column noTopMargin={true}>\n            <Meta label={\"My Balance\"} text={balance} />\n            {!isEmptyValue(state.amount) && <Meta label={\"SUSHI Reward per Block\"} text={sushiReward} />}\n        </Column>\n    );\n};\n\nconst DepositControls = ({ state }: { state: FarmingState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.selectedLPToken]);\n    if (state.selectedLPToken!.balance.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    const approveRequired = !state.selectedLPTokenAllowed;\n    const disabled = approveRequired || isEmptyValue(state.amount);\n    return (\n        <Column>\n            {parseBalance(state.amount, state.selectedLPToken!.decimals).gt(state.selectedLPToken!.balance) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken!.symbol} />\n            ) : state.loading ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.selectedLPToken!}\n                        spender={MASTER_CHEF}\n                        onSuccess={() => state.setSelectedLPTokenAllowed(true)}\n                        onError={setError}\n                        hidden={isEmptyValue(state.amount) || !approveRequired}\n                    />\n                    <DepositButton state={state} onError={setError} disabled={disabled} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </Column>\n    );\n};\n\nconst AddLiquidityButton = () => {\n    const { green } = useColors();\n    const onPress = useLinker(\"/liquidity\", \"Liquidity\");\n    return (\n        <Button\n            color={green}\n            title={\"Add Liquidity\"}\n            containerStyle={{ marginTop: Spacing.normal }}\n            onPress={onPress}\n        />\n    );\n};\n\nconst DepositButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: FarmingState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onDeposit().catch(onError);\n    }, [state.onDeposit, onError]);\n    return <Button title={\"Deposit\"} disabled={disabled} loading={state.depositing} onPress={onPress} />;\n};\n\nconst Withdraw = ({ state }: { state: FarmingState }) => {\n    if (!state.selectedLPToken || state.action !== \"withdraw\") {\n        return <Column noTopMargin={true} />;\n    }\n    const token: LPToken = {\n        ...state.selectedLPToken,\n        balance: state.selectedLPToken.amountDeposited || ethers.constants.Zero\n    };\n    return (\n        <Column>\n            <NoLPTokenNotice state={state} />\n            <TokenInput\n                title={\"3. Amount of tokens to WITHDRAW:\"}\n                token={token}\n                hidden={state.loading || state.selectedLPToken.amountDeposited?.isZero() || false}\n                amount={state.amount}\n                onAmountChanged={state.setAmount}\n            />\n            <WithdrawInfo state={state} />\n            <WithdrawControls state={state} />\n        </Column>\n    );\n};\n\nconst NoLPTokenNotice = ({ state }: { state: FarmingState }) => {\n    if (state.loading || !state.selectedLPToken || !state.selectedLPToken.amountDeposited?.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <Column noTopMargin={true}>\n            <View style={{ marginHorizontal: Spacing.small }}>\n                <Notice\n                    text={\"You don't have any \" + state.selectedLPToken!.symbol + \" token deposited. Deposit it first.\"}\n                />\n            </View>\n        </Column>\n    );\n};\n\nconst WithdrawInfo = ({ state }: { state: FarmingState }) => {\n    if (\n        state.loading ||\n        !state.selectedLPToken ||\n        !state.selectedLPToken.amountDeposited ||\n        state.selectedLPToken.amountDeposited?.isZero() ||\n        !state.selectedLPToken.pendingSushi\n    ) {\n        return <Column noTopMargin={true} />;\n    }\n    const deposit = formatBalance(state.selectedLPToken.amountDeposited, state.selectedLPToken!.decimals);\n    const pendingSushi = formatBalance(\n        state.selectedLPToken.pendingSushi || ethers.constants.Zero,\n        state.selectedLPToken!.decimals\n    );\n    return (\n        <Column noTopMargin={true}>\n            <Meta label={\"My Deposit\"} text={deposit} />\n            <Meta label={\"Pending Sushi Reward\"} text={pendingSushi} />\n            <View style={{ marginTop: Spacing.normal, marginHorizontal: Spacing.small }}>\n                <Notice text={\"All pending sushi reward will be transferred to you if you withdraw.\"} />\n            </View>\n        </Column>\n    );\n};\n\nconst WithdrawControls = ({ state }: { state: FarmingState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.selectedLPToken]);\n    if (state.loading) {\n        return (\n            <Column>\n                <FetchingButton />\n            </Column>\n        );\n    }\n    if (\n        !state.selectedLPToken ||\n        !state.selectedLPToken.amountDeposited ||\n        state.selectedLPToken.amountDeposited.isZero()\n    ) {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <Column>\n            {parseBalance(state.amount, state.selectedLPToken!.decimals).gt(state.selectedLPToken.amountDeposited) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken!.symbol} />\n            ) : (\n                <WithdrawButton state={state} onError={setError} disabled={isEmptyValue(state.amount)} />\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </Column>\n    );\n};\n\nconst WithdrawButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: FarmingState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onWithdraw().catch(onError);\n    }, [state.onWithdraw, onError]);\n    return (\n        <Button size={\"large\"} title={\"Withdraw\"} disabled={disabled} loading={state.withdrawing} onPress={onPress} />\n    );\n};\n\nexport default FarmingScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = () => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: Spacing.small,\n                marginBottom: Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React, { PropsWithChildren } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\n    const { backgroundLight } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: backgroundLight }),\n                    backgroundColor: backgroundLight,\n                    marginTop: Spacing.normal + Spacing.small,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\n\nexport default InfoBox;\n","import React, { FC } from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Text from \"./Text\";\n\ninterface TitleProps {\n    text: string;\n}\n\nconst Title: FC<TitleProps> = props => {\n    return (\n        <Text fontWeight={\"bold\"} style={{ marginBottom: Spacing.tiny, fontSize: 40 }}>\n            {props.text}\n        </Text>\n    );\n};\n\nexport default Title;\n","import useAsyncEffect from \"use-async-effect\";\n\nconst handles = {};\n\nconst useDelayedEffect = (\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\n    timeout: number,\n    inputs?: any[]\n) => {\n    const key = effect.toString();\n    useAsyncEffect<number>(\n        () => {\n            const handle = setTimeout(effect, timeout);\n            handles[key] = handle;\n            return handle;\n        },\n        handle => {\n            clearTimeout(handle);\n        },\n        inputs\n    );\n};\nexport default useDelayedEffect;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={true} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {props.token.name}\n    </Text>\n);\n\nexport default TokenName;\n","import React, { FC, useCallback, useContext } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Input from \"./Input\";\n\nexport interface TokenSearchProps {\n    tokens?: Token[];\n    text: string;\n    onChangeText: (text: string) => void;\n    onAddToken?: (token: Token) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSearch: FC<TokenSearchProps> = props => {\n    const { border } = useStyles();\n    if (!props.tokens) {\n        return <View />;\n    }\n    // const isAddress = ethers.utils.isAddress(props.text.trim());\n    return (\n        <FlexView style={{ marginBottom: Spacing.small }}>\n            <Input\n                value={props.text}\n                onChangeText={props.onChangeText}\n                placeholder={\"Search for a token… (name or symbol)\"}\n                autoFocus={true}\n                inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\n                inputContainerStyle={{ borderBottomWidth: 0, marginRight: 40 }}\n                labelStyle={{ height: 0 }}\n                containerStyle={{\n                    ...border(),\n                    paddingHorizontal: Spacing.tiny,\n                    paddingTop: 12,\n                    paddingBottom: 0\n                }}\n            />\n            {/*{isAddress && <AddButton address={props.text} onAddToken={props.onAddToken} />}*/}\n        </FlexView>\n    );\n};\n\nconst AddButton = (props: { address: string; onAddToken? }) => {\n    const { provider, signer, getTokenBalance } = useContext(EthersContext);\n    const { accent } = useColors();\n    const onPress = useCallback(async () => {\n        const address = props.address.trim();\n        if (provider && signer && ethers.utils.isAddress(address)) {\n            const token = await findOrFetchToken(provider, address);\n            const balance = await getTokenBalance(address, await signer.getAddress());\n            props.onAddToken?.({\n                ...token,\n                balance\n            } as Token);\n        }\n    }, [provider, signer, props.address]);\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 10 : 20 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={\"Add\"}\n                fontWeight={\"bold\"}\n                onPress={onPress}\n                buttonStyle={{ paddingHorizontal: 4 }}\n            />\n        </View>\n    );\n};\n\nexport default TokenSearch;\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport Token from \"../types/Token\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenSearch from \"./TokenSearch\";\nimport TokenSymbol from \"./TokenSymbol\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    onAddToken?: (token: Token) => void;\n    style?: ViewStyle;\n}\n\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens } = useContext(EthersContext);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\n    const hidden = (t: Token) => {\n        let hide = props.hidden?.(t) || false;\n        if (!hide && query.length > 0 && !ethers.utils.isAddress(query)) {\n            hide = !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\n        }\n        return hide;\n    };\n    useEffect(() => setSearch(\"\"), [props.symbol]);\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\n    return (\n        <View style={props.style}>\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={props.onAddToken} />\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\n            </Expandable>\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () =>\n            tokens\n                .filter(token => (props.hidden ? !props.hidden(token) : true))\n                .sort(\n                    (t1, t2) =>\n                        (t2.balance.isZero() ? 0 : 10000000000) -\n                        (t1.balance.isZero() ? 0 : 10000000000) +\n                        t1.symbol.localeCompare(t2.symbol)\n                ),\n        [tokens, props.hidden]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any matching tokens.\"}\n            </Text>\n        </View>\n    );\n};\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            style={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <TokenName token={props.token} disabled={props.disabled} />\n                <TokenAmount token={props.token} disabled={props.disabled} style={{ flex: 1, textAlign: \"right\" }} />\n                <TokenSymbol token={props.token} disabled={props.disabled} />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSelect;\n","import React from \"react\";\n\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\nimport Button from \"./Button\";\n\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" Not Supported\"} disabled={true} />;\n};\n\nexport default UnsupportedButton;\n","import React, { FC } from \"react\";\nimport { View } from \"react-native\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_WIDTH, Spacing, SUB_MENU_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebSubMenuItem {\n    title: string;\n    path: string;\n}\n\nexport interface WebSubMenuProps {\n    items: WebSubMenuItem[];\n}\n\nexport const SwapSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Swap Tokens\",\n                path: \"/swap\"\n            },\n            {\n                title: \"My Orders\",\n                path: \"/swap/my-orders\"\n            }\n        ]}\n    />\n);\n\nexport const LiquiditySubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Add Liquidity\",\n                path: \"/liquidity\"\n            },\n            {\n                title: \"Remove Liquidity\",\n                path: \"/liquidity/remove\"\n            },\n            {\n                title: \"Migrate Liquidity\",\n                path: \"/liquidity/migrate\"\n            }\n        ]}\n    />\n);\n\nconst WebSubMenu: FC<WebSubMenuProps> = props => {\n    const { borderDark, submenu } = useColors();\n    return (\n        <View\n            style={{\n                height: SUB_MENU_HEIGHT,\n                width: \"100%\",\n                borderBottomWidth: 1,\n                borderColor: borderDark + \"40\",\n                backgroundColor: submenu\n            }}>\n            <FlexView\n                style={{\n                    width: HEADER_WIDTH,\n                    marginTop: 2,\n                    paddingHorizontal: Spacing.normal,\n                    alignSelf: \"center\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\"\n                }}>\n                {props.items.map(item => (\n                    <MenuItem key={item.path} {...item} />\n                ))}\n            </FlexView>\n        </View>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.isExact;\n    return (\n        <Link to={path} style={{ marginLeft: Spacing.tiny, padding: Spacing.tiny, textDecoration: \"none\" }}>\n            <Text\n                fontWeight={active ? \"regular\" : \"light\"}\n                style={{\n                    fontSize: 13,\n                    color: active ? textDark : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nexport default WebSubMenu;\n","import { useCallback, useContext, useState } from \"react\";\n\nimport { EthersContext } from \"../context/EthersContext\";\nimport { parseBalance } from \"../utils\";\nimport useLiquidityState, { LiquidityState } from \"./useLiquidityState\";\nimport useSDK from \"./useSDK\";\n\nexport interface AddLiquidityState extends LiquidityState {\n    onAdd: () => Promise<void>;\n    adding: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useAddLiquidityState: () => AddLiquidityState = () => {\n    const state = useLiquidityState();\n    const { signer, updateTokens } = useContext(EthersContext);\n    const [adding, setAdding] = useState(false);\n    const { addLiquidity, addLiquidityETH } = useSDK();\n\n    const onAdd = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && state.toAmount && signer) {\n            setAdding(true);\n            try {\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const toAmount = parseBalance(state.toAmount, state.toToken.decimals);\n                if (state.fromSymbol === \"ETH\" || state.toSymbol === \"ETH\") {\n                    const [token, amount, amountETH] =\n                        state.fromSymbol === \"ETH\"\n                            ? [state.toToken, toAmount, fromAmount]\n                            : [state.fromToken, fromAmount, toAmount];\n                    const tx = await addLiquidityETH(token, amount, amountETH, signer);\n                    await tx.wait();\n                } else {\n                    const tx = await addLiquidity(state.fromToken, state.toToken, fromAmount, toAmount, signer);\n                    await tx.wait();\n                }\n                await updateTokens();\n                state.setFromSymbol(\"\");\n            } finally {\n                setAdding(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, state.toAmount, signer]);\n\n    return {\n        ...state,\n        onAdd,\n        adding\n    };\n};\n\nexport default useAddLiquidityState;\n","import React, { useCallback, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport ItemSeparator from \"../components/ItemSeparator\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { LiquiditySubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport useAddLiquidityState, { AddLiquidityState } from \"../hooks/useAddLiquidityState\";\nimport useColors from \"../hooks/useColors\";\nimport useSDK from \"../hooks/useSDK\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { convertAmount, convertToken, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst LiquidityScreen = () => {\n    return (\n        <Screen>\n            <LiquiditySubMenu />\n            <Container>\n                <Content>\n                    <Title text={\"Add Liquidity\"} />\n                    <Text light={true}>Add liquidity to a pool and get LP tokens of the pair.</Text>\n                    <AddLiquidity />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst AddLiquidity = () => {\n    const state = useAddLiquidityState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <TokenSelect\n                title={\"1st Token\"}\n                symbol={state.fromSymbol}\n                onChangeSymbol={state.setFromSymbol}\n                hidden={token => token.balance.isZero()}\n            />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <FromTokenInput state={state} />\n            <ItemSeparator />\n            <ToTokenInput state={state} />\n            <ItemSeparator />\n            <PriceInfo state={state} />\n        </View>\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: AddLiquidityState }) => {\n    if (!state.fromSymbol) {\n        return <Heading text={\"2nd Token\"} disabled={true} />;\n    }\n    return (\n        <View>\n            <TokenSelect\n                title={\"2nd Token\"}\n                symbol={state.toSymbol}\n                onChangeSymbol={state.setToSymbol}\n                hidden={token => token.symbol === state.fromSymbol || token.balance.isZero()}\n            />\n        </View>\n    );\n};\n\nconst FromTokenInput = ({ state }: { state: AddLiquidityState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={\"Amount of Tokens\"} disabled={true} />;\n    }\n    const onAmountChanged = (newAmount: string) => {\n        state.setFromAmount(newAmount);\n        if (state.pair && state.fromToken) {\n            const fromPrice = state.pair.priceOf(convertToken(state.fromToken));\n            const toAmount = fromPrice.quote(convertAmount(state.fromToken, newAmount)).toExact();\n            state.setToAmount(isEmptyValue(toAmount) ? \"\" : toAmount);\n        }\n    };\n    return (\n        <TokenInput\n            title={\"Amount of Tokens\"}\n            token={state.fromToken}\n            amount={state.fromAmount}\n            onAmountChanged={onAmountChanged}\n            hideMaxButton={state.loading && !state.pair}\n        />\n    );\n};\n\nconst ToTokenInput = ({ state }: { state: AddLiquidityState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <View />;\n    }\n    const onAmountChanged = (newAmount: string) => {\n        state.setToAmount(newAmount);\n        if (state.pair && state.toToken) {\n            const toPrice = state.pair.priceOf(convertToken(state.toToken));\n            const fromAmount = toPrice.quote(convertAmount(state.toToken, newAmount)).toExact();\n            state.setFromAmount(isEmptyValue(fromAmount) ? \"\" : fromAmount);\n        }\n    };\n    return (\n        <TokenInput\n            token={state.toToken}\n            amount={state.toAmount}\n            onAmountChanged={onAmountChanged}\n            hideMaxButton={state.loading && !state.pair}\n        />\n    );\n};\n\nconst PriceInfo = ({ state }: { state: AddLiquidityState }) => {\n    if (state.fromToken && state.toToken && !state.loading && !state.pair) {\n        return <FirstProviderInfo state={state} />;\n    } else {\n        return <PairPriceInfo state={state} />;\n    }\n};\n\nconst FirstProviderInfo = ({ state }: { state: AddLiquidityState }) => {\n    const { green } = useColors();\n    const noAmount = isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount);\n    const initialPrice = Fraction.from(\n        parseBalance(state.toAmount, state.toToken!.decimals),\n        parseBalance(state.fromAmount, state.fromToken!.decimals)\n    ).toString(8);\n    return (\n        <View>\n            <InfoBox style={{ marginTop: Spacing.normal }}>\n                <PriceMeta state={state} price={initialPrice} disabled={noAmount} />\n            </InfoBox>\n            <Notice\n                text={\n                    \"You are the first liquidity provider.\\n\" +\n                    \"The ratio of tokens you add will set the price of this pool.\"\n                }\n                color={green}\n                style={{ marginTop: Spacing.small }}\n            />\n        </View>\n    );\n};\n\nconst PairPriceInfo = ({ state }: { state: AddLiquidityState }) => {\n    const [amount, setAmount] = useState<string>();\n    const { textDark, textLight, placeholder } = useColors();\n    const { calculateAmountOfLPTokenMinted } = useSDK();\n    useAsyncEffect(async () => {\n        if (state.pair && !isEmptyValue(state.fromAmount) && !isEmptyValue(state.toAmount)) {\n            const minted = await calculateAmountOfLPTokenMinted(\n                state.pair,\n                convertAmount(state.fromToken!, state.fromAmount),\n                convertAmount(state.toToken!, state.toAmount)\n            );\n            setAmount(minted?.toFixed(8));\n        }\n    }, [state.pair, state.fromAmount, state.toAmount]);\n    const disabled = isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount);\n    const price =\n        state.pair && state.fromToken ? state.pair.priceOf(convertToken(state.fromToken)).toFixed(8) : undefined;\n    const color = disabled ? placeholder : amount ? textDark : textLight;\n    const symbol = state.fromSymbol + \"-\" + state.toSymbol;\n    return (\n        <InfoBox>\n            <Text style={{ fontSize: 28, marginBottom: Spacing.normal, color }}>\n                {disabled ? \"N/A\" : amount ? amount + \" \" + symbol : \"Fetching…\"}\n            </Text>\n            <PriceMeta state={state} price={price} disabled={!state.fromSymbol || !state.toSymbol} />\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\nconst PriceMeta = ({ state, price, disabled }) => (\n    <Meta label={\"Price\"} text={price} suffix={state.toSymbol + \" = 1 \" + state.fromSymbol} disabled={disabled} />\n);\n\n// tslint:disable-next-line:max-func-body-length\nconst Controls = ({ state }: { state: AddLiquidityState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const fromApproveRequired = state.fromSymbol !== \"ETH\" && !state.fromTokenAllowed;\n    const toApproveRequired = state.toSymbol !== \"ETH\" && !state.toTokenAllowed;\n    const disabled =\n        fromApproveRequired || toApproveRequired || isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken ||\n            !state.toToken ||\n            state.loading ||\n            isEmptyValue(state.fromAmount) ||\n            isEmptyValue(state.toAmount) ? (\n                <SupplyButton state={state} onError={setError} disabled={true} />\n            ) : state.loading || !state.pair ? (\n                <FetchingButton />\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : parseBalance(state.toAmount, state.toToken.decimals).gt(state.toToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.toSymbol} />\n            ) : (state.fromSymbol === \"ETH\" && state.toSymbol === \"WETH\") ||\n              (state.fromSymbol === \"WETH\" && state.toSymbol === \"ETH\") ? (\n                <UnsupportedButton state={state} />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setFromTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!fromApproveRequired}\n                    />\n                    <ApproveButton\n                        token={state.toToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setToTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!toApproveRequired}\n                    />\n                    <SupplyButton state={state} onError={setError} disabled={disabled} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SupplyButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: AddLiquidityState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onAdd().catch(onError);\n    }, [state.onAdd, onError]);\n    return (\n        <Button\n            title={state.fromSymbol && state.toSymbol ? \"Supply \" + state.fromSymbol + \"-\" + state.toSymbol : \"Supply\"}\n            disabled={disabled}\n            loading={state.adding}\n            onPress={onPress}\n        />\n    );\n};\n\nexport default LiquidityScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useLinker from \"../hooks/useLinker\";\nimport Notice from \"./Notice\";\n\nconst ExperimentalNotice = (props: { contractURL: string }) => {\n    const onPressContract = useLinker(props.contractURL, \"\", \"_blank\");\n    return (\n        <View style={{ marginVertical: Spacing.tiny }}>\n            <Notice\n                text={\n                    \"This feature is in beta and contracts are unaudited. Read the contract yourself and use it at your own risk.\"\n                }\n                color={\"orange\"}\n                buttonText={\"View Contract\"}\n                onPressButton={onPressContract}\n            />\n        </View>\n    );\n};\n\nexport default ExperimentalNotice;\n","import { useCallback, useContext, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { MIGRATOR2 } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { parseBalance } from \"../utils\";\nimport useLPTokensState, { LPTokensState } from \"./useLPTokensState\";\nimport useSDK from \"./useSDK\";\n\nexport interface MigrateState extends LPTokensState {\n    onMigrate: () => Promise<void>;\n    migrating: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useMigrateState: () => MigrateState = () => {\n    const state = useLPTokensState(\"my-uniswap-lp-tokens\");\n    const { provider, signer, getTokenAllowance, updateTokens } = useContext(EthersContext);\n    const { migrate } = useSDK();\n    const [loading, setLoading] = useState(false);\n    const [migrating, setMigrating] = useState(false);\n\n    useAsyncEffect(async () => {\n        if (provider && signer && state.selectedLPToken) {\n            setLoading(true);\n            state.setSelectedLPTokenAllowed(false);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const allowance = await getTokenAllowance(state.selectedLPToken.address, MIGRATOR2);\n                state.setSelectedLPTokenAllowed(ethers.BigNumber.from(allowance).gte(minAllowance));\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [provider, signer, state.selectedLPToken]);\n\n    const onMigrate = useCallback(async () => {\n        if (state.selectedLPToken && state.amount && signer) {\n            setMigrating(true);\n            try {\n                const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\n                const tx = await migrate(state.selectedLPToken, amount, signer);\n                await tx.wait();\n                await updateTokens();\n                await state.updateLPTokens();\n                state.setSelectedLPToken(undefined);\n            } finally {\n                setMigrating(false);\n            }\n        }\n    }, [state.selectedLPToken, state.amount, signer, updateTokens]);\n\n    return {\n        ...state,\n        loading: state.loading || loading,\n        onMigrate,\n        migrating\n    };\n};\n\nexport default useMigrateState;\n","import React, { useCallback, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport ExperimentalNotice from \"../components/ExperimentalNotice\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport LPTokenSelect, { LPTokenItem } from \"../components/LPTokenSelect\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { LiquiditySubMenu } from \"../components/web/WebSubMenu\";\nimport { MIGRATOR2 } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useMigrateState, { MigrateState } from \"../hooks/useMigrateState\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst MigrateScreen = () => {\n    return (\n        <Screen>\n            <LiquiditySubMenu />\n            <Container>\n                <Content>\n                    <Title text={\"Migrate Liquidity\"} />\n                    <Text light={true}>Migrate your Uniswap LP tokens to SushiSwap LP tokens.</Text>\n                    <Migrate />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst Migrate = () => {\n    const state = useMigrateState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <LPTokenSelect\n                state={state}\n                title={\"Your Uniswap Liquidity\"}\n                emptyText={\"You don't have any liquidity on Uniswap.\"}\n                Item={LPTokenItem}\n            />\n            <ExperimentalNotice\n                contractURL={\"https://github.com/sushiswap/sushiswap/blob/master/contracts/Migrator2.sol\"}\n            />\n            <Border />\n            <AmountInput state={state} />\n            <AmountInfo state={state} />\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: MigrateState }) => {\n    if (!state.selectedLPToken) {\n        return <Heading text={\"Amount of Tokens\"} disabled={true} />;\n    }\n    return (\n        <TokenInput\n            title={\"Amount of Tokens\"}\n            token={state.selectedLPToken}\n            amount={state.amount}\n            onAmountChanged={state.setAmount}\n        />\n    );\n};\n\nconst AmountInfo = ({ state }: { state: MigrateState }) => {\n    const { textDark, textLight, placeholder } = useColors();\n    const disabled = !state.selectedLPToken || isEmptyValue(state.amount);\n    const color = disabled ? placeholder : state.amount ? textDark : textLight;\n    return (\n        <InfoBox>\n            <Text style={{ fontSize: 28, color }}>{disabled ? \"N/A\" : state.amount + \" SLP\"}</Text>\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\nconst Controls = ({ state }: { state: MigrateState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.amount]);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.selectedLPToken || isEmptyValue(state.amount) ? (\n                <MigrateButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.amount, state.selectedLPToken.decimals).gt(state.selectedLPToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken.symbol} />\n            ) : state.loading ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.selectedLPToken}\n                        spender={MIGRATOR2}\n                        onSuccess={() => state.setSelectedLPTokenAllowed(true)}\n                        onError={setError}\n                        hidden={state.selectedLPTokenAllowed}\n                    />\n                    <MigrateButton state={state} onError={setError} disabled={!state.selectedLPTokenAllowed} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst MigrateButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: MigrateState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onMigrate();\n        } catch (e) {\n            onError(e);\n        }\n    }, []);\n    return <Button title={\"Migrate Liquidity\"} loading={state.migrating} onPress={onPress} disabled={disabled} />;\n};\n\nexport default MigrateScreen;\n","import { useCallback, useContext, useState } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { fetchMyCanceledLimitOrderHashes, fetchMyLimitOrders } from \"../utils/fetch-utils\";\nimport useSDK, { Order } from \"./useSDK\";\n\nexport interface MyLimitOrdersState {\n    lastTimeRefreshed: number;\n    myOrders?: Order[];\n    loading: boolean;\n    selectedOrder?: Order;\n    setSelectedOrder: (order?: Order) => void;\n    onCancelOrder: () => Promise<void>;\n    cancellingOrder: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useMyLimitOrdersState = () => {\n    const { cancelOrder } = useSDK();\n    const { kovanSigner, signer, provider, address, tokens } = useContext(EthersContext);\n    const [lastTimeRefreshed, setLastTimeRefreshed] = useState(0);\n    const [myOrders, setMyOrders] = useState<Order[]>();\n    const [selectedOrder, setSelectedOrder] = useState<Order>();\n    const [loading, setLoading] = useState(true);\n    const [cancellingOrder, setCancellingOrder] = useState(false);\n\n    const updateOrders = async () => {\n        if (signer && kovanSigner && provider && address && tokens) {\n            setLoading(true);\n            try {\n                const canceledHashes = await fetchMyCanceledLimitOrderHashes(signer);\n                const orders = await fetchMyLimitOrders(signer, kovanSigner, provider, tokens, canceledHashes);\n                setMyOrders(orders);\n            } finally {\n                setLoading(false);\n            }\n        }\n    };\n\n    useAsyncEffect(updateOrders, [kovanSigner, signer, provider, address, tokens, lastTimeRefreshed]);\n\n    const onCancelOrder = useCallback(async () => {\n        if (selectedOrder && signer) {\n            setCancellingOrder(true);\n            try {\n                const tx = await cancelOrder(selectedOrder, signer);\n                await tx.wait();\n                setSelectedOrder(undefined);\n                setLastTimeRefreshed(Date.now());\n            } finally {\n                setCancellingOrder(false);\n            }\n        }\n    }, [selectedOrder, signer]);\n\n    return {\n        lastTimeRefreshed,\n        myOrders,\n        loading,\n        selectedOrder,\n        setSelectedOrder,\n        onCancelOrder,\n        cancellingOrder\n    };\n};\n\nexport default useMyLimitOrdersState;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { FlatList, Platform, View } from \"react-native\";\n\nimport moment from \"moment\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Expandable from \"../components/Expandable\";\nimport FlexView from \"../components/FlexView\";\nimport InfoBox from \"../components/InfoBox\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"../components/ItemSeparator\";\nimport Loading from \"../components/Loading\";\nimport Meta from \"../components/Meta\";\nimport Selectable from \"../components/Selectable\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenAmount from \"../components/TokenAmount\";\nimport TokenLogo from \"../components/TokenLogo\";\nimport TokenSymbol from \"../components/TokenSymbol\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SwapSubMenu } from \"../components/web/WebSubMenu\";\nimport { Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport useColors from \"../hooks/useColors\";\nimport useMyLimitOrdersState, { MyLimitOrdersState } from \"../hooks/useMyLimitOrdersState\";\nimport { Order } from \"../hooks/useSDK\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { formatBalance, formatDate } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst MyLimitOrdersScreen = () => {\n    return (\n        <Screen>\n            <SwapSubMenu />\n            <Container>\n                <Content>\n                    <Title text={\"My Orders\"} />\n                    <Text light={true}>Scan limit orders you've placed and cancel them if needed.</Text>\n                    <MyLimitOrders />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst MyLimitOrders = () => {\n    const state = useMyLimitOrdersState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <OrderSelect state={state} />\n            <OrderInfo state={state} />\n        </View>\n    );\n};\n\nconst OrderSelect = (props: { state: MyLimitOrdersState }) => {\n    return (\n        <View>\n            <Expandable\n                title={\"Limit Orders\"}\n                expanded={!props.state.selectedOrder}\n                onExpand={() => props.state.setSelectedOrder()}>\n                <OrderList state={props.state} />\n            </Expandable>\n            {props.state.selectedOrder && (\n                <OrderItem\n                    order={props.state.selectedOrder}\n                    selected={true}\n                    onSelectOrder={() => props.state.setSelectedOrder()}\n                />\n            )}\n        </View>\n    );\n};\n\nconst OrderList = ({ state }: { state: MyLimitOrdersState }) => {\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <OrderItem key={item.address} order={item} selected={false} onSelectOrder={state.setSelectedOrder} />\n            );\n        },\n        [state.setSelectedOrder]\n    );\n    return state.loading || !state.myOrders ? (\n        <Loading />\n    ) : state.myOrders.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => JSON.stringify(item)} data={state.myOrders} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any limit orders placed.\"}\n            </Text>\n        </View>\n    );\n};\n\nconst OrderItem = (props: { order: Order; selected: boolean; onSelectOrder: (order: Order) => void }) => {\n    const { amountIn, amountOutMin, fromToken, toToken } = props.order;\n    const status = props.order.status();\n    const disabled = status !== \"Open\";\n    const price = Fraction.fromTokens(amountOutMin, amountIn, toToken, fromToken);\n    const onPress = useCallback(() => props.onSelectOrder(props.order), [props.onSelectOrder, props.order]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            style={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <View>\n                    <Token token={fromToken} amount={amountIn} disabled={disabled} buy={false} />\n                    <View style={{ height: Spacing.tiny }} />\n                    <Token token={toToken} amount={amountOutMin} disabled={disabled} buy={true} />\n                </View>\n                <Field label={\"Price\"} value={price.toString(8)} disabled={disabled} minWidth={0} />\n                <Field label={\"Status\"} value={status} disabled={disabled} minWidth={64} />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nconst Token = ({ token, amount, disabled, buy }) => {\n    const { green, red, disabled: colorDisabled } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <TokenLogo token={token} disabled={disabled} />\n            <Text style={{ color: disabled ? colorDisabled : buy ? green : red, marginLeft: Spacing.tiny, width: 40 }}>\n                {buy ? \"BUY\" : \"SELL\"}\n            </Text>\n            <TokenAmount token={token} amount={amount} disabled={disabled} />\n            <TokenSymbol token={token} disabled={disabled} />\n        </FlexView>\n    );\n};\n\nconst Field = ({ label, value, disabled, minWidth }) => {\n    const { textMedium, textLight, disabled: colorDisabled } = useColors();\n    return (\n        <View style={{ flex: minWidth ? 0 : 1, minWidth, marginLeft: Spacing.tiny }}>\n            <Text note={true} style={{ textAlign: \"right\", color: disabled ? colorDisabled : textLight }}>\n                {label}\n            </Text>\n            <Text\n                caption={true}\n                light={true}\n                style={{ textAlign: \"right\", color: disabled ? colorDisabled : textMedium }}>\n                {value}\n            </Text>\n        </View>\n    );\n};\n\nconst OrderInfo = ({ state }: { state: MyLimitOrdersState }) => {\n    const order = state.selectedOrder;\n    const amountIn = order ? formatBalance(order.amountIn, order.fromToken.decimals) : undefined;\n    const amountOutMin = order ? formatBalance(order.amountOutMin, order.toToken.decimals) : undefined;\n    const filledAmountIn = order ? formatBalance(order.filledAmountIn!, order.fromToken.decimals) : undefined;\n    const expiry = useMemo(() => {\n        if (order) {\n            const deadline = new Date(order.deadline.toNumber() * 1000);\n            const now = Date.now();\n            const diff = moment(deadline).diff(now);\n            return moment(deadline).isAfter(now) ? moment.utc(diff).format(\"HH[h] mm[m]\") : formatDate(deadline);\n        }\n    }, [order]);\n    const disabled = !state.selectedOrder;\n    return (\n        <InfoBox>\n            <Meta label={\"Amount Filled\"} text={filledAmountIn} suffix={order?.fromToken?.symbol} disabled={disabled} />\n            <Meta label={\"Amount To Sell\"} text={amountIn} suffix={order?.fromToken?.symbol} disabled={disabled} />\n            <Meta\n                label={\"Desired Amount To Buy\"}\n                text={amountOutMin}\n                suffix={order?.toToken?.symbol}\n                disabled={disabled}\n            />\n            <Meta label={\"Expiration\"} text={expiry} disabled={disabled} />\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\nconst Controls = ({ state }: { state: MyLimitOrdersState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.selectedOrder]);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            <CancelButton state={state} onError={setError} />\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst CancelButton = ({ state, onError }: { state: MyLimitOrdersState; onError: (e) => void }) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onCancelOrder().catch(onError);\n    }, [state.onCancelOrder, onError]);\n    const disabled = !state.selectedOrder || state.selectedOrder.status() !== \"Open\";\n    return <Button title={\"Cancel Order\"} loading={state.cancellingOrder} onPress={onPress} disabled={disabled} />;\n};\n\nexport default MyLimitOrdersScreen;\n","import { useCallback, useContext, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { convertToken, formatBalance, parseBalance, parseCurrencyAmount } from \"../utils\";\nimport useLPTokensState, { LPTokensState } from \"./useLPTokensState\";\nimport useSDK from \"./useSDK\";\n\nexport interface RemoveLiquidityState extends LPTokensState {\n    onRemove: () => Promise<void>;\n    removing: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useRemoveLiquidityState: () => RemoveLiquidityState = () => {\n    const state = useLPTokensState(\"my-lp-tokens\");\n    const { provider, signer, getTokenAllowance, updateTokens } = useContext(EthersContext);\n    const { removeLiquidity, removeLiquidityETH } = useSDK();\n    const [loading, setLoading] = useState(false);\n    const [removing, setRemoving] = useState(false);\n\n    useAsyncEffect(async () => {\n        if (provider && signer && state.selectedLPToken) {\n            state.setFromSymbol(state.selectedLPToken.tokenA.symbol);\n            state.setToSymbol(state.selectedLPToken.tokenB.symbol);\n\n            setLoading(true);\n            state.setSelectedLPTokenAllowed(false);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const allowance = await getTokenAllowance(state.selectedLPToken.address, ROUTER);\n                state.setSelectedLPTokenAllowed(ethers.BigNumber.from(allowance).gte(minAllowance));\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [provider, signer, state.selectedLPToken]);\n\n    // tslint:disable-next-line:max-func-body-length\n    useAsyncEffect(async () => {\n        if (\n            state.selectedLPToken &&\n            state.selectedLPToken.totalSupply &&\n            state.pair &&\n            state.fromToken &&\n            state.toToken\n        ) {\n            if (state.pair.liquidityToken.address === state.selectedLPToken.address) {\n                const fromReserve = parseCurrencyAmount(\n                    state.pair.reserveOf(convertToken(state.fromToken)),\n                    state.fromToken.decimals\n                );\n                const toReserve = parseCurrencyAmount(\n                    state.pair.reserveOf(convertToken(state.toToken)),\n                    state.toToken.decimals\n                );\n                state.setFromAmount(\n                    formatBalance(\n                        parseBalance(state.amount, state.selectedLPToken.decimals)\n                            .mul(fromReserve)\n                            .div(state.selectedLPToken.totalSupply)\n                            .toString(),\n                        state.selectedLPToken.tokenA.decimals\n                    )\n                );\n                state.setToAmount(\n                    formatBalance(\n                        parseBalance(state.amount, state.selectedLPToken.decimals)\n                            .mul(toReserve)\n                            .div(state.selectedLPToken.totalSupply)\n                            .toString(),\n                        state.selectedLPToken.tokenB.decimals\n                    )\n                );\n            }\n        }\n    }, [state.selectedLPToken, state.amount, state.pair, state.fromToken, state.toToken, signer]);\n\n    const onRemove = useCallback(async () => {\n        if (state.fromAmount && state.toAmount && state.selectedLPToken && state.amount && signer) {\n            setRemoving(true);\n            try {\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n                const toAmount = parseBalance(state.toAmount, state.toToken!.decimals);\n                const liquidity = parseBalance(state.amount, state.selectedLPToken.decimals);\n                if (state.fromSymbol === \"WETH\" || state.toSymbol === \"WETH\") {\n                    const token = state.fromSymbol === \"WETH\" ? state.toToken! : state.fromToken!;\n                    const amountToRemove = state.fromSymbol === \"WETH\" ? toAmount : fromAmount;\n                    const amountToRemoveETH = state.fromSymbol === \"WETH\" ? fromAmount : toAmount;\n                    const tx = await removeLiquidityETH(token, liquidity, amountToRemove, amountToRemoveETH, signer);\n                    await tx.wait();\n                } else {\n                    const tx = await removeLiquidity(\n                        state.fromToken!,\n                        state.toToken!,\n                        liquidity,\n                        fromAmount,\n                        toAmount,\n                        signer\n                    );\n                    await tx.wait();\n                }\n                await updateTokens();\n                await state.updateLPTokens();\n                state.setSelectedLPToken(undefined);\n            } finally {\n                setRemoving(false);\n            }\n        }\n    }, [state.fromAmount, state.toAmount, state.selectedLPToken, state.amount, signer, state.updateLPTokens]);\n\n    return {\n        ...state,\n        loading: state.loading || loading,\n        onRemove,\n        removing\n    };\n};\n\nexport default useRemoveLiquidityState;\n","import React, { useCallback, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport LPTokenSelect, { LPTokenItem } from \"../components/LPTokenSelect\";\nimport Meta from \"../components/Meta\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { LiquiditySubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport useRemoveLiquidityState, { RemoveLiquidityState } from \"../hooks/useRemoveLiquidityState\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst RemoveLiquidityScreen = () => {\n    return (\n        <Screen>\n            <LiquiditySubMenu />\n            <Container>\n                <Content>\n                    <Title text={\"Remove Liquidity\"} />\n                    <Text light={true}>Scan your liquidity and remove one if needed.</Text>\n                    <RemoveLiquidity />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst RemoveLiquidity = () => {\n    const state = useRemoveLiquidityState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <LPTokenSelect\n                state={state}\n                title={\"Your Liquidity\"}\n                emptyText={\"You don't have any liquidity.\"}\n                Item={LPTokenItem}\n            />\n            <Border />\n            <AmountInput state={state} />\n            <AmountInfo state={state} />\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: RemoveLiquidityState }) => {\n    if (!state.selectedLPToken) {\n        return <Heading text={\"Amount of Tokens\"} disabled={true} />;\n    }\n    return (\n        <TokenInput\n            title={\"Amount of Tokens\"}\n            token={state.selectedLPToken}\n            amount={state.amount}\n            onAmountChanged={state.setAmount}\n        />\n    );\n};\n\nconst AmountInfo = ({ state }: { state: RemoveLiquidityState }) => {\n    const disabled = !state.selectedLPToken || !state.fromToken || !state.toToken;\n    return (\n        <InfoBox>\n            <Meta\n                label={state.fromToken ? \"Amount of \" + state.fromToken.symbol : \"Amount of Token 1\"}\n                text={state.fromAmount}\n                disabled={disabled}\n            />\n            <Meta\n                label={state.toToken ? \"Amount of \" + state.toToken.symbol : \"Amount of Token 2\"}\n                text={state.toAmount}\n                disabled={disabled}\n            />\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst Controls = ({ state }: { state: RemoveLiquidityState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = !state.selectedLPTokenAllowed;\n    const disabled = approveRequired || isEmptyValue(state.amount);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.selectedLPToken ? (\n                <RemoveButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.amount, state.selectedLPToken.decimals).gt(state.selectedLPToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken.symbol} />\n            ) : state.loading || !state.pair ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.selectedLPToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setSelectedLPTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!approveRequired}\n                    />\n                    <RemoveButton state={state} onError={setError} disabled={disabled} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst RemoveButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: RemoveLiquidityState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onRemove().catch(onError);\n    }, [state.onRemove, onError]);\n    return <Button title={\"Remove Liquidity\"} disabled={disabled} loading={state.removing} onPress={onPress} />;\n};\n\nexport default RemoveLiquidityScreen;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { SUSHI_BAR } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { getContract, parseBalance } from \"../utils\";\nimport useSDK from \"./useSDK\";\n\nexport type Action = \"enter\" | \"leave\";\n\nexport interface StakingState {\n    action?: Action;\n    setAction: (action?: Action) => void;\n    sushi?: Token;\n    xSushi?: Token;\n    sushiStaked?: ethers.BigNumber;\n    sushiSupply?: ethers.BigNumber;\n    xSushiSupply?: ethers.BigNumber;\n    amount: string;\n    setAmount: (amount: string) => void;\n    sushiAllowed: boolean;\n    setSushiAllowed: (allowed: boolean) => void;\n    xSushiAllowed: boolean;\n    setXSushiAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onEnter: () => Promise<void>;\n    entering: boolean;\n    onLeave: () => Promise<void>;\n    leaving: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useStakingState: () => StakingState = () => {\n    const { provider, signer, address, getTokenAllowance, tokens, updateTokens } = useContext(EthersContext);\n    const { enterSushiBar, leaveSushiBar } = useSDK();\n    const [action, setAction] = useState<Action>();\n    const [sushiStaked, setSushiStaked] = useState<ethers.BigNumber>();\n    const [sushiSupply, setSushiSupply] = useState<ethers.BigNumber>();\n    const [xSushiSupply, setXSushiSupply] = useState<ethers.BigNumber>();\n    const [amount, setAmount] = useState(\"\");\n    const [sushiAllowed, setSushiAllowed] = useState(false);\n    const [xSushiAllowed, setXSushiAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [entering, setEntering] = useState(false);\n    const [leaving, setLeaving] = useState(false);\n\n    const sushi = tokens.find(token => token.symbol === \"SUSHI\");\n    const xSushi = tokens.find(token => token.symbol === \"xSUSHI\");\n\n    useEffect(() => {\n        setAmount(\"\");\n    }, [address, action]);\n\n    useAsyncEffect(async () => {\n        if (sushi && xSushi && provider && signer) {\n            setSushiAllowed(false);\n            setXSushiAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const sushiAllowance = await getTokenAllowance(sushi.address, SUSHI_BAR);\n                setSushiAllowed(ethers.BigNumber.from(sushiAllowance).gte(minAllowance));\n                const xSushiAllowance = await getTokenAllowance(xSushi.address, SUSHI_BAR);\n                setXSushiAllowed(ethers.BigNumber.from(xSushiAllowance).gte(minAllowance));\n\n                const sushiContract = getContract(\"ERC20\", sushi.address, signer);\n                setSushiStaked(await sushiContract.balanceOf(SUSHI_BAR));\n                setSushiSupply(await sushiContract.totalSupply());\n                const xSushiContract = getContract(\"ERC20\", xSushi.address, signer);\n                setXSushiSupply(await xSushiContract.totalSupply());\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [sushi, xSushi, provider, signer]);\n\n    const onEnter = useCallback(async () => {\n        if (amount && signer) {\n            setEntering(true);\n            try {\n                const tx = await enterSushiBar(parseBalance(amount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setAmount(\"\");\n                }\n            } finally {\n                setEntering(false);\n            }\n        }\n    }, [amount, signer]);\n\n    const onLeave = useCallback(async () => {\n        if (amount && signer) {\n            setLeaving(true);\n            try {\n                const tx = await leaveSushiBar(parseBalance(amount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setAmount(\"\");\n                }\n            } finally {\n                setLeaving(false);\n            }\n        }\n    }, [amount, signer]);\n\n    return {\n        action,\n        setAction,\n        sushi,\n        xSushi,\n        sushiStaked,\n        sushiSupply,\n        xSushiSupply,\n        amount,\n        setAmount,\n        sushiAllowed,\n        setSushiAllowed,\n        xSushiAllowed,\n        setXSushiAllowed,\n        loading,\n        onEnter,\n        entering,\n        onLeave,\n        leaving\n    };\n};\n\nexport default useStakingState;\n","import React, { useCallback, useState } from \"react\";\nimport { ActivityIndicator, Platform, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Button from \"../components/Button\";\nimport ButtonGroup from \"../components/ButtonGroup\";\nimport Column from \"../components/Column\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport FlexView from \"../components/FlexView\";\nimport Heading from \"../components/Heading\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Text from \"../components/Text\";\nimport TokenInput from \"../components/TokenInput\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SUSHI_BAR } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport useColors from \"../hooks/useColors\";\nimport useStakingState, { Action, StakingState } from \"../hooks/useStakingState\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst Actions = [\"enter\", \"leave\"];\n\nconst StakingScreen = () => {\n    return (\n        <Screen>\n            <Container>\n                <Content>\n                    <Staking />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst Staking = () => {\n    const state = useStakingState();\n    return (\n        <View style={{ alignItems: \"center\", marginBottom: Spacing.huge * 2 }}>\n            <Column>\n                <Text h4={true} style={{ textAlign: \"center\" }}>\n                    💰 Stake/Unstake\n                </Text>\n            </Column>\n            <ActionSelect state={state} />\n            {state.action === \"enter\" && state.sushi && state.sushi.balance.isZero() && <NoSushiNotice />}\n            {state.action === \"leave\" && state.xSushi && state.xSushi.balance.isZero() && <NoXSushiNotice />}\n            <TokenInput\n                title={\"2. How many SUSHI do you want to STAKE?\"}\n                token={state.sushi}\n                hidden={state.action !== \"enter\" || !state.sushi || state.sushi.balance.isZero()}\n                amount={state.amount}\n                onAmountChanged={state.setAmount}\n            />\n            <TokenInput\n                title={\"2. How many xSUSHI do you want to UNSTAKE?\"}\n                token={state.xSushi}\n                hidden={state.action !== \"leave\" || !state.xSushi || state.xSushi.balance.isZero()}\n                amount={state.amount}\n                onAmountChanged={state.setAmount}\n            />\n            <StakeInfo state={state} />\n            <Controls state={state} />\n        </View>\n    );\n};\n\nconst ActionSelect = ({ state }: { state: StakingState }) => {\n    if (!state.sushi || !state.xSushi || !state.sushiStaked || !state.xSushiSupply) {\n        return (\n            <Column noTopMargin={true}>\n                <ActivityIndicator size={\"large\"} style={{ marginTop: Spacing.large }} />\n            </Column>\n        );\n    }\n    const index = state.action ? Actions.indexOf(state.action) : null;\n    const onPress = useCallback((i: number) => {\n        state.setAction(Actions[i] as Action);\n    }, []);\n    return (\n        <Column>\n            <Heading text={\"1. Do you want to STAKE or UNSTAKE?\"} />\n            <View style={{ marginHorizontal: Spacing.small, marginBottom: Spacing.normal }}>\n                <Meta label={\"Total SUSHI Staked\"} text={formatBalance(state.sushiStaked, state.sushi.decimals)} />\n                <Meta label={\"My SUSHI Balance\"} text={formatBalance(state.sushi.balance, state.sushi.decimals)} />\n                <Line />\n                <Meta label={\"Total xSUSHI Supply\"} text={formatBalance(state.xSushiSupply, state.xSushi.decimals)} />\n                <Meta label={\"My xSUSHI Balance\"} text={formatBalance(state.xSushi.balance, state.xSushi.decimals)} />\n            </View>\n            <ButtonGroup\n                selectedIndex={index}\n                onPress={onPress}\n                buttons={[{ element: StakeText }, { element: UnstakeText }]}\n                containerStyle={{ marginHorizontal: Spacing.small }}\n            />\n        </Column>\n    );\n};\n\nconst Line = () => {\n    const { border } = useColors();\n    return (\n        <View style={{ width: \"100%\", paddingHorizontal: Spacing.small }}>\n            <View\n                style={{\n                    height: 1,\n                    width: \"100%\",\n                    marginTop: Spacing.small,\n                    marginBottom: Spacing.tiny,\n                    backgroundColor: border\n                }}\n            />\n        </View>\n    );\n};\n\nconst StakeText = () => {\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <Text style={{ color: \"black\" }}>Stake SUSHI</Text>\n            <Icon\n                type={\"material-community\"}\n                name={\"chevron-right\"}\n                color={\"black\"}\n                style={{ marginLeft: Spacing.tiny }}\n            />\n        </FlexView>\n    );\n};\n\nconst UnstakeText = () => {\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <Text style={{ color: \"black\" }}>Unstake xSUSHI</Text>\n            <Icon\n                type={\"material-community\"}\n                name={\"chevron-right\"}\n                color={\"black\"}\n                style={{ marginLeft: Spacing.tiny }}\n            />\n        </FlexView>\n    );\n};\n\nconst NoSushiNotice = () => {\n    return (\n        <Column noTopMargin={true} style={{ padding: Spacing.small, marginTop: Spacing.small }}>\n            <Notice text={\"You don't have any SUSHI balance.\"} />\n        </Column>\n    );\n};\n\nconst NoXSushiNotice = () => {\n    return (\n        <Column noTopMargin={true} style={{ padding: Spacing.small, marginTop: Spacing.small }}>\n            <Notice text={\"You don't have any xSUSHI staked.\"} />\n        </Column>\n    );\n};\n\nconst StakeInfo = ({ state }: { state: StakingState }) => {\n    if (!state.sushi || !state.xSushi || !state.sushiSupply || !state.xSushiSupply || isEmptyValue(state.amount)) {\n        return <Column noTopMargin={true} />;\n    }\n    const amount = parseBalance(state.amount, state.sushi.decimals);\n    const xSushiAmount = amount.mul(state.xSushiSupply).div(state.sushiSupply);\n    const share = Fraction.from(xSushiAmount, state.xSushiSupply);\n    return (\n        <Column noTopMargin={true}>\n            <Meta label={\"xSUSHI Amount\"} text={formatBalance(xSushiAmount, state.xSushi.decimals)} />\n            <Meta label={\"xSUSHI Share\"} text={share.toString() + \"%\"} />\n        </Column>\n    );\n};\n\nconst Controls = ({ state }: { state: StakingState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.action, state.amount]);\n    const token = state.action === \"leave\" ? state.xSushi : state.sushi;\n    if (!state.action || !token || isEmptyValue(state.amount)) return <Column noTopMargin={true} />;\n    return (\n        <Column>\n            {parseBalance(state.amount, token.decimals).gt(token.balance) ? (\n                <InsufficientBalanceButton symbol={token.symbol} />\n            ) : state.loading ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={token}\n                        spender={SUSHI_BAR}\n                        onSuccess={() => state.setSushiAllowed(true)}\n                        onError={setError}\n                        hidden={state.action === \"leave\" || state.sushiAllowed}\n                    />\n                    {state.action === \"leave\" ? (\n                        <UnstakeButton state={state} onError={setError} />\n                    ) : (\n                        <StakeButton state={state} onError={setError} disabled={!state.sushiAllowed} />\n                    )}\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </Column>\n    );\n};\n\nconst StakeButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: StakingState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onEnter();\n            state.setAction();\n        } catch (e) {\n            onError(e);\n        }\n    }, []);\n    return <Button title={\"Stake\"} loading={state.entering} onPress={onPress} disabled={disabled} />;\n};\n\nconst UnstakeButton = ({ state, onError }: { state: StakingState; onError: (e) => void }) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onLeave();\n            state.setAction();\n        } catch (e) {\n            onError(e);\n        }\n    }, []);\n    return <Button title={\"Unstake\"} loading={state.leaving} onPress={onPress} />;\n};\n\nexport default StakingScreen;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { Trade } from \"@sushiswap/sdk\";\nimport { Fetcher, Token, WETH } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { formatBalance, isEmptyValue, parseBalance, pow10 } from \"../utils\";\nimport useDelayedEffect from \"./useDelayedEffect\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport type OrderType = \"market\" | \"limit\";\n\nexport interface SwapState extends TokenPairState {\n    orderType?: OrderType;\n    setOrderType: (orderType?: OrderType) => void;\n    priceInETH?: ethers.BigNumber | null;\n    trade?: Trade;\n    unsupported: boolean;\n    limitOrderUnsupported: boolean;\n    limitOrderPrice: string;\n    setLimitOrderPrice: (price: string) => void;\n    swapFee: string;\n    limitOrderFee: string;\n    limitOrderSwapFee: string;\n    limitOrderReturn: string;\n    onSwap: () => Promise<void>;\n    swapping: boolean;\n    onCreateOrder: () => Promise<void>;\n    creatingOrder: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapState: () => SwapState = () => {\n    const state = useTokenPairState();\n    const { provider, signer, kovanSigner, updateTokens } = useContext(EthersContext);\n    const {\n        getTrade,\n        swap,\n        createOrder,\n        calculateSwapFee,\n        calculateLimitOrderFee,\n        calculateLimitOrderReturn\n    } = useSDK();\n    const [loading, setLoading] = useState(true);\n    const [orderType, setOrderType] = useState<OrderType>();\n    const [priceInETH, setPriceInETH] = useState<ethers.BigNumber | null>();\n    const [trade, setTrade] = useState<Trade>();\n    const [unsupported, setUnsupported] = useState(false);\n    const [swapFee, setSwapFee] = useState(\"\");\n    const [limitOrderPrice, setLimitOrderPrice] = useState<string>(\"\");\n    const [limitOrderFee, setLimitOrderFee] = useState(\"\");\n    const [limitOrderSwapFee, setLimitOrderSwapFee] = useState(\"\");\n    const [limitOrderReturn, setLimitOrderReturn] = useState(\"\");\n    const [swapping, setSwapping] = useState(false);\n    const [creatingOrder, setCreatingOrder] = useState(false);\n\n    useEffect(() => {\n        if (!orderType) {\n            state.setFromSymbol(\"\");\n        }\n        setLimitOrderPrice(\"\");\n    }, [orderType]);\n\n    useAsyncEffect(async () => {\n        setPriceInETH(undefined);\n        if (provider && state.fromToken) {\n            if (state.fromToken.symbol === \"WETH\") {\n                setPriceInETH(ethers.constants.WeiPerEther);\n            } else {\n                const { chainId } = await provider.getNetwork();\n                try {\n                    const fromToken = new Token(chainId, state.fromToken.address, state.fromToken.decimals);\n                    const toToken = WETH[chainId];\n                    const pair = await Fetcher.fetchPairData(fromToken, toToken);\n                    setPriceInETH(parseBalance(pair.priceOf(toToken).toFixed(), fromToken.decimals));\n                } catch (e) {\n                    setPriceInETH(null);\n                }\n            }\n        }\n    }, [provider, state.fromToken]);\n\n    useDelayedEffect(\n        () => {\n            if (isEmptyValue(state.fromAmount)) {\n                setLimitOrderPrice(\"\");\n                setTrade(undefined);\n            }\n        },\n        300,\n        [state.fromAmount]\n    );\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n            }\n            if (state.fromToken && state.toToken && state.fromAmount && signer?.provider) {\n                const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                if (!amount.isZero()) {\n                    setUnsupported(false);\n                    try {\n                        setTrade(await getTrade(state.fromToken, state.toToken, amount, signer?.provider));\n                    } catch (e) {\n                        setUnsupported(true);\n                    } finally {\n                        setLoading(false);\n                    }\n                }\n            }\n        },\n        () => \"getTrade(\" + state.fromSymbol + \",\" + state.toSymbol + \",\" + state.fromAmount + \")\",\n        [state.fromSymbol, state.toSymbol, state.fromAmount]\n    );\n\n    useAsyncEffect(() => {\n        if (trade && !isEmptyValue(state.fromAmount)) {\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n            setSwapFee(formatBalance(calculateSwapFee(fromAmount), state.fromToken!.decimals, 8));\n            if (orderType === \"limit\") {\n                setLimitOrderFee(formatBalance(calculateLimitOrderFee(fromAmount), state.fromToken!.decimals, 8));\n                setLimitOrderSwapFee(\n                    formatBalance(\n                        calculateSwapFee(fromAmount.sub(calculateLimitOrderFee(fromAmount))),\n                        state.fromToken!.decimals,\n                        8\n                    )\n                );\n            }\n        }\n    }, [orderType, trade, state.fromAmount]);\n\n    useAsyncEffect(() => {\n        if (state.fromToken && state.toToken && !isEmptyValue(state.fromAmount) && !isEmptyValue(limitOrderPrice)) {\n            setLimitOrderReturn(\n                formatBalance(\n                    calculateLimitOrderReturn(\n                        state.fromToken,\n                        state.toToken,\n                        parseBalance(state.fromAmount, state.fromToken.decimals),\n                        limitOrderPrice\n                    ),\n                    state.toToken.decimals\n                )\n            );\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, limitOrderPrice]);\n\n    const onSwap = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && signer && trade) {\n            setSwapping(true);\n            try {\n                const result = await swap(trade, signer);\n                if (result) {\n                    await result.tx.wait();\n                    await updateTokens();\n                    setTrade(undefined);\n                    setOrderType(undefined);\n                }\n            } finally {\n                setSwapping(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, trade]);\n\n    const onCreateOrder = useCallback(async () => {\n        if (\n            state.fromToken &&\n            state.toToken &&\n            state.fromAmount &&\n            !isEmptyValue(limitOrderPrice) &&\n            signer &&\n            kovanSigner\n        ) {\n            setCreatingOrder(true);\n            try {\n                const amountIn = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const tx = await createOrder(\n                    state.fromToken,\n                    state.toToken,\n                    amountIn,\n                    Fraction.parse(limitOrderPrice)\n                        .apply(amountIn)\n                        .mul(pow10(state.toToken.decimals))\n                        .div(pow10(state.fromToken.decimals)),\n                    signer,\n                    kovanSigner\n                );\n                await tx.wait();\n                setTrade(undefined);\n                setOrderType(undefined);\n            } finally {\n                setCreatingOrder(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, kovanSigner, limitOrderPrice]);\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        orderType,\n        setOrderType,\n        priceInETH,\n        trade,\n        unsupported,\n        swapFee,\n        limitOrderPrice,\n        setLimitOrderPrice,\n        limitOrderFee,\n        limitOrderSwapFee,\n        limitOrderReturn,\n        onSwap,\n        swapping,\n        limitOrderUnsupported: orderType === \"limit\" && (state.fromSymbol === \"ETH\" || state.toSymbol === \"ETH\"),\n        onCreateOrder,\n        creatingOrder\n    };\n};\n\nexport default useSwapState;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Expandable from \"../components/Expandable\";\nimport ExperimentalNotice from \"../components/ExperimentalNotice\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"../components/ItemSeparator\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Selectable from \"../components/Selectable\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SwapSubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER, SETTLEMENT } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useLinker from \"../hooks/useLinker\";\nimport useSwapState, { OrderType, SwapState } from \"../hooks/useSwapState\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst SwapScreen = () => {\n    return (\n        <Screen>\n            <SwapSubMenu />\n            <Container>\n                <Content>\n                    <Title text={\"Swap Tokens\"} />\n                    <Text light={true}>Swap now or place a limit order with a desired price.</Text>\n                    <Swap />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst Swap = () => {\n    const state = useSwapState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <OrderTypeSelect state={state} />\n            <Border />\n            <FromTokenSelect state={state} />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <AmountInput state={state} />\n            {state.orderType === \"limit\" && (\n                <View>\n                    <AmountNotice state={state} />\n                    <Border />\n                    <PriceInput state={state} />\n                </View>\n            )}\n            <TradeInfo state={state} />\n        </View>\n    );\n};\n\nconst OrderTypeSelect = ({ state }: { state: SwapState }) => {\n    return (\n        <View>\n            <Expandable title={\"Order Type\"} expanded={!state.orderType} onExpand={() => state.setOrderType()}>\n                <OrderTypeItem state={state} orderType={\"market\"} />\n                <OrderTypeItem state={state} orderType={\"limit\"} />\n            </Expandable>\n            {state.orderType && <OrderTypeItem state={state} orderType={state.orderType} selectable={true} />}\n            {state.orderType === \"limit\" && (\n                <ExperimentalNotice\n                    contractURL={\n                        \"https://github.com/sushiswap/sushiswap-settlement/blob/master/contracts/Settlement.sol\"\n                    }\n                />\n            )}\n        </View>\n    );\n};\n\nconst OrderTypeItem = ({\n    state,\n    orderType,\n    selectable\n}: {\n    state: SwapState;\n    orderType: OrderType;\n    selectable?: boolean;\n}) => {\n    const selected = state.orderType === orderType;\n    const type = orderType === \"market\" ? \"Market Order\" : \"Limit Order\";\n    const desc =\n        orderType === \"market\"\n            ? \"Settle an order immediately\"\n            : \"Place an order with a desired price waiting to be settled\";\n    const onPress = () => state.setOrderType(state.orderType === orderType ? undefined : orderType);\n    return (\n        <Selectable\n            style={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT,\n                paddingHorizontal: Spacing.small + Spacing.tiny\n            }}\n            selected={selected}\n            disabled={selectable}\n            onPress={onPress}>\n            <Text fontWeight={\"regular\"}>{type}</Text>\n            <Text note={true}>{desc}</Text>\n        </Selectable>\n    );\n};\n\nconst FromTokenSelect = ({ state }: { state: SwapState }) => {\n    const { tokens, setTokens } = useContext(EthersContext);\n    if (!state.orderType) {\n        return <Heading text={\"Token To Sell\"} disabled={true} />;\n    }\n    const ETH = tokens ? tokens.find(token => token.symbol === \"ETH\") : null;\n    const onAddToken = (token: Token) => {\n        if (tokens.findIndex(t => t.address === token.address) === -1) {\n            setTokens([...tokens, token]);\n        }\n    };\n    return (\n        <View>\n            <TokenSelect\n                title={\"Token To Sell\"}\n                symbol={state.fromSymbol}\n                onChangeSymbol={state.setFromSymbol}\n                hidden={token => token.balance.isZero() || (state.orderType === \"limit\" && token.symbol === \"ETH\")}\n                onAddToken={onAddToken}\n            />\n            {state.orderType === \"limit\" && !state.fromSymbol && ETH && !ETH.balance.isZero() && (\n                <LimitOrderUnsupportedNotice />\n            )}\n        </View>\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: SwapState }) => {\n    if (!state.orderType || !state.fromSymbol) {\n        return <Heading text={\"Token To Buy\"} disabled={true} />;\n    }\n    return (\n        <View>\n            <TokenSelect\n                title={\"Token To Buy\"}\n                symbol={state.toSymbol}\n                onChangeSymbol={state.setToSymbol}\n                hidden={token =>\n                    token.symbol === state.fromSymbol || (state.orderType === \"limit\" && token.symbol === \"ETH\")\n                }\n            />\n            {state.orderType === \"limit\" && !state.toSymbol && <LimitOrderUnsupportedNotice />}\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: SwapState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={\"Amount\"} disabled={true} />;\n    }\n    return (\n        <View>\n            <Heading text={state.fromSymbol + \" Amount\"} />\n            <TokenInput\n                token={state.fromToken}\n                amount={state.fromAmount}\n                onAmountChanged={state.setFromAmount}\n                autoFocus={true}\n            />\n        </View>\n    );\n};\n\nconst AmountNotice = ({ state }: { state: SwapState }) => {\n    if (\n        state.priceInETH === undefined ||\n        isEmptyValue(state.fromAmount) ||\n        !state.fromToken ||\n        (state.priceInETH && parseBalance(state.fromAmount, state.fromToken.decimals).lte(state.priceInETH.mul(10)))\n    ) {\n        return <View />;\n    }\n    return (\n        <View style={{ marginTop: Spacing.small }}>\n            <Notice\n                text={\n                    state.priceInETH === null\n                        ? \"This token is not supported in beta.\"\n                        : \"Maximum allowed amount in beta is \" +\n                          formatBalance(state.priceInETH.mul(10), state.fromToken!.decimals) +\n                          \" \" +\n                          state.fromSymbol +\n                          \" (≈ 10 ETH).\"\n                }\n                color={\"red\"}\n            />\n        </View>\n    );\n};\n\nconst PriceInput = ({ state }: { state: SwapState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={\"Minimum Price\"} disabled={true} />;\n    }\n    const marketPrice =\n        state.toToken && state.trade\n            ? parseBalance(state.trade.executionPrice.toFixed(state.toToken.decimals), state.toToken.decimals)\n            : ethers.constants.Zero;\n    return (\n        <TokenInput\n            title={\"Minimum Price (\" + state.toSymbol + \"/\" + state.fromSymbol + \")\"}\n            token={\n                {\n                    ...state.toToken,\n                    balance: marketPrice\n                } as Token\n            }\n            amount={state.limitOrderPrice}\n            onAmountChanged={state.setLimitOrderPrice}\n            maxButtonText={\"MARKET\"}\n        />\n    );\n};\n\nconst LimitOrderUnsupportedNotice = () => {\n    const { placeholder } = useColors();\n    return (\n        <Notice\n            text={\"⚠️ ETH not supported for limit orders. Use WETH instead.\"}\n            color={placeholder}\n            clear={true}\n            style={{ marginVertical: Spacing.small }}\n        />\n    );\n};\n\nconst TradeInfo = ({ state }: { state: SwapState }) => {\n    if (\n        !isEmptyValue(state.fromAmount) &&\n        ((state.fromSymbol === \"ETH\" && state.toSymbol === \"WETH\") ||\n            (state.fromSymbol === \"WETH\" && state.toSymbol === \"ETH\"))\n    ) {\n        return <WrapInfo state={state} />;\n    }\n    const disabled =\n        state.fromSymbol === \"\" ||\n        state.toSymbol === \"\" ||\n        isEmptyValue(state.fromAmount) ||\n        (state.orderType === \"limit\" && state.fromSymbol === \"ETH\");\n    return (\n        <InfoBox>\n            {state.orderType === \"limit\" ? (\n                <LimitOrderInfo state={state} />\n            ) : (\n                <SwapInfo state={state} disabled={disabled} />\n            )}\n        </InfoBox>\n    );\n};\n\nconst WrapInfo = ({ state }: { state: SwapState }) => {\n    return (\n        <View>\n            <Text style={{ fontSize: 30, textAlign: \"center\" }}>\n                {state.fromAmount} {state.toSymbol}\n            </Text>\n        </View>\n    );\n};\n\nconst SwapInfo = ({ state, disabled }: { state: SwapState; disabled: boolean }) => {\n    const { textDark, textLight, placeholder } = useColors();\n    const amount = state.trade?.outputAmount?.toFixed(8);\n    const price = state.trade?.executionPrice?.toFixed(8);\n    const impact = state.trade?.priceImpact?.toFixed(2);\n    return (\n        <View>\n            <Text\n                style={{\n                    fontSize: 28,\n                    marginBottom: Spacing.normal,\n                    color: disabled ? placeholder : amount ? textDark : textLight\n                }}>\n                {disabled ? \"N/A\" : amount ? amount + \" \" + state.toSymbol : \"Fetching…\"}\n            </Text>\n            <Meta\n                label={\"Price\"}\n                text={price}\n                suffix={state.toSymbol + \"  = 1 \" + state.fromSymbol}\n                disabled={disabled}\n            />\n            <Meta label={\"Price Impact\"} text={impact} suffix={\"%\"} disabled={disabled} />\n            <Meta label={\"Fee (0.30%)\"} text={state.swapFee} suffix={state.fromSymbol} disabled={disabled} />\n            <SwapControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst SwapControls = ({ state }: { state: SwapState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = state.fromSymbol !== \"ETH\" && !state.fromTokenAllowed;\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken || !state.toToken || isEmptyValue(state.fromAmount) ? (\n                <SwapButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : state.fromSymbol === \"WETH\" && state.toSymbol === \"ETH\" ? (\n                <UnwrapButton state={state} onError={setError} />\n            ) : state.fromSymbol === \"ETH\" && state.toSymbol === \"WETH\" ? (\n                <WrapButton state={state} onError={setError} />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setFromTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!approveRequired}\n                    />\n                    <SwapButton state={state} onError={setError} disabled={approveRequired} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SwapButton = ({ state, onError, disabled }: { state: SwapState; onError: (e) => void; disabled: boolean }) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onSwap().catch(onError);\n    }, [state.onSwap, onError]);\n    return (\n        <Button\n            title={state.fromSymbol && state.toSymbol ? \"Swap \" + state.fromSymbol + \"-\" + state.toSymbol : \"Swap\"}\n            disabled={disabled}\n            loading={state.swapping}\n            onPress={onPress}\n        />\n    );\n};\n\nconst WrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onWrap().catch(onError);\n    }, []);\n    return <Button title={\"Wrap\"} loading={state.wrapping} onPress={onPress} />;\n};\n\nconst UnwrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onUnwrap().catch(onError);\n    }, []);\n    return <Button title={\"Unwrap\"} loading={state.unwrapping} onPress={onPress} />;\n};\n\nconst LimitOrderInfo = ({ state }: { state: SwapState }) => {\n    const d = !state.trade?.executionPrice;\n    return (\n        <View>\n            <Text\n                disabled={isEmptyValue(state.limitOrderReturn)}\n                style={{ fontSize: 28, marginBottom: Spacing.normal }}>\n                {isEmptyValue(state.limitOrderReturn) ? \"N/A\" : state.limitOrderReturn + \" \" + state.toSymbol}\n            </Text>\n            <Meta\n                label={\"Market Price\"}\n                text={state.trade?.executionPrice?.toFixed(8) || undefined}\n                suffix={state.toSymbol + \" / \" + state.fromSymbol + \"\"}\n                disabled={d}\n            />\n            <Meta label={\"Relayer Fee (0.20%)\"} text={state.limitOrderFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={\"Swap Fee (0.30%)\"} text={state.limitOrderSwapFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={\"Expiration\"} text={\"24 Hours From Now\"} disabled={d} />\n            <LimitOrderControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LimitOrderControls = ({ state }: { state: SwapState }) => {\n    const { getTokenAllowance } = useContext(EthersContext);\n    const [error, setError] = useState<MetamaskError>({});\n    const [allowed, setAllowed] = useState<boolean>();\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    useDelayedEffect(\n        async () => {\n            if (state.fromToken && !isEmptyValue(state.fromAmount)) {\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const allowance = await getTokenAllowance(state.fromToken.address, SETTLEMENT);\n                setAllowed(ethers.BigNumber.from(allowance).gte(fromAmount));\n            }\n        },\n        500,\n        [state.fromToken, state.fromAmount]\n    );\n    const disabled =\n        state.orderType === \"market\" ||\n        state.toSymbol === \"\" ||\n        !state.fromToken ||\n        !state.toToken ||\n        isEmptyValue(state.fromAmount) ||\n        !state.priceInETH ||\n        parseBalance(state.fromAmount, state.fromToken!.decimals).gt(state.priceInETH.mul(10)) ||\n        !state.trade ||\n        isEmptyValue(state.limitOrderPrice);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {disabled ? (\n                <PlaceOrderButton state={state} onError={setError} disabled={true} />\n            ) : !Fraction.parse(state.limitOrderPrice).gt(\n                  Fraction.parse(state.trade!.executionPrice.toFixed(state.toToken!.decimals))\n              ) ? (\n                <PriceTooLowButton />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken!}\n                        spender={SETTLEMENT}\n                        onSuccess={() => setAllowed(true)}\n                        onError={setError}\n                        hidden={allowed}\n                    />\n                    <PlaceOrderButton state={state} onError={setError} disabled={!allowed} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst PriceTooLowButton = () => {\n    return <Button title={\"Set Price Greater Than Market\"} disabled={true} />;\n};\n\nconst PlaceOrderButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: SwapState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const goToLimitOrders = useLinker(\"/swap/my-orders\", \"LimitOrders\");\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onCreateOrder();\n            goToLimitOrders();\n        } catch (e) {\n            onError(e);\n        }\n    }, [state.onCreateOrder, goToLimitOrders, onError]);\n    return <Button title={\"Place Limit Order\"} disabled={disabled} loading={state.creatingOrder} onPress={onPress} />;\n};\n\nexport default SwapScreen;\n","import React, { useContext } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { DeviceType } from \"expo-device\";\n\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { DefaultTheme, NavigationContainer, Theme } from \"@react-navigation/native\";\nimport useAsyncEffect from \"use-async-effect\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport FarmingScreen from \"./FarmingScreen\";\nimport LiquidityScreen from \"./LiquidityScreen\";\nimport MigrateScreen from \"./MigrateScreen\";\nimport MyLimitOrdersScreen from \"./MyLimitOrdersScreen\";\nimport RemoveLiquidityScreen from \"./RemoveLiquidityScreen\";\nimport StakingScreen from \"./StakingScreen\";\nimport SwapScreen from \"./SwapScreen\";\n\nexport const Screens = () => {\n    const { load } = useContext(GlobalContext);\n    useAsyncEffect(load, []);\n    return Platform.OS === \"web\" ? <WebScreens /> : <AppScreens />;\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst WebScreens = () => {\n    const { deviceType } = useContext(GlobalContext);\n    const { background } = useColors();\n    return (\n        <Router>\n            <View style={{ flex: 1, backgroundColor: background }}>\n                <Switch>\n                    <Route path={\"/swap/my-orders\"}>\n                        <MyLimitOrdersScreen />\n                    </Route>\n                    <Route path={\"/swap\"}>\n                        <SwapScreen />\n                    </Route>\n                    <Route path={\"/liquidity/remove\"}>\n                        <RemoveLiquidityScreen />\n                    </Route>\n                    <Route path={\"/liquidity/migrate\"}>\n                        <MigrateScreen />\n                    </Route>\n                    <Route path={\"/liquidity\"}>\n                        <LiquidityScreen />\n                    </Route>\n                    <Route path={\"/farming\"}>\n                        <FarmingScreen />\n                    </Route>\n                    <Route path={\"/staking\"}>\n                        <StakingScreen />\n                    </Route>\n                    <Redirect to={\"/swap\"} />\n                </Switch>\n                {deviceType !== DeviceType.PHONE && <WebHeader />}\n            </View>\n        </Router>\n    );\n};\n\nconst Tab = createBottomTabNavigator();\n\nconst AppScreens = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary, accent, background, border, textDark, disabled } = useColors();\n    const theme: Theme = {\n        ...DefaultTheme,\n        dark: darkMode,\n        colors: {\n            primary,\n            background,\n            border,\n            card: background,\n            notification: background,\n            text: textDark\n        }\n    };\n    return (\n        <NavigationContainer theme={theme}>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: accent,\n                    inactiveTintColor: disabled,\n                    labelStyle: { marginBottom: 4 }\n                }}>\n                <Tab.Screen name=\"Home\" component={SwapScreen} options={tabOptions(\"home\")} />\n                <Tab.Screen name=\"Liquidity\" component={LiquidityScreen} options={tabOptions(\"water\")} />\n                <Tab.Screen name=\"Farming\" component={FarmingScreen} options={tabOptions(\"leaf\")} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n};\n\nconst tabOptions = iconName => ({\n    tabBarIcon: ({ color }) => <Icon type={\"material-community\"} name={iconName} color={color} />\n});\n","/* tslint:disable:ordered-imports */\nimport \"./globals\";\nimport React from \"react\";\n\nimport { OpenSans_300Light, OpenSans_400Regular, OpenSans_600SemiBold } from \"@expo-google-fonts/open-sans\";\nimport { AppLoading } from \"expo\";\nimport { useFonts } from \"expo-font\";\n\nimport { ContextProvider } from \"./src/context\";\nimport { Screens } from \"./src/screens\";\nimport { YellowBox } from \"react-native\";\n\nif (__DEV__) {\n    YellowBox.ignoreWarnings([\"Setting a timer\", \"VirtualizedLists should never be nested\"]);\n}\n\nconst App = () => {\n    const [fontsLoaded] = useFonts({\n        light: OpenSans_300Light,\n        regular: OpenSans_400Regular,\n        bold: OpenSans_600SemiBold\n    });\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    }\n    return (\n        <ContextProvider>\n            <Screens />\n        </ContextProvider>\n    );\n};\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('./expo-service-worker.js', { scope: './' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","global.Buffer = require('buffer').Buffer;\n","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask-dark.2137a831.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask.15e22fef.png\";","module.exports = __webpack_public_path__ + \"static/media/sushiswap.ef005f32.jpg\";","var map = {\n\t\"./af\": 382,\n\t\"./af.js\": 382,\n\t\"./ar\": 383,\n\t\"./ar-dz\": 384,\n\t\"./ar-dz.js\": 384,\n\t\"./ar-kw\": 385,\n\t\"./ar-kw.js\": 385,\n\t\"./ar-ly\": 386,\n\t\"./ar-ly.js\": 386,\n\t\"./ar-ma\": 387,\n\t\"./ar-ma.js\": 387,\n\t\"./ar-sa\": 388,\n\t\"./ar-sa.js\": 388,\n\t\"./ar-tn\": 389,\n\t\"./ar-tn.js\": 389,\n\t\"./ar.js\": 383,\n\t\"./az\": 390,\n\t\"./az.js\": 390,\n\t\"./be\": 391,\n\t\"./be.js\": 391,\n\t\"./bg\": 392,\n\t\"./bg.js\": 392,\n\t\"./bm\": 393,\n\t\"./bm.js\": 393,\n\t\"./bn\": 394,\n\t\"./bn-bd\": 395,\n\t\"./bn-bd.js\": 395,\n\t\"./bn.js\": 394,\n\t\"./bo\": 396,\n\t\"./bo.js\": 396,\n\t\"./br\": 397,\n\t\"./br.js\": 397,\n\t\"./bs\": 398,\n\t\"./bs.js\": 398,\n\t\"./ca\": 399,\n\t\"./ca.js\": 399,\n\t\"./cs\": 400,\n\t\"./cs.js\": 400,\n\t\"./cv\": 401,\n\t\"./cv.js\": 401,\n\t\"./cy\": 402,\n\t\"./cy.js\": 402,\n\t\"./da\": 403,\n\t\"./da.js\": 403,\n\t\"./de\": 404,\n\t\"./de-at\": 405,\n\t\"./de-at.js\": 405,\n\t\"./de-ch\": 406,\n\t\"./de-ch.js\": 406,\n\t\"./de.js\": 404,\n\t\"./dv\": 407,\n\t\"./dv.js\": 407,\n\t\"./el\": 408,\n\t\"./el.js\": 408,\n\t\"./en-au\": 409,\n\t\"./en-au.js\": 409,\n\t\"./en-ca\": 410,\n\t\"./en-ca.js\": 410,\n\t\"./en-gb\": 411,\n\t\"./en-gb.js\": 411,\n\t\"./en-ie\": 412,\n\t\"./en-ie.js\": 412,\n\t\"./en-il\": 413,\n\t\"./en-il.js\": 413,\n\t\"./en-in\": 414,\n\t\"./en-in.js\": 414,\n\t\"./en-nz\": 415,\n\t\"./en-nz.js\": 415,\n\t\"./en-sg\": 416,\n\t\"./en-sg.js\": 416,\n\t\"./eo\": 417,\n\t\"./eo.js\": 417,\n\t\"./es\": 418,\n\t\"./es-do\": 419,\n\t\"./es-do.js\": 419,\n\t\"./es-mx\": 420,\n\t\"./es-mx.js\": 420,\n\t\"./es-us\": 421,\n\t\"./es-us.js\": 421,\n\t\"./es.js\": 418,\n\t\"./et\": 422,\n\t\"./et.js\": 422,\n\t\"./eu\": 423,\n\t\"./eu.js\": 423,\n\t\"./fa\": 424,\n\t\"./fa.js\": 424,\n\t\"./fi\": 425,\n\t\"./fi.js\": 425,\n\t\"./fil\": 426,\n\t\"./fil.js\": 426,\n\t\"./fo\": 427,\n\t\"./fo.js\": 427,\n\t\"./fr\": 428,\n\t\"./fr-ca\": 429,\n\t\"./fr-ca.js\": 429,\n\t\"./fr-ch\": 430,\n\t\"./fr-ch.js\": 430,\n\t\"./fr.js\": 428,\n\t\"./fy\": 431,\n\t\"./fy.js\": 431,\n\t\"./ga\": 432,\n\t\"./ga.js\": 432,\n\t\"./gd\": 433,\n\t\"./gd.js\": 433,\n\t\"./gl\": 434,\n\t\"./gl.js\": 434,\n\t\"./gom-deva\": 435,\n\t\"./gom-deva.js\": 435,\n\t\"./gom-latn\": 436,\n\t\"./gom-latn.js\": 436,\n\t\"./gu\": 437,\n\t\"./gu.js\": 437,\n\t\"./he\": 438,\n\t\"./he.js\": 438,\n\t\"./hi\": 439,\n\t\"./hi.js\": 439,\n\t\"./hr\": 440,\n\t\"./hr.js\": 440,\n\t\"./hu\": 441,\n\t\"./hu.js\": 441,\n\t\"./hy-am\": 442,\n\t\"./hy-am.js\": 442,\n\t\"./id\": 443,\n\t\"./id.js\": 443,\n\t\"./is\": 444,\n\t\"./is.js\": 444,\n\t\"./it\": 445,\n\t\"./it-ch\": 446,\n\t\"./it-ch.js\": 446,\n\t\"./it.js\": 445,\n\t\"./ja\": 447,\n\t\"./ja.js\": 447,\n\t\"./jv\": 448,\n\t\"./jv.js\": 448,\n\t\"./ka\": 449,\n\t\"./ka.js\": 449,\n\t\"./kk\": 450,\n\t\"./kk.js\": 450,\n\t\"./km\": 451,\n\t\"./km.js\": 451,\n\t\"./kn\": 452,\n\t\"./kn.js\": 452,\n\t\"./ko\": 453,\n\t\"./ko.js\": 453,\n\t\"./ku\": 454,\n\t\"./ku.js\": 454,\n\t\"./ky\": 455,\n\t\"./ky.js\": 455,\n\t\"./lb\": 456,\n\t\"./lb.js\": 456,\n\t\"./lo\": 457,\n\t\"./lo.js\": 457,\n\t\"./lt\": 458,\n\t\"./lt.js\": 458,\n\t\"./lv\": 459,\n\t\"./lv.js\": 459,\n\t\"./me\": 460,\n\t\"./me.js\": 460,\n\t\"./mi\": 461,\n\t\"./mi.js\": 461,\n\t\"./mk\": 462,\n\t\"./mk.js\": 462,\n\t\"./ml\": 463,\n\t\"./ml.js\": 463,\n\t\"./mn\": 464,\n\t\"./mn.js\": 464,\n\t\"./mr\": 465,\n\t\"./mr.js\": 465,\n\t\"./ms\": 466,\n\t\"./ms-my\": 467,\n\t\"./ms-my.js\": 467,\n\t\"./ms.js\": 466,\n\t\"./mt\": 468,\n\t\"./mt.js\": 468,\n\t\"./my\": 469,\n\t\"./my.js\": 469,\n\t\"./nb\": 470,\n\t\"./nb.js\": 470,\n\t\"./ne\": 471,\n\t\"./ne.js\": 471,\n\t\"./nl\": 472,\n\t\"./nl-be\": 473,\n\t\"./nl-be.js\": 473,\n\t\"./nl.js\": 472,\n\t\"./nn\": 474,\n\t\"./nn.js\": 474,\n\t\"./oc-lnc\": 475,\n\t\"./oc-lnc.js\": 475,\n\t\"./pa-in\": 476,\n\t\"./pa-in.js\": 476,\n\t\"./pl\": 477,\n\t\"./pl.js\": 477,\n\t\"./pt\": 478,\n\t\"./pt-br\": 479,\n\t\"./pt-br.js\": 479,\n\t\"./pt.js\": 478,\n\t\"./ro\": 480,\n\t\"./ro.js\": 480,\n\t\"./ru\": 481,\n\t\"./ru.js\": 481,\n\t\"./sd\": 482,\n\t\"./sd.js\": 482,\n\t\"./se\": 483,\n\t\"./se.js\": 483,\n\t\"./si\": 484,\n\t\"./si.js\": 484,\n\t\"./sk\": 485,\n\t\"./sk.js\": 485,\n\t\"./sl\": 486,\n\t\"./sl.js\": 486,\n\t\"./sq\": 487,\n\t\"./sq.js\": 487,\n\t\"./sr\": 488,\n\t\"./sr-cyrl\": 489,\n\t\"./sr-cyrl.js\": 489,\n\t\"./sr.js\": 488,\n\t\"./ss\": 490,\n\t\"./ss.js\": 490,\n\t\"./sv\": 491,\n\t\"./sv.js\": 491,\n\t\"./sw\": 492,\n\t\"./sw.js\": 492,\n\t\"./ta\": 493,\n\t\"./ta.js\": 493,\n\t\"./te\": 494,\n\t\"./te.js\": 494,\n\t\"./tet\": 495,\n\t\"./tet.js\": 495,\n\t\"./tg\": 496,\n\t\"./tg.js\": 496,\n\t\"./th\": 497,\n\t\"./th.js\": 497,\n\t\"./tk\": 498,\n\t\"./tk.js\": 498,\n\t\"./tl-ph\": 499,\n\t\"./tl-ph.js\": 499,\n\t\"./tlh\": 500,\n\t\"./tlh.js\": 500,\n\t\"./tr\": 501,\n\t\"./tr.js\": 501,\n\t\"./tzl\": 502,\n\t\"./tzl.js\": 502,\n\t\"./tzm\": 503,\n\t\"./tzm-latn\": 504,\n\t\"./tzm-latn.js\": 504,\n\t\"./tzm.js\": 503,\n\t\"./ug-cn\": 505,\n\t\"./ug-cn.js\": 505,\n\t\"./uk\": 506,\n\t\"./uk.js\": 506,\n\t\"./ur\": 507,\n\t\"./ur.js\": 507,\n\t\"./uz\": 508,\n\t\"./uz-latn\": 509,\n\t\"./uz-latn.js\": 509,\n\t\"./uz.js\": 508,\n\t\"./vi\": 510,\n\t\"./vi.js\": 510,\n\t\"./x-pseudo\": 511,\n\t\"./x-pseudo.js\": 511,\n\t\"./yo\": 512,\n\t\"./yo.js\": 512,\n\t\"./zh-cn\": 513,\n\t\"./zh-cn.js\": 513,\n\t\"./zh-hk\": 514,\n\t\"./zh-hk.js\": 514,\n\t\"./zh-mo\": 515,\n\t\"./zh-mo.js\": 515,\n\t\"./zh-tw\": 516,\n\t\"./zh-tw.js\": 516\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 844;"],"sourceRoot":""}