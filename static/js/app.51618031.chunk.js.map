{"version":3,"sources":["assets/empty-token.png","src/constants/tokens.ts","src/utils/index.ts","src/utils/analytics-utils.ts","src/constants/contracts.ts","src/utils/fetch-utils.ts","src/context/EthersContext.tsx","src/context/GlobalContext.tsx","src/context/index.tsx","src/constants/dimension.ts","src/constants/colors.ts","src/hooks/useColors.tsx","src/components/FlexView.tsx","src/components/Text.tsx","src/components/web/WebHeader.tsx","src/components/Button.tsx","src/components/ApproveButton.tsx","src/hooks/useStyles.tsx","src/components/ButtonGroup.tsx","src/components/CloseIcon.tsx","src/components/Column.tsx","src/components/Container.tsx","src/components/Content.tsx","src/components/ErrorMessage.tsx","src/components/FetchingButton.tsx","src/components/Heading.tsx","src/components/InsufficientBalanceButton.tsx","src/components/Expandable.tsx","src/components/ItemSeparator.tsx","src/components/Loading.tsx","src/components/Selectable.tsx","src/components/TokenLogo.tsx","src/components/TokenSymbol.tsx","src/components/LPTokenSelect.tsx","src/components/Meta.tsx","src/components/Notice.tsx","src/components/SelectIcon.tsx","src/components/Input.tsx","src/components/TokenInput.tsx","src/hooks/useLinker.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/hooks/useDelayedOnBlockEffect.tsx","src/constants/Fraction.ts","src/hooks/useAllCommonPairs.tsx","src/hooks/useSDK.tsx","src/hooks/useTokenPairState.tsx","src/hooks/useLiquidityState.tsx","src/hooks/useLPTokensState.tsx","src/hooks/useFarmingState.tsx","src/components/app/AppHeader.tsx","src/components/web/ConnectToWallet.tsx","src/components/web/MobileNotSupported.tsx","src/screens/Screen.tsx","src/screens/FarmingScreen.tsx","src/components/Border.tsx","src/components/InfoBox.tsx","src/components/Title.tsx","src/components/TokenAmount.tsx","src/components/TokenName.tsx","src/components/TokenSelect.tsx","src/components/UnsupportedButton.tsx","src/components/web/WebSubMenu.tsx","src/hooks/useAddLiquidityState.tsx","src/screens/LiquidityScreen.tsx","src/components/ExperimentalNotice.tsx","src/hooks/useMigrateState.tsx","src/screens/MigrateScreen.tsx","src/hooks/useMyLimitOrdersState.tsx","src/screens/MyLimitOrdersScreen.tsx","src/hooks/useRemoveLiquidityState.tsx","src/screens/RemoveLiquidityScreen.tsx","src/hooks/useStakingState.tsx","src/screens/StakingScreen.tsx","src/hooks/useDelayedEffect.tsx","src/hooks/useSwapState.tsx","src/screens/SwapScreen.tsx","src/screens/index.tsx","App.tsx","web-build/register-service-worker.js","globals.js","assets/ETH.png","assets/metamask-dark.png","assets/metamask.png","assets/sushiswap.jpg","node_modules/moment/locale sync /^/.//.*$"],"names":["module","exports","ETH","name","address","ethers","constants","AddressZero","decimals","symbol","logoURI","balance","BigNumber","from","CONTRACTS","ERC20","IUniswapV2Factory","IUniswapV2Pair","IUniswapV2Router02","IWETH","MasterChef","Migrator2","SushiBar","OrderBook","Settlement","LPTokenScanner","abi","formatBalance","value","maxFraction","formatted","utils","formatUnits","split","length","substr","parseBalance","parseUnits","isEmptyValue","text","isBigNumber","isZero","replace","convertToken","token","WETH","SDKToken","ChainId","MAINNET","convertAmount","amount","TokenAmount","toString","parseCurrencyAmount","toExact","getContract","signer","contract","ContractFactory","pow10","exp","pow","logTransaction","tx","a","async","args","Analytics","hash","gasLimit","gasPrice","chainId","ROUTER","MASTER_CHEF","SUSHI_BAR","MIGRATOR2","ORDER_BOOK","SETTLEMENT","fetchTokens","provider","fetch","response","json","send","tokens","map","balances","getBalance","i","tokenBalances","tokenBalance","sort","t1","t2","sub","div","toNumber","fetchPools","pools","getAddress","pool","Promise","all","poolToken","balanceOf","totalDeposited","masterChef","userInfo","amountDeposited","pendingSushi","id","tokenA","tokenB","fetchMyLPTokens","fetchLPTokens","SUSHISWAP_FACTORY","fetchMyUniswapLPTokens","UNISWAP_FACTORY","factory","factoryContract","allPairsLength","scanner","account","pages","push","page","findPairs","Math","min","pairs","flat","pair","index","erc20","Number","totalSupply","findOrFetchToken","token0","token1","find","t","toLowerCase","meta","logo","Zero","EthersContext","React","createContext","undefined","kovanProvider","kovanSigner","ensName","addOnBlockListener","_name","_listener","removeOnBlockListener","updateTokens","loadingTokens","approveToken","_token","_spender","_amount","getTokenAllowance","getTotalSupply","EthersContextProvider","children","useState","setProvider","setKovanProvider","setSigner","setKovanSigner","setChainId","setAddress","setENSName","onBlockListeners","setOnBlockListeners","setTokens","setLoadingTokens","useEffect","kovan","providers","AlchemyProvider","wallet","Wallet","useAsyncEffect","window","ethereum","web3","Web3Provider","alchemy","network","getSigner","onAccountsChanged","selectedAddress","onChainChanged","on","off","lookupAddress","ens","data","useCallback","spender","MaxUint256","estimateGas","approve","owner","listener","old","onBlock","block","Object","entries","Provider","Consumer","GlobalContext","load","clear","deviceType","darkMode","setDarkMode","mnemonic","setMnemonic","GlobalContextProvider","colorScheme","useColorScheme","setDeviceType","getDeviceTypeAsync","AsyncStorage","getItem","mode","mne","removeItem","setItem","String","ContextProvider","SCREEN_HEIGHT","round","Dimensions","get","width","height","Spacing","tiny","small","normal","large","huge","Colors","common","white","transparent","primary","secondary","green","red","twitter","facebook","light","accent","header","submenu","background","backgroundLight","border","borderDark","textDark","textMedium","textLight","disabled","shadow","placeholder","dark","useColors","useContext","FlexView","props","flexDirection","direction","View","style","Text","fontFamily","fontWeight","color","medium","note","h1Style","h2Style","h3Style","h4Style","fontSize","caption","Title","alignSelf","alignItems","to","textDecoration","Menu","title","path","MenuItem","match","useRouteMatch","active","startsWith","marginLeft","padding","Status","connected","substring","justifyContent","paddingHorizontal","borderRadius","borderWidth","borderColor","backgroundColor","marginRight","DarkModeSwitch","onChange","marginBottom","transform","scale","WebHeader","position","top","zIndex","paddingBottom","flex","paddingTop","Button","type","size","loading","onPress","buttonStyle","titleStyle","disabledTitleStyle","disabledStyle","ApproveButton","setLoading","onError","wait","onSuccess","hidden","containerStyle","useStyles","shadowColor","attrs","radius","elevation","shadowOffset","shadowOpacity","shadowRadius","overflow","ButtonGroup","setIndex","selectedIndex","textStyle","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","buttons","borderBottomRightRadius","selectedButtonStyle","marginHorizontal","marginVertical","CloseIcon","Column","marginTop","noTopMargin","Platform","OS","Container","Universal","select","web","ScrollView","contentContainerStyle","default","SafeAreaView","Content","paddingVertical","ErrorMessage","error","code","message","FetchingButton","Heading","buttonText","onPressButton","InsufficientBalanceButton","Expandable","expanded","setExpanded","shouldExpand","onExpand","display","ItemSeparator","Loading","ActivityIndicator","Selectable","hovered","TouchableHighlight","selected","TokenLogo","setError","require","source","replaceWETH","uri","Image","opacity","TokenSymbol","LPTokenList","state","emptyText","filter","Item","renderItem","item","key","onSelectToken","setSelectedLPToken","lpTokens","gt","FlatList","keyExtractor","JSON","stringify","EmptyList","margin","textAlign","LPTokenItem","LPTokenSelect","selectedLPToken","Meta","label","suffix","Notice","borderStyle","SelectIcon","Input","onChangeText","errors","forbidden","forEach","validation","regexp","allowed","join","inputStyle","minHeight","outline","labelStyle","placeholderTextColor","errorStyle","MaxButton","onPressMax","fee","updateAmount","right","bottom","maxButtonText","TokenInput","onAmountChanged","e","endsWith","indexOf","autoFocus","inputContainerStyle","borderBottomWidth","hideMaxButton","route","target","history","useHistory","open","_target","navigate","useNavigation","SocialIcon","iconColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressDiscord","raised","reverse","reverseColor","Link","textDecorationLine","WebFooter","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","eventName","setTimeout","handles","handle","clearTimeout","Fraction","numerator","denominator","this","sdk","numeratorToken","denominatorToken","mul","NAN","ZERO","BASE","isNaN","fraction","eq","lt","maxFractions","str","One","DAI","Token","USDC","USDT","SUSHI","YAM","AMPL","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","wrappedCurrency","currency","ETHER","useAllCommonPairs","loadAllCommonPairs","currencyA","currencyB","bases","basePairs","flatMap","base","otherBase","t0","allPairCombinations","Boolean","b","customBases","customBasesA","customBasesB","equals","Fetcher","fetchPairData","minAmount","percent","Order","maker","fromToken","toToken","amountIn","amountOutMin","recipient","deadline","floor","Date","now","filledAmountIn","settlement","signMessage","arrayify","signature","splitSignature","sign","v","r","s","useSDK","allowedSlippage","Percent","getTrade","fromAmount","isETH","CurrencyAmount","ether","Trade","bestTradeExactIn","maxHops","maxNumResults","swap","trade","Router","feeOnTransfer","ttl","params","swapCallParameters","router","methodName","functions","arg","createOrder","order","toArgs","orderBook","cancelOrder","cancelOrderCallHash","callHash","wrapETH","weth","deposit","unwrapETH","withdraw","getPair","addLiquidity","toAmount","getTime","removeLiquidityETH","liquidity","amountETH","removeLiquidity","addLiquidityETH","getExpectedSushiRewardPerBlock","totalAllocPoint","sushiPerBlock","poolInfo","allocPoint","lpTokenId","enterSushiBar","sushiBar","enter","leaveSushiBar","leave","migrate","lpToken","migrator2","calculateLimitOrderFee","calculateSwapFee","calculateLimitOrderReturn","price","parse","apply","calculateAmountOfLPTokenMinted","liquidityToken","getLiquidityMinted","useTokenPairState","fromSymbol","setFromSymbol","toSymbol","setToSymbol","setFromAmount","setToAmount","fromTokenAllowed","setFromTokenAllowed","toTokenAllowed","setToTokenAllowed","wrapping","setWrapping","unwrapping","setUnwrapping","minAllowance","fromAllowance","gte","toAllowance","onWrap","onUnwrap","useLiquidityState","setPair","useLPTokensState","lastTimeRefreshed","setLastTimeRefreshed","setLPTokens","selectedLPTokenAllowed","setSelectedLPTokenAllowed","setAmount","updateLPTokens","updateLastTimeRefreshed","useFarmingState","filteredBy","setFilteredBy","action","setAction","expectedSushiRewardPerBlock","setExpectedSushiRewardPerBlock","depositing","setDepositing","withdrawing","setWithdrawing","allowance","onDeposit","onWithdraw","AppHeader","StatusBar","translucent","ConnectWallet","enable","Linking","MobileNotSupported","Screen","DeviceType","PHONE","left","ConnectToWallet","AppLoading","Actions","Farming","h4","showFilter","onFilterChanged","TokenItem","field","LogoSymbol","isEmpty","setIsEmpty","ActionSelect","element","DepositText","WithdrawText","Deposit","AddLiquidityNotice","DepositInfo","sushiReward","DepositControls","approveRequired","AddLiquidityButton","DepositButton","catch","Withdraw","NoLPTokenNotice","WithdrawInfo","WithdrawControls","WithdrawButton","FarmingScreen","Border","InfoBox","TokenName","numberOfLines","ellipsizeMode","TokenList","useMemo","localeCompare","selectable","TokenSelect","onChangeSymbol","UnsupportedButton","SwapSubMenu","items","LiquiditySubMenu","WebSubMenu","isExact","useAddLiquidityState","adding","setAdding","onAdd","AddLiquidity","ToTokenSelect","FromTokenInput","newAmount","priceOf","quote","ToTokenInput","PriceInfo","FirstProviderInfo","noAmount","initialPrice","PairPriceInfo","minted","toFixed","PriceMeta","Controls","fromApproveRequired","toApproveRequired","SupplyButton","LiquidityScreen","ExperimentalNotice","onPressContract","contractURL","useMigrateState","migrating","setMigrating","onMigrate","Migrate","AmountInput","AmountInfo","MigrateButton","MigrateScreen","useMyLimitOrdersState","orders","setOrders","selectedOrder","setSelectedOrder","cancellingOrder","setCancellingOrder","numberOfHashesOfMaker","allHashes","hashes","HashZero","orderOfHash","filledAmountInOfHash","myOrders","o0","o1","status","compared","onCancelOrder","MyLimitOrders","OrderSelect","onSelectOrder","OrderList","OrderItem","fromTokens","buy","minWidth","colorDisabled","Field","OrderInfo","diff","moment","expiry","isAfter","utc","format","date","toLocaleDateString","toLocaleTimeString","CancelButton","MyLimitOrdersScreen","useRemoveLiquidityState","removing","setRemoving","fromReserve","reserveOf","toReserve","onRemove","amountToRemove","amountToRemoveETH","RemoveLiquidity","RemoveButton","RemoveLiquidityScreen","useStakingState","sushiStaked","setSushiStaked","sushiSupply","setSushiSupply","xSushiSupply","setXSushiSupply","sushiAllowed","setSushiAllowed","xSushiAllowed","setXSushiAllowed","entering","setEntering","leaving","setLeaving","sushi","xSushi","sushiAllowance","xSushiAllowance","sushiContract","xSushiContract","onEnter","onLeave","Staking","StakeText","UnstakeText","Line","NoSushiNotice","NoXSushiNotice","StakeInfo","xSushiAmount","share","StakeButton","UnstakeButton","StakingScreen","useDelayedEffect","timeout","useSwapState","orderType","setOrderType","setTrade","unsupported","setUnsupported","swapFee","setSwapFee","limitOrderPrice","setLimitOrderPrice","limitOrderFee","setLimitOrderFee","limitOrderSwapFee","setLimitOrderSwapFee","limitOrderReturn","setLimitOrderReturn","swapping","setSwapping","creatingOrder","setCreatingOrder","onSwap","result","onCreateOrder","limitOrderUnsupported","Swap","OrderTypeSelect","OrderTypeItem","desc","FromTokenSelect","PriceInput","marketPrice","executionPrice","LimitOrderUnsupportedNotice","TradeInfo","WrapInfo","SwapInfo","outputAmount","impact","priceImpact","SwapControls","SwapButton","WrapButton","UnwrapButton","LimitOrderInfo","d","LimitOrderControls","setAllowed","PriceTooLowButton","PlaceOrderButton","goToLimitOrders","SwapScreen","Screens","WebScreens","Tab","createBottomTabNavigator","AppScreens","theme","DefaultTheme","colors","card","notification","NavigationContainer","Navigator","tabBarOptions","activeTintColor","inactiveTintColor","component","options","tabOptions","iconName","tabBarIcon","App","useFonts","OpenSans_300Light","regular","OpenSans_400Regular","bold","OpenSans_600SemiBold","navigator","addEventListener","serviceWorker","register","scope","then","info","console","global","Buffer","webpackContext","req","webpackContextResolve","__webpack_require__","o","Error","keys","resolve"],"mappings":"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","file":"static/js/app.51618031.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","import { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\n\nexport const ETH: Token = {\n    name: \"Ethereum\",\n    address: ethers.constants.AddressZero,\n    decimals: 18,\n    symbol: \"ETH\",\n    logoURI: \"https://sushiswap.levx.io/images/tokens/ETH.png\",\n    balance: ethers.BigNumber.from(0)\n};\n","import ERC20 from \"@sushiswap/core/build/contracts/ERC20.json\";\nimport IUniswapV2Factory from \"@sushiswap/core/build/contracts/IUniswapV2Factory.json\";\nimport IUniswapV2Pair from \"@sushiswap/core/build/contracts/IUniswapV2Pair.json\";\nimport IUniswapV2Router02 from \"@sushiswap/core/build/contracts/IUniswapV2Router02.json\";\nimport IWETH from \"@sushiswap/core/build/contracts/IWETH.json\";\nimport MasterChef from \"@sushiswap/core/build/contracts/MasterChef.json\";\nimport Migrator2 from \"@sushiswap/core/build/contracts/Migrator2.json\";\nimport SushiBar from \"@sushiswap/core/build/contracts/SushiBar.json\";\nimport { ChainId, CurrencyAmount, Token as SDKToken, TokenAmount, WETH } from \"@sushiswap/sdk\";\nimport OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\nimport { ethers } from \"ethers\";\nimport LPTokenScanner from \"../constants/abi/LPTokenScanner.json\";\nimport Token from \"../types/Token\";\n\nconst CONTRACTS = {\n    ERC20,\n    IUniswapV2Factory,\n    IUniswapV2Pair,\n    IUniswapV2Router02,\n    IWETH,\n    MasterChef,\n    Migrator2,\n    SushiBar,\n    OrderBook,\n    Settlement,\n    LPTokenScanner: { abi: LPTokenScanner }\n};\n\nexport const formatBalance = (value: ethers.BigNumberish, decimals = 18, maxFraction = 0) => {\n    const formatted = ethers.utils.formatUnits(value, decimals);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const parseBalance = (value: string, decimals = 18) => {\n    return ethers.utils.parseUnits(value || \"0\", decimals);\n};\n\nexport const isEmptyValue = (text: string) =>\n    ethers.BigNumber.isBigNumber(text)\n        ? ethers.BigNumber.from(text).isZero()\n        : text === \"\" || text.replace(/0/g, \"\").replace(/\\./, \"\") === \"\";\n\nexport const convertToken = (token: Token) => {\n    return token.symbol === \"ETH\" ? WETH[\"1\"] : new SDKToken(ChainId.MAINNET, token.address, token.decimals);\n};\n\nexport const convertAmount = (token: Token, amount: string) => {\n    return new TokenAmount(convertToken(token), parseBalance(amount, token.decimals).toString());\n};\n\nexport const parseCurrencyAmount = (value: CurrencyAmount, decimals = 18) => {\n    return ethers.BigNumber.from(parseBalance(value.toExact(), decimals));\n};\n\nexport const getContract = (name: string, address: string, signer: ethers.Signer) => {\n    const contract = CONTRACTS[name];\n    return ethers.ContractFactory.getContract(address, contract.abi, signer);\n};\n\nexport const pow10 = (exp: ethers.BigNumberish) => {\n    return ethers.BigNumber.from(10).pow(exp);\n};\n\nexport const formatDate = (date: Date) => {\n    return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n};\n","import * as Analytics from \"expo-firebase-analytics\";\n\nimport { ethers } from \"ethers\";\n\nexport const logTransaction = async (\n    tx: ethers.providers.TransactionResponse,\n    name: string,\n    ...args: any[]\n): Promise<ethers.providers.TransactionResponse> => {\n    await Analytics.logEvent(\"tx:\" + name, {\n        args: args || [],\n        hash: tx.hash,\n        value: tx.value.toString(),\n        gasLimit: tx.gasLimit.toString(),\n        gasPrice: tx.gasPrice.toString(),\n        chainId: tx.chainId\n    });\n    return tx;\n};\n","import OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\n\n// export const UNISWAP_ROUTER = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nexport const SUSHISWAP_ROUTER = \"0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\";\nexport const ROUTER = SUSHISWAP_ROUTER;\nexport const MASTER_CHEF = \"0xc2edad668740f1aa35e4d8f227fb8e17dca888cd\";\nexport const SUSHI_BAR = \"0x8798249c2e607446efb7ad49ec89dd1865ff4272\";\nexport const SUSHI_ROLL = \"0x94CfE11E6b57f6f84bBa2c6DfB0fAeA47C4741D6\";\nexport const LP_TOKEN_SCANNER = \"0xD132Ce8eA8865348Ac25E416d95ab1Ba84D216AF\";\nexport const MIGRATOR2 = \"0x60A02cD1e3443E8ab7825DccF8d7080Eb78BCA6F\";\nexport const ORDER_BOOK = OrderBook.address;\nexport const SETTLEMENT = Settlement.address;\n","import { FACTORY_ADDRESS as SUSHISWAP_FACTORY } from \"@sushiswap/sdk\";\nimport { FACTORY_ADDRESS as UNISWAP_FACTORY } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { LP_TOKEN_SCANNER, MASTER_CHEF } from \"../constants/contracts\";\nimport { ETH } from \"../constants/tokens\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { getContract } from \"./index\";\n\nexport const fetchTokens = async (address: string, provider?: ethers.providers.JsonRpcProvider) => {\n    if (provider) {\n        const response = await fetch(\"https://sushiswap.levx.io/tokens.json\");\n        const json = await response.json();\n\n        const balances = await provider.send(\"alchemy_getTokenBalances\", [\n            address,\n            json.tokens.map(token => token.address)\n        ]);\n        return [\n            {\n                ...ETH,\n                balance: await provider.getBalance(address)\n            },\n            ...json.tokens.map((token, i) => ({\n                ...token,\n                balance: ethers.BigNumber.from(balances.tokenBalances[i].tokenBalance || 0)\n            }))\n        ].sort((t1, t2) => {\n            return t2.balance\n                .sub(t1.balance)\n                .div(ethers.BigNumber.from(10).pow(10))\n                .toNumber();\n        });\n    }\n};\n\nexport const fetchPools = async (provider?: ethers.providers.JsonRpcProvider, signer?: ethers.Signer) => {\n    if (provider && signer) {\n        const response = await fetch(\"https://sushiswap.levx.io/pools.json\");\n        const pools = await response.json();\n        const address = await signer.getAddress();\n        const balances = await provider.send(\"alchemy_getTokenBalances\", [address, pools.map(pool => pool.address)]);\n        return (await Promise.all(\n            pools.map(async (pool, i) => {\n                const poolToken = getContract(\"ERC20\", pool.address, signer);\n                const totalDeposited = await poolToken.balanceOf(MASTER_CHEF);\n                const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n                const { amount: amountDeposited } = await masterChef.userInfo(i, address);\n                const pendingSushi = await masterChef.pendingSushi(i, address);\n                return {\n                    ...pool,\n                    id: i,\n                    symbol: pool.tokenA.symbol + \"-\" + pool.tokenB.symbol + \" LP\",\n                    balance: ethers.BigNumber.from(balances.tokenBalances[i].tokenBalance || 0),\n                    totalDeposited,\n                    amountDeposited,\n                    pendingSushi\n                };\n            })\n        )) as LPToken[];\n    }\n};\n\nexport const fetchMyLPTokens = async (\n    tokens: Token[],\n    provider?: ethers.providers.JsonRpcProvider,\n    signer?: ethers.Signer\n) => {\n    if (provider && signer) {\n        return await fetchLPTokens(SUSHISWAP_FACTORY, tokens, provider, signer);\n    }\n};\n\nexport const fetchMyUniswapLPTokens = async (\n    tokens: Token[],\n    provider?: ethers.providers.JsonRpcProvider,\n    signer?: ethers.Signer\n) => {\n    if (provider && signer) {\n        return await fetchLPTokens(UNISWAP_FACTORY, tokens, provider, signer);\n    }\n};\n\nconst LIMIT = 2000;\n\nconst fetchLPTokens = async (\n    factory: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer\n) => {\n    const factoryContract = getContract(\"IUniswapV2Factory\", factory, signer);\n    const length = await factoryContract.allPairsLength();\n    const scanner = getContract(\"LPTokenScanner\", LP_TOKEN_SCANNER, signer);\n    const account = await signer.getAddress();\n    const pages: number[] = [];\n    for (let i = 0; i < length; i += LIMIT) pages.push(i);\n    const pairs = (\n        await Promise.all(\n            pages.map(page => scanner.findPairs(account, factory, page, Math.min(page + LIMIT, length.toNumber())))\n        )\n    ).flat();\n    const balances = await provider.send(\"alchemy_getTokenBalances\", [account, pairs.map(pair => pair.token)]);\n    return await Promise.all(\n        pairs.map(async (pair, index) => {\n            const address = pair.token;\n            const balance = ethers.BigNumber.from(balances.tokenBalances[index].tokenBalance);\n            const contract = getContract(\"IUniswapV2Pair\", address, signer);\n            const erc20 = getContract(\"ERC20\", address, signer);\n            const decimals = Number(await erc20.decimals());\n            const totalSupply = await erc20.totalSupply();\n            const tokenA = await findOrFetchToken(provider, await contract.token0(), tokens);\n            const tokenB = await findOrFetchToken(provider, await contract.token1(), tokens);\n            const name = tokenA.symbol + \"-\" + tokenB.symbol + \" LP Token\";\n            const symbol = tokenA.symbol + \"-\" + tokenB.symbol;\n            return { address, decimals, name, symbol, balance, totalSupply, tokenA, tokenB } as LPToken;\n        })\n    );\n};\n\nexport const findOrFetchToken = async (\n    provider: ethers.providers.JsonRpcProvider,\n    address: string,\n    tokens?: Token[]\n) => {\n    if (tokens) {\n        const token = tokens.find(t => t.address.toLowerCase() === address.toLowerCase());\n        if (token) {\n            return token;\n        }\n    }\n    const meta = await provider.send(\"alchemy_getTokenMetadata\", [address]);\n    return {\n        address,\n        symbol: meta.symbol,\n        decimals: meta.decimals,\n        logoURI: meta.logo,\n        balance: ethers.constants.Zero\n    } as Token;\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport * as Analytics from \"expo-firebase-analytics\";\n\nimport { EventType, Listener } from \"@ethersproject/abstract-provider\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ETH } from \"../constants/tokens\";\nimport Token from \"../types/Token\";\nimport { getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport { fetchTokens } from \"../utils/fetch-utils\";\n\nexport type OnBlockListener = (block?: number) => void | Promise<void>;\n\nconst PRIVATE_KEY = \"0xca417c154948d370f011c5d9ac3fba516d7b15671a069e7d5d48f56b723c9cc1\";\n\nexport const EthersContext = React.createContext({\n    provider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    signer: undefined as ethers.providers.JsonRpcSigner | undefined,\n    kovanProvider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    kovanSigner: undefined as ethers.Signer | undefined,\n    chainId: 0,\n    address: null as string | null,\n    ensName: null as string | null,\n    addOnBlockListener: (_name: string, _listener: OnBlockListener) => {},\n    removeOnBlockListener: (_name: string) => {},\n    tokens: [ETH] as Token[],\n    updateTokens: async () => {},\n    loadingTokens: false,\n    approveToken: async (_token: string, _spender: string, _amount?: ethers.BigNumber) => {\n        return {} as ethers.providers.TransactionResponse | undefined;\n    },\n    getTokenAllowance: async (_token: string, _spender: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTotalSupply: async (_token: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    }\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const EthersContextProvider = ({ children }) => {\n    // const { mnemonic } = useContext(GlobalContext);\n    const [provider, setProvider] = useState<ethers.providers.JsonRpcProvider>();\n    const [kovanProvider, setKovanProvider] = useState<ethers.providers.JsonRpcProvider>();\n    const [signer, setSigner] = useState<ethers.providers.JsonRpcSigner>();\n    const [kovanSigner, setKovanSigner] = useState<ethers.Signer>();\n    const [chainId, setChainId] = useState<number>(1);\n    const [address, setAddress] = useState<string | null>(null);\n    const [ensName, setENSName] = useState<string | null>(null);\n    const [onBlockListeners, setOnBlockListeners] = useState<{ [name: string]: OnBlockListener }>({});\n    const [tokens, setTokens] = useState<Token[]>([]);\n    const [loadingTokens, setLoadingTokens] = useState(true);\n\n    useEffect(() => {\n        // Kovan\n        const kovan = new ethers.providers.AlchemyProvider(42, \"3NGZpyMoljbXikGsz9hWzKZ_bnqbZny2\");\n        const wallet = new ethers.Wallet(PRIVATE_KEY, kovan);\n        setKovanProvider(kovan);\n        setKovanSigner(wallet);\n    }, []);\n\n    useAsyncEffect(async () => {\n        // Mainnet\n        if (window.ethereum) {\n            const web3 = new ethers.providers.Web3Provider(window.ethereum);\n            const alchemy = new ethers.providers.AlchemyProvider(\n                web3.network,\n                __DEV__ ? \"gSgAj0Ntfsn-DOKKlUhjqeUlePrVX8va\" : \"yLD5iJzUEo_Kvlg_PwMXl7N9ESK2_b6E\"\n            );\n            setProvider(alchemy);\n            setSigner(await web3.getSigner());\n        }\n    }, [window.ethereum]);\n\n    useEffect(() => {\n        if (window.ethereum) {\n            const onAccountsChanged = () => {\n                setAddress(window.ethereum.selectedAddress);\n                if (window.ethereum.chainId && window.ethereum.selectedAddress) {\n                    Analytics.setUserId(Number(window.ethereum.chainId) + \":\" + window.ethereum.selectedAddress);\n                }\n            };\n            const onChainChanged = () => {\n                setChainId(Number(window.ethereum.chainId));\n            };\n            onAccountsChanged();\n            onChainChanged();\n            window.ethereum.on(\"accountsChanged\", onAccountsChanged);\n            window.ethereum.on(\"chainChanged\", onChainChanged);\n            return () => {\n                window.ethereum.off(\"accountsChanged\", onAccountsChanged);\n                window.ethereum.off(\"chainChanged\", onAccountsChanged);\n            };\n        }\n    }, [window.ethereum, signer]);\n\n    useAsyncEffect(async () => {\n        if (signer && address) {\n            const ens = await signer.provider.lookupAddress(address);\n            setENSName(ens);\n        }\n    }, [signer, address]);\n\n    // Set provider and signer for mobile app\n    // useEffect(() => {\n    //     if (mnemonic) {\n    //         const alchemy = new ethers.providers.AlchemyProvider(1, Constants.manifest.extra.alchemyApiKey);\n    //         setProvider(alchemy);\n    //         const wallet = ethers.Wallet.fromMnemonic(mnemonic).connect(alchemy);\n    //         setSigner(wallet);\n    //     }\n    // }, [mnemonic]);\n\n    const updateTokens = async () => {\n        if (address) {\n            try {\n                const data = await fetchTokens(address, provider);\n                if (data) {\n                    await setTokens(data);\n                }\n            } finally {\n                setLoadingTokens(false);\n            }\n        }\n    };\n\n    useAsyncEffect(async () => {\n        if (provider) {\n            setLoadingTokens(true);\n            await updateTokens();\n        }\n    }, [provider, address]);\n\n    const approveToken = useCallback(\n        async (token: string, spender: string, amount?: ethers.BigNumber) => {\n            if (signer) {\n                amount = amount || ethers.constants.MaxUint256;\n                const erc20 = getContract(\"ERC20\", token, signer);\n                const gasLimit = await erc20.estimateGas.approve(spender, amount);\n                const tx = await erc20.approve(spender, amount, {\n                    gasLimit\n                });\n                return await logTransaction(tx, \"ERC20.approve()\", spender, amount.toString());\n            }\n        },\n        [signer]\n    );\n\n    const getTokenAllowance = useCallback(\n        async (token: string, spender: string) => {\n            if (provider && address) {\n                return await provider.send(\"alchemy_getTokenAllowance\", [\n                    {\n                        contract: token,\n                        owner: address,\n                        spender\n                    }\n                ]);\n            }\n        },\n        [provider, address]\n    );\n\n    const getTotalSupply = useCallback(\n        async (token: string) => {\n            if (signer) {\n                const erc20 = getContract(\"ERC20\", token, signer);\n                return await erc20.totalSupply();\n            }\n        },\n        [signer]\n    );\n\n    const addOnBlockListener = useCallback(\n        (name, listener) => {\n            setOnBlockListeners(old => ({ ...old, [name]: listener }));\n        },\n        [setOnBlockListeners]\n    );\n\n    const removeOnBlockListener = useCallback(\n        name => {\n            setOnBlockListeners(old => {\n                delete old[name];\n                return old;\n            });\n        },\n        [setOnBlockListeners]\n    );\n\n    useEffect(() => {\n        if (provider && chainId === 1) {\n            const onBlock = async (block: number) => {\n                for (const listener of Object.entries(onBlockListeners)) {\n                    await listener[1]?.(block);\n                }\n            };\n            provider.on(\"block\", onBlock);\n            return () => {\n                provider.off(\"block\", onBlock);\n            };\n        }\n    }, [provider, chainId, onBlockListeners]);\n\n    return (\n        <EthersContext.Provider\n            value={{\n                provider,\n                signer,\n                kovanProvider,\n                kovanSigner,\n                chainId,\n                address,\n                ensName,\n                tokens,\n                updateTokens,\n                loadingTokens,\n                approveToken,\n                getTokenAllowance,\n                getTotalSupply,\n                addOnBlockListener,\n                removeOnBlockListener\n            }}>\n            {children}\n        </EthersContext.Provider>\n    );\n};\n\ninterface JsonRPCRequest {\n    jsonrpc: string;\n    method: string;\n    params: any[];\n    id: number;\n}\n\ninterface JsonRPCResponse {\n    jsonrpc: string;\n    id: number;\n    result?: any;\n    error?: string;\n}\n\ninterface Callback<ResultType> {\n    (error: Error): void;\n    (error: null, val: ResultType): void;\n}\n\ndeclare global {\n    interface Window {\n        ethereum: {\n            enable(): void;\n            send(payload: any, callback: any): any;\n            send(payload: JsonRPCRequest, callback: Callback<JsonRPCResponse>): any;\n            selectedAddress: string;\n            chainId: string;\n            on(eventName: EventType, listener: Listener);\n            off(eventName: EventType, listener: Listener);\n        };\n    }\n}\n\nexport const EthersContextConsumer = EthersContext.Consumer;\n","import React, { useState } from \"react\";\nimport { useColorScheme } from \"react-native-appearance\";\n\nimport { DeviceType, getDeviceTypeAsync } from \"expo-device\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport useAsyncEffect from \"use-async-effect\";\n\nexport const GlobalContext = React.createContext({\n    load: async () => {},\n    clear: async () => {},\n    deviceType: undefined as DeviceType | undefined,\n    darkMode: false as boolean,\n    setDarkMode: async darkMode => {},\n    mnemonic: \"\",\n    setMnemonic: (mnemonic: string) => {}\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const GlobalContextProvider = ({ children }) => {\n    const colorScheme = useColorScheme();\n    const [deviceType, setDeviceType] = useState<DeviceType>();\n    const [darkMode, setDarkMode] = useState(colorScheme === \"dark\");\n    const [mnemonic, setMnemonic] = useState(\"\");\n    useAsyncEffect(async () => {\n        setDeviceType(await getDeviceTypeAsync());\n    }, []);\n    return (\n        <GlobalContext.Provider\n            value={{\n                load: async () => {\n                    const mode = await AsyncStorage.getItem(\"dark_mode\");\n                    setDarkMode(mode === \"true\");\n                    const mne = await AsyncStorage.getItem(\"mnemonic\");\n                    if (mne) {\n                        setMnemonic(mne);\n                    }\n                },\n                clear: async () => {\n                    setDarkMode(false);\n                    await AsyncStorage.removeItem(\"dark_mode\");\n                    await AsyncStorage.removeItem(\"mnemonic\");\n                },\n                deviceType,\n                darkMode,\n                setDarkMode: async (mode: boolean) => {\n                    await AsyncStorage.setItem(\"dark_mode\", String(mode));\n                    setDarkMode(mode);\n                },\n                mnemonic,\n                setMnemonic: async (mne: string) => {\n                    await AsyncStorage.setItem(\"mnemonic\", mne);\n                    setMnemonic(mne);\n                }\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const GlobalContextConsumer = GlobalContext.Consumer;\n","import React from \"react\";\n\nimport { EthersContextConsumer, EthersContextProvider } from \"./EthersContext\";\nimport { GlobalContextConsumer, GlobalContextProvider } from \"./GlobalContext\";\n\nexport const ContextProvider = ({ children }) => {\n    return (\n        <GlobalContextProvider>\n            <EthersContextProvider>{children}</EthersContextProvider>\n        </GlobalContextProvider>\n    );\n};\n\nexport const ContextConsumer = ({ children }) => {\n    return (\n        <GlobalContextConsumer>\n            {globalContext => (\n                <EthersContextConsumer>\n                    {ethersContext =>\n                        children({\n                            ...globalContext,\n                            ...ethersContext\n                        })\n                    }\n                </EthersContextConsumer>\n            )}\n        </GlobalContextConsumer>\n    );\n};\n","import { Dimensions } from \"react-native\";\n\nexport const SCREEN_WIDTH = Math.round(Dimensions.get(\"window\").width);\nexport const SCREEN_HEIGHT = Math.round(Dimensions.get(\"window\").height);\nexport const IS_HIGH_RESOLUTION = SCREEN_HEIGHT > 667;\nexport const HEADER_HEIGHT = 64;\nexport const HEADER_WIDTH = 980;\nexport const WEB_WIDTH = 540;\nexport const SUB_MENU_HEIGHT = 40;\n\nexport const Spacing = IS_HIGH_RESOLUTION\n    ? {\n          tiny: 8,\n          small: 16,\n          normal: 32,\n          large: 48,\n          huge: 64\n      }\n    : {\n          tiny: 6,\n          small: 12,\n          normal: 24,\n          large: 32,\n          huge: 48\n      };\n","export const Colors = {\n    common: {\n        white: \"#ffffff\",\n        transparent: \"#ffffff00\",\n        primary: \"#291C64\",\n        secondary: \"#9BECEE\",\n        green: \"#32CD32\",\n        red: \"#FF0000\",\n        twitter: \"#1da1f2\",\n        facebook: \"#3B5998\"\n    },\n    light: {\n        accent: \"#291C64\",\n        header: \"#ffffffb8\",\n        submenu: \"#ffffffb8\",\n        background: \"#f8f8f8\",\n        backgroundLight: \"#f0f0f0\",\n        border: \"#e5e5e5\",\n        borderDark: \"#cccccc\",\n        textDark: \"#1d1d1f\",\n        textMedium: \"#222222\",\n        textLight: \"#888888\",\n        disabled: \"#b4b4b4\",\n        shadow: \"#444444\",\n        placeholder: \"#b4b4b4\"\n    },\n    dark: {\n        accent: \"#9BECEE\",\n        header: \"#000000\",\n        submenu: \"#121212\",\n        background: \"#121212\",\n        backgroundLight: \"#1a1a1a\",\n        border: \"#ffffff33\",\n        borderDark: \"#666666\",\n        textDark: \"#d5d1cc\",\n        textMedium: \"#cccccc\",\n        textLight: \"#aaaaaa\",\n        disabled: \"#aaaaaa80\",\n        shadow: \"#03080c\",\n        placeholder: \"#666666\"\n    }\n};\n","import { useContext } from \"react\";\n\nimport { Colors } from \"../constants/colors\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useColors = () => {\n    const { darkMode } = useContext(GlobalContext);\n    return {\n        ...Colors[darkMode ? \"dark\" : \"light\"],\n        ...Colors.common\n    };\n};\n\nexport default useColors;\n","import React, { FunctionComponent } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\ninterface FlexViewProps extends ViewProps {\n    direction?: \"row\" | \"column\";\n}\n\nconst FlexView: FunctionComponent<FlexViewProps> = props => {\n    const flexDirection = props.direction || \"row\";\n    return <View {...props} style={[{ flexDirection }, props.style]} />;\n};\nexport default FlexView;\n","import React, { FC } from \"react\";\nimport { Text as NativeText, TextProps as NativeTextProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface TextProps extends NativeTextProps {\n    note?: boolean;\n    caption?: boolean;\n    dark?: boolean;\n    medium?: boolean;\n    light?: boolean;\n    disabled?: boolean;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\nconst Text: FC<TextProps> = props => {\n    const { textDark, textMedium, textLight, placeholder } = useColors();\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = props.disabled\n        ? placeholder\n        : props.medium\n        ? textMedium\n        : props.note || props.light\n        ? textLight\n        : textDark;\n    return (\n        <NativeText\n            {...props}\n            h1Style={[{ fontFamily }, props.h1Style]}\n            h2Style={[{ fontFamily }, props.h2Style]}\n            h3Style={[{ fontFamily }, props.h3Style]}\n            h4Style={[{ fontFamily }, props.h4Style]}\n            style={[\n                {\n                    fontFamily,\n                    fontSize: props.note ? 13 : props.caption ? 18 : 15,\n                    color\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Text;\n","import React, { useCallback, useContext } from \"react\";\nimport { View } from \"react-native\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport Switch from \"expo-dark-mode-switch\";\n\nimport { HEADER_HEIGHT, HEADER_WIDTH, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nconst WebHeader = () => {\n    const { header } = useColors();\n    return (\n        <View\n            // @ts-ignore\n            style={{\n                position: \"fixed\",\n                top: 0,\n                zIndex: 100,\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                paddingBottom: Spacing.small,\n                backgroundColor: header\n            }}>\n            <FlexView\n                style={{\n                    flex: 1,\n                    width: HEADER_WIDTH,\n                    alignSelf: \"center\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"flex-end\",\n                    paddingTop: Spacing.small,\n                    paddingHorizontal: Spacing.normal\n                }}>\n                <Title />\n                <Menu />\n            </FlexView>\n        </View>\n    );\n};\n\nexport const Title = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { textDark, white } = useColors();\n    const color = darkMode ? white : textDark;\n    return (\n        <View style={{ alignSelf: \"center\", alignItems: \"center\" }}>\n            <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\n                <Text style={{ fontSize: 28, color }}>SushiSwap</Text>\n            </Link>\n        </View>\n    );\n};\n\nconst Menu = () => {\n    return (\n        <FlexView\n            style={{\n                height: \"100%\",\n                alignItems: \"flex-end\"\n            }}>\n            <MenuItem title={\"Swap\"} path={\"/swap\"} />\n            <MenuItem title={\"Liquidity\"} path={\"/liquidity\"} />\n            {/*<MenuItem title={\"Farming\"} path={\"/farming\"} />*/}\n            {/*<MenuItem title={\"Stake/Unstake\"} path={\"/staking\"} />*/}\n            <Status />\n            <DarkModeSwitch />\n        </FlexView>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ marginLeft: Spacing.tiny, textDecoration: \"none\" }}>\n            <View>\n                <Text style={{ fontFamily: \"regular\", fontSize: 18, color: active ? textDark : textLight, padding: 4 }}>\n                    {title}\n                </Text>\n            </View>\n        </Link>\n    );\n};\n\nconst Status = () => {\n    const { textLight, green, borderDark } = useColors();\n    const { chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : \"Not connected\";\n    const color = connected ? green : textLight;\n    return (\n        <FlexView\n            style={{\n                height: 28,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                marginLeft: Spacing.small,\n                paddingHorizontal: Spacing.small,\n                borderRadius: 16,\n                borderWidth: 1,\n                borderColor: borderDark\n            }}>\n            <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginRight: 12 }} />\n            <Text style={{ fontSize: 15, color: textLight, marginRight: 2 }}>{title}</Text>\n        </FlexView>\n    );\n};\n\nconst DarkModeSwitch = () => {\n    const { darkMode, setDarkMode } = useContext(GlobalContext);\n    const onChange = useCallback(\n        async dark => {\n            await setDarkMode(dark);\n        },\n        [setDarkMode]\n    );\n    return (\n        <View style={{ marginLeft: Spacing.tiny, marginRight: -8, marginBottom: -3 }}>\n            <Switch\n                value={darkMode}\n                onChange={onChange}\n                style={{\n                    transform: [\n                        {\n                            scale: 0.75\n                        }\n                    ]\n                }}\n            />\n        </View>\n    );\n};\n\nexport default WebHeader;\n","import React, { FC } from \"react\";\nimport { Button as NativeButton, ButtonProps as NativeButtonProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nexport interface ButtonProps extends NativeButtonProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Button: FC<ButtonProps> = props => {\n    const { primary, textMedium, placeholder, backgroundLight } = useColors();\n    const type = props.type || \"solid\";\n    const size = props.size || \"normal\";\n    const height = props.size === \"small\" ? 36 : size === \"normal\" ? 45 : 54;\n    const fontSize = props.size === \"small\" ? 13 : size === \"normal\" ? 15 : 18;\n    const fontFamily = props.fontWeight || \"regular\";\n    return (\n        <NativeButton\n            {...props}\n            disabled={props.loading || props.disabled}\n            onPress={props.loading ? undefined : props.onPress}\n            type={type}\n            buttonStyle={[\n                {\n                    height,\n                    paddingHorizontal: Spacing.small,\n                    backgroundColor: \"transparent\"\n                },\n                props.buttonStyle\n            ]}\n            titleStyle={[\n                { fontSize, fontFamily, color: type === \"solid\" ? \"white\" : props.color || textMedium },\n                props.titleStyle\n            ]}\n            disabledTitleStyle={[{ fontSize, fontFamily, color: placeholder }, props.titleStyle]}\n            style={[{ backgroundColor: type === \"solid\" ? props.color || primary : \"transparent\" }, props.style]}\n            disabledStyle={[\n                { backgroundColor: type === \"solid\" ? backgroundLight : \"transparent\" },\n                props.disabledStyle\n            ]}\n        />\n    );\n};\nexport default Button;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={\"Approve \" + (props.token?.symbol || \"\")}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import { useCallback } from \"react\";\nimport { ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"./useColors\";\n\nconst useStyles = () => {\n    const { shadow: shadowColor, borderDark } = useColors();\n    const border = useCallback(\n        (attrs?: { color?: string; radius?: number }) => ({\n            borderColor: attrs?.color || borderDark,\n            borderWidth: 1,\n            borderRadius: attrs?.radius || 8,\n            padding: Spacing.small\n        }),\n        []\n    );\n    const shadow = () =>\n        ({\n            borderRadius: Spacing.tiny,\n            elevation: Spacing.small,\n            shadowColor,\n            shadowOffset: { width: 0, height: 2 },\n            shadowOpacity: 0.5,\n            shadowRadius: 4,\n            overflow: \"visible\"\n        } as ViewStyle);\n    return { border, shadow };\n};\n\nexport default useStyles;\n","import React, { FC, useCallback, useState } from \"react\";\nimport { ButtonGroup as NativeButtonGroup, ButtonGroupProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\n// tslint:disable-next-line:max-func-body-length\nconst ButtonGroup: FC<ButtonGroupProps> = props => {\n    const { borderDark } = useColors();\n    const { shadow } = useStyles();\n    const [index, setIndex] = useState<number>();\n    const onPress = useCallback(i => {\n        setIndex(i);\n        props.onPress(i);\n    }, []);\n    return (\n        <NativeButtonGroup\n            {...props}\n            selectedIndex={props.selectedIndex || index}\n            onPress={onPress}\n            textStyle={[\n                {\n                    fontFamily: \"regular\"\n                },\n                props.textStyle\n            ]}\n            buttonStyle={[\n                {\n                    borderTopLeftRadius: index === 0 ? Spacing.tiny : 0,\n                    borderBottomLeftRadius: index === 0 ? Spacing.tiny : 0,\n                    borderTopRightRadius:\n                        props.buttons.length > 0 && index === props.buttons.length - 1 ? Spacing.tiny : 0,\n                    borderBottomRightRadius:\n                        props.buttons.length > 0 && index === props.buttons.length - 1 ? Spacing.tiny : 0\n                },\n                props.buttonStyle\n            ]}\n            selectedButtonStyle={[\n                {\n                    backgroundColor: borderDark\n                },\n                props.selectedButtonStyle\n            ]}\n            containerStyle={[\n                {\n                    marginHorizontal: 0,\n                    marginVertical: 0,\n                    height: 56,\n                    ...shadow()\n                },\n                props.containerStyle\n            ]}\n        />\n    );\n};\n\nexport default ButtonGroup;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst CloseIcon = () => {\n    const { textLight } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={textLight} style={{ marginLeft: Spacing.tiny }} />;\n};\n\nexport default CloseIcon;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React, { FC } from \"react\";\nimport { Platform, SafeAreaView, ScrollView, ViewProps } from \"react-native\";\n\nexport type ContainerProps = ViewProps;\n\n// tslint:disable-next-line:max-func-body-length\nconst Container: FC<ContainerProps> = props => {\n    const Universal = Platform.select({\n        web: () => (\n            <ScrollView\n                contentContainerStyle={{ flex: 1 }}\n                style={[\n                    {\n                        flex: 1\n                    },\n                    props.style\n                ]}\n                {...props}\n            />\n        ),\n        default: () => (\n            <SafeAreaView style={{ flex: 1 }}>\n                <ScrollView {...props} />\n            </SafeAreaView>\n        )\n    });\n    return <Universal />;\n};\n\nexport default Container;\n","import React from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { Spacing, WEB_WIDTH } from \"../constants/dimension\";\n\nconst Content: React.FunctionComponent<ViewProps> = props => {\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    width: WEB_WIDTH,\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    paddingHorizontal: Spacing.normal,\n                    paddingVertical: Spacing.huge\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Content;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst FetchingButton = () => {\n    return <Button title={\"Fetching…\"} disabled={true} />;\n};\nexport default FetchingButton;\n","import React, { FC } from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={\"bold\"}\n                disabled={props.disabled}\n                style={{ flex: 1, fontSize: 18, paddingBottom: Spacing.tiny }}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    return <Button title={\"Insufficient \" + (symbol ? symbol : \"Balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React, { FC, ReactNode, useState } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport Heading from \"./Heading\";\n\nexport interface ExpandableProps {\n    title: string;\n    expanded: boolean;\n    onExpand?: () => void;\n    style?: ViewStyle;\n    children?: ReactNode;\n}\n\nconst Expandable: FC<ExpandableProps> = props => {\n    const [expanded, setExpanded] = useState(true);\n    const shouldExpand = props.expanded && expanded;\n    const buttonText = shouldExpand ? undefined : \"Change\";\n    const onPress = () => {\n        setExpanded(true);\n        props.onExpand?.();\n    };\n\n    return (\n        <View style={props.style}>\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\n        </View>\n    );\n};\n\nexport default Expandable;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport const ITEM_SEPARATOR_HEIGHT = 10;\n\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\n\nexport default ItemSeparator;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n}\n\nconst Selectable: FC<SelectableProps> = props => {\n    const { borderDark, accent } = useColors();\n    const { border } = useStyles();\n    const { background, backgroundLight } = useColors();\n    return (\n        <Hoverable>\n            {({ hovered }) => (\n                <TouchableHighlight onPress={props.onPress}>\n                    <View\n                        {...props}\n                        style={[\n                            {\n                                ...border({ color: props.selected ? accent : borderDark }),\n                                backgroundColor: hovered && !props.disabled ? backgroundLight : background\n                            },\n                            props.style\n                        ]}\n                    />\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nexport default Selectable;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport Token from \"../types/Token\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && props.token.symbol === \"WETH\" ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? \"grey\" : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import React, { FC, useCallback } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport { LPTokensState } from \"../hooks/useLPTokensState\";\nimport LPToken from \"../types/LPToken\";\nimport { formatBalance, pow10 } from \"../utils\";\nimport CheckBox from \"./CheckBox\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport Text from \"./Text\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenSymbol from \"./TokenSymbol\";\n\nexport type LPTokenSelectFilter = \"balance\" | \"amountDeposited\" | \"\";\n\nexport interface LPTokenSelectProps {\n    state: LPTokensState;\n    title: string;\n    emptyText: string;\n    showFilter?: boolean;\n    filter?: LPTokenSelectFilter;\n    onFilterChanged?: (filter: LPTokenSelectFilter) => void;\n    Item: FC<LPTokenItemProps>;\n    style?: ViewStyle;\n}\n\nexport interface LPTokenItemProps {\n    token: LPToken;\n    selected: boolean;\n    filter?: LPTokenSelectFilter;\n    onSelectToken: (token: LPToken) => void;\n}\n\nconst LPTokenSelect: FC<LPTokenSelectProps> = props => {\n    const onUnselectToken = () => props.state.setSelectedLPToken();\n    return (\n        <View style={props.style}>\n            <Expandable\n                title={props.title}\n                expanded={!props.state.selectedLPToken}\n                onExpand={() => props.state.setSelectedLPToken()}>\n                <LPTokenList state={props.state} filter={props.filter} emptyText={props.emptyText} Item={props.Item} />\n            </Expandable>\n            {props.state.selectedLPToken && (\n                <LPTokenItem token={props.state.selectedLPToken} selected={true} onSelectToken={onUnselectToken} />\n            )}\n        </View>\n    );\n};\n\nconst Filter = ({ filter, onFilterChanged }) => {\n    const handler = (f: string) => () => onFilterChanged(f);\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"flex-end\" }}>\n            <CheckBox checked={filter === \"balance\"} onPress={handler(\"balance\")} title={\"with balance\"} />\n            <CheckBox\n                checked={filter === \"amountDeposited\"}\n                onPress={handler(\"amountDeposited\")}\n                title={\"with deposit\"}\n            />\n            <CheckBox checked={!filter} onPress={handler(\"\")} title={\"all\"} />\n        </FlexView>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LPTokenList = ({\n    state,\n    emptyText,\n    filter,\n    Item\n}: {\n    state: LPTokensState;\n    emptyText: string;\n    filter?: LPTokenSelectFilter;\n    Item: FC<LPTokenItemProps>;\n}) => {\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <Item\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    filter={filter}\n                    onSelectToken={state.setSelectedLPToken}\n                />\n            );\n        },\n        [filter, state.setSelectedLPToken]\n    );\n    let data = state.lpTokens.sort((t1, t2) => {\n        return (t2.totalDeposited || ethers.constants.Zero)\n            .sub(t1.totalDeposited || ethers.constants.Zero)\n            .div(pow10(14))\n            .toNumber();\n    });\n    if (filter === \"amountDeposited\") {\n        data = data.filter(token => token.amountDeposited?.gt(0));\n    } else if (filter === \"balance\") {\n        data = data.filter(token => token.balance.gt(0));\n    }\n    return state.loading ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList text={emptyText} />\n    ) : (\n        <FlatList keyExtractor={item => JSON.stringify(item)} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = ({ text }: { text: string }) => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {text}\n            </Text>\n        </View>\n    );\n};\n\nexport const LPTokenItem: FC<LPTokenItemProps> = props => {\n    const { textMedium, textLight } = useColors();\n    const balance = formatBalance(props.token.balance, props.token.decimals, 8);\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable selected={props.selected} onPress={onPress} style={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\n                <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\n                <TokenSymbol token={props.token} />\n                <View style={{ flex: 1, marginLeft: Spacing.tiny }}>\n                    {/*<Text note={true} style={{ textAlign: \"right\", color: textLight }}>*/}\n                    {/*    My Balance*/}\n                    {/*</Text>*/}\n                    <Text caption={true} light={true} style={{ textAlign: \"right\", color: textMedium }}>\n                        {balance}\n                    </Text>\n                </View>\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default LPTokenSelect;\n","import React, { FC } from \"react\";\n\nimport useColors from \"../hooks/useColors\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const { textMedium, textLight, placeholder } = useColors();\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4 }}>\n            <Text fontWeight={\"bold\"} style={{ fontSize: 13, color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text style={{ fontSize: 13, color: props.disabled ? placeholder : props.text ? textMedium : textLight }}>\n                {props.disabled\n                    ? \"N/A\"\n                    : props.text\n                    ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n                    : \"Fetching…\"}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || borderStyle.borderColor;\n    return (\n        <View style={[props.clear ? { paddingHorizontal: Spacing.tiny } : borderStyle, props.style]}>\n            <Text\n                note={true}\n                style={{\n                    color\n                }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst SelectIcon = () => {\n    const { accent } = useColors();\n    return (\n        <Icon type={\"material-community\"} name={\"chevron-right\"} color={accent} style={{ marginLeft: Spacing.tiny }} />\n    );\n};\n\nexport default SelectIcon;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface Validation {\n    regexp: RegExp;\n    error: string;\n}\n\nexport interface InputProps extends NativeInputProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    allowed?: Validation[];\n    forbidden?: Validation[];\n    onError?: (error: string) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Input: FC<InputProps> = props => {\n    const { textDark, textMedium, textLight } = useColors();\n    const size = props.size || \"normal\";\n    const color = props.color || textDark;\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\n    const onChangeText = useCallback(\n        (text: string) => {\n            props.onChangeText?.(text);\n            props.onError?.(\"\");\n            const errors = [] as string[];\n            if (text !== \"\" && props.forbidden) {\n                props.forbidden.forEach(validation => {\n                    if (text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (text !== \"\" && props.allowed) {\n                props.allowed.forEach(validation => {\n                    if (!text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (errors.length > 0) {\n                props.onError?.(errors.join(\"\\n\"));\n            }\n        },\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\n    );\n    return (\n        <NativeInput\n            {...props}\n            inputStyle={[\n                { fontSize, fontFamily: \"regular\", paddingBottom: 4, color, marginTop: 0, minHeight: 32 },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\n                props.inputStyle\n            ]}\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\n            placeholderTextColor={props.placeholderTextColor || textLight}\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\n            onChangeText={onChangeText}\n        />\n    );\n};\n\nexport default Input;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    token?: Token;\n    amount: string;\n    onAmountChanged: (amount: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenInput: FC<TokenInputProps> = props => {\n    const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.token && props.onAmountChanged) {\n                try {\n                    parseBalance(text, props.token.decimals);\n                    props.onAmountChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAmountChanged(text);\n                    }\n                }\n            }\n        },\n        [props.token, props.onAmountChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.amount}\n                    onChangeText={onChangeText}\n                    placeholder={\"0.0\"}\n                    autoFocus={props.autoFocus || false}\n                    inputStyle={{ marginHorizontal: 4 }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 12,\n                        paddingBottom: 0\n                    }}\n                />\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\n                    <MaxButton\n                        token={props.token}\n                        maxButtonText={props.maxButtonText}\n                        updateAmount={props.onAmountChanged}\n                    />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(() => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (props.token.symbol === \"ETH\") {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount]);\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 10 : 20 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || \"MAX\"}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: 4 }}\n            />\n        </View>\n    );\n};\n\nexport default TokenInput;\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/LevxApp\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/sushiswap-lite\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/YS8xH7E\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React, { useCallback } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport Column from \"../Column\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst WebFooter = () => (\n    <Column noTopMargin={true}>\n        <View\n            style={{\n                width: \"100%\",\n                padding: Spacing.normal,\n                marginTop: Spacing.huge\n            }}>\n            <SocialIcons />\n            <Text note={true} style={{ marginTop: Spacing.tiny, textAlign: \"center\", width: \"100%\" }}>\n                2020 Built by <Link to={\"https://levx.io\"} text={\"LevX Team\"} />\n            </Text>\n        </View>\n    </Column>\n);\n\nconst Link = ({ to, text }) => {\n    const onPress = useCallback(() => {\n        window.open(to, \"_blank\");\n    }, []);\n    return (\n        <Text note={true} style={{ textDecorationLine: \"underline\" }} onPress={onPress}>\n            {text}\n        </Text>\n    );\n};\n\nexport default WebFooter;\n","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","import { Fraction as SDKFraction } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\n\nclass Fraction {\n    static BASE = ethers.BigNumber.from(10).pow(18);\n    static NAN = new Fraction(ethers.constants.Zero, ethers.constants.Zero);\n    static ZERO = new Fraction(ethers.constants.Zero, ethers.constants.One);\n    static convert(sdk: SDKFraction) {\n        return new Fraction(\n            ethers.BigNumber.from(sdk.numerator.toString()),\n            ethers.BigNumber.from(sdk.denominator.toString())\n        );\n    }\n    static from(numerator: ethers.BigNumberish, denominator: ethers.BigNumberish) {\n        return new Fraction(ethers.BigNumber.from(numerator), ethers.BigNumber.from(denominator));\n    }\n    static fromTokens(\n        numerator: ethers.BigNumberish,\n        denominator: ethers.BigNumberish,\n        numeratorToken: Token,\n        denominatorToken: Token\n    ) {\n        return new Fraction(\n            ethers.BigNumber.from(numerator).mul(ethers.BigNumber.from(10).pow(denominatorToken.decimals)),\n            ethers.BigNumber.from(denominator).mul(ethers.BigNumber.from(10).pow(numeratorToken.decimals))\n        );\n    }\n    static parse(value: string) {\n        return value === \"\"\n            ? Fraction.NAN\n            : isEmptyValue(value)\n            ? Fraction.ZERO\n            : new Fraction(parseBalance(value, 18), Fraction.BASE);\n    }\n\n    numerator: ethers.BigNumber;\n    denominator: ethers.BigNumber;\n\n    private constructor(numerator: ethers.BigNumber, denominator: ethers.BigNumber) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n    }\n\n    isZero() {\n        return !this.isNaN() && this.numerator.isZero();\n    }\n\n    isNaN() {\n        return this.denominator.isZero();\n    }\n\n    eq(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .eq(this.denominator);\n    }\n\n    gt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .gt(this.denominator);\n    }\n\n    lt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .lt(this.denominator);\n    }\n\n    toString(maxFractions = 8) {\n        if (this.isNaN()) return \"\";\n        if (this.isZero()) return \"0\";\n        let str = formatBalance(this.numerator.mul(Fraction.BASE).div(this.denominator), 18, maxFractions);\n        if (str.endsWith(\".0\")) str = str.substring(0, str.length - 2);\n        return str;\n    }\n\n    apply(value: ethers.BigNumberish) {\n        return this.denominator.isZero() ? ethers.constants.Zero : this.numerator.mul(value).div(this.denominator);\n    }\n}\n\nexport default Fraction;\n","import { useCallback } from \"react\";\n\nimport { ChainId, Currency, ETHER, Fetcher, Pair, Token, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\n\nconst DAI = new Token(ChainId.MAINNET, \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", 18, \"DAI\", \"Dai Stablecoin\");\nconst USDC = new Token(ChainId.MAINNET, \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\", 6, \"USDC\", \"USD//C\");\nconst USDT = new Token(ChainId.MAINNET, \"0xdAC17F958D2ee523a2206206994597C13D831ec7\", 6, \"USDT\", \"Tether USD\");\nconst SUSHI = new Token(ChainId.MAINNET, \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\", 18, \"SUSHI\", \"SushiToken\");\nconst YAM = new Token(ChainId.MAINNET, \"0x0e2298E3B3390e3b945a5456fBf59eCc3f55DA16\", 18, \"YAM\", \"YAM\");\nconst AMPL = new Token(ChainId.MAINNET, \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\", 9, \"AMPL\", \"Ampleforth\");\n\nconst BASES_TO_CHECK_TRADES_AGAINST = [WETH[ChainId.MAINNET], DAI, USDC, USDT, SUSHI, YAM];\nconst CUSTOM_BASES = {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n};\n\nfunction wrappedCurrency(currency: Currency | undefined): Token | undefined {\n    return currency === ETHER ? WETH[ChainId.MAINNET] : currency instanceof Token ? currency : undefined;\n}\n\n// Source: https://github.com/Uniswap/uniswap-interface/blob/master/src/hooks/Trades.ts\nconst useAllCommonPairs = () => {\n    const loadAllCommonPairs = useCallback(\n        // tslint:disable-next-line:max-func-body-length\n        async (currencyA?: Currency, currencyB?: Currency, provider?: ethers.providers.BaseProvider) => {\n            const bases: Token[] = BASES_TO_CHECK_TRADES_AGAINST;\n            const [tokenA, tokenB] = [wrappedCurrency(currencyA), wrappedCurrency(currencyB)];\n            const basePairs: [Token, Token][] = bases\n                .flatMap((base): [Token, Token][] => bases.map(otherBase => [base, otherBase]))\n                .filter(([t0, t1]) => t0.address !== t1.address);\n\n            const allPairCombinations =\n                tokenA && tokenB\n                    ? [\n                          // the direct pair\n                          [tokenA, tokenB],\n                          // token A against all bases\n                          ...bases.map((base): [Token, Token] => [tokenA, base]),\n                          // token B against all bases\n                          ...bases.map((base): [Token, Token] => [tokenB, base]),\n                          // each base against all bases\n                          ...basePairs\n                      ]\n                          .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n                          .filter(([t0, t1]) => t0.address !== t1.address)\n                          .filter(([a, b]) => {\n                              const customBases = CUSTOM_BASES;\n                              if (!customBases) return true;\n\n                              const customBasesA: Token[] | undefined = customBases[a.address];\n                              const customBasesB: Token[] | undefined = customBases[b.address];\n\n                              if (!customBasesA && !customBasesB) return true;\n\n                              if (customBasesA && !customBasesA.find(base => tokenB.equals(base))) return false;\n                              return !(customBasesB && !customBasesB.find(base => tokenA.equals(base)));\n                          })\n                    : [];\n\n            const pairs = await Promise.all(\n                allPairCombinations.map(async pair => {\n                    try {\n                        return await Fetcher.fetchPairData(pair[0], pair[1], provider);\n                    } catch (e) {\n                        return null;\n                    }\n                })\n            );\n            return pairs.filter(pair => pair !== null) as Pair[];\n        },\n        []\n    );\n\n    return { loadAllCommonPairs };\n};\n\nexport default useAllCommonPairs;\n","import { useCallback, useContext } from \"react\";\n\nimport { CurrencyAmount, Fetcher, Pair, Percent, Router, TokenAmount, Trade, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { MASTER_CHEF, MIGRATOR2, ORDER_BOOK, ROUTER, SETTLEMENT, SUSHI_BAR } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { convertToken, getContract, pow10 } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport useAllCommonPairs from \"./useAllCommonPairs\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSDK = () => {\n    const { getTotalSupply } = useContext(EthersContext);\n    const { loadAllCommonPairs } = useAllCommonPairs();\n    const allowedSlippage = new Percent(\"50\", \"10000\"); // 0.05%\n    const ttl = 60 * 20;\n\n    const getTrade = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider\n        ) => {\n            if (provider) {\n                const isETH = fromToken.symbol === \"ETH\";\n                const from = convertToken(fromToken);\n                const to = convertToken(toToken);\n                const pairs = await loadAllCommonPairs(from, to, provider);\n                const amount = isETH\n                    ? CurrencyAmount.ether(fromAmount.toString())\n                    : new TokenAmount(from, fromAmount.toString());\n                return Trade.bestTradeExactIn(pairs, amount, to, { maxHops: 3, maxNumResults: 1 })[0];\n            }\n        },\n        []\n    );\n\n    const swap = useCallback(async (trade: Trade, signer: ethers.Signer) => {\n        if (trade) {\n            const params = Router.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                allowedSlippage,\n                recipient: await signer.getAddress(),\n                ttl\n            });\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const gasLimit = await router.estimateGas[params.methodName](...params.args, {\n                value: params.value\n            });\n            const tx = await router.functions[params.methodName](...params.args, {\n                value: params.value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            await logTransaction(\n                tx,\n                \"UniswapV2Router02.\" + params.methodName + \"()\",\n                ...params.args.map(arg => arg.toString())\n            );\n            return {\n                trade,\n                tx\n            };\n        }\n    }, []);\n\n    const createOrder = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            amountIn: ethers.BigNumber,\n            amountOutMin: ethers.BigNumber,\n            signer: ethers.Signer,\n            kovanSigner: ethers.Signer\n        ) => {\n            const order = new Order(signer, fromToken, toToken, amountIn, amountOutMin, await signer.getAddress());\n            const args = await order.toArgs();\n\n            const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n            const gasLimit = await orderBook.estimateGas.createOrder(...args);\n            const tx = await orderBook.createOrder(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return await logTransaction(tx, \"OrderBook.createOrder()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const cancelOrder = useCallback(async (hash: string, signer: ethers.Signer, kovanSigner: ethers.Signer) => {\n        const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n        const callHash = await orderBook.cancelOrderCallHash(hash);\n        const signature = await signer.signMessage(ethers.utils.arrayify(callHash));\n        const { v, r, s } = ethers.utils.splitSignature(signature);\n        const args = [hash, v, r, s];\n\n        const gasLimit = await orderBook.estimateGas.cancelOrder(...args);\n        const tx = await orderBook.cancelOrder(...args, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return await logTransaction(tx, \"OrderBook.cancelOrder()\", ...args.map(arg => arg.toString()));\n    }, []);\n\n    const wrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.deposit({\n            value: amount\n        });\n        const tx = await weth.deposit({\n            value: amount,\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.deposit()\");\n    }, []);\n\n    const unwrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.withdraw(amount);\n        const tx = await weth.withdraw(amount, {\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.withdraw()\");\n    }, []);\n\n    const getPair = useCallback(async (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => {\n        const from = convertToken(fromToken);\n        const to = convertToken(toToken);\n        return await Fetcher.fetchPairData(from, to, provider);\n    }, []);\n\n    const addLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                fromAmount,\n                toAmount,\n                minAmount(fromAmount, allowedSlippage),\n                minAmount(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidity(...args);\n            const tx = await router.functions.addLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidityETH = useCallback(\n        async (\n            token: Token,\n            liquidity: ethers.BigNumber,\n            amount: ethers.BigNumber,\n            amountETH: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                liquidity,\n                minAmount(amount, allowedSlippage),\n                minAmount(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidityETH(...args);\n            const tx = await router.functions.removeLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            liquidity: ethers.BigNumber,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                liquidity,\n                minAmount(fromAmount, allowedSlippage),\n                minAmount(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidity(...args);\n            const tx = await router.functions.removeLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const addLiquidityETH = useCallback(\n        async (token: Token, amount: ethers.BigNumber, amountETH: ethers.BigNumber, signer: ethers.Signer) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                amount,\n                minAmount(amount, allowedSlippage),\n                minAmount(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidityETH(...args, {\n                value: amountETH\n            });\n            const tx = await router.functions.addLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100),\n                value: amountETH\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const getExpectedSushiRewardPerBlock = useCallback(async (token: LPToken, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const totalAllocPoint = await masterChef.totalAllocPoint();\n        const sushiPerBlock = await masterChef.sushiPerBlock();\n        const { allocPoint } = await masterChef.poolInfo(token.id);\n        return ethers.BigNumber.from(sushiPerBlock)\n            .mul(allocPoint)\n            .div(totalAllocPoint);\n    }, []);\n\n    const deposit = useCallback(async (lpTokenId: number, amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const gasLimit = await masterChef.estimateGas.deposit(lpTokenId, amount);\n        const tx = await masterChef.deposit(lpTokenId, amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"MasterChef.deposit()\", lpTokenId, amount.toString());\n    }, []);\n\n    const withdraw = useCallback(async (lpTokenId: number, amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const gasLimit = await masterChef.estimateGas.withdraw(lpTokenId, amount);\n        const tx = await masterChef.withdraw(lpTokenId, amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"MasterChef.withdraw()\", lpTokenId, amount.toString());\n    }, []);\n\n    const enterSushiBar = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const sushiBar = getContract(\"SushiBar\", SUSHI_BAR, signer);\n        const gasLimit = await sushiBar.estimateGas.enter(amount);\n        const tx = await sushiBar.enter(amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"SushiBar.enter()\", amount.toString());\n    }, []);\n\n    const leaveSushiBar = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const sushiBar = getContract(\"SushiBar\", SUSHI_BAR, signer);\n        const gasLimit = await sushiBar.estimateGas.leave(amount);\n        const tx = await sushiBar.leave(amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"SushiBar.leave()\", amount.toString());\n    }, []);\n\n    const migrate = useCallback(async (lpToken: LPToken, amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const migrator2 = getContract(\"Migrator2\", MIGRATOR2, signer);\n        const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n        const args = [\n            lpToken.tokenA.address,\n            lpToken.tokenB.address,\n            amount,\n            ethers.constants.Zero,\n            ethers.constants.Zero,\n            deadline\n        ];\n        const gasLimit = await migrator2.estimateGas.migrate(...args);\n        const tx = await migrator2.migrate(...args, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"Migrator2.migrate()\", ...args.map(arg => arg.toString()));\n    }, []);\n\n    const calculateSwapFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(3).div(1000);\n    };\n\n    const calculateLimitOrderFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(2).div(1000);\n    };\n\n    const calculateLimitOrderReturn = (\n        fromToken: Token,\n        toToken: Token,\n        fromAmount: ethers.BigNumber,\n        price: string\n    ) => {\n        return Fraction.parse(price).apply(\n            fromAmount\n                .sub(calculateLimitOrderFee(fromAmount))\n                .mul(pow10(toToken.decimals))\n                .div(pow10(fromToken.decimals))\n        );\n    };\n\n    const calculateAmountOfLPTokenMinted = async (pair: Pair, fromAmount: TokenAmount, toAmount: TokenAmount) => {\n        const totalSupply = await getTotalSupply(pair.liquidityToken.address);\n        if (totalSupply) {\n            return pair.getLiquidityMinted(\n                new TokenAmount(pair.liquidityToken, totalSupply.toString()),\n                fromAmount,\n                toAmount\n            );\n        }\n    };\n\n    return {\n        allowedSlippage,\n        getTrade,\n        swap,\n        createOrder,\n        cancelOrder,\n        wrapETH,\n        unwrapETH,\n        getPair,\n        addLiquidity,\n        addLiquidityETH,\n        removeLiquidity,\n        removeLiquidityETH,\n        getExpectedSushiRewardPerBlock,\n        deposit,\n        withdraw,\n        enterSushiBar,\n        leaveSushiBar,\n        migrate,\n        calculateSwapFee,\n        calculateLimitOrderFee,\n        calculateLimitOrderReturn,\n        calculateAmountOfLPTokenMinted\n    };\n};\n\nconst minAmount = (amount: ethers.BigNumber, percent: Percent) => {\n    return amount.sub(amount.mul(percent.numerator.toString()).div(percent.denominator.toString()));\n};\n\nexport type OrderStatus = \"Open\" | \"Expired\" | \"Filled\";\n\nexport class Order {\n    maker: ethers.Signer;\n    fromToken: Token;\n    toToken: Token;\n    amountIn: ethers.BigNumber;\n    amountOutMin: ethers.BigNumber;\n    recipient: string;\n    deadline: ethers.BigNumber;\n    filledAmountIn?: ethers.BigNumber;\n\n    constructor(\n        maker: ethers.Signer,\n        fromToken: Token,\n        toToken: Token,\n        amountIn: ethers.BigNumber,\n        amountOutMin: ethers.BigNumber,\n        recipient: string,\n        deadline = ethers.BigNumber.from(Math.floor(Date.now() / 1000 + 24 * 3600))\n    ) {\n        this.maker = maker;\n        this.fromToken = fromToken;\n        this.toToken = toToken;\n        this.amountIn = amountIn;\n        this.amountOutMin = amountOutMin;\n        this.recipient = recipient;\n        this.deadline = deadline;\n    }\n\n    status(): OrderStatus {\n        return this.filledAmountIn?.eq(this.amountIn)\n            ? \"Filled\"\n            : this.deadline.toNumber() * 1000 < Date.now()\n            ? \"Expired\"\n            : \"Open\";\n    }\n\n    async hash() {\n        const settlement = await getContract(\"Settlement\", SETTLEMENT, this.maker);\n        return await settlement.hash(\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline\n        );\n    }\n\n    async sign() {\n        const hash = await this.hash();\n        const signature = await this.maker.signMessage(ethers.utils.arrayify(hash));\n        return ethers.utils.splitSignature(signature);\n    }\n\n    async toArgs() {\n        const { v, r, s } = await this.sign();\n        return [\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline,\n            v,\n            r,\n            s\n        ];\n    }\n}\n\nexport default useSDK;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { parseBalance } from \"../utils\";\nimport useSDK from \"./useSDK\";\n\nexport interface TokenPairState {\n    fromSymbol: string;\n    setFromSymbol: (symbol: string) => void;\n    toSymbol: string;\n    setToSymbol: (symbol: string) => void;\n    fromToken?: Token;\n    toToken?: Token;\n    fromAmount: string;\n    setFromAmount: (amount: string) => void;\n    toAmount: string;\n    setToAmount: (amount: string) => void;\n    fromTokenAllowed: boolean;\n    setFromTokenAllowed: (allowed: boolean) => void;\n    toTokenAllowed: boolean;\n    setToTokenAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onWrap: () => Promise<void>;\n    wrapping: boolean;\n    onUnwrap: () => Promise<void>;\n    unwrapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useTokenPairState: () => TokenPairState = () => {\n    const { provider, signer, address, tokens, updateTokens, getTokenAllowance } = useContext(EthersContext);\n    const { wrapETH, unwrapETH } = useSDK();\n    const [fromSymbol, setFromSymbol] = useState(\"\");\n    const [toSymbol, setToSymbol] = useState(\"\");\n    const [fromAmount, setFromAmount] = useState(\"\");\n    const [toAmount, setToAmount] = useState(\"\");\n    const [fromTokenAllowed, setFromTokenAllowed] = useState(false);\n    const [toTokenAllowed, setToTokenAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [wrapping, setWrapping] = useState(false);\n    const [unwrapping, setUnwrapping] = useState(false);\n\n    const fromToken = tokens.find(token => token.symbol === fromSymbol);\n    const toToken = tokens.find(token => token.symbol === toSymbol);\n\n    useEffect(() => {\n        if (fromSymbol === \"\") {\n            setToSymbol(\"\");\n        }\n        setFromAmount(\"\");\n        setToAmount(\"\");\n    }, [fromSymbol, toSymbol]);\n\n    useEffect(() => {\n        setFromSymbol(\"\");\n    }, [address]);\n\n    useAsyncEffect(async () => {\n        if (fromToken && toToken && provider && signer) {\n            setFromTokenAllowed(false);\n            setToTokenAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                if (fromToken.symbol !== \"ETH\") {\n                    const fromAllowance = await getTokenAllowance(fromToken.address, ROUTER);\n                    setFromTokenAllowed(ethers.BigNumber.from(fromAllowance).gte(minAllowance));\n                }\n                if (toToken.symbol !== \"ETH\") {\n                    const toAllowance = await getTokenAllowance(toToken.address, ROUTER);\n                    setToTokenAllowed(ethers.BigNumber.from(toAllowance).gte(minAllowance));\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [fromToken, toToken, provider, signer]);\n\n    const onWrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setWrapping(true);\n            try {\n                const tx = await wrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setWrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    const onUnwrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setUnwrapping(true);\n            try {\n                const tx = await unwrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setUnwrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    return {\n        fromSymbol,\n        setFromSymbol,\n        toSymbol,\n        setToSymbol,\n        fromToken,\n        toToken,\n        fromAmount,\n        setFromAmount,\n        toAmount,\n        setToAmount,\n        fromTokenAllowed,\n        setFromTokenAllowed,\n        toTokenAllowed,\n        setToTokenAllowed,\n        loading,\n        onWrap,\n        wrapping,\n        onUnwrap,\n        unwrapping\n    };\n};\n\nexport default useTokenPairState;\n","import { useContext, useState } from \"react\";\n\nimport { Pair } from \"@sushiswap/sdk\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport interface LiquidityState extends TokenPairState {\n    pair?: Pair;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useLiquidityState: () => LiquidityState = () => {\n    const state = useTokenPairState();\n    const { provider } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const [pair, setPair] = useState<Pair>();\n    const { getPair } = useSDK();\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n                setPair(undefined);\n            }\n            if (state.fromToken && state.toToken && provider) {\n                try {\n                    setPair(await getPair(state.fromToken, state.toToken, provider));\n                } catch (e) {\n                } finally {\n                    setLoading(false);\n                }\n            } else {\n                setLoading(false);\n            }\n        },\n        () => \"getPair(\" + state.fromSymbol + \",\" + state.toSymbol + \")\",\n        [state.fromSymbol, state.toSymbol, provider],\n        0\n    );\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        pair\n    };\n};\n\nexport default useLiquidityState;\n","import { useContext, useEffect, useState } from \"react\";\n\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport { fetchMyLPTokens, fetchMyUniswapLPTokens, fetchPools } from \"../utils/fetch-utils\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useLiquidityState, { LiquidityState } from \"./useLiquidityState\";\n\nexport interface LPTokensState extends LiquidityState {\n    updateLPTokens: () => Promise<void>;\n    lastTimeRefreshed: number;\n    updateLastTimeRefreshed: () => void;\n    lpTokens: LPToken[];\n    selectedLPToken?: LPToken;\n    setSelectedLPToken: (token?: LPToken) => void;\n    selectedLPTokenAllowed: boolean;\n    setSelectedLPTokenAllowed: (allowed: boolean) => void;\n    amount: string;\n    setAmount: (amount: string) => void;\n}\n\ntype Mode = \"pools\" | \"my-lp-tokens\" | \"my-uniswap-lp-tokens\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useLPTokensState: (mode: Mode) => LPTokensState = mode => {\n    const state = useLiquidityState();\n    const { provider, signer, address, tokens } = useContext(EthersContext);\n    const [lastTimeRefreshed, setLastTimeRefreshed] = useState(0);\n    const [loading, setLoading] = useState(true);\n    const [lpTokens, setLPTokens] = useState<LPToken[]>([]);\n    const [selectedLPToken, setSelectedLPToken] = useState<LPToken>();\n    const [selectedLPTokenAllowed, setSelectedLPTokenAllowed] = useState(false);\n    const [amount, setAmount] = useState(\"\");\n\n    const updateLPTokens = async () => {\n        try {\n            const data = await (mode === \"pools\"\n                ? fetchPools(provider, signer)\n                : mode === \"my-lp-tokens\"\n                ? fetchMyLPTokens(tokens, provider, signer)\n                : fetchMyUniswapLPTokens(tokens, provider, signer));\n            if (data) {\n                setLPTokens(data);\n            }\n        } finally {\n            setLoading(false);\n        }\n    };\n\n    useEffect(() => {\n        if (!selectedLPToken) {\n            setAmount(\"\");\n        }\n    }, [selectedLPToken]);\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (address && (mode === \"pools\" || tokens.length > 0)) {\n                if (!block) {\n                    setLoading(true);\n                }\n                await updateLPTokens();\n            }\n        },\n        () => \"updateLPTokens()\",\n        [tokens.length, address, lastTimeRefreshed],\n        0\n    );\n\n    return {\n        ...state,\n        updateLPTokens,\n        loading: state.loading || loading,\n        lastTimeRefreshed,\n        updateLastTimeRefreshed: () => {\n            setLastTimeRefreshed(Date.now());\n        },\n        lpTokens,\n        selectedLPToken,\n        setSelectedLPToken,\n        selectedLPTokenAllowed,\n        setSelectedLPTokenAllowed,\n        amount,\n        setAmount\n    };\n};\n\nexport default useLPTokensState;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { LPTokenSelectFilter } from \"../components/LPTokenSelect\";\nimport { MASTER_CHEF } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { parseBalance } from \"../utils\";\nimport useLPTokensState, { LPTokensState } from \"./useLPTokensState\";\nimport useSDK from \"./useSDK\";\n\nexport interface FarmingState extends LPTokensState {\n    action?: Action;\n    setAction: (action?: Action) => void;\n    expectedSushiRewardPerBlock?: ethers.BigNumber;\n    filteredBy: LPTokenSelectFilter;\n    setFilteredBy: (filter: LPTokenSelectFilter) => void;\n    onDeposit: () => Promise<void>;\n    depositing: boolean;\n    onWithdraw: () => Promise<void>;\n    withdrawing: boolean;\n}\n\nexport type Action = \"deposit\" | \"withdraw\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useFarmingState: () => FarmingState = () => {\n    const state = useLPTokensState(\"pools\");\n    const { provider, signer, getTokenAllowance } = useContext(EthersContext);\n    const { getExpectedSushiRewardPerBlock, deposit, withdraw } = useSDK();\n    const [filteredBy, setFilteredBy] = useState(\"\" as LPTokenSelectFilter);\n    const [action, setAction] = useState<Action>();\n    const [loading, setLoading] = useState(false);\n    const [expectedSushiRewardPerBlock, setExpectedSushiRewardPerBlock] = useState<ethers.BigNumber>();\n    const [depositing, setDepositing] = useState(false);\n    const [withdrawing, setWithdrawing] = useState(false);\n\n    useEffect(() => {\n        setFilteredBy(\"\");\n        setAction(undefined);\n        setLoading(false);\n        setDepositing(false);\n        setWithdrawing(false);\n        setExpectedSushiRewardPerBlock(undefined);\n    }, [state.selectedLPToken]);\n\n    useAsyncEffect(async () => {\n        if (signer && state.selectedLPToken) {\n            setLoading(true);\n            try {\n                setExpectedSushiRewardPerBlock(await getExpectedSushiRewardPerBlock(state.selectedLPToken, signer));\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [signer, state.selectedLPToken]);\n\n    useAsyncEffect(async () => {\n        if (provider && signer && state.selectedLPToken) {\n            setLoading(true);\n            state.setSelectedLPTokenAllowed(false);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const allowance = await getTokenAllowance(state.selectedLPToken.address, MASTER_CHEF);\n                state.setSelectedLPTokenAllowed(ethers.BigNumber.from(allowance).gte(minAllowance));\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [provider, signer, state.selectedLPToken]);\n\n    useEffect(() => {\n        state.setAmount(\"\");\n    }, [action]);\n\n    const onDeposit = useCallback(async () => {\n        if (state.selectedLPToken?.id && state.amount && signer) {\n            setDepositing(true);\n            try {\n                const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\n                const tx = await deposit(state.selectedLPToken.id, amount, signer);\n                await tx.wait();\n                state.setSelectedLPToken(undefined);\n                await state.updateLastTimeRefreshed();\n            } finally {\n                setDepositing(false);\n            }\n        }\n    }, [state.selectedLPToken, state.amount, signer]);\n\n    const onWithdraw = useCallback(async () => {\n        if (state.selectedLPToken?.id && state.amount && signer) {\n            setWithdrawing(true);\n            try {\n                const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\n                const tx = await withdraw(state.selectedLPToken.id, amount, signer);\n                await tx.wait();\n                state.setSelectedLPToken(undefined);\n                await state.updateLastTimeRefreshed();\n            } finally {\n                setWithdrawing(false);\n            }\n        }\n    }, [state.selectedLPToken, state.amount, signer]);\n\n    return {\n        ...state,\n        loading: state.loading || loading,\n        filteredBy,\n        setFilteredBy,\n        action,\n        setAction,\n        expectedSushiRewardPerBlock,\n        onDeposit,\n        depositing,\n        onWithdraw,\n        withdrawing\n    };\n};\n\nexport default useFarmingState;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { StatusBar } from \"expo-status-bar\";\n\nimport { HEADER_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\n\nconst AppHeader = () => {\n    const { background } = useColors();\n    return (\n        <View\n            style={{\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                backgroundColor: background\n            }}>\n            <StatusBar translucent={false} backgroundColor={background} />\n        </View>\n    );\n};\n\nexport default AppHeader;\n","import React, { useCallback, useContext } from \"react\";\nimport { Image, View } from \"react-native\";\n\nimport * as Linking from \"expo-linking\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport Button from \"../Button\";\n\nconst ConnectWallet = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const onPress = useCallback(async () => {\n        if (window.ethereum) {\n            await window.ethereum.enable();\n        } else {\n            await Linking.openURL(\"https://metamask.io/\");\n        }\n    }, [window.ethereum]);\n    const title = window.ethereum ? \"Connect\" : \"Install MetaMask\";\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <Image\n                source={\n                    darkMode ? require(\"../../../assets/metamask-dark.png\") : require(\"../../../assets/metamask.png\")\n                }\n                style={{ width: 223, height: 183, marginBottom: Spacing.huge }}\n            />\n            <Button size={\"large\"} color={\"#e2761b\"} onPress={onPress} title={title} containerStyle={{ width: 440 }} />\n        </View>\n    );\n};\nexport default ConnectWallet;\n","import React from \"react\";\nimport { Image, View } from \"react-native\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\nimport { Title } from \"./WebHeader\";\n\nconst MobileNotSupported = () => {\n    return (\n        <View\n            style={{\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                width: \"100%\",\n                minHeight: \"100%\",\n                padding: Spacing.normal\n            }}>\n            <Image\n                source={require(\"../../../assets/sushiswap.jpg\")}\n                style={{ width: 192, height: 192, marginBottom: Spacing.normal }}\n            />\n            <Title />\n            <Text style={{ marginTop: Spacing.normal }}>Mobile devices not supported yet.</Text>\n            <SocialIcons />\n        </View>\n    );\n};\n\nexport default MobileNotSupported;\n","import React, { useContext } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { AppLoading } from \"expo\";\nimport { DeviceType } from \"expo-device\";\n\nimport AppHeader from \"../components/app/AppHeader\";\nimport Text from \"../components/Text\";\nimport ConnectToWallet from \"../components/web/ConnectToWallet\";\nimport MobileNotSupported from \"../components/web/MobileNotSupported\";\nimport { HEADER_HEIGHT } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst Screen = props => {\n    const { deviceType } = useContext(GlobalContext);\n    const { address, chainId } = useContext(EthersContext);\n    if (!deviceType) {\n        return <AppLoading />;\n    }\n    if (Platform.OS === \"web\") {\n        if (deviceType === DeviceType.PHONE) return <MobileNotSupported />;\n        if (!address) return <ConnectToWallet />;\n        if (chainId !== 1)\n            return (\n                <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n                    <Text light={true} style={{ textAlign: \"center\" }}>\n                        {\"Please switch network to\\n'Ethereum Mainnet'\"}\n                    </Text>\n                </View>\n            );\n        return (\n            <View\n                {...props}\n                style={[{ position: \"absolute\", top: HEADER_HEIGHT, right: 0, bottom: 0, left: 0 }, props.style]}\n            />\n        );\n    } else {\n        return (\n            <View style={{ width: \"100%\", height: \"100%\" }}>\n                <AppHeader />\n                <View {...props} style={[{ flex: 1 }, props.style]} />\n            </View>\n        );\n    }\n};\n\nexport default Screen;\n","import React, { FC, useCallback, useState } from \"react\";\nimport { Image, Platform, TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Button from \"../components/Button\";\nimport ButtonGroup from \"../components/ButtonGroup\";\nimport CloseIcon from \"../components/CloseIcon\";\nimport Column from \"../components/Column\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport FlexView from \"../components/FlexView\";\nimport Heading from \"../components/Heading\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport LPTokenSelect, { LPTokenItemProps } from \"../components/LPTokenSelect\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport SelectIcon from \"../components/SelectIcon\";\nimport Text from \"../components/Text\";\nimport TokenInput from \"../components/TokenInput\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { MASTER_CHEF } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useFarmingState, { Action, FarmingState } from \"../hooks/useFarmingState\";\nimport useLinker from \"../hooks/useLinker\";\nimport LPToken from \"../types/LPToken\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { formatBalance, isEmptyValue, parseBalance, pow10 } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst Actions = [\"deposit\", \"withdraw\"];\n\nconst FarmingScreen = () => {\n    return (\n        <Screen>\n            <Container>\n                <Content>\n                    <Farming />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst Farming = () => {\n    const state = useFarmingState();\n    const emptyText =\n        state.filteredBy === \"amountDeposited\"\n            ? \"You don't have any pool with deposit.\"\n            : state.filteredBy === \"balance\"\n            ? \"You don't have any pool with balance.\"\n            : \"Temporarily unable to load pools.\";\n    return (\n        <>\n            <Column>\n                <Text h4={true} style={{ textAlign: \"center\", marginBottom: Spacing.normal }}>\n                    🌾 Farming\n                </Text>\n            </Column>\n            <LPTokenSelect\n                state={state}\n                title={\"1. Select a pool for yield farming:\"}\n                emptyText={emptyText}\n                showFilter={!state.selectedLPToken}\n                filter={state.filteredBy}\n                onFilterChanged={state.setFilteredBy}\n                Item={TokenItem}\n            />\n            <ActionSelect state={state} />\n            <Deposit state={state} />\n            <Withdraw state={state} />\n        </>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenItem: FC<LPTokenItemProps> = props => {\n    const { background, backgroundLight, textMedium } = useColors();\n    const amount =\n        (props.filter === \"balance\"\n            ? props.token.balance\n            : props.filter === \"amountDeposited\"\n            ? props.token.amountDeposited\n            : props.token.totalDeposited) || \"0\";\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    const field =\n        props.filter === \"amountDeposited\" ? \"My Deposit\" : props.filter === \"balance\" ? \"My Balance\" : \"Total Deposit\";\n    return (\n        <Hoverable>\n            {({ hovered }) => (\n                <TouchableHighlight onPress={onPress}>\n                    <View style={{ backgroundColor: hovered ? backgroundLight : background }}>\n                        <FlexView style={{ alignItems: \"center\", margin: Spacing.small }}>\n                            <View>\n                                <LogoSymbol token={props.token.tokenA} />\n                                <LogoSymbol token={props.token.tokenB} />\n                            </View>\n                            <View style={{ flex: 1 }}>\n                                <Text style={{ textAlign: \"right\", fontSize: 15 }}>{field}</Text>\n                                <Text light={true} style={{ textAlign: \"right\", fontSize: 22, color: textMedium }}>\n                                    {formatBalance(amount, props.token.decimals, 8)}\n                                </Text>\n                            </View>\n                            {props.selected ? <CloseIcon /> : <SelectIcon />}\n                        </FlexView>\n                    </View>\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nconst LogoSymbol = ({ token }) => {\n    const { textMedium } = useColors();\n    const [isEmpty, setIsEmpty] = useState(false);\n    const source = !token.logoURI || isEmpty ? require(\"../../assets/empty-token.png\") : { uri: token.logoURI };\n    return (\n        <FlexView style={{ alignItems: \"center\", marginBottom: Spacing.tiny }}>\n            <Image\n                source={source}\n                onError={() => setIsEmpty(true)}\n                style={{ width: 24, height: 24, backgroundColor: \"white\", borderRadius: 12 }}\n            />\n            <Text light={true} style={{ fontSize: 22, color: textMedium, marginLeft: Spacing.small }}>\n                {token.symbol.replace(/\\+/g, \"+\\n\")}\n            </Text>\n        </FlexView>\n    );\n};\n\nconst ActionSelect = ({ state }: { state: FarmingState }) => {\n    if (!state.selectedLPToken) {\n        return <Column noTopMargin={true} />;\n    }\n    const index = state.action ? Actions.indexOf(state.action) : null;\n    const onPress = useCallback((i: number) => {\n        state.setAction(Actions[i] as Action);\n    }, []);\n    const balance = formatBalance(state.selectedLPToken!.balance, state.selectedLPToken!.decimals);\n    const deposit = formatBalance(state.selectedLPToken.amountDeposited || \"0\", state.selectedLPToken!.decimals);\n    return (\n        <Column>\n            <Heading text={\"2. Do you want to DEPOSIT or WITHDRAW?\"} />\n            <View style={{ marginHorizontal: Spacing.small, marginBottom: Spacing.normal }}>\n                <Meta label={\"My Balance\"} text={balance} />\n                <Meta label={\"My Deposit\"} text={deposit} />\n            </View>\n            <ButtonGroup\n                selectedIndex={index}\n                onPress={onPress}\n                buttons={[{ element: DepositText }, { element: WithdrawText }]}\n                containerStyle={{ marginHorizontal: Spacing.small }}\n            />\n        </Column>\n    );\n};\n\nconst DepositText = () => {\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <Text style={{ color: \"black\" }}>Deposit</Text>\n            <Icon\n                type={\"material-community\"}\n                name={\"chevron-right\"}\n                color={\"black\"}\n                style={{ marginLeft: Spacing.tiny, marginTop: 2 }}\n            />\n        </FlexView>\n    );\n};\n\nconst WithdrawText = () => {\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <Text style={{ color: \"black\" }}>Withdraw</Text>\n            <Icon\n                type={\"material-community\"}\n                name={\"chevron-right\"}\n                color={\"black\"}\n                style={{ marginLeft: Spacing.tiny, marginTop: 2 }}\n            />\n        </FlexView>\n    );\n};\n\nconst Deposit = ({ state }: { state: FarmingState }) => {\n    if (!state.selectedLPToken || state.action !== \"deposit\") {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <Column>\n            <AddLiquidityNotice state={state} />\n            <TokenInput\n                title={\"3. Amount of tokens to DEPOSIT:\"}\n                token={state.selectedLPToken}\n                hidden={state.selectedLPToken.balance.isZero()}\n                amount={state.amount}\n                onAmountChanged={state.setAmount}\n            />\n            <DepositInfo state={state} />\n            <DepositControls state={state} />\n        </Column>\n    );\n};\n\nconst AddLiquidityNotice = ({ state }: { state: FarmingState }) => {\n    const { green } = useColors();\n    if (!state.selectedLPToken!.balance.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <>\n            <View style={{ marginHorizontal: Spacing.small }}>\n                <Notice\n                    color={green}\n                    text={\n                        \"You need some \" +\n                        state.selectedLPToken!.symbol +\n                        \" token to start farming. Add liquidity to get the LP token.\"\n                    }\n                />\n            </View>\n            <AddLiquidityButton />\n        </>\n    );\n};\n\nconst DepositInfo = ({ state }: { state: FarmingState }) => {\n    if (state.selectedLPToken!.balance.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    const balance = formatBalance(state.selectedLPToken!.balance, state.selectedLPToken!.decimals);\n    const sushiReward =\n        state.expectedSushiRewardPerBlock && state.amount\n            ? formatBalance(state.expectedSushiRewardPerBlock.mul(parseBalance(state.amount, 18)).div(pow10(18)), 18)\n            : undefined;\n    return (\n        <Column noTopMargin={true}>\n            <Meta label={\"My Balance\"} text={balance} />\n            {!isEmptyValue(state.amount) && <Meta label={\"SUSHI Reward per Block\"} text={sushiReward} />}\n        </Column>\n    );\n};\n\nconst DepositControls = ({ state }: { state: FarmingState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.selectedLPToken]);\n    if (state.selectedLPToken!.balance.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    const approveRequired = !state.selectedLPTokenAllowed;\n    const disabled = approveRequired || isEmptyValue(state.amount);\n    return (\n        <Column>\n            {parseBalance(state.amount, state.selectedLPToken!.decimals).gt(state.selectedLPToken!.balance) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken!.symbol} />\n            ) : state.loading ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.selectedLPToken!}\n                        spender={MASTER_CHEF}\n                        onSuccess={() => state.setSelectedLPTokenAllowed(true)}\n                        onError={setError}\n                        hidden={isEmptyValue(state.amount) || !approveRequired}\n                    />\n                    <DepositButton state={state} onError={setError} disabled={disabled} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </Column>\n    );\n};\n\nconst AddLiquidityButton = () => {\n    const { green } = useColors();\n    const onPress = useLinker(\"/liquidity\", \"Liquidity\");\n    return (\n        <Button\n            color={green}\n            title={\"Add Liquidity\"}\n            containerStyle={{ marginTop: Spacing.normal }}\n            onPress={onPress}\n        />\n    );\n};\n\nconst DepositButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: FarmingState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onDeposit().catch(onError);\n    }, [state.onDeposit, onError]);\n    return <Button title={\"Deposit\"} disabled={disabled} loading={state.depositing} onPress={onPress} />;\n};\n\nconst Withdraw = ({ state }: { state: FarmingState }) => {\n    if (!state.selectedLPToken || state.action !== \"withdraw\") {\n        return <Column noTopMargin={true} />;\n    }\n    const token: LPToken = {\n        ...state.selectedLPToken,\n        balance: state.selectedLPToken.amountDeposited || ethers.constants.Zero\n    };\n    return (\n        <Column>\n            <NoLPTokenNotice state={state} />\n            <TokenInput\n                title={\"3. Amount of tokens to WITHDRAW:\"}\n                token={token}\n                hidden={state.loading || state.selectedLPToken.amountDeposited?.isZero() || false}\n                amount={state.amount}\n                onAmountChanged={state.setAmount}\n            />\n            <WithdrawInfo state={state} />\n            <WithdrawControls state={state} />\n        </Column>\n    );\n};\n\nconst NoLPTokenNotice = ({ state }: { state: FarmingState }) => {\n    if (state.loading || !state.selectedLPToken || !state.selectedLPToken.amountDeposited?.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <Column noTopMargin={true}>\n            <View style={{ marginHorizontal: Spacing.small }}>\n                <Notice\n                    text={\"You don't have any \" + state.selectedLPToken!.symbol + \" token deposited. Deposit it first.\"}\n                />\n            </View>\n        </Column>\n    );\n};\n\nconst WithdrawInfo = ({ state }: { state: FarmingState }) => {\n    if (\n        state.loading ||\n        !state.selectedLPToken ||\n        !state.selectedLPToken.amountDeposited ||\n        state.selectedLPToken.amountDeposited?.isZero() ||\n        !state.selectedLPToken.pendingSushi\n    ) {\n        return <Column noTopMargin={true} />;\n    }\n    const deposit = formatBalance(state.selectedLPToken.amountDeposited, state.selectedLPToken!.decimals);\n    const pendingSushi = formatBalance(\n        state.selectedLPToken.pendingSushi || ethers.constants.Zero,\n        state.selectedLPToken!.decimals\n    );\n    return (\n        <Column noTopMargin={true}>\n            <Meta label={\"My Deposit\"} text={deposit} />\n            <Meta label={\"Pending Sushi Reward\"} text={pendingSushi} />\n            <View style={{ marginTop: Spacing.normal, marginHorizontal: Spacing.small }}>\n                <Notice text={\"All pending sushi reward will be transferred to you if you withdraw.\"} />\n            </View>\n        </Column>\n    );\n};\n\nconst WithdrawControls = ({ state }: { state: FarmingState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.selectedLPToken]);\n    if (state.loading) {\n        return (\n            <Column>\n                <FetchingButton />\n            </Column>\n        );\n    }\n    if (\n        !state.selectedLPToken ||\n        !state.selectedLPToken.amountDeposited ||\n        state.selectedLPToken.amountDeposited.isZero()\n    ) {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <Column>\n            {parseBalance(state.amount, state.selectedLPToken!.decimals).gt(state.selectedLPToken.amountDeposited) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken!.symbol} />\n            ) : (\n                <WithdrawButton state={state} onError={setError} disabled={isEmptyValue(state.amount)} />\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </Column>\n    );\n};\n\nconst WithdrawButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: FarmingState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onWithdraw().catch(onError);\n    }, [state.onWithdraw, onError]);\n    return (\n        <Button size={\"large\"} title={\"Withdraw\"} disabled={disabled} loading={state.withdrawing} onPress={onPress} />\n    );\n};\n\nexport default FarmingScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = () => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: Spacing.small,\n                marginBottom: Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React, { PropsWithChildren } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\n    const { backgroundLight } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: backgroundLight }),\n                    backgroundColor: backgroundLight,\n                    marginTop: Spacing.normal + Spacing.small,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\n\nexport default InfoBox;\n","import React, { FC } from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Text from \"./Text\";\n\ninterface TitleProps {\n    text: string;\n}\n\nconst Title: FC<TitleProps> = props => {\n    return (\n        <Text fontWeight={\"bold\"} style={{ marginBottom: Spacing.tiny, fontSize: 40 }}>\n            {props.text}\n        </Text>\n    );\n};\n\nexport default Title;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={true} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {props.token.name}\n    </Text>\n);\n\nexport default TokenName;\n","import React, { FC, useCallback, useContext, useMemo } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenSymbol from \"./TokenSymbol\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    style?: ViewStyle;\n}\n\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens } = useContext(EthersContext);\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => {\n        props.onChangeSymbol(t.symbol);\n    };\n    const onUnselectToken = () => {\n        props.onChangeSymbol(\"\");\n    };\n    return (\n        <View style={props.style}>\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenList disabled={props.disabled} hidden={props.hidden} onSelectToken={onSelectToken} />\n            </Expandable>\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () =>\n            tokens\n                .filter(token => (props.hidden ? !props.hidden(token) : true))\n                .sort(\n                    (t1, t2) =>\n                        (t2.balance.isZero() ? 0 : 10000000000) -\n                        (t1.balance.isZero() ? 0 : 10000000000) +\n                        t1.symbol.localeCompare(t2.symbol)\n                ),\n        [tokens]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any token with balance.\\nTransfer tokens to your address first.\"}\n            </Text>\n        </View>\n    );\n};\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            style={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <TokenName token={props.token} disabled={props.disabled} />\n                <TokenAmount token={props.token} disabled={props.disabled} style={{ flex: 1, textAlign: \"right\" }} />\n                <TokenSymbol token={props.token} disabled={props.disabled} />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSelect;\n","import React from \"react\";\n\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\nimport Button from \"./Button\";\n\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" Not Supported\"} disabled={true} />;\n};\n\nexport default UnsupportedButton;\n","import React, { FC } from \"react\";\nimport { View } from \"react-native\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_WIDTH, Spacing, SUB_MENU_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebSubMenuItem {\n    title: string;\n    path: string;\n}\n\nexport interface WebSubMenuProps {\n    items: WebSubMenuItem[];\n}\n\nexport const SwapSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Swap Tokens\",\n                path: \"/swap\"\n            },\n            {\n                title: \"My Orders\",\n                path: \"/swap/my-orders\"\n            }\n        ]}\n    />\n);\n\nexport const LiquiditySubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Add Liquidity\",\n                path: \"/liquidity\"\n            },\n            {\n                title: \"Remove Liquidity\",\n                path: \"/liquidity/remove\"\n            },\n            {\n                title: \"Migrate Liquidity\",\n                path: \"/liquidity/migrate\"\n            }\n        ]}\n    />\n);\n\nconst WebSubMenu: FC<WebSubMenuProps> = props => {\n    const { borderDark, submenu } = useColors();\n    return (\n        <View\n            style={{\n                height: SUB_MENU_HEIGHT,\n                width: \"100%\",\n                borderBottomWidth: 1,\n                borderColor: borderDark + \"40\",\n                backgroundColor: submenu\n            }}>\n            <FlexView\n                style={{\n                    width: HEADER_WIDTH,\n                    marginTop: 2,\n                    paddingHorizontal: Spacing.normal,\n                    alignSelf: \"center\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\"\n                }}>\n                {props.items.map(item => (\n                    <MenuItem key={item.path} {...item} />\n                ))}\n            </FlexView>\n        </View>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.isExact;\n    return (\n        <Link to={path} style={{ marginLeft: Spacing.tiny, padding: Spacing.tiny, textDecoration: \"none\" }}>\n            <Text\n                fontWeight={active ? \"regular\" : \"light\"}\n                style={{\n                    fontSize: 13,\n                    color: active ? textDark : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nexport default WebSubMenu;\n","import { useCallback, useContext, useState } from \"react\";\n\nimport { EthersContext } from \"../context/EthersContext\";\nimport { parseBalance } from \"../utils\";\nimport useLiquidityState, { LiquidityState } from \"./useLiquidityState\";\nimport useSDK from \"./useSDK\";\n\nexport interface AddLiquidityState extends LiquidityState {\n    onAdd: () => Promise<void>;\n    adding: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useAddLiquidityState: () => AddLiquidityState = () => {\n    const state = useLiquidityState();\n    const { signer, updateTokens } = useContext(EthersContext);\n    const [adding, setAdding] = useState(false);\n    const { addLiquidity, addLiquidityETH } = useSDK();\n\n    const onAdd = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && state.toAmount && signer) {\n            setAdding(true);\n            try {\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const toAmount = parseBalance(state.toAmount, state.toToken.decimals);\n                if (state.fromSymbol === \"ETH\" || state.toSymbol === \"ETH\") {\n                    const [token, amount, amountETH] =\n                        state.fromSymbol === \"ETH\"\n                            ? [state.toToken, toAmount, fromAmount]\n                            : [state.fromToken, fromAmount, toAmount];\n                    const tx = await addLiquidityETH(token, amount, amountETH, signer);\n                    await tx.wait();\n                } else {\n                    const tx = await addLiquidity(state.fromToken, state.toToken, fromAmount, toAmount, signer);\n                    await tx.wait();\n                }\n                await updateTokens();\n                state.setFromSymbol(\"\");\n            } finally {\n                setAdding(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, state.toAmount, signer]);\n\n    return {\n        ...state,\n        onAdd,\n        adding\n    };\n};\n\nexport default useAddLiquidityState;\n","import React, { useCallback, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport ItemSeparator from \"../components/ItemSeparator\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { LiquiditySubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport useAddLiquidityState, { AddLiquidityState } from \"../hooks/useAddLiquidityState\";\nimport useColors from \"../hooks/useColors\";\nimport useSDK from \"../hooks/useSDK\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { convertAmount, convertToken, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst LiquidityScreen = () => {\n    return (\n        <Screen>\n            <LiquiditySubMenu />\n            <Container>\n                <Content>\n                    <Title text={\"Add Liquidity\"} />\n                    <Text light={true}>Add liquidity to a pool and get LP tokens of the pair.</Text>\n                    <AddLiquidity />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst AddLiquidity = () => {\n    const state = useAddLiquidityState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <TokenSelect\n                title={\"1st Token\"}\n                symbol={state.fromSymbol}\n                onChangeSymbol={state.setFromSymbol}\n                hidden={token => token.balance.isZero()}\n            />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <FromTokenInput state={state} />\n            <ItemSeparator />\n            <ToTokenInput state={state} />\n            <ItemSeparator />\n            <PriceInfo state={state} />\n        </View>\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: AddLiquidityState }) => {\n    if (!state.fromSymbol) {\n        return <Heading text={\"2nd Token\"} disabled={true} />;\n    }\n    return (\n        <View>\n            <TokenSelect\n                title={\"2nd Token\"}\n                symbol={state.toSymbol}\n                onChangeSymbol={state.setToSymbol}\n                hidden={token => token.symbol === state.fromSymbol || token.balance.isZero()}\n            />\n        </View>\n    );\n};\n\nconst FromTokenInput = ({ state }: { state: AddLiquidityState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={\"Amount of Tokens\"} disabled={true} />;\n    }\n    const onAmountChanged = (newAmount: string) => {\n        state.setFromAmount(newAmount);\n        if (state.pair && state.fromToken) {\n            const fromPrice = state.pair.priceOf(convertToken(state.fromToken));\n            const toAmount = fromPrice.quote(convertAmount(state.fromToken, newAmount)).toExact();\n            state.setToAmount(isEmptyValue(toAmount) ? \"\" : toAmount);\n        }\n    };\n    return (\n        <TokenInput\n            title={\"Amount of Tokens\"}\n            token={state.fromToken}\n            amount={state.fromAmount}\n            onAmountChanged={onAmountChanged}\n            hideMaxButton={state.loading && !state.pair}\n        />\n    );\n};\n\nconst ToTokenInput = ({ state }: { state: AddLiquidityState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <View />;\n    }\n    const onAmountChanged = (newAmount: string) => {\n        state.setToAmount(newAmount);\n        if (state.pair && state.toToken) {\n            const toPrice = state.pair.priceOf(convertToken(state.toToken));\n            const fromAmount = toPrice.quote(convertAmount(state.toToken, newAmount)).toExact();\n            state.setFromAmount(isEmptyValue(fromAmount) ? \"\" : fromAmount);\n        }\n    };\n    return (\n        <TokenInput\n            token={state.toToken}\n            amount={state.toAmount}\n            onAmountChanged={onAmountChanged}\n            hideMaxButton={state.loading && !state.pair}\n        />\n    );\n};\n\nconst PriceInfo = ({ state }: { state: AddLiquidityState }) => {\n    if (state.fromToken && state.toToken && !state.loading && !state.pair) {\n        return <FirstProviderInfo state={state} />;\n    } else {\n        return <PairPriceInfo state={state} />;\n    }\n};\n\nconst FirstProviderInfo = ({ state }: { state: AddLiquidityState }) => {\n    const { green } = useColors();\n    const noAmount = isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount);\n    const initialPrice = Fraction.from(\n        parseBalance(state.toAmount, state.toToken!.decimals),\n        parseBalance(state.fromAmount, state.fromToken!.decimals)\n    ).toString(8);\n    return (\n        <View>\n            <InfoBox style={{ marginTop: Spacing.normal }}>\n                <PriceMeta state={state} price={initialPrice} disabled={noAmount} />\n            </InfoBox>\n            <Notice\n                text={\n                    \"You are the first liquidity provider.\\n\" +\n                    \"The ratio of tokens you add will set the price of this pool.\"\n                }\n                color={green}\n                style={{ marginTop: Spacing.small }}\n            />\n        </View>\n    );\n};\n\nconst PairPriceInfo = ({ state }: { state: AddLiquidityState }) => {\n    const [amount, setAmount] = useState<string>();\n    const { textDark, textLight, placeholder } = useColors();\n    const { calculateAmountOfLPTokenMinted } = useSDK();\n    useAsyncEffect(async () => {\n        if (state.pair && !isEmptyValue(state.fromAmount) && !isEmptyValue(state.toAmount)) {\n            const minted = await calculateAmountOfLPTokenMinted(\n                state.pair,\n                convertAmount(state.fromToken!, state.fromAmount),\n                convertAmount(state.toToken!, state.toAmount)\n            );\n            setAmount(minted?.toFixed(8));\n        }\n    }, [state.pair, state.fromAmount, state.toAmount]);\n    const disabled = isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount);\n    const price =\n        state.pair && state.fromToken ? state.pair.priceOf(convertToken(state.fromToken)).toFixed(8) : undefined;\n    const color = disabled ? placeholder : amount ? textDark : textLight;\n    const symbol = state.fromSymbol + \"-\" + state.toSymbol;\n    return (\n        <InfoBox>\n            <Text style={{ fontSize: 28, marginBottom: Spacing.normal, color }}>\n                {disabled ? \"N/A\" : amount ? amount + \" \" + symbol : \"Fetching…\"}\n            </Text>\n            <PriceMeta state={state} price={price} disabled={!state.fromSymbol || !state.toSymbol} />\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\nconst PriceMeta = ({ state, price, disabled }) => (\n    <Meta label={\"Price\"} text={price} suffix={state.toSymbol + \" = 1 \" + state.fromSymbol} disabled={disabled} />\n);\n\n// tslint:disable-next-line:max-func-body-length\nconst Controls = ({ state }: { state: AddLiquidityState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const fromApproveRequired = state.fromSymbol !== \"ETH\" && !state.fromTokenAllowed;\n    const toApproveRequired = state.toSymbol !== \"ETH\" && !state.toTokenAllowed;\n    const disabled =\n        fromApproveRequired || toApproveRequired || isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken ||\n            !state.toToken ||\n            state.loading ||\n            isEmptyValue(state.fromAmount) ||\n            isEmptyValue(state.toAmount) ? (\n                <SupplyButton state={state} onError={setError} disabled={true} />\n            ) : state.loading || !state.pair ? (\n                <FetchingButton />\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : parseBalance(state.toAmount, state.toToken.decimals).gt(state.toToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.toSymbol} />\n            ) : (state.fromSymbol === \"ETH\" && state.toSymbol === \"WETH\") ||\n              (state.fromSymbol === \"WETH\" && state.toSymbol === \"ETH\") ? (\n                <UnsupportedButton state={state} />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setFromTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!fromApproveRequired}\n                    />\n                    <ApproveButton\n                        token={state.toToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setToTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!toApproveRequired}\n                    />\n                    <SupplyButton state={state} onError={setError} disabled={disabled} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SupplyButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: AddLiquidityState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onAdd().catch(onError);\n    }, [state.onAdd, onError]);\n    return (\n        <Button\n            title={state.fromSymbol && state.toSymbol ? \"Supply \" + state.fromSymbol + \"-\" + state.toSymbol : \"Supply\"}\n            disabled={disabled}\n            loading={state.adding}\n            onPress={onPress}\n        />\n    );\n};\n\nexport default LiquidityScreen;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useLinker from \"../hooks/useLinker\";\nimport Notice from \"./Notice\";\n\nconst ExperimentalNotice = (props: { contractURL: string }) => {\n    const onPressContract = useLinker(props.contractURL, \"\", \"_blank\");\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            <Notice\n                text={\"This feature is in beta. Read the contract yourself and use it with caution.\"}\n                color={\"orange\"}\n                buttonText={\"View Contract\"}\n                onPressButton={onPressContract}\n            />\n        </View>\n    );\n};\n\nexport default ExperimentalNotice;\n","import { useCallback, useContext, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { MIGRATOR2 } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { parseBalance } from \"../utils\";\nimport useLPTokensState, { LPTokensState } from \"./useLPTokensState\";\nimport useSDK from \"./useSDK\";\n\nexport interface MigrateState extends LPTokensState {\n    onMigrate: () => Promise<void>;\n    migrating: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useMigrateState: () => MigrateState = () => {\n    const state = useLPTokensState(\"my-uniswap-lp-tokens\");\n    const { provider, signer, getTokenAllowance, updateTokens } = useContext(EthersContext);\n    const { migrate } = useSDK();\n    const [loading, setLoading] = useState(false);\n    const [migrating, setMigrating] = useState(false);\n\n    useAsyncEffect(async () => {\n        if (provider && signer && state.selectedLPToken) {\n            setLoading(true);\n            state.setSelectedLPTokenAllowed(false);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const allowance = await getTokenAllowance(state.selectedLPToken.address, MIGRATOR2);\n                state.setSelectedLPTokenAllowed(ethers.BigNumber.from(allowance).gte(minAllowance));\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [provider, signer, state.selectedLPToken]);\n\n    const onMigrate = useCallback(async () => {\n        if (state.selectedLPToken && state.amount && signer) {\n            setMigrating(true);\n            try {\n                const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\n                const tx = await migrate(state.selectedLPToken, amount, signer);\n                await tx.wait();\n                await updateTokens();\n                await state.updateLPTokens();\n                state.setSelectedLPToken(undefined);\n            } finally {\n                setMigrating(false);\n            }\n        }\n    }, [state.selectedLPToken, state.amount, signer, updateTokens]);\n\n    return {\n        ...state,\n        loading: state.loading || loading,\n        onMigrate,\n        migrating\n    };\n};\n\nexport default useMigrateState;\n","import React, { useCallback, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport ExperimentalNotice from \"../components/ExperimentalNotice\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport LPTokenSelect, { LPTokenItem } from \"../components/LPTokenSelect\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { LiquiditySubMenu } from \"../components/web/WebSubMenu\";\nimport { MIGRATOR2 } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useMigrateState, { MigrateState } from \"../hooks/useMigrateState\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst MigrateScreen = () => {\n    return (\n        <Screen>\n            <LiquiditySubMenu />\n            <Container>\n                <Content>\n                    <Title text={\"Migrate Liquidity\"} />\n                    <Text light={true}>Migrate your Uniswap LP tokens to SushiSwap LP tokens.</Text>\n                    <Migrate />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst Migrate = () => {\n    const state = useMigrateState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <LPTokenSelect\n                state={state}\n                title={\"Your Uniswap Liquidity\"}\n                emptyText={\"You don't have any liquidity on Uniswap.\"}\n                Item={LPTokenItem}\n            />\n            <Border />\n            <AmountInput state={state} />\n            <ExperimentalNotice\n                contractURL={\"https://github.com/sushiswap/sushiswap/blob/master/contracts/Migrator2.sol\"}\n            />\n            <AmountInfo state={state} />\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: MigrateState }) => {\n    if (!state.selectedLPToken) {\n        return <Heading text={\"Amount of Tokens\"} disabled={true} />;\n    }\n    return (\n        <TokenInput\n            title={\"Amount of Tokens\"}\n            token={state.selectedLPToken}\n            amount={state.amount}\n            onAmountChanged={state.setAmount}\n        />\n    );\n};\n\nconst AmountInfo = ({ state }: { state: MigrateState }) => {\n    const { textDark, textLight, placeholder } = useColors();\n    const disabled = !state.selectedLPToken || isEmptyValue(state.amount);\n    const color = disabled ? placeholder : state.amount ? textDark : textLight;\n    return (\n        <InfoBox>\n            <Text style={{ fontSize: 28, color }}>{disabled ? \"N/A\" : state.amount + \" SLP\"}</Text>\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\nconst Controls = ({ state }: { state: MigrateState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.amount]);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.selectedLPToken || isEmptyValue(state.amount) ? (\n                <MigrateButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.amount, state.selectedLPToken.decimals).gt(state.selectedLPToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken.symbol} />\n            ) : state.loading ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.selectedLPToken}\n                        spender={MIGRATOR2}\n                        onSuccess={() => state.setSelectedLPTokenAllowed(true)}\n                        onError={setError}\n                        hidden={state.selectedLPTokenAllowed}\n                    />\n                    <MigrateButton state={state} onError={setError} disabled={!state.selectedLPTokenAllowed} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst MigrateButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: MigrateState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onMigrate();\n        } catch (e) {\n            onError(e);\n        }\n    }, []);\n    return <Button title={\"Migrate Liquidity\"} loading={state.migrating} onPress={onPress} disabled={disabled} />;\n};\n\nexport default MigrateScreen;\n","import { useCallback, useContext, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { getContract } from \"../utils\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport useSDK, { Order, OrderStatus } from \"./useSDK\";\n\nexport interface OrderInfo {\n    status: number;\n    filledAmountIn: ethers.BigNumber;\n}\n\nexport interface MyLimitOrdersState {\n    lastTimeRefreshed: number;\n    orders?: Order[];\n    loading: boolean;\n    selectedOrder?: Order;\n    setSelectedOrder: (order?: Order) => void;\n    onCancelOrder: () => Promise<void>;\n    cancellingOrder: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useMyLimitOrdersState = () => {\n    const { cancelOrder } = useSDK();\n    const { kovanSigner, signer, provider, address, tokens } = useContext(EthersContext);\n    const [lastTimeRefreshed, setLastTimeRefreshed] = useState(0);\n    const [orders, setOrders] = useState<Order[]>();\n    const [selectedOrder, setSelectedOrder] = useState<Order>();\n    const [loading, setLoading] = useState(true);\n    const [cancellingOrder, setCancellingOrder] = useState(false);\n\n    // tslint:disable-next-line:max-func-body-length\n    const updateOrders = async () => {\n        if (signer && kovanSigner && provider && address && tokens) {\n            setLoading(true);\n            try {\n                const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n                const settlement = await getContract(\"Settlement\", SETTLEMENT, signer);\n                const length = await orderBook.numberOfHashesOfMaker(address);\n                const LIMIT = 20;\n                const pages: number[] = [];\n                for (let i = 0; i * LIMIT < length; i++) {\n                    pages.push(i);\n                }\n                const hashes = (await Promise.all(pages.map(page => orderBook.allHashes(page, LIMIT)))).flat();\n                const myOrders = await Promise.all(\n                    hashes\n                        .filter(hash => hash !== ethers.constants.HashZero)\n                        .map(async hash => {\n                            const args = await orderBook.orderOfHash(hash);\n                            const order = new Order(\n                                signer,\n                                await findOrFetchToken(provider, args.fromToken, tokens),\n                                await findOrFetchToken(provider, args.toToken, tokens),\n                                args.amountIn,\n                                args.amountOutMin,\n                                args.recipient,\n                                args.deadline\n                            );\n                            order.filledAmountIn = await settlement.filledAmountInOfHash(hash);\n                            return order;\n                        })\n                );\n                setOrders(\n                    myOrders.sort((o0, o1) => {\n                        const status = (s: OrderStatus) => (s === \"Open\" ? 0 : s === \"Filled\" ? 1 : 2);\n                        const compared = status(o0.status()) - status(o1.status());\n                        if (compared === 0) {\n                            return o0.deadline.toNumber() - o1.deadline.toNumber();\n                        }\n                        return compared;\n                    }) as Order[]\n                );\n            } finally {\n                setLoading(false);\n            }\n        }\n    };\n\n    useAsyncEffect(updateOrders, [kovanSigner, signer, provider, address, tokens, lastTimeRefreshed]);\n\n    const onCancelOrder = useCallback(async () => {\n        if (selectedOrder && signer && kovanSigner) {\n            setCancellingOrder(true);\n            try {\n                const hash = await selectedOrder.hash();\n                const tx = await cancelOrder(hash, signer, kovanSigner);\n                await tx.wait();\n                setSelectedOrder(undefined);\n                setLastTimeRefreshed(Date.now());\n            } finally {\n                setCancellingOrder(false);\n            }\n        }\n    }, [selectedOrder, signer, kovanSigner]);\n\n    return {\n        lastTimeRefreshed,\n        orders,\n        loading,\n        selectedOrder,\n        setSelectedOrder,\n        onCancelOrder,\n        cancellingOrder\n    };\n};\n\nexport default useMyLimitOrdersState;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { FlatList, Platform, View } from \"react-native\";\n\nimport moment from \"moment\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Expandable from \"../components/Expandable\";\nimport FlexView from \"../components/FlexView\";\nimport InfoBox from \"../components/InfoBox\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"../components/ItemSeparator\";\nimport Loading from \"../components/Loading\";\nimport Meta from \"../components/Meta\";\nimport Selectable from \"../components/Selectable\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenAmount from \"../components/TokenAmount\";\nimport TokenLogo from \"../components/TokenLogo\";\nimport TokenSymbol from \"../components/TokenSymbol\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SwapSubMenu } from \"../components/web/WebSubMenu\";\nimport { Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport useColors from \"../hooks/useColors\";\nimport useMyLimitOrdersState, { MyLimitOrdersState } from \"../hooks/useMyLimitOrdersState\";\nimport { Order } from \"../hooks/useSDK\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { formatBalance, formatDate } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst MyLimitOrdersScreen = () => {\n    return (\n        <Screen>\n            <SwapSubMenu />\n            <Container>\n                <Content>\n                    <Title text={\"My Orders\"} />\n                    <Text light={true}>Scan limit orders you've placed and cancel them if needed.</Text>\n                    <MyLimitOrders />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst MyLimitOrders = () => {\n    const state = useMyLimitOrdersState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <OrderSelect state={state} />\n            <OrderInfo state={state} />\n        </View>\n    );\n};\n\nconst OrderSelect = (props: { state: MyLimitOrdersState }) => {\n    return (\n        <View>\n            <Expandable\n                title={\"Limit Orders\"}\n                expanded={!props.state.selectedOrder}\n                onExpand={() => props.state.setSelectedOrder()}>\n                <OrderList state={props.state} />\n            </Expandable>\n            {props.state.selectedOrder && (\n                <OrderItem\n                    order={props.state.selectedOrder}\n                    selected={true}\n                    onSelectOrder={() => props.state.setSelectedOrder()}\n                />\n            )}\n        </View>\n    );\n};\n\nconst OrderList = ({ state }: { state: MyLimitOrdersState }) => {\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <OrderItem key={item.address} order={item} selected={false} onSelectOrder={state.setSelectedOrder} />\n            );\n        },\n        [state.setSelectedOrder]\n    );\n    return state.loading || !state.orders ? (\n        <Loading />\n    ) : state.orders.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => JSON.stringify(item)} data={state.orders} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any limit orders placed.\"}\n            </Text>\n        </View>\n    );\n};\n\nconst OrderItem = (props: { order: Order; selected: boolean; onSelectOrder: (order: Order) => void }) => {\n    const { amountIn, amountOutMin, fromToken, toToken } = props.order;\n    const status = props.order.status();\n    const disabled = status !== \"Open\";\n    const price = Fraction.fromTokens(amountOutMin, amountIn, toToken, fromToken);\n    const onPress = useCallback(() => props.onSelectOrder(props.order), [props.onSelectOrder, props.order]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            style={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <View>\n                    <Token token={fromToken} amount={amountIn} disabled={disabled} buy={false} />\n                    <View style={{ height: Spacing.tiny }} />\n                    <Token token={toToken} amount={amountOutMin} disabled={disabled} buy={true} />\n                </View>\n                <Field label={\"Price\"} value={price.toString(8)} disabled={disabled} minWidth={0} />\n                <Field label={\"Status\"} value={status} disabled={disabled} minWidth={64} />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nconst Token = ({ token, amount, disabled, buy }) => {\n    const { green, red, disabled: colorDisabled } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <TokenLogo token={token} disabled={disabled} />\n            <Text style={{ color: disabled ? colorDisabled : buy ? green : red, marginLeft: Spacing.tiny, width: 40 }}>\n                {buy ? \"BUY\" : \"SELL\"}\n            </Text>\n            <TokenAmount token={token} amount={amount} disabled={disabled} />\n            <TokenSymbol token={token} disabled={disabled} />\n        </FlexView>\n    );\n};\n\nconst Field = ({ label, value, disabled, minWidth }) => {\n    const { textMedium, textLight, disabled: colorDisabled } = useColors();\n    return (\n        <View style={{ flex: minWidth ? 0 : 1, minWidth, marginLeft: Spacing.tiny }}>\n            <Text note={true} style={{ textAlign: \"right\", color: disabled ? colorDisabled : textLight }}>\n                {label}\n            </Text>\n            <Text\n                caption={true}\n                light={true}\n                style={{ textAlign: \"right\", color: disabled ? colorDisabled : textMedium }}>\n                {value}\n            </Text>\n        </View>\n    );\n};\n\nconst OrderInfo = ({ state }: { state: MyLimitOrdersState }) => {\n    const { fromToken, filledAmountIn, expiry } = useMemo(() => {\n        if (state.selectedOrder) {\n            const order = state.selectedOrder;\n            const deadline = new Date(order.deadline.toNumber() * 1000);\n            const now = Date.now();\n            const diff = moment(deadline).diff(now);\n            return {\n                fromToken: order.fromToken,\n                filledAmountIn: formatBalance(order.filledAmountIn!, order.fromToken.decimals),\n                expiry: moment(deadline).isAfter(now) ? moment.utc(diff).format(\"HH[h] mm[m]\") : formatDate(deadline)\n            };\n        } else {\n            return {\n                fromToken: undefined,\n                filledAmountIn: undefined,\n                expiry: undefined\n            };\n        }\n    }, [state.selectedOrder]);\n    const disabled = !state.selectedOrder;\n    return (\n        <InfoBox>\n            <Meta label={\"Amount Filled\"} text={filledAmountIn} suffix={fromToken?.symbol} disabled={disabled} />\n            <Meta label={\"Expiration\"} text={expiry} disabled={disabled} />\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\nconst Controls = ({ state }: { state: MyLimitOrdersState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.selectedOrder]);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            <CancelButton state={state} onError={setError} />\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst CancelButton = ({ state, onError }: { state: MyLimitOrdersState; onError: (e) => void }) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onCancelOrder().catch(onError);\n    }, [state.onCancelOrder, onError]);\n    const disabled = !state.selectedOrder || state.selectedOrder.status() !== \"Open\";\n    return <Button title={\"Cancel Order\"} loading={state.cancellingOrder} onPress={onPress} disabled={disabled} />;\n};\n\nexport default MyLimitOrdersScreen;\n","import { useCallback, useContext, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { convertToken, formatBalance, parseBalance, parseCurrencyAmount } from \"../utils\";\nimport useLPTokensState, { LPTokensState } from \"./useLPTokensState\";\nimport useSDK from \"./useSDK\";\n\nexport interface RemoveLiquidityState extends LPTokensState {\n    onRemove: () => Promise<void>;\n    removing: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useRemoveLiquidityState: () => RemoveLiquidityState = () => {\n    const state = useLPTokensState(\"my-lp-tokens\");\n    const { provider, signer, getTokenAllowance, updateTokens } = useContext(EthersContext);\n    const { removeLiquidity, removeLiquidityETH } = useSDK();\n    const [loading, setLoading] = useState(false);\n    const [removing, setRemoving] = useState(false);\n\n    useAsyncEffect(async () => {\n        if (provider && signer && state.selectedLPToken) {\n            state.setFromSymbol(state.selectedLPToken.tokenA.symbol);\n            state.setToSymbol(state.selectedLPToken.tokenB.symbol);\n\n            setLoading(true);\n            state.setSelectedLPTokenAllowed(false);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const allowance = await getTokenAllowance(state.selectedLPToken.address, ROUTER);\n                state.setSelectedLPTokenAllowed(ethers.BigNumber.from(allowance).gte(minAllowance));\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [provider, signer, state.selectedLPToken]);\n\n    // tslint:disable-next-line:max-func-body-length\n    useAsyncEffect(async () => {\n        if (\n            state.selectedLPToken &&\n            state.selectedLPToken.totalSupply &&\n            state.pair &&\n            state.fromToken &&\n            state.toToken\n        ) {\n            if (state.pair.liquidityToken.address === state.selectedLPToken.address) {\n                const fromReserve = parseCurrencyAmount(\n                    state.pair.reserveOf(convertToken(state.fromToken)),\n                    state.fromToken.decimals\n                );\n                const toReserve = parseCurrencyAmount(\n                    state.pair.reserveOf(convertToken(state.toToken)),\n                    state.toToken.decimals\n                );\n                state.setFromAmount(\n                    formatBalance(\n                        parseBalance(state.amount, state.selectedLPToken.decimals)\n                            .mul(fromReserve)\n                            .div(state.selectedLPToken.totalSupply)\n                            .toString(),\n                        state.selectedLPToken.tokenA.decimals\n                    )\n                );\n                state.setToAmount(\n                    formatBalance(\n                        parseBalance(state.amount, state.selectedLPToken.decimals)\n                            .mul(toReserve)\n                            .div(state.selectedLPToken.totalSupply)\n                            .toString(),\n                        state.selectedLPToken.tokenB.decimals\n                    )\n                );\n            }\n        }\n    }, [state.selectedLPToken, state.amount, state.pair, state.fromToken, state.toToken, signer]);\n\n    const onRemove = useCallback(async () => {\n        if (state.fromAmount && state.toAmount && state.selectedLPToken && state.amount && signer) {\n            setRemoving(true);\n            try {\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n                const toAmount = parseBalance(state.toAmount, state.toToken!.decimals);\n                const liquidity = parseBalance(state.amount, state.selectedLPToken.decimals);\n                if (state.fromSymbol === \"WETH\" || state.toSymbol === \"WETH\") {\n                    const token = state.fromSymbol === \"WETH\" ? state.toToken! : state.fromToken!;\n                    const amountToRemove = state.fromSymbol === \"WETH\" ? toAmount : fromAmount;\n                    const amountToRemoveETH = state.fromSymbol === \"WETH\" ? fromAmount : toAmount;\n                    const tx = await removeLiquidityETH(token, liquidity, amountToRemove, amountToRemoveETH, signer);\n                    await tx.wait();\n                } else {\n                    const tx = await removeLiquidity(\n                        state.fromToken!,\n                        state.toToken!,\n                        liquidity,\n                        fromAmount,\n                        toAmount,\n                        signer\n                    );\n                    await tx.wait();\n                }\n                await updateTokens();\n                await state.updateLPTokens();\n                state.setSelectedLPToken(undefined);\n            } finally {\n                setRemoving(false);\n            }\n        }\n    }, [state.fromAmount, state.toAmount, state.selectedLPToken, state.amount, signer, state.updateLPTokens]);\n\n    return {\n        ...state,\n        loading: state.loading || loading,\n        onRemove,\n        removing\n    };\n};\n\nexport default useRemoveLiquidityState;\n","import React, { useCallback, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport LPTokenSelect, { LPTokenItem } from \"../components/LPTokenSelect\";\nimport Meta from \"../components/Meta\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { LiquiditySubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport useRemoveLiquidityState, { RemoveLiquidityState } from \"../hooks/useRemoveLiquidityState\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst RemoveLiquidityScreen = () => {\n    return (\n        <Screen>\n            <LiquiditySubMenu />\n            <Container>\n                <Content>\n                    <Title text={\"Remove Liquidity\"} />\n                    <Text light={true}>Scan your liquidity and remove one if needed.</Text>\n                    <RemoveLiquidity />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst RemoveLiquidity = () => {\n    const state = useRemoveLiquidityState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <LPTokenSelect\n                state={state}\n                title={\"Your Liquidity\"}\n                emptyText={\"You don't have any liquidity.\"}\n                Item={LPTokenItem}\n            />\n            <Border />\n            <AmountInput state={state} />\n            <AmountInfo state={state} />\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: RemoveLiquidityState }) => {\n    if (!state.selectedLPToken) {\n        return <Heading text={\"Amount of Tokens\"} disabled={true} />;\n    }\n    return (\n        <TokenInput\n            title={\"Amount of Tokens\"}\n            token={state.selectedLPToken}\n            amount={state.amount}\n            onAmountChanged={state.setAmount}\n        />\n    );\n};\n\nconst AmountInfo = ({ state }: { state: RemoveLiquidityState }) => {\n    const disabled = !state.selectedLPToken || !state.fromToken || !state.toToken;\n    return (\n        <InfoBox>\n            <Meta\n                label={state.fromToken ? \"Amount of \" + state.fromToken.symbol : \"Amount of Token 1\"}\n                text={state.fromAmount}\n                disabled={disabled}\n            />\n            <Meta\n                label={state.toToken ? \"Amount of \" + state.toToken.symbol : \"Amount of Token 2\"}\n                text={state.toAmount}\n                disabled={disabled}\n            />\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst Controls = ({ state }: { state: RemoveLiquidityState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = !state.selectedLPTokenAllowed;\n    const disabled = approveRequired || isEmptyValue(state.amount);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.selectedLPToken ? (\n                <RemoveButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.amount, state.selectedLPToken.decimals).gt(state.selectedLPToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken.symbol} />\n            ) : state.loading || !state.pair ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.selectedLPToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setSelectedLPTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!approveRequired}\n                    />\n                    <RemoveButton state={state} onError={setError} disabled={disabled} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst RemoveButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: RemoveLiquidityState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onRemove().catch(onError);\n    }, [state.onRemove, onError]);\n    return <Button title={\"Remove Liquidity\"} disabled={disabled} loading={state.removing} onPress={onPress} />;\n};\n\nexport default RemoveLiquidityScreen;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { SUSHI_BAR } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { getContract, parseBalance } from \"../utils\";\nimport useSDK from \"./useSDK\";\n\nexport type Action = \"enter\" | \"leave\";\n\nexport interface StakingState {\n    action?: Action;\n    setAction: (action?: Action) => void;\n    sushi?: Token;\n    xSushi?: Token;\n    sushiStaked?: ethers.BigNumber;\n    sushiSupply?: ethers.BigNumber;\n    xSushiSupply?: ethers.BigNumber;\n    amount: string;\n    setAmount: (amount: string) => void;\n    sushiAllowed: boolean;\n    setSushiAllowed: (allowed: boolean) => void;\n    xSushiAllowed: boolean;\n    setXSushiAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onEnter: () => Promise<void>;\n    entering: boolean;\n    onLeave: () => Promise<void>;\n    leaving: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useStakingState: () => StakingState = () => {\n    const { provider, signer, address, getTokenAllowance, tokens, updateTokens } = useContext(EthersContext);\n    const { enterSushiBar, leaveSushiBar } = useSDK();\n    const [action, setAction] = useState<Action>();\n    const [sushiStaked, setSushiStaked] = useState<ethers.BigNumber>();\n    const [sushiSupply, setSushiSupply] = useState<ethers.BigNumber>();\n    const [xSushiSupply, setXSushiSupply] = useState<ethers.BigNumber>();\n    const [amount, setAmount] = useState(\"\");\n    const [sushiAllowed, setSushiAllowed] = useState(false);\n    const [xSushiAllowed, setXSushiAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [entering, setEntering] = useState(false);\n    const [leaving, setLeaving] = useState(false);\n\n    const sushi = tokens.find(token => token.symbol === \"SUSHI\");\n    const xSushi = tokens.find(token => token.symbol === \"xSUSHI\");\n\n    useEffect(() => {\n        setAmount(\"\");\n    }, [address, action]);\n\n    useAsyncEffect(async () => {\n        if (sushi && xSushi && provider && signer) {\n            setSushiAllowed(false);\n            setXSushiAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const sushiAllowance = await getTokenAllowance(sushi.address, SUSHI_BAR);\n                setSushiAllowed(ethers.BigNumber.from(sushiAllowance).gte(minAllowance));\n                const xSushiAllowance = await getTokenAllowance(xSushi.address, SUSHI_BAR);\n                setXSushiAllowed(ethers.BigNumber.from(xSushiAllowance).gte(minAllowance));\n\n                const sushiContract = getContract(\"ERC20\", sushi.address, signer);\n                setSushiStaked(await sushiContract.balanceOf(SUSHI_BAR));\n                setSushiSupply(await sushiContract.totalSupply());\n                const xSushiContract = getContract(\"ERC20\", xSushi.address, signer);\n                setXSushiSupply(await xSushiContract.totalSupply());\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [sushi, xSushi, provider, signer]);\n\n    const onEnter = useCallback(async () => {\n        if (amount && signer) {\n            setEntering(true);\n            try {\n                const tx = await enterSushiBar(parseBalance(amount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setAmount(\"\");\n                }\n            } finally {\n                setEntering(false);\n            }\n        }\n    }, [amount, signer]);\n\n    const onLeave = useCallback(async () => {\n        if (amount && signer) {\n            setLeaving(true);\n            try {\n                const tx = await leaveSushiBar(parseBalance(amount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setAmount(\"\");\n                }\n            } finally {\n                setLeaving(false);\n            }\n        }\n    }, [amount, signer]);\n\n    return {\n        action,\n        setAction,\n        sushi,\n        xSushi,\n        sushiStaked,\n        sushiSupply,\n        xSushiSupply,\n        amount,\n        setAmount,\n        sushiAllowed,\n        setSushiAllowed,\n        xSushiAllowed,\n        setXSushiAllowed,\n        loading,\n        onEnter,\n        entering,\n        onLeave,\n        leaving\n    };\n};\n\nexport default useStakingState;\n","import React, { useCallback, useState } from \"react\";\nimport { ActivityIndicator, Platform, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Button from \"../components/Button\";\nimport ButtonGroup from \"../components/ButtonGroup\";\nimport Column from \"../components/Column\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport FlexView from \"../components/FlexView\";\nimport Heading from \"../components/Heading\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Text from \"../components/Text\";\nimport TokenInput from \"../components/TokenInput\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SUSHI_BAR } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport useColors from \"../hooks/useColors\";\nimport useStakingState, { Action, StakingState } from \"../hooks/useStakingState\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst Actions = [\"enter\", \"leave\"];\n\nconst StakingScreen = () => {\n    return (\n        <Screen>\n            <Container>\n                <Content>\n                    <Staking />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst Staking = () => {\n    const state = useStakingState();\n    return (\n        <View style={{ alignItems: \"center\", marginBottom: Spacing.huge * 2 }}>\n            <Column>\n                <Text h4={true} style={{ textAlign: \"center\" }}>\n                    💰 Stake/Unstake\n                </Text>\n            </Column>\n            <ActionSelect state={state} />\n            {state.action === \"enter\" && state.sushi && state.sushi.balance.isZero() && <NoSushiNotice />}\n            {state.action === \"leave\" && state.xSushi && state.xSushi.balance.isZero() && <NoXSushiNotice />}\n            <TokenInput\n                title={\"2. How many SUSHI do you want to STAKE?\"}\n                token={state.sushi}\n                hidden={state.action !== \"enter\" || !state.sushi || state.sushi.balance.isZero()}\n                amount={state.amount}\n                onAmountChanged={state.setAmount}\n            />\n            <TokenInput\n                title={\"2. How many xSUSHI do you want to UNSTAKE?\"}\n                token={state.xSushi}\n                hidden={state.action !== \"leave\" || !state.xSushi || state.xSushi.balance.isZero()}\n                amount={state.amount}\n                onAmountChanged={state.setAmount}\n            />\n            <StakeInfo state={state} />\n            <Controls state={state} />\n        </View>\n    );\n};\n\nconst ActionSelect = ({ state }: { state: StakingState }) => {\n    if (!state.sushi || !state.xSushi || !state.sushiStaked || !state.xSushiSupply) {\n        return (\n            <Column noTopMargin={true}>\n                <ActivityIndicator size={\"large\"} style={{ marginTop: Spacing.large }} />\n            </Column>\n        );\n    }\n    const index = state.action ? Actions.indexOf(state.action) : null;\n    const onPress = useCallback((i: number) => {\n        state.setAction(Actions[i] as Action);\n    }, []);\n    return (\n        <Column>\n            <Heading text={\"1. Do you want to STAKE or UNSTAKE?\"} />\n            <View style={{ marginHorizontal: Spacing.small, marginBottom: Spacing.normal }}>\n                <Meta label={\"Total SUSHI Staked\"} text={formatBalance(state.sushiStaked, state.sushi.decimals)} />\n                <Meta label={\"My SUSHI Balance\"} text={formatBalance(state.sushi.balance, state.sushi.decimals)} />\n                <Line />\n                <Meta label={\"Total xSUSHI Supply\"} text={formatBalance(state.xSushiSupply, state.xSushi.decimals)} />\n                <Meta label={\"My xSUSHI Balance\"} text={formatBalance(state.xSushi.balance, state.xSushi.decimals)} />\n            </View>\n            <ButtonGroup\n                selectedIndex={index}\n                onPress={onPress}\n                buttons={[{ element: StakeText }, { element: UnstakeText }]}\n                containerStyle={{ marginHorizontal: Spacing.small }}\n            />\n        </Column>\n    );\n};\n\nconst Line = () => {\n    const { border } = useColors();\n    return (\n        <View style={{ width: \"100%\", paddingHorizontal: Spacing.small }}>\n            <View\n                style={{\n                    height: 1,\n                    width: \"100%\",\n                    marginTop: Spacing.small,\n                    marginBottom: Spacing.tiny,\n                    backgroundColor: border\n                }}\n            />\n        </View>\n    );\n};\n\nconst StakeText = () => {\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <Text style={{ color: \"black\" }}>Stake SUSHI</Text>\n            <Icon\n                type={\"material-community\"}\n                name={\"chevron-right\"}\n                color={\"black\"}\n                style={{ marginLeft: Spacing.tiny }}\n            />\n        </FlexView>\n    );\n};\n\nconst UnstakeText = () => {\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <Text style={{ color: \"black\" }}>Unstake xSUSHI</Text>\n            <Icon\n                type={\"material-community\"}\n                name={\"chevron-right\"}\n                color={\"black\"}\n                style={{ marginLeft: Spacing.tiny }}\n            />\n        </FlexView>\n    );\n};\n\nconst NoSushiNotice = () => {\n    return (\n        <Column noTopMargin={true} style={{ padding: Spacing.small, marginTop: Spacing.small }}>\n            <Notice text={\"You don't have any SUSHI balance.\"} />\n        </Column>\n    );\n};\n\nconst NoXSushiNotice = () => {\n    return (\n        <Column noTopMargin={true} style={{ padding: Spacing.small, marginTop: Spacing.small }}>\n            <Notice text={\"You don't have any xSUSHI staked.\"} />\n        </Column>\n    );\n};\n\nconst StakeInfo = ({ state }: { state: StakingState }) => {\n    if (!state.sushi || !state.xSushi || !state.sushiSupply || !state.xSushiSupply || isEmptyValue(state.amount)) {\n        return <Column noTopMargin={true} />;\n    }\n    const amount = parseBalance(state.amount, state.sushi.decimals);\n    const xSushiAmount = amount.mul(state.xSushiSupply).div(state.sushiSupply);\n    const share = Fraction.from(xSushiAmount, state.xSushiSupply);\n    return (\n        <Column noTopMargin={true}>\n            <Meta label={\"xSUSHI Amount\"} text={formatBalance(xSushiAmount, state.xSushi.decimals)} />\n            <Meta label={\"xSUSHI Share\"} text={share.toString() + \"%\"} />\n        </Column>\n    );\n};\n\nconst Controls = ({ state }: { state: StakingState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.action, state.amount]);\n    const token = state.action === \"leave\" ? state.xSushi : state.sushi;\n    if (!state.action || !token || isEmptyValue(state.amount)) return <Column noTopMargin={true} />;\n    return (\n        <Column>\n            {parseBalance(state.amount, token.decimals).gt(token.balance) ? (\n                <InsufficientBalanceButton symbol={token.symbol} />\n            ) : state.loading ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={token}\n                        spender={SUSHI_BAR}\n                        onSuccess={() => state.setSushiAllowed(true)}\n                        onError={setError}\n                        hidden={state.action === \"leave\" || state.sushiAllowed}\n                    />\n                    {state.action === \"leave\" ? (\n                        <UnstakeButton state={state} onError={setError} />\n                    ) : (\n                        <StakeButton state={state} onError={setError} disabled={!state.sushiAllowed} />\n                    )}\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </Column>\n    );\n};\n\nconst StakeButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: StakingState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onEnter();\n            state.setAction();\n        } catch (e) {\n            onError(e);\n        }\n    }, []);\n    return <Button title={\"Stake\"} loading={state.entering} onPress={onPress} disabled={disabled} />;\n};\n\nconst UnstakeButton = ({ state, onError }: { state: StakingState; onError: (e) => void }) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onLeave();\n            state.setAction();\n        } catch (e) {\n            onError(e);\n        }\n    }, []);\n    return <Button title={\"Unstake\"} loading={state.leaving} onPress={onPress} />;\n};\n\nexport default StakingScreen;\n","import useAsyncEffect from \"use-async-effect\";\n\nconst handles = {};\n\nconst useDelayedEffect = (\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\n    timeout: number,\n    inputs?: any[]\n) => {\n    const key = effect.toString();\n    useAsyncEffect<number>(\n        () => {\n            const handle = setTimeout(effect, timeout);\n            handles[key] = handle;\n            return handle;\n        },\n        handle => {\n            clearTimeout(handle);\n        },\n        inputs\n    );\n};\nexport default useDelayedEffect;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { Trade } from \"@sushiswap/sdk\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { formatBalance, isEmptyValue, parseBalance, pow10 } from \"../utils\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport type OrderType = \"market\" | \"limit\";\n\nexport interface SwapState extends TokenPairState {\n    orderType?: OrderType;\n    setOrderType: (orderType?: OrderType) => void;\n    trade?: Trade;\n    unsupported: boolean;\n    limitOrderUnsupported: boolean;\n    limitOrderPrice: string;\n    setLimitOrderPrice: (price: string) => void;\n    swapFee: string;\n    limitOrderFee: string;\n    limitOrderSwapFee: string;\n    limitOrderReturn: string;\n    onSwap: () => Promise<void>;\n    swapping: boolean;\n    onCreateOrder: () => Promise<void>;\n    creatingOrder: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapState: () => SwapState = () => {\n    const state = useTokenPairState();\n    const { signer, kovanSigner, updateTokens } = useContext(EthersContext);\n    const {\n        getTrade,\n        swap,\n        createOrder,\n        calculateSwapFee,\n        calculateLimitOrderFee,\n        calculateLimitOrderReturn\n    } = useSDK();\n    const [loading, setLoading] = useState(true);\n    const [orderType, setOrderType] = useState<OrderType>();\n    const [trade, setTrade] = useState<Trade>();\n    const [unsupported, setUnsupported] = useState(false);\n    const [swapFee, setSwapFee] = useState(\"\");\n    const [limitOrderPrice, setLimitOrderPrice] = useState<string>(\"\");\n    const [limitOrderFee, setLimitOrderFee] = useState(\"\");\n    const [limitOrderSwapFee, setLimitOrderSwapFee] = useState(\"\");\n    const [limitOrderReturn, setLimitOrderReturn] = useState(\"\");\n    const [swapping, setSwapping] = useState(false);\n    const [creatingOrder, setCreatingOrder] = useState(false);\n\n    useEffect(() => {\n        if (!orderType) {\n            state.setFromSymbol(\"\");\n        }\n        setLimitOrderPrice(\"\");\n    }, [orderType]);\n\n    useEffect(() => {\n        if (isEmptyValue(state.fromAmount)) {\n            setLimitOrderPrice(\"\");\n            setTrade(undefined);\n        }\n    }, [state.fromAmount]);\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n            }\n            if (state.fromToken && state.toToken && state.fromAmount && signer?.provider) {\n                const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                if (!amount.isZero()) {\n                    setUnsupported(false);\n                    try {\n                        setTrade(await getTrade(state.fromToken, state.toToken, amount, signer?.provider));\n                    } catch (e) {\n                        setUnsupported(true);\n                    } finally {\n                        setLoading(false);\n                    }\n                }\n            }\n        },\n        () => \"getTrade(\" + state.fromSymbol + \",\" + state.toSymbol + \",\" + state.fromAmount + \")\",\n        [state.fromSymbol, state.toSymbol, state.fromAmount]\n    );\n\n    useAsyncEffect(() => {\n        if (trade && !isEmptyValue(state.fromAmount)) {\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n            setSwapFee(formatBalance(calculateSwapFee(fromAmount), state.fromToken!.decimals, 8));\n            if (orderType === \"limit\") {\n                setLimitOrderFee(formatBalance(calculateLimitOrderFee(fromAmount), state.fromToken!.decimals, 8));\n                setLimitOrderSwapFee(\n                    formatBalance(\n                        calculateSwapFee(fromAmount.sub(calculateLimitOrderFee(fromAmount))),\n                        state.fromToken!.decimals,\n                        8\n                    )\n                );\n            }\n        }\n    }, [orderType, trade, state.fromAmount]);\n\n    useAsyncEffect(() => {\n        if (state.fromToken && state.toToken && !isEmptyValue(state.fromAmount) && !isEmptyValue(limitOrderPrice)) {\n            setLimitOrderReturn(\n                formatBalance(\n                    calculateLimitOrderReturn(\n                        state.fromToken,\n                        state.toToken,\n                        parseBalance(state.fromAmount, state.fromToken.decimals),\n                        limitOrderPrice\n                    ),\n                    state.toToken.decimals,\n                    8\n                )\n            );\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, limitOrderPrice]);\n\n    const onSwap = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && signer && trade) {\n            setSwapping(true);\n            try {\n                const result = await swap(trade, signer);\n                if (result) {\n                    await result.tx.wait();\n                    await updateTokens();\n                    setOrderType(undefined);\n                }\n            } finally {\n                setSwapping(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, trade]);\n\n    const onCreateOrder = useCallback(async () => {\n        if (\n            state.fromToken &&\n            state.toToken &&\n            state.fromAmount &&\n            !isEmptyValue(limitOrderPrice) &&\n            signer &&\n            kovanSigner\n        ) {\n            setCreatingOrder(true);\n            try {\n                const amountIn = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const tx = await createOrder(\n                    state.fromToken,\n                    state.toToken,\n                    amountIn,\n                    Fraction.parse(limitOrderPrice)\n                        .apply(amountIn)\n                        .mul(pow10(state.toToken.decimals))\n                        .div(pow10(state.fromToken.decimals)),\n                    signer,\n                    kovanSigner\n                );\n                await tx.wait();\n                setOrderType(undefined);\n            } finally {\n                setCreatingOrder(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, kovanSigner, limitOrderPrice]);\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        orderType,\n        setOrderType,\n        trade,\n        unsupported,\n        swapFee,\n        limitOrderPrice,\n        setLimitOrderPrice,\n        limitOrderFee,\n        limitOrderSwapFee,\n        limitOrderReturn,\n        onSwap,\n        swapping,\n        limitOrderUnsupported: orderType === \"limit\" && (state.fromSymbol === \"ETH\" || state.toSymbol === \"ETH\"),\n        onCreateOrder,\n        creatingOrder\n    };\n};\n\nexport default useSwapState;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Expandable from \"../components/Expandable\";\nimport ExperimentalNotice from \"../components/ExperimentalNotice\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"../components/ItemSeparator\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Selectable from \"../components/Selectable\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SwapSubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER, SETTLEMENT } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useLinker from \"../hooks/useLinker\";\nimport useSwapState, { OrderType, SwapState } from \"../hooks/useSwapState\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Token from \"../types/Token\";\nimport { isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst SwapScreen = () => {\n    return (\n        <Screen>\n            <SwapSubMenu />\n            <Container>\n                <Content>\n                    <Title text={\"Swap Tokens\"} />\n                    <Text light={true}>Swap now or place a limit order with a desired price.</Text>\n                    <Swap />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst Swap = () => {\n    const state = useSwapState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <OrderTypeSelect state={state} />\n            <Border />\n            <FromTokenSelect state={state} />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <AmountInput state={state} />\n            {state.orderType === \"limit\" && (\n                <View>\n                    <Border />\n                    <PriceInput state={state} />\n                    <ExperimentalNotice\n                        contractURL={\n                            \"https://github.com/sushiswap/sushiswap-settlement/blob/master/contracts/Settlement.sol\"\n                        }\n                    />\n                </View>\n            )}\n            <TradeInfo state={state} />\n        </View>\n    );\n};\n\nconst OrderTypeSelect = ({ state }: { state: SwapState }) => {\n    return (\n        <View>\n            <Expandable title={\"Order Type\"} expanded={!state.orderType} onExpand={() => state.setOrderType()}>\n                <OrderTypeItem state={state} orderType={\"market\"} />\n                <OrderTypeItem state={state} orderType={\"limit\"} />\n            </Expandable>\n            {state.orderType && <OrderTypeItem state={state} orderType={state.orderType} selectable={true} />}\n        </View>\n    );\n};\n\nconst OrderTypeItem = ({\n    state,\n    orderType,\n    selectable\n}: {\n    state: SwapState;\n    orderType: OrderType;\n    selectable?: boolean;\n}) => {\n    const selected = state.orderType === orderType;\n    const type = orderType === \"market\" ? \"Market Order\" : \"Limit Order\";\n    const desc =\n        orderType === \"market\"\n            ? \"Settle an order immediately\"\n            : \"Place an order with a desired price waiting to be settled\";\n    const onPress = () => state.setOrderType(state.orderType === orderType ? undefined : orderType);\n    return (\n        <Selectable\n            style={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT,\n                paddingHorizontal: Spacing.small + Spacing.tiny\n            }}\n            selected={selected}\n            disabled={selectable}\n            onPress={onPress}>\n            <Text fontWeight={\"regular\"}>{type}</Text>\n            <Text note={true}>{desc}</Text>\n        </Selectable>\n    );\n};\n\nconst FromTokenSelect = ({ state }: { state: SwapState }) => {\n    const { tokens } = useContext(EthersContext);\n    if (!state.orderType) {\n        return <Heading text={\"Token To Sell\"} disabled={true} />;\n    }\n    const ETH = tokens ? tokens.find(token => token.symbol === \"ETH\") : null;\n    return (\n        <View>\n            <TokenSelect\n                title={\"Token To Sell\"}\n                symbol={state.fromSymbol}\n                onChangeSymbol={state.setFromSymbol}\n                hidden={token => token.balance.isZero() || (state.orderType === \"limit\" && token.symbol === \"ETH\")}\n            />\n            {state.orderType === \"limit\" && !state.fromSymbol && ETH && !ETH.balance.isZero() && (\n                <LimitOrderUnsupportedNotice />\n            )}\n        </View>\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: SwapState }) => {\n    if (!state.orderType || !state.fromSymbol) {\n        return <Heading text={\"Token To Buy\"} disabled={true} />;\n    }\n    return (\n        <View>\n            <TokenSelect\n                title={\"Token To Buy\"}\n                symbol={state.toSymbol}\n                onChangeSymbol={state.setToSymbol}\n                hidden={token =>\n                    token.symbol === state.fromSymbol || (state.orderType === \"limit\" && token.symbol === \"ETH\")\n                }\n            />\n            {state.orderType === \"limit\" && !state.toSymbol && <LimitOrderUnsupportedNotice />}\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: SwapState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={\"Amount\"} disabled={true} />;\n    }\n    return (\n        <View>\n            <Heading text={state.fromSymbol + \" Amount\"} />\n            <TokenInput\n                token={state.fromToken}\n                amount={state.fromAmount}\n                onAmountChanged={state.setFromAmount}\n                autoFocus={true}\n            />\n        </View>\n    );\n};\n\nconst PriceInput = ({ state }: { state: SwapState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={\"Minimum Price\"} disabled={true} />;\n    }\n    const marketPrice =\n        state.toToken && state.trade\n            ? parseBalance(state.trade.executionPrice.toFixed(state.toToken.decimals), state.toToken.decimals)\n            : ethers.constants.Zero;\n    return (\n        <TokenInput\n            title={\"Minimum Price (\" + state.toSymbol + \"/\" + state.fromSymbol + \")\"}\n            token={\n                {\n                    ...state.toToken,\n                    balance: marketPrice\n                } as Token\n            }\n            amount={state.limitOrderPrice}\n            onAmountChanged={state.setLimitOrderPrice}\n            maxButtonText={\"MARKET\"}\n        />\n    );\n};\n\nconst LimitOrderUnsupportedNotice = () => {\n    const { placeholder } = useColors();\n    return (\n        <Notice\n            text={\"⚠️ ETH not supported for limit orders. Use WETH instead.\"}\n            color={placeholder}\n            clear={true}\n            style={{ marginVertical: Spacing.small }}\n        />\n    );\n};\n\nconst TradeInfo = ({ state }: { state: SwapState }) => {\n    if (\n        !isEmptyValue(state.fromAmount) &&\n        ((state.fromSymbol === \"ETH\" && state.toSymbol === \"WETH\") ||\n            (state.fromSymbol === \"WETH\" && state.toSymbol === \"ETH\"))\n    ) {\n        return <WrapInfo state={state} />;\n    }\n    const disabled =\n        state.fromSymbol === \"\" ||\n        state.toSymbol === \"\" ||\n        isEmptyValue(state.fromAmount) ||\n        (state.orderType === \"limit\" && state.fromSymbol === \"ETH\");\n    return (\n        <InfoBox>\n            {state.orderType === \"limit\" ? (\n                <LimitOrderInfo state={state} />\n            ) : (\n                <SwapInfo state={state} disabled={disabled} />\n            )}\n        </InfoBox>\n    );\n};\n\nconst WrapInfo = ({ state }: { state: SwapState }) => {\n    return (\n        <View>\n            <Text style={{ fontSize: 30, textAlign: \"center\" }}>\n                {state.fromAmount} {state.toSymbol}\n            </Text>\n        </View>\n    );\n};\n\nconst SwapInfo = ({ state, disabled }: { state: SwapState; disabled: boolean }) => {\n    const { textDark, textLight, placeholder } = useColors();\n    const amount = state.trade?.outputAmount?.toFixed(8);\n    const price = state.trade?.executionPrice?.toFixed(8);\n    const impact = state.trade?.priceImpact?.toFixed(2);\n    return (\n        <View>\n            <Text\n                style={{\n                    fontSize: 28,\n                    marginBottom: Spacing.normal,\n                    color: disabled ? placeholder : amount ? textDark : textLight\n                }}>\n                {disabled ? \"N/A\" : amount ? amount + \" \" + state.toSymbol : \"Fetching…\"}\n            </Text>\n            <Meta\n                label={\"Price\"}\n                text={price}\n                suffix={state.toSymbol + \"  = 1 \" + state.fromSymbol}\n                disabled={disabled}\n            />\n            <Meta label={\"Price Impact\"} text={impact} suffix={\"%\"} disabled={disabled} />\n            <Meta label={\"Fee (0.30%)\"} text={state.swapFee} suffix={state.fromSymbol} disabled={disabled} />\n            <SwapControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst SwapControls = ({ state }: { state: SwapState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = state.fromSymbol !== \"ETH\" && !state.fromTokenAllowed;\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken || !state.toToken || isEmptyValue(state.fromAmount) ? (\n                <SwapButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : state.fromSymbol === \"WETH\" && state.toSymbol === \"ETH\" ? (\n                <UnwrapButton state={state} onError={setError} />\n            ) : state.fromSymbol === \"ETH\" && state.toSymbol === \"WETH\" ? (\n                <WrapButton state={state} onError={setError} />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setFromTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!approveRequired}\n                    />\n                    <SwapButton state={state} onError={setError} disabled={approveRequired} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SwapButton = ({ state, onError, disabled }: { state: SwapState; onError: (e) => void; disabled: boolean }) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onSwap().catch(onError);\n    }, [state.onSwap, onError]);\n    return (\n        <Button\n            title={state.fromSymbol && state.toSymbol ? \"Swap \" + state.fromSymbol + \"-\" + state.toSymbol : \"Swap\"}\n            disabled={disabled}\n            loading={state.swapping}\n            onPress={onPress}\n        />\n    );\n};\n\nconst WrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onWrap().catch(onError);\n    }, []);\n    return <Button title={\"Wrap\"} loading={state.wrapping} onPress={onPress} />;\n};\n\nconst UnwrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onUnwrap().catch(onError);\n    }, []);\n    return <Button title={\"Unwrap\"} loading={state.unwrapping} onPress={onPress} />;\n};\n\nconst LimitOrderInfo = ({ state }: { state: SwapState }) => {\n    const d = !state.trade?.executionPrice;\n    return (\n        <View>\n            <Text\n                disabled={isEmptyValue(state.limitOrderReturn)}\n                style={{ fontSize: 28, marginBottom: Spacing.normal }}>\n                {isEmptyValue(state.limitOrderReturn) ? \"N/A\" : state.limitOrderReturn + \" \" + state.toSymbol}\n            </Text>\n            <Meta\n                label={\"Market Price\"}\n                text={state.trade?.executionPrice?.toFixed(8) || undefined}\n                suffix={state.toSymbol + \" / \" + state.fromSymbol + \"\"}\n                disabled={d}\n            />\n            <Meta label={\"Relayer Fee (0.20%)\"} text={state.limitOrderFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={\"Swap Fee (0.30%)\"} text={state.limitOrderSwapFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={\"Expiration\"} text={\"24 Hours From Now\"} disabled={d} />\n            <LimitOrderControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LimitOrderControls = ({ state }: { state: SwapState }) => {\n    const { getTokenAllowance } = useContext(EthersContext);\n    const [error, setError] = useState<MetamaskError>({});\n    const [allowed, setAllowed] = useState<boolean>();\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    useDelayedEffect(\n        async () => {\n            if (state.fromToken && !isEmptyValue(state.fromAmount)) {\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const allowance = await getTokenAllowance(state.fromToken.address, SETTLEMENT);\n                setAllowed(ethers.BigNumber.from(allowance).gte(fromAmount));\n            }\n        },\n        500,\n        [state.fromToken, state.fromAmount]\n    );\n    const disabled =\n        state.orderType === \"market\" ||\n        state.toSymbol === \"\" ||\n        !state.fromToken ||\n        !state.toToken ||\n        isEmptyValue(state.fromAmount) ||\n        !state.trade ||\n        isEmptyValue(state.limitOrderPrice);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {disabled ? (\n                <PlaceOrderButton state={state} onError={setError} disabled={true} />\n            ) : !Fraction.parse(state.limitOrderPrice).gt(\n                  Fraction.parse(state.trade!.executionPrice.toFixed(state.toToken!.decimals))\n              ) ? (\n                <PriceTooLowButton />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken!}\n                        spender={SETTLEMENT}\n                        onSuccess={() => setAllowed(true)}\n                        onError={setError}\n                        hidden={allowed}\n                    />\n                    <PlaceOrderButton state={state} onError={setError} disabled={!allowed} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst PriceTooLowButton = () => {\n    return <Button title={\"Set Price Greater Than Market\"} disabled={true} />;\n};\n\nconst PlaceOrderButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: SwapState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const goToLimitOrders = useLinker(\"/my-orders\", \"LimitOrders\");\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onCreateOrder();\n            goToLimitOrders();\n        } catch (e) {\n            onError(e);\n        }\n    }, [state.onCreateOrder, goToLimitOrders, onError]);\n    return <Button title={\"Place Limit Order\"} disabled={disabled} loading={state.creatingOrder} onPress={onPress} />;\n};\n\nexport default SwapScreen;\n","import React, { useContext } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { DeviceType } from \"expo-device\";\n\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { DefaultTheme, NavigationContainer, Theme } from \"@react-navigation/native\";\nimport useAsyncEffect from \"use-async-effect\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport FarmingScreen from \"./FarmingScreen\";\nimport LiquidityScreen from \"./LiquidityScreen\";\nimport MigrateScreen from \"./MigrateScreen\";\nimport MyLimitOrdersScreen from \"./MyLimitOrdersScreen\";\nimport RemoveLiquidityScreen from \"./RemoveLiquidityScreen\";\nimport StakingScreen from \"./StakingScreen\";\nimport SwapScreen from \"./SwapScreen\";\n\nexport const Screens = () => {\n    const { load } = useContext(GlobalContext);\n    useAsyncEffect(load, []);\n    return Platform.OS === \"web\" ? <WebScreens /> : <AppScreens />;\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst WebScreens = () => {\n    const { deviceType } = useContext(GlobalContext);\n    const { background } = useColors();\n    return (\n        <Router>\n            <View style={{ flex: 1, backgroundColor: background }}>\n                <Switch>\n                    <Route path={\"/swap/my-orders\"}>\n                        <MyLimitOrdersScreen />\n                    </Route>\n                    <Route path={\"/swap\"}>\n                        <SwapScreen />\n                    </Route>\n                    <Route path={\"/liquidity/remove\"}>\n                        <RemoveLiquidityScreen />\n                    </Route>\n                    <Route path={\"/liquidity/migrate\"}>\n                        <MigrateScreen />\n                    </Route>\n                    <Route path={\"/liquidity\"}>\n                        <LiquidityScreen />\n                    </Route>\n                    <Route path={\"/farming\"}>\n                        <FarmingScreen />\n                    </Route>\n                    <Route path={\"/staking\"}>\n                        <StakingScreen />\n                    </Route>\n                    <Redirect to={\"/swap\"} />\n                </Switch>\n                {deviceType !== DeviceType.PHONE && <WebHeader />}\n            </View>\n        </Router>\n    );\n};\n\nconst Tab = createBottomTabNavigator();\n\nconst AppScreens = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary, accent, background, border, textDark, disabled } = useColors();\n    const theme: Theme = {\n        ...DefaultTheme,\n        dark: darkMode,\n        colors: {\n            primary,\n            background,\n            border,\n            card: background,\n            notification: background,\n            text: textDark\n        }\n    };\n    return (\n        <NavigationContainer theme={theme}>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: accent,\n                    inactiveTintColor: disabled,\n                    labelStyle: { marginBottom: 4 }\n                }}>\n                <Tab.Screen name=\"Home\" component={SwapScreen} options={tabOptions(\"home\")} />\n                <Tab.Screen name=\"Liquidity\" component={LiquidityScreen} options={tabOptions(\"water\")} />\n                <Tab.Screen name=\"Farming\" component={FarmingScreen} options={tabOptions(\"leaf\")} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n};\n\nconst tabOptions = iconName => ({\n    tabBarIcon: ({ color }) => <Icon type={\"material-community\"} name={iconName} color={color} />\n});\n","/* tslint:disable:ordered-imports */\nimport \"./globals\";\nimport React from \"react\";\n\nimport { OpenSans_300Light, OpenSans_400Regular, OpenSans_600SemiBold } from \"@expo-google-fonts/open-sans\";\nimport { AppLoading } from \"expo\";\nimport { useFonts } from \"expo-font\";\n\nimport { ContextProvider } from \"./src/context\";\nimport { Screens } from \"./src/screens\";\nimport { YellowBox } from \"react-native\";\n\nif (__DEV__) {\n    YellowBox.ignoreWarnings([\"Setting a timer\", \"VirtualizedLists should never be nested\"]);\n}\n\nconst App = () => {\n    const [fontsLoaded] = useFonts({\n        light: OpenSans_300Light,\n        regular: OpenSans_400Regular,\n        bold: OpenSans_600SemiBold\n    });\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    }\n    return (\n        <ContextProvider>\n            <Screens />\n        </ContextProvider>\n    );\n};\n\nexport default App;\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function () {\n    navigator.serviceWorker\n      .register('./expo-service-worker.js', { scope: './' })\n      .then(function (info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function (error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n","global.Buffer = require('buffer').Buffer;\n","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask-dark.2137a831.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask.15e22fef.png\";","module.exports = __webpack_public_path__ + \"static/media/sushiswap.ef005f32.jpg\";","var map = {\n\t\"./af\": 381,\n\t\"./af.js\": 381,\n\t\"./ar\": 382,\n\t\"./ar-dz\": 383,\n\t\"./ar-dz.js\": 383,\n\t\"./ar-kw\": 384,\n\t\"./ar-kw.js\": 384,\n\t\"./ar-ly\": 385,\n\t\"./ar-ly.js\": 385,\n\t\"./ar-ma\": 386,\n\t\"./ar-ma.js\": 386,\n\t\"./ar-sa\": 387,\n\t\"./ar-sa.js\": 387,\n\t\"./ar-tn\": 388,\n\t\"./ar-tn.js\": 388,\n\t\"./ar.js\": 382,\n\t\"./az\": 389,\n\t\"./az.js\": 389,\n\t\"./be\": 390,\n\t\"./be.js\": 390,\n\t\"./bg\": 391,\n\t\"./bg.js\": 391,\n\t\"./bm\": 392,\n\t\"./bm.js\": 392,\n\t\"./bn\": 393,\n\t\"./bn-bd\": 394,\n\t\"./bn-bd.js\": 394,\n\t\"./bn.js\": 393,\n\t\"./bo\": 395,\n\t\"./bo.js\": 395,\n\t\"./br\": 396,\n\t\"./br.js\": 396,\n\t\"./bs\": 397,\n\t\"./bs.js\": 397,\n\t\"./ca\": 398,\n\t\"./ca.js\": 398,\n\t\"./cs\": 399,\n\t\"./cs.js\": 399,\n\t\"./cv\": 400,\n\t\"./cv.js\": 400,\n\t\"./cy\": 401,\n\t\"./cy.js\": 401,\n\t\"./da\": 402,\n\t\"./da.js\": 402,\n\t\"./de\": 403,\n\t\"./de-at\": 404,\n\t\"./de-at.js\": 404,\n\t\"./de-ch\": 405,\n\t\"./de-ch.js\": 405,\n\t\"./de.js\": 403,\n\t\"./dv\": 406,\n\t\"./dv.js\": 406,\n\t\"./el\": 407,\n\t\"./el.js\": 407,\n\t\"./en-au\": 408,\n\t\"./en-au.js\": 408,\n\t\"./en-ca\": 409,\n\t\"./en-ca.js\": 409,\n\t\"./en-gb\": 410,\n\t\"./en-gb.js\": 410,\n\t\"./en-ie\": 411,\n\t\"./en-ie.js\": 411,\n\t\"./en-il\": 412,\n\t\"./en-il.js\": 412,\n\t\"./en-in\": 413,\n\t\"./en-in.js\": 413,\n\t\"./en-nz\": 414,\n\t\"./en-nz.js\": 414,\n\t\"./en-sg\": 415,\n\t\"./en-sg.js\": 415,\n\t\"./eo\": 416,\n\t\"./eo.js\": 416,\n\t\"./es\": 417,\n\t\"./es-do\": 418,\n\t\"./es-do.js\": 418,\n\t\"./es-mx\": 419,\n\t\"./es-mx.js\": 419,\n\t\"./es-us\": 420,\n\t\"./es-us.js\": 420,\n\t\"./es.js\": 417,\n\t\"./et\": 421,\n\t\"./et.js\": 421,\n\t\"./eu\": 422,\n\t\"./eu.js\": 422,\n\t\"./fa\": 423,\n\t\"./fa.js\": 423,\n\t\"./fi\": 424,\n\t\"./fi.js\": 424,\n\t\"./fil\": 425,\n\t\"./fil.js\": 425,\n\t\"./fo\": 426,\n\t\"./fo.js\": 426,\n\t\"./fr\": 427,\n\t\"./fr-ca\": 428,\n\t\"./fr-ca.js\": 428,\n\t\"./fr-ch\": 429,\n\t\"./fr-ch.js\": 429,\n\t\"./fr.js\": 427,\n\t\"./fy\": 430,\n\t\"./fy.js\": 430,\n\t\"./ga\": 431,\n\t\"./ga.js\": 431,\n\t\"./gd\": 432,\n\t\"./gd.js\": 432,\n\t\"./gl\": 433,\n\t\"./gl.js\": 433,\n\t\"./gom-deva\": 434,\n\t\"./gom-deva.js\": 434,\n\t\"./gom-latn\": 435,\n\t\"./gom-latn.js\": 435,\n\t\"./gu\": 436,\n\t\"./gu.js\": 436,\n\t\"./he\": 437,\n\t\"./he.js\": 437,\n\t\"./hi\": 438,\n\t\"./hi.js\": 438,\n\t\"./hr\": 439,\n\t\"./hr.js\": 439,\n\t\"./hu\": 440,\n\t\"./hu.js\": 440,\n\t\"./hy-am\": 441,\n\t\"./hy-am.js\": 441,\n\t\"./id\": 442,\n\t\"./id.js\": 442,\n\t\"./is\": 443,\n\t\"./is.js\": 443,\n\t\"./it\": 444,\n\t\"./it-ch\": 445,\n\t\"./it-ch.js\": 445,\n\t\"./it.js\": 444,\n\t\"./ja\": 446,\n\t\"./ja.js\": 446,\n\t\"./jv\": 447,\n\t\"./jv.js\": 447,\n\t\"./ka\": 448,\n\t\"./ka.js\": 448,\n\t\"./kk\": 449,\n\t\"./kk.js\": 449,\n\t\"./km\": 450,\n\t\"./km.js\": 450,\n\t\"./kn\": 451,\n\t\"./kn.js\": 451,\n\t\"./ko\": 452,\n\t\"./ko.js\": 452,\n\t\"./ku\": 453,\n\t\"./ku.js\": 453,\n\t\"./ky\": 454,\n\t\"./ky.js\": 454,\n\t\"./lb\": 455,\n\t\"./lb.js\": 455,\n\t\"./lo\": 456,\n\t\"./lo.js\": 456,\n\t\"./lt\": 457,\n\t\"./lt.js\": 457,\n\t\"./lv\": 458,\n\t\"./lv.js\": 458,\n\t\"./me\": 459,\n\t\"./me.js\": 459,\n\t\"./mi\": 460,\n\t\"./mi.js\": 460,\n\t\"./mk\": 461,\n\t\"./mk.js\": 461,\n\t\"./ml\": 462,\n\t\"./ml.js\": 462,\n\t\"./mn\": 463,\n\t\"./mn.js\": 463,\n\t\"./mr\": 464,\n\t\"./mr.js\": 464,\n\t\"./ms\": 465,\n\t\"./ms-my\": 466,\n\t\"./ms-my.js\": 466,\n\t\"./ms.js\": 465,\n\t\"./mt\": 467,\n\t\"./mt.js\": 467,\n\t\"./my\": 468,\n\t\"./my.js\": 468,\n\t\"./nb\": 469,\n\t\"./nb.js\": 469,\n\t\"./ne\": 470,\n\t\"./ne.js\": 470,\n\t\"./nl\": 471,\n\t\"./nl-be\": 472,\n\t\"./nl-be.js\": 472,\n\t\"./nl.js\": 471,\n\t\"./nn\": 473,\n\t\"./nn.js\": 473,\n\t\"./oc-lnc\": 474,\n\t\"./oc-lnc.js\": 474,\n\t\"./pa-in\": 475,\n\t\"./pa-in.js\": 475,\n\t\"./pl\": 476,\n\t\"./pl.js\": 476,\n\t\"./pt\": 477,\n\t\"./pt-br\": 478,\n\t\"./pt-br.js\": 478,\n\t\"./pt.js\": 477,\n\t\"./ro\": 479,\n\t\"./ro.js\": 479,\n\t\"./ru\": 480,\n\t\"./ru.js\": 480,\n\t\"./sd\": 481,\n\t\"./sd.js\": 481,\n\t\"./se\": 482,\n\t\"./se.js\": 482,\n\t\"./si\": 483,\n\t\"./si.js\": 483,\n\t\"./sk\": 484,\n\t\"./sk.js\": 484,\n\t\"./sl\": 485,\n\t\"./sl.js\": 485,\n\t\"./sq\": 486,\n\t\"./sq.js\": 486,\n\t\"./sr\": 487,\n\t\"./sr-cyrl\": 488,\n\t\"./sr-cyrl.js\": 488,\n\t\"./sr.js\": 487,\n\t\"./ss\": 489,\n\t\"./ss.js\": 489,\n\t\"./sv\": 490,\n\t\"./sv.js\": 490,\n\t\"./sw\": 491,\n\t\"./sw.js\": 491,\n\t\"./ta\": 492,\n\t\"./ta.js\": 492,\n\t\"./te\": 493,\n\t\"./te.js\": 493,\n\t\"./tet\": 494,\n\t\"./tet.js\": 494,\n\t\"./tg\": 495,\n\t\"./tg.js\": 495,\n\t\"./th\": 496,\n\t\"./th.js\": 496,\n\t\"./tk\": 497,\n\t\"./tk.js\": 497,\n\t\"./tl-ph\": 498,\n\t\"./tl-ph.js\": 498,\n\t\"./tlh\": 499,\n\t\"./tlh.js\": 499,\n\t\"./tr\": 500,\n\t\"./tr.js\": 500,\n\t\"./tzl\": 501,\n\t\"./tzl.js\": 501,\n\t\"./tzm\": 502,\n\t\"./tzm-latn\": 503,\n\t\"./tzm-latn.js\": 503,\n\t\"./tzm.js\": 502,\n\t\"./ug-cn\": 504,\n\t\"./ug-cn.js\": 504,\n\t\"./uk\": 505,\n\t\"./uk.js\": 505,\n\t\"./ur\": 506,\n\t\"./ur.js\": 506,\n\t\"./uz\": 507,\n\t\"./uz-latn\": 508,\n\t\"./uz-latn.js\": 508,\n\t\"./uz.js\": 507,\n\t\"./vi\": 509,\n\t\"./vi.js\": 509,\n\t\"./x-pseudo\": 510,\n\t\"./x-pseudo.js\": 510,\n\t\"./yo\": 511,\n\t\"./yo.js\": 511,\n\t\"./zh-cn\": 512,\n\t\"./zh-cn.js\": 512,\n\t\"./zh-hk\": 513,\n\t\"./zh-hk.js\": 513,\n\t\"./zh-mo\": 514,\n\t\"./zh-mo.js\": 514,\n\t\"./zh-tw\": 515,\n\t\"./zh-tw.js\": 515\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 844;"],"sourceRoot":""}