{"version":3,"sources":["src/components/InfoBox.tsx","src/components/Notice.tsx","src/components/Border.tsx","src/hooks/useDelayedEffect.tsx","src/components/TokenAmount.tsx","src/components/TokenSymbol.tsx","src/components/UnsupportedButton.tsx","src/components/TokenName.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/components/ExperimentalNotice.tsx","src/hooks/useSwapState.tsx","src/screens/SwapScreen.tsx"],"names":["InfoBox","props","backgroundLight","useColors","border","useStyles","style","color","backgroundColor","marginTop","Spacing","normal","small","padding","tiny","Notice","borderStyle","borderColor","clear","paddingHorizontal","note","text","buttonText","onPressButton","title","type","size","fontWeight","onPress","titleStyle","buttonStyle","paddingVertical","alignSelf","Border","height","width","marginBottom","handles","useDelayedEffect","effect","timeout","inputs","key","toString","useAsyncEffect","handle","setTimeout","clearTimeout","TokenAmount","caption","disabled","formatBalance","amount","token","balance","decimals","TokenSymbol","medium","marginLeft","IS_DESKTOP","symbol","UnsupportedButton","state","fromSymbol","toSymbol","TokenName","Text","numberOfLines","ellipsizeMode","name","Loading","ActivityIndicator","position","right","bottom","TokenItem","accent","useCallback","onSelectToken","Selectable","selected","containerStyle","ITEM_SEPARATOR_HEIGHT","FlexView","alignItems","TokenLogo","View","flex","Button","duplicate","TokenSearch","useContext","EthersContext","signer","tokens","useState","tokenToAdd","setTokenToAdd","loading","setLoading","findIndex","t","address","useEffect","undefined","a","async","trim","ethers","utils","isAddress","findOrFetchToken","Input","value","onChangeText","placeholder","autoFocus","inputStyle","marginHorizontal","fontSize","inputContainerStyle","borderBottomWidth","marginRight","labelStyle","paddingTop","paddingBottom","onAddToken","TokenList","loadingTokens","renderItem","item","data","useMemo","filter","hidden","sort","t1","t2","isZero","localeCompare","length","FlatList","keyExtractor","EmptyList","margin","textAlign","selectable","TokenSelect","addCustomToken","search","setSearch","query","setQuery","find","toLowerCase","Expandable","expanded","onExpand","onChangeSymbol","hide","includes","ExperimentalNotice","onPressContract","useLinker","contractURL","marginVertical","useSwapState","useTokenPairState","chainId","provider","kovanSigner","updateTokens","useSDK","getTrade","swap","createOrder","calculateSwapFee","calculateLimitOrderFee","calculateLimitOrderReturn","orderType","setOrderType","priceInETH","setPriceInETH","trade","setTrade","unsupported","setUnsupported","swapFee","setSwapFee","limitOrderPrice","setLimitOrderPrice","limitOrderFee","setLimitOrderFee","limitOrderSwapFee","setLimitOrderSwapFee","limitOrderReturn","setLimitOrderReturn","swapping","setSwapping","creatingOrder","setCreatingOrder","setFromSymbol","fromToken","constants","WeiPerEther","Token","toToken","WETH","Fetcher","fetchPairData","pair","parseBalance","priceOf","toFixed","isEmptyValue","fromAmount","useDelayedOnBlockEffect","block","sub","onSwap","result","tx","wait","onCreateOrder","amountIn","Fraction","parse","apply","mul","pow10","div","limitOrderUnsupported","Swap","large","OrderTypeSelect","OrderTypeItem","desc","FromTokenSelect","customTokens","Heading","ETH","ToTokenSelect","setToSymbol","AmountInput","TokenInput","onAmountChanged","setFromAmount","AmountNotice","lte","PriceInput","marketPrice","executionPrice","Zero","maxButtonText","LimitOrderUnsupportedNotice","TradeInfo","WrapInfo","SwapInfo","textDark","textLight","outputAmount","price","impact","priceImpact","Meta","label","suffix","SwapControls","error","setError","approveRequired","fromTokenAllowed","gt","InsufficientBalanceButton","onError","FetchingButton","ApproveButton","spender","ROUTER","onSuccess","setFromTokenAllowed","message","code","ErrorMessage","SwapButton","catch","WrapButton","onWrap","wrapping","UnwrapButton","onUnwrap","unwrapping","LimitOrderInfo","d","LimitOrderControls","getTokenAllowance","allowed","setAllowed","SETTLEMENT","allowance","BigNumber","from","gte","PriceTooLowButton","PlaceOrderButton","goToLimitOrders","SwapScreen","Screen","Container","Content","Title","light","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/9.df220598.chunk.js","sourcesContent":["import React, { PropsWithChildren } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\n    const { backgroundLight } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: backgroundLight }),\n                    backgroundColor: backgroundLight,\n                    marginTop: Spacing.normal + Spacing.small,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\n\nexport default InfoBox;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || borderStyle.borderColor;\n    return (\n        <View style={[props.clear ? { paddingHorizontal: Spacing.tiny } : borderStyle, props.style]}>\n            <Text\n                note={true}\n                style={{\n                    color\n                }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = () => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: Spacing.small,\n                marginBottom: Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import useAsyncEffect from \"use-async-effect\";\n\nconst handles = {};\n\nconst useDelayedEffect = (\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\n    timeout: number,\n    inputs?: any[]\n) => {\n    const key = effect.toString();\n    useAsyncEffect<number>(\n        () => {\n            const handle = setTimeout(effect, timeout);\n            handles[key] = handle;\n            return handle;\n        },\n        handle => {\n            clearTimeout(handle);\n        },\n        inputs\n    );\n};\nexport default useDelayedEffect;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={true} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {IS_DESKTOP ? props.token.symbol : \"\"}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import React from \"react\";\n\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\nimport Button from \"./Button\";\n\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" Not Supported\"} disabled={true} />;\n};\n\nexport default UnsupportedButton;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","import React, { FC, useCallback, useContext, useEffect, useState } from \"react\";\nimport { ActivityIndicator, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Input from \"./Input\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\n\nexport interface TokenSearchProps {\n    tokens?: Token[];\n    text: string;\n    onChangeText: (text: string) => void;\n    onAddToken?: (token: Token) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSearch: FC<TokenSearchProps> = props => {\n    const { border } = useStyles();\n    const { signer, tokens } = useContext(EthersContext);\n    const [tokenToAdd, setTokenToAdd] = useState<Token>();\n    const [loading, setLoading] = useState(false);\n    const duplicate = !!tokenToAdd && tokens.findIndex(t => t.address === tokenToAdd.address) !== -1;\n    if (!props.tokens) return <View />;\n    useEffect(() => {\n        if (props.text === \"\") {\n            setLoading(false);\n            setTokenToAdd(undefined);\n        }\n    }, [props.text]);\n    useDelayedEffect(\n        async () => {\n            const address = props.text.trim();\n            if (signer && ethers.utils.isAddress(address)) {\n                setLoading(true);\n                try {\n                    const token = await findOrFetchToken(address);\n                    if (token.name && token.symbol && token.decimals) {\n                        setTokenToAdd(token as Token);\n                    }\n                } finally {\n                    setLoading(false);\n                }\n            }\n        },\n        300,\n        [signer, props.text]\n    );\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.small }}>\n                <Input\n                    value={props.text}\n                    onChangeText={props.onChangeText}\n                    placeholder={\"Token name, symbol or address\"}\n                    autoFocus={IS_DESKTOP}\n                    inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\n                    inputContainerStyle={{ borderBottomWidth: 0, marginRight: loading ? 32 : 0 }}\n                    labelStyle={{ height: 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 12,\n                        paddingBottom: 0\n                    }}\n                />\n                {props.onAddToken && loading && <Loading />}\n            </FlexView>\n            {props.onAddToken && tokenToAdd && (\n                <TokenItem token={tokenToAdd} selected={true} onSelectToken={props.onAddToken} duplicate={duplicate} />\n            )}\n        </View>\n    );\n};\n\nconst Loading = () => <ActivityIndicator size={\"small\"} style={{ position: \"absolute\", right: 16, bottom: 16 }} />;\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    duplicate: boolean;\n}) => {\n    const { accent } = useColors();\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={false}\n            disabled={true}\n            onPress={onPress}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} />\n                <TokenName token={props.token} />\n                <View style={{ flex: 1 }} />\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    color={accent}\n                    title={props.duplicate ? \"Already Added\" : \"ADD \" + props.token.symbol}\n                    fontWeight={\"bold\"}\n                    onPress={onPress}\n                    disabled={props.duplicate}\n                    buttonStyle={{ paddingHorizontal: 4, height: 27 }}\n                />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSearch;\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport Token from \"../types/Token\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenSearch from \"./TokenSearch\";\nimport TokenSymbol from \"./TokenSymbol\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    style?: ViewStyle;\n}\n\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens, addCustomToken } = useContext(EthersContext);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\n    const onAddToken = async (t: Token) => {\n        await addCustomToken(t);\n        setSearch(\"\");\n        setQuery(\"\");\n    };\n    const hidden = (t: Token) => {\n        let hide = props.hidden?.(t) || false;\n        if (!hide && query.length > 0 && !ethers.utils.isAddress(query)) {\n            hide = !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\n        }\n        return hide;\n    };\n    useEffect(() => setSearch(\"\"), [props.symbol]);\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\n    return (\n        <View style={props.style}>\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={onAddToken} />\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\n            </Expandable>\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () =>\n            tokens\n                .filter(token => (props.hidden ? !props.hidden(token) : true))\n                .sort(\n                    (t1, t2) =>\n                        (t2.balance.isZero() ? 0 : 10000000000) -\n                        (t1.balance.isZero() ? 0 : 10000000000) +\n                        t1.symbol.localeCompare(t2.symbol)\n                ),\n        [tokens, props.hidden]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any matching tokens.\"}\n            </Text>\n        </View>\n    );\n};\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <TokenName token={props.token} disabled={props.disabled} />\n                <TokenAmount token={props.token} disabled={props.disabled} style={{ flex: 1, textAlign: \"right\" }} />\n                <TokenSymbol token={props.token} disabled={props.disabled} />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSelect;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useLinker from \"../hooks/useLinker\";\nimport Notice from \"./Notice\";\n\nconst ExperimentalNotice = (props: { contractURL: string }) => {\n    const onPressContract = useLinker(props.contractURL, \"\", \"_blank\");\n    return (\n        <View style={{ marginVertical: Spacing.tiny }}>\n            <Notice\n                text={\n                    \"This feature is in beta and contracts are unaudited. Read the contract yourself and use it at your own risk.\"\n                }\n                color={\"orange\"}\n                buttonText={\"View Contract\"}\n                onPressButton={onPressContract}\n            />\n        </View>\n    );\n};\n\nexport default ExperimentalNotice;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { Trade } from \"@sushiswap/sdk\";\nimport { Fetcher, Token, WETH } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { formatBalance, isEmptyValue, parseBalance, pow10 } from \"../utils\";\nimport useDelayedEffect from \"./useDelayedEffect\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport type OrderType = \"market\" | \"limit\";\n\nexport interface SwapState extends TokenPairState {\n    orderType?: OrderType;\n    setOrderType: (orderType?: OrderType) => void;\n    priceInETH?: ethers.BigNumber | null;\n    trade?: Trade;\n    unsupported: boolean;\n    limitOrderUnsupported: boolean;\n    limitOrderPrice: string;\n    setLimitOrderPrice: (price: string) => void;\n    swapFee: string;\n    limitOrderFee: string;\n    limitOrderSwapFee: string;\n    limitOrderReturn: string;\n    onSwap: () => Promise<void>;\n    swapping: boolean;\n    onCreateOrder: () => Promise<void>;\n    creatingOrder: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapState: () => SwapState = () => {\n    const state = useTokenPairState();\n    const { chainId, provider, signer, kovanSigner, updateTokens } = useContext(EthersContext);\n    const {\n        getTrade,\n        swap,\n        createOrder,\n        calculateSwapFee,\n        calculateLimitOrderFee,\n        calculateLimitOrderReturn\n    } = useSDK();\n    const [loading, setLoading] = useState(true);\n    const [orderType, setOrderType] = useState<OrderType>();\n    const [priceInETH, setPriceInETH] = useState<ethers.BigNumber | null>();\n    const [trade, setTrade] = useState<Trade>();\n    const [unsupported, setUnsupported] = useState(false);\n    const [swapFee, setSwapFee] = useState(\"\");\n    const [limitOrderPrice, setLimitOrderPrice] = useState<string>(\"\");\n    const [limitOrderFee, setLimitOrderFee] = useState(\"\");\n    const [limitOrderSwapFee, setLimitOrderSwapFee] = useState(\"\");\n    const [limitOrderReturn, setLimitOrderReturn] = useState(\"\");\n    const [swapping, setSwapping] = useState(false);\n    const [creatingOrder, setCreatingOrder] = useState(false);\n\n    useEffect(() => {\n        if (!orderType) {\n            state.setFromSymbol(\"\");\n        }\n        setLimitOrderPrice(\"\");\n    }, [orderType]);\n\n    useAsyncEffect(async () => {\n        setPriceInETH(undefined);\n        if (provider && state.fromToken) {\n            if (state.fromToken.symbol === \"WETH\") {\n                setPriceInETH(ethers.constants.WeiPerEther);\n            } else {\n                try {\n                    const fromToken = new Token(chainId, state.fromToken.address, state.fromToken.decimals);\n                    const toToken = WETH[chainId];\n                    const pair = await Fetcher.fetchPairData(fromToken, toToken, provider);\n                    setPriceInETH(parseBalance(pair.priceOf(toToken).toFixed(), fromToken.decimals));\n                } catch (e) {\n                    setPriceInETH(null);\n                }\n            }\n        }\n    }, [chainId, provider, state.fromToken]);\n\n    useDelayedEffect(\n        () => {\n            if (isEmptyValue(state.fromAmount)) {\n                setLimitOrderPrice(\"\");\n                setTrade(undefined);\n            }\n        },\n        300,\n        [state.fromAmount]\n    );\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n            }\n            if (state.fromToken && state.toToken && state.fromAmount && provider) {\n                const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                if (!amount.isZero()) {\n                    setUnsupported(false);\n                    try {\n                        setTrade(await getTrade(state.fromToken, state.toToken, amount, provider));\n                    } catch (e) {\n                        setUnsupported(true);\n                    } finally {\n                        setLoading(false);\n                    }\n                }\n            }\n        },\n        () => \"getTrade(\" + state.fromSymbol + \",\" + state.toSymbol + \",\" + state.fromAmount + \")\",\n        [state.fromSymbol, state.toSymbol, state.fromAmount]\n    );\n\n    useAsyncEffect(() => {\n        if (trade && !isEmptyValue(state.fromAmount)) {\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n            setSwapFee(formatBalance(calculateSwapFee(fromAmount), state.fromToken!.decimals, 8));\n            if (orderType === \"limit\") {\n                setLimitOrderFee(formatBalance(calculateLimitOrderFee(fromAmount), state.fromToken!.decimals, 8));\n                setLimitOrderSwapFee(\n                    formatBalance(\n                        calculateSwapFee(fromAmount.sub(calculateLimitOrderFee(fromAmount))),\n                        state.fromToken!.decimals,\n                        8\n                    )\n                );\n            }\n        }\n    }, [orderType, trade, state.fromAmount]);\n\n    useAsyncEffect(() => {\n        if (state.fromToken && state.toToken && !isEmptyValue(state.fromAmount) && !isEmptyValue(limitOrderPrice)) {\n            setLimitOrderReturn(\n                formatBalance(\n                    calculateLimitOrderReturn(\n                        state.fromToken,\n                        state.toToken,\n                        parseBalance(state.fromAmount, state.fromToken.decimals),\n                        limitOrderPrice\n                    ),\n                    state.toToken.decimals\n                )\n            );\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, limitOrderPrice]);\n\n    const onSwap = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && signer && trade) {\n            setSwapping(true);\n            try {\n                const result = await swap(trade, signer);\n                if (result) {\n                    await result.tx.wait();\n                    await updateTokens();\n                    setTrade(undefined);\n                    setOrderType(undefined);\n                }\n            } finally {\n                setSwapping(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, trade]);\n\n    const onCreateOrder = useCallback(async () => {\n        if (\n            state.fromToken &&\n            state.toToken &&\n            state.fromAmount &&\n            !isEmptyValue(limitOrderPrice) &&\n            signer &&\n            kovanSigner\n        ) {\n            setCreatingOrder(true);\n            try {\n                const amountIn = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const tx = await createOrder(\n                    state.fromToken,\n                    state.toToken,\n                    amountIn,\n                    Fraction.parse(limitOrderPrice)\n                        .apply(amountIn)\n                        .mul(pow10(state.toToken.decimals))\n                        .div(pow10(state.fromToken.decimals)),\n                    signer,\n                    kovanSigner\n                );\n                await tx.wait();\n                setTrade(undefined);\n                setOrderType(undefined);\n            } finally {\n                setCreatingOrder(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, kovanSigner, limitOrderPrice]);\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        orderType,\n        setOrderType,\n        priceInETH,\n        trade,\n        unsupported,\n        swapFee,\n        limitOrderPrice,\n        setLimitOrderPrice,\n        limitOrderFee,\n        limitOrderSwapFee,\n        limitOrderReturn,\n        onSwap,\n        swapping,\n        limitOrderUnsupported: orderType === \"limit\" && (state.fromSymbol === \"ETH\" || state.toSymbol === \"ETH\"),\n        onCreateOrder,\n        creatingOrder\n    };\n};\n\nexport default useSwapState;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Expandable from \"../components/Expandable\";\nimport ExperimentalNotice from \"../components/ExperimentalNotice\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"../components/ItemSeparator\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Selectable from \"../components/Selectable\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SwapSubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER, SETTLEMENT } from \"../constants/contracts\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useLinker from \"../hooks/useLinker\";\nimport useSwapState, { OrderType, SwapState } from \"../hooks/useSwapState\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst SwapScreen = () => {\n    return (\n        <Screen>\n            <SwapSubMenu />\n            <Container>\n                <Content>\n                    <Title text={\"New Order\"} />\n                    <Text light={true}>Swap now or place a limit order with a desired price.</Text>\n                    <Swap />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst Swap = () => {\n    const state = useSwapState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <OrderTypeSelect state={state} />\n            <Border />\n            <FromTokenSelect state={state} />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <AmountInput state={state} />\n            {state.orderType === \"limit\" && (\n                <View>\n                    <AmountNotice state={state} />\n                    <Border />\n                    <PriceInput state={state} />\n                </View>\n            )}\n            <TradeInfo state={state} />\n        </View>\n    );\n};\n\nconst OrderTypeSelect = ({ state }: { state: SwapState }) => {\n    return (\n        <View>\n            <Expandable title={\"Order Type\"} expanded={!state.orderType} onExpand={() => state.setOrderType()}>\n                <OrderTypeItem state={state} orderType={\"market\"} />\n                <OrderTypeItem state={state} orderType={\"limit\"} />\n            </Expandable>\n            {state.orderType && <OrderTypeItem state={state} orderType={state.orderType} selectable={true} />}\n            {state.orderType === \"limit\" && (\n                <ExperimentalNotice\n                    contractURL={\n                        \"https://github.com/sushiswap/sushiswap-settlement/blob/master/contracts/Settlement.sol\"\n                    }\n                />\n            )}\n        </View>\n    );\n};\n\nconst OrderTypeItem = ({\n    state,\n    orderType,\n    selectable\n}: {\n    state: SwapState;\n    orderType: OrderType;\n    selectable?: boolean;\n}) => {\n    const selected = state.orderType === orderType;\n    const type = orderType === \"market\" ? \"Market Order\" : \"Limit Order\";\n    const desc =\n        orderType === \"market\" ? \"Settle an order immediately\" : \"Place an order with a desired price to be settled\";\n    const onPress = () => state.setOrderType(state.orderType === orderType ? undefined : orderType);\n    return (\n        <Selectable\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}\n            style={{\n                paddingHorizontal: Spacing.small + Spacing.tiny\n            }}\n            selected={selected}\n            disabled={selectable}\n            onPress={onPress}>\n            <Text fontWeight={\"regular\"}>{type}</Text>\n            <Text note={true}>{desc}</Text>\n        </Selectable>\n    );\n};\n\nconst FromTokenSelect = ({ state }: { state: SwapState }) => {\n    const { tokens, customTokens } = useContext(EthersContext);\n    if (!state.orderType) {\n        return <Heading text={\"Token To Sell\"} disabled={true} />;\n    }\n    const ETH = tokens ? tokens.find(token => token.symbol === \"ETH\") : null;\n    return (\n        <View>\n            <TokenSelect\n                title={\"Token To Sell\"}\n                symbol={state.fromSymbol}\n                onChangeSymbol={state.setFromSymbol}\n                hidden={token =>\n                    (!customTokens.find(t => t.address === token.address) && token.balance.isZero()) ||\n                    (state.orderType === \"limit\" && token.symbol === \"ETH\")\n                }\n            />\n            {state.orderType === \"limit\" && !state.fromSymbol && ETH && !ETH.balance.isZero() && (\n                <LimitOrderUnsupportedNotice />\n            )}\n        </View>\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: SwapState }) => {\n    if (!state.orderType || !state.fromSymbol) {\n        return <Heading text={\"Token To Buy\"} disabled={true} />;\n    }\n    return (\n        <View>\n            <TokenSelect\n                title={\"Token To Buy\"}\n                symbol={state.toSymbol}\n                onChangeSymbol={state.setToSymbol}\n                hidden={token =>\n                    token.symbol === state.fromSymbol || (state.orderType === \"limit\" && token.symbol === \"ETH\")\n                }\n            />\n            {state.orderType === \"limit\" && !state.toSymbol && <LimitOrderUnsupportedNotice />}\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: SwapState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={\"Amount\"} disabled={true} />;\n    }\n    return (\n        <View>\n            <Heading text={state.fromSymbol + \" Amount\"} />\n            <TokenInput\n                token={state.fromToken}\n                amount={state.fromAmount}\n                onAmountChanged={state.setFromAmount}\n                autoFocus={IS_DESKTOP}\n            />\n        </View>\n    );\n};\n\nconst AmountNotice = ({ state }: { state: SwapState }) => {\n    if (\n        state.priceInETH === undefined ||\n        isEmptyValue(state.fromAmount) ||\n        !state.fromToken ||\n        (state.priceInETH && parseBalance(state.fromAmount, state.fromToken.decimals).lte(state.priceInETH.mul(10)))\n    ) {\n        return <View />;\n    }\n    return (\n        <View style={{ marginTop: Spacing.small }}>\n            <Notice\n                text={\n                    state.priceInETH === null\n                        ? \"This token is not supported in beta.\"\n                        : \"Maximum allowed amount in beta is \" +\n                          formatBalance(state.priceInETH.mul(10), state.fromToken!.decimals) +\n                          \" \" +\n                          state.fromSymbol +\n                          \" (≈ 10 ETH).\"\n                }\n                color={\"red\"}\n            />\n        </View>\n    );\n};\n\nconst PriceInput = ({ state }: { state: SwapState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={\"Minimum Price\"} disabled={true} />;\n    }\n    const marketPrice =\n        state.toToken && state.trade\n            ? parseBalance(state.trade.executionPrice.toFixed(state.toToken.decimals), state.toToken.decimals)\n            : ethers.constants.Zero;\n    return (\n        <TokenInput\n            title={\"Minimum Price (\" + state.toSymbol + \"/\" + state.fromSymbol + \")\"}\n            token={\n                {\n                    ...state.toToken,\n                    balance: marketPrice\n                } as Token\n            }\n            amount={state.limitOrderPrice}\n            onAmountChanged={state.setLimitOrderPrice}\n            maxButtonText={\"MARKET\"}\n        />\n    );\n};\n\nconst LimitOrderUnsupportedNotice = () => {\n    const { placeholder } = useColors();\n    return (\n        <Notice\n            text={\"⚠️ ETH not supported for limit orders. Use WETH instead.\"}\n            color={placeholder}\n            clear={true}\n            style={{ marginVertical: Spacing.small }}\n        />\n    );\n};\n\nconst TradeInfo = ({ state }: { state: SwapState }) => {\n    if (\n        (state.fromSymbol === \"ETH\" && state.toSymbol === \"WETH\") ||\n        (state.fromSymbol === \"WETH\" && state.toSymbol === \"ETH\")\n    ) {\n        return <WrapInfo state={state} />;\n    }\n    const disabled =\n        state.fromSymbol === \"\" ||\n        state.toSymbol === \"\" ||\n        isEmptyValue(state.fromAmount) ||\n        (state.orderType === \"limit\" && state.fromSymbol === \"ETH\");\n    return (\n        <InfoBox>\n            {state.orderType === \"limit\" ? (\n                <LimitOrderInfo state={state} />\n            ) : (\n                <SwapInfo state={state} disabled={disabled} />\n            )}\n        </InfoBox>\n    );\n};\n\nconst WrapInfo = ({ state }: { state: SwapState }) => {\n    const disabled = isEmptyValue(state.fromAmount);\n    return (\n        <InfoBox>\n            <Text style={{ fontSize: 28, marginBottom: Spacing.normal }} disabled={disabled}>\n                {disabled ? \"N/A\" : state.fromAmount + \" \" + state.toSymbol}\n            </Text>\n            <SwapControls state={state} />\n        </InfoBox>\n    );\n};\n\nconst SwapInfo = ({ state, disabled }: { state: SwapState; disabled: boolean }) => {\n    const { textDark, textLight, placeholder } = useColors();\n    const amount = state.trade?.outputAmount?.toFixed();\n    const price = state.trade?.executionPrice?.toFixed();\n    const impact = state.trade?.priceImpact?.toFixed(2);\n    return (\n        <View>\n            <Text\n                style={{\n                    fontSize: 28,\n                    marginBottom: Spacing.normal,\n                    color: disabled ? placeholder : amount ? textDark : textLight\n                }}>\n                {disabled ? \"N/A\" : amount ? amount + \" \" + state.toSymbol : \"Fetching…\"}\n            </Text>\n            <Meta\n                label={\"Price\"}\n                text={price}\n                suffix={state.toSymbol + \"  = 1 \" + state.fromSymbol}\n                disabled={disabled}\n            />\n            <Meta label={\"Price Impact\"} text={impact} suffix={\"%\"} disabled={disabled} />\n            <Meta label={\"Fee (0.30%)\"} text={state.swapFee} suffix={state.fromSymbol} disabled={disabled} />\n            <SwapControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst SwapControls = ({ state }: { state: SwapState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = state.fromSymbol !== \"ETH\" && !state.fromTokenAllowed;\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken || !state.toToken || isEmptyValue(state.fromAmount) ? (\n                <SwapButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : state.fromSymbol === \"WETH\" && state.toSymbol === \"ETH\" ? (\n                <UnwrapButton state={state} onError={setError} />\n            ) : state.fromSymbol === \"ETH\" && state.toSymbol === \"WETH\" ? (\n                <WrapButton state={state} onError={setError} />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setFromTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!approveRequired}\n                    />\n                    <SwapButton state={state} onError={setError} disabled={approveRequired} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SwapButton = ({ state, onError, disabled }: { state: SwapState; onError: (e) => void; disabled: boolean }) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onSwap().catch(onError);\n    }, [state.onSwap, onError]);\n    return (\n        <Button\n            title={state.fromSymbol && state.toSymbol ? \"Swap \" + state.fromSymbol + \"-\" + state.toSymbol : \"Swap\"}\n            disabled={disabled}\n            loading={state.swapping}\n            onPress={onPress}\n        />\n    );\n};\n\nconst WrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onWrap().catch(onError);\n    }, []);\n    return <Button title={\"Wrap\"} loading={state.wrapping} onPress={onPress} />;\n};\n\nconst UnwrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onUnwrap().catch(onError);\n    }, []);\n    return <Button title={\"Unwrap\"} loading={state.unwrapping} onPress={onPress} />;\n};\n\nconst LimitOrderInfo = ({ state }: { state: SwapState }) => {\n    const d = !state.trade?.executionPrice;\n    return (\n        <View>\n            <Text\n                disabled={isEmptyValue(state.limitOrderReturn)}\n                style={{ fontSize: 28, marginBottom: Spacing.normal }}>\n                {isEmptyValue(state.limitOrderReturn) ? \"N/A\" : state.limitOrderReturn + \" \" + state.toSymbol}\n            </Text>\n            <Meta\n                label={\"Market Price\"}\n                text={state.trade?.executionPrice?.toFixed(8) || undefined}\n                suffix={state.toSymbol + \" / \" + state.fromSymbol + \"\"}\n                disabled={d}\n            />\n            <Meta label={\"Relayer Fee (0.20%)\"} text={state.limitOrderFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={\"Swap Fee (0.30%)\"} text={state.limitOrderSwapFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={\"Expiration\"} text={\"24 Hours From Now\"} disabled={d} />\n            <LimitOrderControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LimitOrderControls = ({ state }: { state: SwapState }) => {\n    const { getTokenAllowance } = useContext(EthersContext);\n    const [error, setError] = useState<MetamaskError>({});\n    const [allowed, setAllowed] = useState<boolean>();\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    useDelayedEffect(\n        async () => {\n            if (state.fromToken && !isEmptyValue(state.fromAmount)) {\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const allowance = await getTokenAllowance(state.fromToken.address, SETTLEMENT);\n                setAllowed(ethers.BigNumber.from(allowance).gte(fromAmount));\n            }\n        },\n        500,\n        [state.fromToken, state.fromAmount]\n    );\n    const disabled =\n        state.orderType === \"market\" ||\n        state.toSymbol === \"\" ||\n        !state.fromToken ||\n        !state.toToken ||\n        isEmptyValue(state.fromAmount) ||\n        !state.priceInETH ||\n        parseBalance(state.fromAmount, state.fromToken!.decimals).gt(state.priceInETH.mul(10)) ||\n        !state.trade ||\n        isEmptyValue(state.limitOrderPrice);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {disabled ? (\n                <PlaceOrderButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken!.decimals).gt(state.fromToken!.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : !Fraction.parse(state.limitOrderPrice).gt(\n                  Fraction.parse(state.trade!.executionPrice.toFixed(state.toToken!.decimals))\n              ) ? (\n                <PriceTooLowButton />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken!}\n                        spender={SETTLEMENT}\n                        onSuccess={() => setAllowed(true)}\n                        onError={setError}\n                        hidden={allowed}\n                    />\n                    <PlaceOrderButton state={state} onError={setError} disabled={!allowed} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst PriceTooLowButton = () => {\n    return <Button title={\"Set Price Greater Than Market\"} disabled={true} />;\n};\n\nconst PlaceOrderButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: SwapState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const goToLimitOrders = useLinker(\"/swap/my-orders\", \"LimitOrders\");\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onCreateOrder();\n            goToLimitOrders();\n        } catch (e) {\n            onError(e);\n        }\n    }, [state.onCreateOrder, goToLimitOrders, onError]);\n    return <Button title={\"Place Limit Order\"} disabled={disabled} loading={state.creatingOrder} onPress={onPress} />;\n};\n\nexport default SwapScreen;\n"],"sourceRoot":""}