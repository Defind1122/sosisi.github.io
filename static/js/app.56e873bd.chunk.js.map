{"version":3,"sources":["assets/metamask-dark.png","assets/metamask.png","assets/sushiswap.jpg","src/components/FlexView.tsx","src/constants/tokens.ts","src/constants/dimension.ts","src/components/Button.tsx","src/utils/index.ts","src/hooks/useAllCommonPairs.tsx","src/hooks/useSDK.tsx","src/components/Container.tsx","src/components/Content.tsx","src/components/app/AppHeader.tsx","src/components/web/ConnectToWallet.tsx","src/screens/Screen.tsx","src/components/Title.tsx","src/components/web/WebSubMenu.tsx","src/utils/fetch-utils.ts","src/constants/Fraction.ts","src/constants/colors.ts","src/hooks/useColors.tsx","src/constants/contracts.ts","src/context/EthersContext.tsx","src/utils/analytics-utils.ts","src/context/index.tsx","src/components/DarkModeSwitch.tsx","src/components/web/MobileWebMenu.tsx","src/components/web/WebHeader.tsx","src/screens/EmptyScreen.tsx","src/screens/index.tsx","App.tsx","src/context/GlobalContext.tsx","globals.js","src/components/Text.tsx"],"names":["module","exports","FlexView","props","flexDirection","direction","style","ETH","name","address","ethers","constants","AddressZero","decimals","symbol","logoURI","balance","BigNumber","from","SCREEN_WIDTH","Math","round","Dimensions","get","width","SCREEN_HEIGHT","height","HEADER_HEIGHT","HEADER_WIDTH","DESKTOP_CONTENT_WIDTH","SUB_MENU_HEIGHT","IS_DESKTOP","Spacing","tiny","small","normal","large","huge","Button","useColors","primary","textMedium","placeholder","backgroundLight","type","size","fontSize","fontFamily","fontWeight","color","disabled","loading","onPress","undefined","loadingProps","buttonStyle","paddingHorizontal","backgroundColor","borderColor","titleStyle","disabledTitleStyle","disabledStyle","CONTRACTS","ERC20","IUniswapV2Factory","IUniswapV2Pair","IUniswapV2Router02","IWETH","MasterChef","SushiBar","SushiRoll","OrderBook","Settlement","LPTokenScanner","abi","formatBalance","value","maxFraction","formatted","utils","formatUnits","split","length","substr","parseBalance","parseUnits","isEmptyValue","text","isBigNumber","isZero","replace","convertToken","token","WETH","SDKToken","ChainId","MAINNET","convertAmount","amount","TokenAmount","toString","parseCurrencyAmount","toExact","getContract","signerOrProvider","contract","Contract","pow10","exp","pow","DAI","Token","USDC","USDT","SUSHI","YAM","AMPL","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","wrappedCurrency","currency","ETHER","useAllCommonPairs","loadAllCommonPairs","useCallback","currencyA","currencyB","provider","a","async","bases","tokenA","tokenB","basePairs","flatMap","base","map","otherBase","filter","t0","t1","allPairCombinations","tokens","Boolean","b","customBases","customBasesA","customBasesB","find","equals","Promise","all","pair","Fetcher","fetchPairData","pairs","minAmount","percent","sub","mul","numerator","div","denominator","Order","maker","fromToken","toToken","amountIn","amountOutMin","recipient","deadline","floor","Date","now","v","r","s","filledAmountIn","canceled","this","eq","toNumber","SETTLEMENT","settlement","getAddress","hashOfOrder","hash","signMessage","arrayify","signature","splitSignature","sign","useSDK","useContext","EthersContext","ethereum","getTotalSupply","allowedSlippage","Percent","getTrade","fromAmount","isETH","to","Currency","CurrencyAmount","ether","Trade","bestTradeExactIn","maxHops","maxNumResults","swap","trade","signer","Router","feeOnTransfer","ttl","params","swapCallParameters","router","ROUTER","estimateGas","methodName","args","gasLimit","functions","tx","logTransaction","arg","createOrder","kovanSigner","order","toArgs","orderBook","ORDER_BOOK","cancelOrder","slice","queryOrderFilledEvents","filters","OrderFilled","queryFilter","wrapETH","weth","deposit","unwrapETH","withdraw","getPair","addLiquidity","toAmount","getTime","removeLiquidityETH","liquidity","amountETH","removeLiquidity","addLiquidityETH","getExpectedSushiRewardPerBlock","masterChef","MASTER_CHEF","totalAllocPoint","sushiPerBlock","poolInfo","id","allocPoint","lpTokenId","enterSushiBar","sushiBar","SUSHI_BAR","enter","leaveSushiBar","leave","migrate","lpToken","sushiRoll","SUSHI_ROLL","Zero","migrateWithPermit","signERC2612Permit","permit","calculateSwapFee","calculateLimitOrderFee","calculateLimitOrderReturn","price","limitOrderFeeDeducted","swapFeeDeducted","Fraction","parse","apply","calculateAmountOfLPTokenMinted","liquidityToken","totalSupply","getLiquidityMinted","Container","Platform","select","web","contentContainerStyle","flex","default","Content","marginLeft","marginRight","paddingVertical","AppHeader","background","View","StatusBar","translucent","ConnectButton","setEthereum","metaMask","window","isMetaMask","request","method","alert","title","containerStyle","marginTop","marginHorizontal","WalletConnectButton","darkMode","GlobalContext","WalletConnectProvider","rpc","1","enable","ConnectWallet","source","require","alignItems","justifyContent","Image","marginBottom","WebScreen","chainId","Text","light","textAlign","position","top","right","bottom","left","ConnectToWallet","AppScreen","Screen","Title","SwapSubMenu","WebSubMenu","items","path","LiquiditySubMenu","MigrateSubMenu","StakingSubMenu","borderDark","submenu","borderBottomWidth","alignSelf","item","MenuItem","key","accent","textLight","match","useRouteMatch","active","isExact","paddingTop","paddingBottom","textDecoration","fetchTokens","account","customTokens","fetch","response","json","fetchTokenBalances","balances","ALCHEMY_PROVIDER","getBalance","i","sort","t2","fetchPools","pools","pool","poolToken","balanceOf","totalDeposited","userInfo","amountDeposited","pendingSushi","fetchMyLPTokens","fetchLPTokens","SUSHISWAP_FACTORY","fetchMyUniswapLPTokens","UNISWAP_FACTORY","factory","factoryContract","allPairsLength","scanner","LP_TOKEN_SCANNER","pages","push","page","findPairs","min","flat","index","erc20","Number","findOrFetchToken","token0","token1","t","toLowerCase","send","meta","field","callStatic","data","logo","addresses","tokenBalances","tokenBalance","fetchMyLimitOrders","canceledHashes","numberOfHashesOfMaker","hashesOfMaker","hashes","HashZero","orderOfHash","filledAmountInOfHash","includes","myOrders","compareOrders","o0","o1","status","compared","fetchMyCanceledLimitOrderHashes","numberOfCanceledHashesOfMaker","allCanceledHashes","sdk","numeratorToken","denominatorToken","NAN","ZERO","BASE","isNaN","fraction","gt","lt","maxFractions","str","endsWith","substring","One","Colors","common","white","transparent","secondary","green","red","twitter","facebook","header","border","textDark","shadow","overlay","dark","providers","AlchemyProvider","KOVAN_PROVIDER","React","createContext","_ethereum","ensName","addOnBlockListener","_name","_listener","removeOnBlockListener","updateTokens","loadingTokens","addCustomToken","_token","removeCustomToken","approveToken","_spender","_amount","getTokenAllowance","getTokenBalance","_who","EthersContextProvider","children","useState","setProvider","setSigner","setKovanSigner","setChainId","setAddress","setENSName","onBlockListeners","setOnBlockListeners","setTokens","setCustomTokens","setLoadingTokens","useEffect","Wallet","useAsyncEffect","web3","Web3Provider","getSigner","web3Signer","onAccountsChanged","accounts","Analytics","onChainChanged","onDisconnect","on","off","lookupAddress","ens","JSON","AsyncStorage","getItem","findIndex","custom","setItem","stringify","spender","MaxUint256","approve","owner","who","listener","old","onBlock","block","Object","entries","Provider","EthersContextConsumer","Consumer","gasPrice","ContextProvider","DarkModeSwitch","setDarkMode","onChange","transform","scale","CloseButton","MobileWebMenuItem","startsWith","Status","connected","borderRadius","isWalletConnect","disconnect","MobileWebMenu","expanded","onCollapse","animationType","visible","TouchableWithoutFeedback","paddingRight","Menu","padding","MenuIcon","onExpand","TouchableHighlight","confirm","borderWidth","CloseIcon","paddingLeft","WebHeader","zIndex","onExpandMenu","EmptyScreen","FarmingScreen","lazy","LiquidityScreen","MigrateScreen","MyLimitOrdersScreen","RemoveLiquidityScreen","StakeScreen","UnstakeScreen","SwapScreen","Screens","load","OS","WebScreens","menuExpanded","setMenuExpanded","fallback","Tab","createBottomTabNavigator","AppScreens","theme","DefaultTheme","colors","card","notification","NavigationContainer","Navigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","component","options","tabOptions","iconName","tabBarIcon","App","useFonts","OpenSans_300Light","regular","OpenSans_400Regular","bold","OpenSans_600SemiBold","AppLoading","clear","_darkMode","mnemonic","setMnemonic","_mnemonic","GlobalContextProvider","colorScheme","useColorScheme","mode","mne","removeItem","String","GlobalContextConsumer","global","Buffer","medium","note","h1Style","h2Style","h3Style","h4Style","caption"],"mappings":"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","file":"static/js/app.56e873bd.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/metamask-dark.2137a831.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask.15e22fef.png\";","module.exports = __webpack_public_path__ + \"static/media/sushiswap.ef005f32.jpg\";","import React, { FunctionComponent } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\ninterface FlexViewProps extends ViewProps {\n    direction?: \"row\" | \"column\";\n}\n\nconst FlexView: FunctionComponent<FlexViewProps> = props => {\n    const flexDirection = props.direction || \"row\";\n    return <View {...props} style={[{ flexDirection }, props.style]} />;\n};\nexport default FlexView;\n","import { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\n\nexport const ETH: Token = {\n    name: \"Ethereum\",\n    address: ethers.constants.AddressZero,\n    decimals: 18,\n    symbol: \"ETH\",\n    logoURI: \"https://lite.sushiswap.fi/images/tokens/ETH.png\",\n    balance: ethers.BigNumber.from(0)\n};\n","import { Dimensions } from \"react-native\";\n\nexport const SCREEN_WIDTH = Math.round(Dimensions.get(\"window\").width);\nexport const SCREEN_HEIGHT = Math.round(Dimensions.get(\"window\").height);\nexport const IS_HIGH_RESOLUTION = SCREEN_HEIGHT > 667;\nexport const HEADER_HEIGHT = 64;\nexport const HEADER_WIDTH = 980;\nexport const DESKTOP_CONTENT_WIDTH = 540;\nexport const SUB_MENU_HEIGHT = 40;\nexport const IS_DESKTOP = SCREEN_WIDTH > DESKTOP_CONTENT_WIDTH;\n\nexport const Spacing = IS_HIGH_RESOLUTION\n    ? {\n          tiny: 8,\n          small: 16,\n          normal: 32,\n          large: 48,\n          huge: 64\n      }\n    : {\n          tiny: 6,\n          small: 12,\n          normal: 24,\n          large: 32,\n          huge: 48\n      };\n","import React, { FC } from \"react\";\nimport { Button as NativeButton, ButtonProps as NativeButtonProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nexport interface ButtonProps extends NativeButtonProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Button: FC<ButtonProps> = props => {\n    const { primary, textMedium, placeholder, backgroundLight } = useColors();\n    const type = props.type || \"solid\";\n    const size = props.size || \"normal\";\n    const height = props.size === \"small\" ? 36 : size === \"normal\" ? 45 : 54;\n    const fontSize = props.size === \"small\" ? 13 : size === \"normal\" ? 15 : 18;\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = type === \"solid\" ? \"white\" : props.color || textMedium;\n    return (\n        <NativeButton\n            {...props}\n            disabled={props.loading || props.disabled}\n            onPress={props.loading ? undefined : props.onPress}\n            type={type}\n            loadingProps={{ color: textMedium }}\n            buttonStyle={[\n                {\n                    height,\n                    paddingHorizontal: Spacing.small,\n                    backgroundColor: \"transparent\",\n                    borderColor: color\n                },\n                props.buttonStyle\n            ]}\n            titleStyle={[{ fontSize, fontFamily, color }, props.titleStyle]}\n            disabledTitleStyle={[{ fontSize, fontFamily, color: placeholder }, props.titleStyle]}\n            style={[{ backgroundColor: type === \"solid\" ? props.color || primary : \"transparent\" }, props.style]}\n            disabledStyle={[\n                { backgroundColor: type === \"solid\" ? backgroundLight : \"transparent\" },\n                props.disabledStyle\n            ]}\n        />\n    );\n};\nexport default Button;\n","import ERC20 from \"@sushiswap/core/build/contracts/ERC20.json\";\nimport IUniswapV2Factory from \"@sushiswap/core/build/contracts/IUniswapV2Factory.json\";\nimport IUniswapV2Pair from \"@sushiswap/core/build/contracts/IUniswapV2Pair.json\";\nimport IUniswapV2Router02 from \"@sushiswap/core/build/contracts/IUniswapV2Router02.json\";\nimport IWETH from \"@sushiswap/core/build/contracts/IWETH.json\";\nimport MasterChef from \"@sushiswap/core/build/contracts/MasterChef.json\";\nimport SushiBar from \"@sushiswap/core/build/contracts/SushiBar.json\";\nimport SushiRoll from \"@sushiswap/core/build/contracts/SushiRoll.json\";\nimport { ChainId, CurrencyAmount, Token as SDKToken, TokenAmount, WETH } from \"@sushiswap/sdk\";\nimport OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\nimport { ethers } from \"ethers\";\nimport LPTokenScanner from \"../constants/abi/LPTokenScanner.json\";\nimport Token from \"../types/Token\";\n\nconst CONTRACTS = {\n    ERC20,\n    IUniswapV2Factory,\n    IUniswapV2Pair,\n    IUniswapV2Router02,\n    IWETH,\n    MasterChef,\n    SushiBar,\n    SushiRoll,\n    OrderBook,\n    Settlement,\n    LPTokenScanner: { abi: LPTokenScanner }\n};\n\nexport const formatBalance = (value: ethers.BigNumberish, decimals = 18, maxFraction = 0) => {\n    const formatted = ethers.utils.formatUnits(value, decimals);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const parseBalance = (value: string, decimals = 18) => {\n    return ethers.utils.parseUnits(value || \"0\", decimals);\n};\n\nexport const isEmptyValue = (text: string) =>\n    ethers.BigNumber.isBigNumber(text)\n        ? ethers.BigNumber.from(text).isZero()\n        : text === \"\" || text.replace(/0/g, \"\").replace(/\\./, \"\") === \"\";\n\nexport const convertToken = (token: Token) => {\n    return token.symbol === \"ETH\" ? WETH[\"1\"] : new SDKToken(ChainId.MAINNET, token.address, token.decimals);\n};\n\nexport const convertAmount = (token: Token, amount: string) => {\n    return new TokenAmount(convertToken(token), parseBalance(amount, token.decimals).toString());\n};\n\nexport const parseCurrencyAmount = (value: CurrencyAmount, decimals = 18) => {\n    return ethers.BigNumber.from(parseBalance(value.toExact(), decimals));\n};\n\nexport const getContract = (\n    name: string,\n    address: string,\n    signerOrProvider: ethers.Signer | ethers.providers.Provider\n) => {\n    const contract = CONTRACTS[name];\n    return new ethers.Contract(address, contract.abi, signerOrProvider);\n};\n\nexport const pow10 = (exp: ethers.BigNumberish) => {\n    return ethers.BigNumber.from(10).pow(exp);\n};\n\nexport const formatDate = (date: Date) => {\n    return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n};\n","import { useCallback } from \"react\";\n\nimport { ChainId, Currency, ETHER, Fetcher, Pair, Token, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\n\nconst DAI = new Token(ChainId.MAINNET, \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", 18, \"DAI\", \"Dai Stablecoin\");\nconst USDC = new Token(ChainId.MAINNET, \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\", 6, \"USDC\", \"USD//C\");\nconst USDT = new Token(ChainId.MAINNET, \"0xdAC17F958D2ee523a2206206994597C13D831ec7\", 6, \"USDT\", \"Tether USD\");\nconst SUSHI = new Token(ChainId.MAINNET, \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\", 18, \"SUSHI\", \"SushiToken\");\nconst YAM = new Token(ChainId.MAINNET, \"0x0e2298E3B3390e3b945a5456fBf59eCc3f55DA16\", 18, \"YAM\", \"YAM\");\nconst AMPL = new Token(ChainId.MAINNET, \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\", 9, \"AMPL\", \"Ampleforth\");\n\nconst BASES_TO_CHECK_TRADES_AGAINST = [WETH[ChainId.MAINNET], DAI, USDC, USDT, SUSHI, YAM];\nconst CUSTOM_BASES = {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n};\n\nfunction wrappedCurrency(currency: Currency | undefined): Token | undefined {\n    return currency === ETHER ? WETH[ChainId.MAINNET] : currency instanceof Token ? currency : undefined;\n}\n\n// Source: https://github.com/Uniswap/uniswap-interface/blob/master/src/hooks/Trades.ts\nconst useAllCommonPairs = () => {\n    const loadAllCommonPairs = useCallback(\n        // tslint:disable-next-line:max-func-body-length\n        async (currencyA?: Currency, currencyB?: Currency, provider?: ethers.providers.BaseProvider) => {\n            const bases: Token[] = BASES_TO_CHECK_TRADES_AGAINST;\n            const [tokenA, tokenB] = [wrappedCurrency(currencyA), wrappedCurrency(currencyB)];\n            const basePairs: [Token, Token][] = bases\n                .flatMap((base): [Token, Token][] => bases.map(otherBase => [base, otherBase]))\n                .filter(([t0, t1]) => t0.address !== t1.address);\n\n            const allPairCombinations =\n                tokenA && tokenB\n                    ? [\n                          // the direct pair\n                          [tokenA, tokenB],\n                          // token A against all bases\n                          ...bases.map((base): [Token, Token] => [tokenA, base]),\n                          // token B against all bases\n                          ...bases.map((base): [Token, Token] => [tokenB, base]),\n                          // each base against all bases\n                          ...basePairs\n                      ]\n                          .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n                          .filter(([t0, t1]) => t0.address !== t1.address)\n                          .filter(([a, b]) => {\n                              const customBases = CUSTOM_BASES;\n                              if (!customBases) return true;\n\n                              const customBasesA: Token[] | undefined = customBases[a.address];\n                              const customBasesB: Token[] | undefined = customBases[b.address];\n\n                              if (!customBasesA && !customBasesB) return true;\n\n                              if (customBasesA && !customBasesA.find(base => tokenB.equals(base))) return false;\n                              return !(customBasesB && !customBasesB.find(base => tokenA.equals(base)));\n                          })\n                    : [];\n\n            const pairs = await Promise.all(\n                allPairCombinations.map(async pair => {\n                    try {\n                        return await Fetcher.fetchPairData(pair[0], pair[1], provider);\n                    } catch (e) {\n                        return null;\n                    }\n                })\n            );\n            return pairs.filter(pair => pair !== null) as Pair[];\n        },\n        []\n    );\n\n    return { loadAllCommonPairs };\n};\n\nexport default useAllCommonPairs;\n","import { useCallback, useContext } from \"react\";\n\nimport { Currency, CurrencyAmount, Fetcher, Pair, Percent, Router, TokenAmount, Trade, WETH } from \"@sushiswap/sdk\";\nimport { signERC2612Permit } from \"eth-permit\";\nimport { ethers } from \"ethers\";\nimport { MASTER_CHEF, ORDER_BOOK, ROUTER, SETTLEMENT, SUSHI_BAR, SUSHI_ROLL } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { convertToken, getContract, pow10 } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport useAllCommonPairs from \"./useAllCommonPairs\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSDK = () => {\n    const { ethereum, getTotalSupply } = useContext(EthersContext);\n    const { loadAllCommonPairs } = useAllCommonPairs();\n    const allowedSlippage = new Percent(\"50\", \"10000\"); // 0.05%\n    const ttl = 60 * 20;\n\n    const getTrade = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider\n        ) => {\n            if (provider) {\n                const isETH = fromToken.symbol === \"ETH\";\n                const from = convertToken(fromToken);\n                const to = toToken.symbol === \"ETH\" ? Currency.ETHER : convertToken(toToken);\n                const pairs = await loadAllCommonPairs(from, to, provider);\n                const amount = isETH\n                    ? CurrencyAmount.ether(fromAmount.toString())\n                    : new TokenAmount(from, fromAmount.toString());\n                return Trade.bestTradeExactIn(pairs, amount, to, { maxHops: 3, maxNumResults: 1 })[0];\n            }\n        },\n        []\n    );\n\n    const swap = useCallback(async (trade: Trade, signer: ethers.Signer) => {\n        if (trade) {\n            const params = Router.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                allowedSlippage,\n                recipient: await signer.getAddress(),\n                ttl\n            });\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const gasLimit = await router.estimateGas[params.methodName](...params.args, {\n                value: params.value\n            });\n            const tx = await router.functions[params.methodName](...params.args, {\n                value: params.value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            await logTransaction(\n                tx,\n                \"UniswapV2Router02.\" + params.methodName + \"()\",\n                ...params.args.map(arg => arg.toString())\n            );\n            return {\n                trade,\n                tx\n            };\n        }\n    }, []);\n\n    const createOrder = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            amountIn: ethers.BigNumber,\n            amountOutMin: ethers.BigNumber,\n            signer: ethers.Signer,\n            kovanSigner: ethers.Signer\n        ) => {\n            const order = new Order(signer, fromToken, toToken, amountIn, amountOutMin, await signer.getAddress());\n            const args = await order.toArgs();\n\n            const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n            const gasLimit = await orderBook.estimateGas.createOrder(args);\n            const tx = await orderBook.createOrder(args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return await logTransaction(tx, \"OrderBook.createOrder()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const cancelOrder = useCallback(async (order: Order, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const args = (await order.toArgs()).slice(0, 7);\n        const gasLimit = await settlement.estimateGas.cancelOrder(...args);\n        const tx = await settlement.cancelOrder(...args, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return await logTransaction(tx, \"Settlement.cancelOrder()\", ...args.map(arg => arg.toString()));\n    }, []);\n\n    const queryOrderFilledEvents = useCallback(async (hash: string, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const filter = settlement.filters.OrderFilled(hash);\n        return await settlement.queryFilter(filter);\n    }, []);\n\n    const wrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.deposit({\n            value: amount\n        });\n        const tx = await weth.deposit({\n            value: amount,\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.deposit()\");\n    }, []);\n\n    const unwrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.withdraw(amount);\n        const tx = await weth.withdraw(amount, {\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.withdraw()\");\n    }, []);\n\n    const getPair = useCallback(async (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => {\n        const from = convertToken(fromToken);\n        const to = convertToken(toToken);\n        return await Fetcher.fetchPairData(from, to, provider);\n    }, []);\n\n    const addLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                fromAmount,\n                toAmount,\n                minAmount(fromAmount, allowedSlippage),\n                minAmount(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidity(...args);\n            const tx = await router.functions.addLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidityETH = useCallback(\n        async (\n            token: Token,\n            liquidity: ethers.BigNumber,\n            amount: ethers.BigNumber,\n            amountETH: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                liquidity,\n                minAmount(amount, allowedSlippage),\n                minAmount(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidityETH(...args);\n            const tx = await router.functions.removeLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            liquidity: ethers.BigNumber,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                liquidity,\n                minAmount(fromAmount, allowedSlippage),\n                minAmount(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidity(...args);\n            const tx = await router.functions.removeLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const addLiquidityETH = useCallback(\n        async (token: Token, amount: ethers.BigNumber, amountETH: ethers.BigNumber, signer: ethers.Signer) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                amount,\n                minAmount(amount, allowedSlippage),\n                minAmount(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidityETH(...args, {\n                value: amountETH\n            });\n            const tx = await router.functions.addLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100),\n                value: amountETH\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const getExpectedSushiRewardPerBlock = useCallback(async (token: LPToken, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const totalAllocPoint = await masterChef.totalAllocPoint();\n        const sushiPerBlock = await masterChef.sushiPerBlock();\n        const { allocPoint } = await masterChef.poolInfo(token.id);\n        return ethers.BigNumber.from(sushiPerBlock)\n            .mul(allocPoint)\n            .div(totalAllocPoint);\n    }, []);\n\n    const deposit = useCallback(async (lpTokenId: number, amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const gasLimit = await masterChef.estimateGas.deposit(lpTokenId, amount);\n        const tx = await masterChef.deposit(lpTokenId, amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"MasterChef.deposit()\", lpTokenId, amount.toString());\n    }, []);\n\n    const withdraw = useCallback(async (lpTokenId: number, amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const gasLimit = await masterChef.estimateGas.withdraw(lpTokenId, amount);\n        const tx = await masterChef.withdraw(lpTokenId, amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"MasterChef.withdraw()\", lpTokenId, amount.toString());\n    }, []);\n\n    const enterSushiBar = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const sushiBar = getContract(\"SushiBar\", SUSHI_BAR, signer);\n        const gasLimit = await sushiBar.estimateGas.enter(amount);\n        const tx = await sushiBar.enter(amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"SushiBar.enter()\", amount.toString());\n    }, []);\n\n    const leaveSushiBar = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const sushiBar = getContract(\"SushiBar\", SUSHI_BAR, signer);\n        const gasLimit = await sushiBar.estimateGas.leave(amount);\n        const tx = await sushiBar.leave(amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"SushiBar.leave()\", amount.toString());\n    }, []);\n\n    const migrate = useCallback(\n        async (lpToken: LPToken, amount: ethers.BigNumber, signer: ethers.Signer) => {\n            const sushiRoll = getContract(\"SushiRoll\", SUSHI_ROLL, signer);\n            const deadline = Math.floor(new Date().getTime() / 1000) + ttl;\n            const args = [\n                lpToken.tokenA.address,\n                lpToken.tokenB.address,\n                amount,\n                ethers.constants.Zero,\n                ethers.constants.Zero,\n                deadline\n            ];\n            const gasLimit = await sushiRoll.estimateGas.migrate(...args);\n            const tx = await sushiRoll.migrate(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"SushiRoll.migrate()\", ...args.map(arg => arg.toString()));\n        },\n        [ethereum]\n    );\n\n    const migrateWithPermit = useCallback(\n        async (lpToken: LPToken, amount: ethers.BigNumber, signer: ethers.Signer) => {\n            const sushiRoll = getContract(\"SushiRoll\", SUSHI_ROLL, signer);\n            const deadline = Math.floor(new Date().getTime() / 1000) + ttl;\n            const permit = await signERC2612Permit(\n                ethereum,\n                lpToken.address,\n                await signer.getAddress(),\n                SUSHI_ROLL,\n                amount.toString(),\n                deadline\n            );\n            const args = [\n                lpToken.tokenA.address,\n                lpToken.tokenB.address,\n                amount,\n                ethers.constants.Zero,\n                ethers.constants.Zero,\n                deadline,\n                permit.v,\n                permit.r,\n                permit.s\n            ];\n            const gasLimit = await sushiRoll.estimateGas.migrateWithPermit(...args);\n            const tx = await sushiRoll.migrateWithPermit(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"SushiRoll.migrateWithPermit()\", ...args.map(arg => arg.toString()));\n        },\n        [ethereum]\n    );\n\n    const calculateSwapFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(3).div(1000);\n    };\n\n    const calculateLimitOrderFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(2).div(1000);\n    };\n\n    const calculateLimitOrderReturn = (\n        fromToken: Token,\n        toToken: Token,\n        fromAmount: ethers.BigNumber,\n        price: string\n    ) => {\n        const limitOrderFeeDeducted = fromAmount.sub(calculateLimitOrderFee(fromAmount));\n        const swapFeeDeducted = limitOrderFeeDeducted.sub(calculateSwapFee(limitOrderFeeDeducted));\n        return Fraction.parse(price).apply(swapFeeDeducted.mul(pow10(toToken.decimals)).div(pow10(fromToken.decimals)));\n    };\n\n    const calculateAmountOfLPTokenMinted = async (pair: Pair, fromAmount: TokenAmount, toAmount: TokenAmount) => {\n        const totalSupply = await getTotalSupply(pair.liquidityToken.address);\n        if (totalSupply) {\n            return pair.getLiquidityMinted(\n                new TokenAmount(pair.liquidityToken, totalSupply.toString()),\n                fromAmount,\n                toAmount\n            );\n        }\n    };\n\n    return {\n        allowedSlippage,\n        getTrade,\n        swap,\n        createOrder,\n        cancelOrder,\n        queryOrderFilledEvents,\n        wrapETH,\n        unwrapETH,\n        getPair,\n        addLiquidity,\n        addLiquidityETH,\n        removeLiquidity,\n        removeLiquidityETH,\n        getExpectedSushiRewardPerBlock,\n        deposit,\n        withdraw,\n        enterSushiBar,\n        leaveSushiBar,\n        migrate,\n        migrateWithPermit,\n        calculateSwapFee,\n        calculateLimitOrderFee,\n        calculateLimitOrderReturn,\n        calculateAmountOfLPTokenMinted\n    };\n};\n\nconst minAmount = (amount: ethers.BigNumber, percent: Percent) => {\n    return amount.sub(amount.mul(percent.numerator.toString()).div(percent.denominator.toString()));\n};\n\nexport type OrderStatus = \"Open\" | \"Expired\" | \"Filled\" | \"Canceled\";\n\nexport class Order {\n    maker: ethers.Signer;\n    fromToken: Token;\n    toToken: Token;\n    amountIn: ethers.BigNumber;\n    amountOutMin: ethers.BigNumber;\n    recipient: string;\n    deadline: ethers.BigNumber;\n    v?: number;\n    r?: string;\n    s?: string;\n    filledAmountIn?: ethers.BigNumber;\n    canceled?: boolean;\n\n    constructor(\n        maker: ethers.Signer,\n        fromToken: Token,\n        toToken: Token,\n        amountIn: ethers.BigNumber,\n        amountOutMin: ethers.BigNumber,\n        recipient: string,\n        deadline = ethers.BigNumber.from(Math.floor(Date.now() / 1000 + 24 * 3600)),\n        v?: number,\n        r?: string,\n        s?: string,\n        filledAmountIn?: ethers.BigNumber,\n        canceled?: boolean\n    ) {\n        this.maker = maker;\n        this.fromToken = fromToken;\n        this.toToken = toToken;\n        this.amountIn = amountIn;\n        this.amountOutMin = amountOutMin;\n        this.recipient = recipient;\n        this.deadline = deadline;\n        this.v = v;\n        this.r = r;\n        this.s = s;\n        this.filledAmountIn = filledAmountIn;\n        this.canceled = canceled;\n    }\n\n    status(): OrderStatus {\n        return this.canceled\n            ? \"Canceled\"\n            : this.filledAmountIn?.eq(this.amountIn)\n            ? \"Filled\"\n            : this.deadline.toNumber() * 1000 < Date.now()\n            ? \"Expired\"\n            : \"Open\";\n    }\n\n    async hash() {\n        const settlement = await getContract(\"Settlement\", SETTLEMENT, this.maker);\n        return await settlement.hashOfOrder(\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline\n        );\n    }\n\n    async sign() {\n        const hash = await this.hash();\n        const signature = await this.maker.signMessage(ethers.utils.arrayify(hash));\n        return ethers.utils.splitSignature(signature);\n    }\n\n    async toArgs() {\n        const { v, r, s } = this.v && this.r && this.s ? { v: this.v, r: this.r, s: this.s } : await this.sign();\n        return [\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline,\n            v,\n            r,\n            s\n        ];\n    }\n}\n\nexport default useSDK;\n","import React, { FC } from \"react\";\nimport { Platform, SafeAreaView, ScrollView, ViewProps } from \"react-native\";\n\nexport type ContainerProps = ViewProps;\n\nconst Container: FC<ContainerProps> = props => {\n    return Platform.select({\n        web: (\n            <ScrollView\n                contentContainerStyle={{ flex: 1 }}\n                style={[\n                    {\n                        flex: 1\n                    },\n                    props.style\n                ]}\n                {...props}\n            />\n        ),\n        default: (\n            <SafeAreaView style={{ flex: 1 }}>\n                <ScrollView {...props} />\n            </SafeAreaView>\n        )\n    });\n};\n\nexport default Container;\n","import React from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { DESKTOP_CONTENT_WIDTH, IS_DESKTOP, Spacing } from \"../constants/dimension\";\n\nconst Content: React.FunctionComponent<ViewProps> = props => {\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    width: IS_DESKTOP ? DESKTOP_CONTENT_WIDTH : \"100%\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    paddingHorizontal: Spacing.normal,\n                    paddingVertical: Spacing.huge\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Content;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { StatusBar } from \"expo-status-bar\";\n\nimport { HEADER_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\n\nconst AppHeader = () => {\n    const { background } = useColors();\n    return (\n        <View\n            style={{\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                backgroundColor: background\n            }}>\n            <StatusBar translucent={false} backgroundColor={background} />\n        </View>\n    );\n};\n\nexport default AppHeader;\n","import React, { useContext } from \"react\";\nimport { Image, View } from \"react-native\";\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport Button from \"../Button\";\n\nconst ConnectWallet = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const metaMask = window.ethereum?.isMetaMask || false;\n    const source = metaMask\n        ? darkMode\n            ? require(\"../../../assets/metamask-dark.png\")\n            : require(\"../../../assets/metamask.png\")\n        : require(\"../../../assets/sushiswap.jpg\");\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <Image\n                source={source}\n                style={{ width: metaMask ? 223 : 200, height: metaMask ? 183 : 200, marginBottom: Spacing.normal }}\n            />\n            {window.ethereum && <ConnectButton />}\n            <WalletConnectButton />\n        </View>\n    );\n};\n\nconst ConnectButton = () => {\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        if (window.ethereum) {\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\n            setEthereum(window.ethereum);\n        } else {\n            alert(\"No ethereum provider found.\");\n        }\n    };\n    const metaMask = window.ethereum?.isMetaMask || false;\n    return (\n        <Button\n            size={\"large\"}\n            color={metaMask ? \"#e2761b\" : primary}\n            onPress={onPress}\n            title={metaMask ? \"MetaMask\" : \"Connect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nconst WalletConnectButton = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        const ethereum = new WalletConnectProvider({\n            rpc: {\n                1: \"https://eth-mainnet.alchemyapi.io/v2/fF51JjrwO8qCZW13KRflYpqU_ZeOH1Er\"\n            }\n        });\n        await ethereum.enable();\n        // @ts-ignore\n        setEthereum(ethereum);\n    };\n    return (\n        <Button\n            size={\"large\"}\n            type={\"outline\"}\n            color={darkMode ? \"white\" : primary}\n            onPress={onPress}\n            title={\"WalletConnect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nexport default ConnectWallet;\n","import React, { useContext } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport AppHeader from \"../components/app/AppHeader\";\nimport Text from \"../components/Text\";\nimport ConnectToWallet from \"../components/web/ConnectToWallet\";\nimport { HEADER_HEIGHT } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\n\nconst Screen = props => {\n    return Platform.select({\n        web: <WebScreen {...props} />,\n        default: <AppScreen {...props} />\n    });\n};\n\nconst WebScreen = props => {\n    const { address, chainId } = useContext(EthersContext);\n    if (!address) return <ConnectToWallet />;\n    if (chainId !== 1)\n        return (\n            <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n                <Text light={true} style={{ textAlign: \"center\" }}>\n                    {\"Please switch network to\\n'Ethereum Mainnet'\"}\n                </Text>\n            </View>\n        );\n    return (\n        <View\n            {...props}\n            style={[{ position: \"absolute\", top: HEADER_HEIGHT, right: 0, bottom: 0, left: 0 }, props.style]}\n        />\n    );\n};\n\nconst AppScreen = props => (\n    <View style={{ width: \"100%\", height: \"100%\" }}>\n        <AppHeader />\n        <View {...props} style={[{ flex: 1 }, props.style]} />\n    </View>\n);\n\nexport default Screen;\n","import React, { FC } from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Text from \"./Text\";\n\ninterface TitleProps {\n    text: string;\n}\n\nconst Title: FC<TitleProps> = props => {\n    return (\n        <Text fontWeight={\"bold\"} style={{ marginBottom: Spacing.tiny, fontSize: 40 }}>\n            {props.text}\n        </Text>\n    );\n};\n\nexport default Title;\n","import React, { FC } from \"react\";\nimport { View } from \"react-native\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_WIDTH, IS_DESKTOP, Spacing, SUB_MENU_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebSubMenuItem {\n    title: string;\n    path: string;\n}\n\nexport interface WebSubMenuProps {\n    items: WebSubMenuItem[];\n}\n\nexport const SwapSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"New Order\",\n                path: \"/swap\"\n            },\n            {\n                title: \"My Orders\",\n                path: \"/swap/my-orders\"\n            }\n        ]}\n    />\n);\n\nexport const LiquiditySubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Add Liquidity\",\n                path: \"/liquidity\"\n            },\n            {\n                title: \"Remove Liquidity\",\n                path: \"/liquidity/remove\"\n            }\n        ]}\n    />\n);\n\nexport const MigrateSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Migrate Liquidity\",\n                path: \"/migrate\"\n            }\n        ]}\n    />\n);\n\nexport const StakingSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Stake\",\n                path: \"/staking\"\n            },\n            {\n                title: \"Unstake\",\n                path: \"/staking/unstake\"\n            }\n        ]}\n    />\n);\n\nconst WebSubMenu: FC<WebSubMenuProps> = props => {\n    const { borderDark, submenu } = useColors();\n    return (\n        <View\n            style={{\n                height: SUB_MENU_HEIGHT,\n                width: \"100%\",\n                borderBottomWidth: 1,\n                borderColor: borderDark + \"40\",\n                backgroundColor: submenu\n            }}>\n            <FlexView\n                style={{\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    marginTop: 2,\n                    paddingHorizontal: Spacing.normal,\n                    alignSelf: \"center\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\"\n                }}>\n                {props.items.map(item => (\n                    <MenuItem key={item.path} {...item} />\n                ))}\n            </FlexView>\n        </View>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { accent, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.isExact;\n    return (\n        <Link\n            to={path}\n            style={{\n                marginLeft: Spacing.small,\n                paddingTop: Spacing.tiny,\n                paddingBottom: Spacing.tiny,\n                textDecoration: \"none\"\n            }}>\n            <Text\n                fontWeight={active ? \"regular\" : \"light\"}\n                style={{\n                    fontSize: 13,\n                    color: active ? accent : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nexport default WebSubMenu;\n","import { FACTORY_ADDRESS as SUSHISWAP_FACTORY } from \"@sushiswap/sdk\";\nimport { FACTORY_ADDRESS as UNISWAP_FACTORY } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { LP_TOKEN_SCANNER, MASTER_CHEF, ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport { ETH } from \"../constants/tokens\";\nimport { ALCHEMY_PROVIDER } from \"../context/EthersContext\";\nimport { Order, OrderStatus } from \"../hooks/useSDK\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { getContract } from \"./index\";\n\nexport const fetchTokens = async (account: string, customTokens?: Token[]) => {\n    const response = await fetch(\"https://lite.sushiswap.fi/tokens.json\");\n    const json = await response.json();\n    const tokens = [...json.tokens, ...(customTokens || [])];\n\n    const balances = await fetchTokenBalances(\n        account,\n        tokens.map(token => token.address)\n    );\n    return [\n        {\n            ...ETH,\n            balance: await ALCHEMY_PROVIDER.getBalance(account)\n        },\n        ...tokens.map((token, i) => ({\n            ...token,\n            balance: ethers.BigNumber.from(balances[i] || 0)\n        }))\n    ].sort((t1, t2) => {\n        return t2.balance\n            .sub(t1.balance)\n            .div(ethers.BigNumber.from(10).pow(10))\n            .toNumber();\n    });\n};\n\nexport const fetchPools = async (account: string, provider: ethers.providers.JsonRpcProvider) => {\n    const response = await fetch(\"https://lite.sushiswap.fi/pools.json\");\n    const pools = await response.json();\n    const balances = await fetchTokenBalances(\n        account,\n        pools.map(pool => pool.address)\n    );\n    return (await Promise.all(\n        pools.map(async (pool, i) => {\n            const poolToken = getContract(\"ERC20\", pool.address, provider);\n            const totalDeposited = await poolToken.balanceOf(MASTER_CHEF);\n            const masterChef = getContract(\"MasterChef\", MASTER_CHEF, provider);\n            const { amount: amountDeposited } = await masterChef.userInfo(i, account);\n            const pendingSushi = await masterChef.pendingSushi(i, account);\n            return {\n                ...pool,\n                id: i,\n                symbol: pool.tokenA.symbol + \"-\" + pool.tokenB.symbol + \" LP\",\n                balance: ethers.BigNumber.from(balances[i] || 0),\n                totalDeposited,\n                amountDeposited,\n                pendingSushi\n            };\n        })\n    )) as LPToken[];\n};\n\nexport const fetchMyLPTokens = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    return await fetchLPTokens(SUSHISWAP_FACTORY, account, tokens, provider);\n};\n\nexport const fetchMyUniswapLPTokens = async (\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    return await fetchLPTokens(UNISWAP_FACTORY, account, tokens, provider);\n};\n\nconst LP_TOKENS_LIMIT = 100;\n\n// tslint:disable-next-line:max-func-body-length\nconst fetchLPTokens = async (\n    factory: string,\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    const factoryContract = getContract(\"IUniswapV2Factory\", factory, provider);\n    const length = await factoryContract.allPairsLength();\n    const scanner = getContract(\"LPTokenScanner\", LP_TOKEN_SCANNER, provider);\n    const pages: number[] = [];\n    for (let i = 0; i < length; i += LP_TOKENS_LIMIT) pages.push(i);\n    const pairs = (\n        await Promise.all(\n            pages.map(page =>\n                scanner.findPairs(account, factory, page, Math.min(page + LP_TOKENS_LIMIT, length.toNumber()))\n            )\n        )\n    ).flat();\n    const balances = await fetchTokenBalances(\n        account,\n        pairs.map(pair => pair.token)\n    );\n    return await Promise.all(\n        pairs.map(async (pair, index) => {\n            const address = pair.token;\n            const balance = ethers.BigNumber.from(balances[index]);\n            const contract = getContract(\"IUniswapV2Pair\", address, provider);\n            const erc20 = getContract(\"ERC20\", address, provider);\n            const decimals = Number(await erc20.decimals());\n            const totalSupply = await erc20.totalSupply();\n            const tokenA = await findOrFetchToken(await contract.token0(), provider, tokens);\n            const tokenB = await findOrFetchToken(await contract.token1(), provider, tokens);\n            const name = tokenA.symbol + \"-\" + tokenB.symbol + \" LP Token\";\n            const symbol = tokenA.symbol + \"-\" + tokenB.symbol;\n            return { address, decimals, name, symbol, balance, totalSupply, tokenA, tokenB } as LPToken;\n        })\n    );\n};\n\nexport const findOrFetchToken = async (\n    address: string,\n    provider: ethers.providers.JsonRpcProvider,\n    tokens?: Token[]\n) => {\n    if (tokens) {\n        const token = tokens.find(t => t.address.toLowerCase() === address.toLowerCase());\n        if (token) {\n            return token;\n        }\n    }\n    let meta = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenMetadata\", [address]);\n    if (!meta.name || meta.symbol || meta.decimals || meta.logoURI) {\n        const erc20 = getContract(\"ERC20\", address, provider);\n        const data = await Promise.all([\"name\", \"symbol\", \"decimals\"].map(field => erc20.callStatic[field]()));\n        meta = {\n            name: data[0],\n            symbol: data[1],\n            decimals: data[2],\n            logoURI: \"\"\n        };\n    }\n    return {\n        address,\n        name: meta.name,\n        symbol: meta.symbol,\n        decimals: meta.decimals,\n        logoURI: meta.logo,\n        balance: ethers.constants.Zero\n    } as Token;\n};\n\nconst fetchTokenBalances = async (account: string, addresses: string[]) => {\n    const balances = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenBalances\", [account, addresses]);\n    return balances.tokenBalances.map(balance => balance.tokenBalance);\n};\n\nconst LIMIT_ORDERS_LIMIT = 20;\n\nexport const fetchMyLimitOrders = async (\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer,\n    kovanSigner: ethers.Signer,\n    tokens?: Token[],\n    canceledHashes?: string[]\n) => {\n    const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, provider);\n    const maker = await signer.getAddress();\n    const length = await orderBook.numberOfHashesOfMaker(maker);\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    const hashes = (await Promise.all(pages.map(page => orderBook.hashesOfMaker(maker, page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n    const myOrders = await Promise.all(\n        hashes.map(async hash => {\n            const args = await orderBook.orderOfHash(hash);\n            return new Order(\n                signer,\n                await findOrFetchToken(args.fromToken, provider, tokens),\n                await findOrFetchToken(args.toToken, provider, tokens),\n                args.amountIn,\n                args.amountOutMin,\n                args.recipient,\n                args.deadline,\n                args.v,\n                args.r,\n                args.s,\n                await settlement.filledAmountInOfHash(hash),\n                canceledHashes && canceledHashes.includes(hash)\n            );\n        })\n    );\n    return myOrders.sort(compareOrders) as Order[];\n};\n\nconst compareOrders = (o0, o1) => {\n    const status = (s: OrderStatus) => (s === \"Open\" ? 0 : s === \"Filled\" ? 1 : 2);\n    const compared = status(o0.status()) - status(o1.status());\n    return compared === 0 ? o1.deadline.toNumber() - o0.deadline.toNumber() : compared;\n};\n\nexport const fetchMyCanceledLimitOrderHashes = async (signer: ethers.providers.JsonRpcSigner) => {\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, signer);\n    const length = await settlement.numberOfCanceledHashesOfMaker(await signer.getAddress());\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    return (await Promise.all(pages.map(page => settlement.allCanceledHashes(page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n};\n","import { Fraction as SDKFraction } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\n\nclass Fraction {\n    static BASE = ethers.BigNumber.from(10).pow(18);\n    static NAN = new Fraction(ethers.constants.Zero, ethers.constants.Zero);\n    static ZERO = new Fraction(ethers.constants.Zero, ethers.constants.One);\n    static convert(sdk: SDKFraction) {\n        return new Fraction(\n            ethers.BigNumber.from(sdk.numerator.toString()),\n            ethers.BigNumber.from(sdk.denominator.toString())\n        );\n    }\n    static from(numerator: ethers.BigNumberish, denominator: ethers.BigNumberish) {\n        return new Fraction(ethers.BigNumber.from(numerator), ethers.BigNumber.from(denominator));\n    }\n    static fromTokens(\n        numerator: ethers.BigNumberish,\n        denominator: ethers.BigNumberish,\n        numeratorToken: Token,\n        denominatorToken: Token\n    ) {\n        return new Fraction(\n            ethers.BigNumber.from(numerator).mul(ethers.BigNumber.from(10).pow(denominatorToken.decimals)),\n            ethers.BigNumber.from(denominator).mul(ethers.BigNumber.from(10).pow(numeratorToken.decimals))\n        );\n    }\n    static parse(value: string) {\n        return value === \"\"\n            ? Fraction.NAN\n            : isEmptyValue(value)\n            ? Fraction.ZERO\n            : new Fraction(parseBalance(value, 18), Fraction.BASE);\n    }\n\n    numerator: ethers.BigNumber;\n    denominator: ethers.BigNumber;\n\n    private constructor(numerator: ethers.BigNumber, denominator: ethers.BigNumber) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n    }\n\n    isZero() {\n        return !this.isNaN() && this.numerator.isZero();\n    }\n\n    isNaN() {\n        return this.denominator.isZero();\n    }\n\n    eq(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .eq(this.denominator);\n    }\n\n    gt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .gt(this.denominator);\n    }\n\n    lt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .lt(this.denominator);\n    }\n\n    toString(maxFractions = 8) {\n        if (this.isNaN()) return \"\";\n        if (this.isZero()) return \"0\";\n        let str = formatBalance(this.numerator.mul(Fraction.BASE).div(this.denominator), 18, maxFractions);\n        if (str.endsWith(\".0\")) str = str.substring(0, str.length - 2);\n        return str;\n    }\n\n    apply(value: ethers.BigNumberish) {\n        return this.denominator.isZero() ? ethers.constants.Zero : this.numerator.mul(value).div(this.denominator);\n    }\n}\n\nexport default Fraction;\n","export const Colors = {\n    common: {\n        white: \"#ffffff\",\n        transparent: \"#ffffff00\",\n        primary: \"#291C64\",\n        secondary: \"#9BECEE\",\n        green: \"#32CD32\",\n        red: \"#FF0000\",\n        twitter: \"#1da1f2\",\n        facebook: \"#3B5998\"\n    },\n    light: {\n        accent: \"#291C64\",\n        header: \"#ffffffb8\",\n        submenu: \"#ffffffb8\",\n        background: \"#f8f8f8\",\n        backgroundLight: \"#f0f0f0\",\n        border: \"#e5e5e5\",\n        borderDark: \"#cccccc\",\n        textDark: \"#1d1d1f\",\n        textMedium: \"#222222\",\n        textLight: \"#888888\",\n        disabled: \"#b4b4b4\",\n        shadow: \"#444444\",\n        placeholder: \"#b4b4b4\",\n        overlay: \"#ffffffc0\"\n    },\n    dark: {\n        accent: \"#9BECEE\",\n        header: \"#000000\",\n        submenu: \"#121212\",\n        background: \"#121212\",\n        backgroundLight: \"#1a1a1a\",\n        border: \"#ffffff33\",\n        borderDark: \"#666666\",\n        textDark: \"#d5d1cc\",\n        textMedium: \"#cccccc\",\n        textLight: \"#aaaaaa\",\n        disabled: \"#aaaaaa80\",\n        shadow: \"#03080c\",\n        placeholder: \"#666666\",\n        overlay: \"#000000c0\"\n    }\n};\n","import { useContext } from \"react\";\n\nimport { Colors } from \"../constants/colors\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useColors = () => {\n    const { darkMode } = useContext(GlobalContext);\n    return {\n        ...Colors[darkMode ? \"dark\" : \"light\"],\n        ...Colors.common\n    };\n};\n\nexport default useColors;\n","import OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\n\n// export const UNISWAP_ROUTER = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nexport const SUSHISWAP_ROUTER = \"0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\";\nexport const ROUTER = SUSHISWAP_ROUTER;\nexport const MASTER_CHEF = \"0xc2edad668740f1aa35e4d8f227fb8e17dca888cd\";\nexport const SUSHI_BAR = \"0x8798249c2e607446efb7ad49ec89dd1865ff4272\";\nexport const SUSHI_ROLL = \"0x16E58463eb9792Bc236d8860F5BC69A81E26E32B\";\nexport const LP_TOKEN_SCANNER = \"0xD132Ce8eA8865348Ac25E416d95ab1Ba84D216AF\";\nexport const ORDER_BOOK = OrderBook.address;\nexport const SETTLEMENT = Settlement.address;\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport * as Analytics from \"expo-firebase-analytics\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ETH } from \"../constants/tokens\";\nimport Ethereum from \"../types/Ethereum\";\nimport Token from \"../types/Token\";\nimport { getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport { fetchTokens } from \"../utils/fetch-utils\";\n\nexport type OnBlockListener = (block?: number) => void | Promise<void>;\n\nconst PRIVATE_KEY = \"0xca417c154948d370f011c5d9ac3fba516d7b15671a069e7d5d48f56b723c9cc1\";\nexport const ALCHEMY_PROVIDER = new ethers.providers.AlchemyProvider(\n    1,\n    __DEV__ ? process.env.MAINNET_API_KEY : \"DgnfFsj5PXR37FkOmUVJ9GtfDsKws446\"\n);\nconst KOVAN_PROVIDER = new ethers.providers.AlchemyProvider(\n    42,\n    __DEV__ ? process.env.KOVAN_API_KEY : \"8a03ORJJcIv8YA49M-cIxg-mBEMJYe0J\"\n);\n\nexport const EthersContext = React.createContext({\n    ethereum: undefined as Ethereum | undefined,\n    setEthereum: (_ethereum: Ethereum | undefined) => {},\n    provider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    signer: undefined as ethers.providers.JsonRpcSigner | undefined,\n    kovanSigner: undefined as ethers.Signer | undefined,\n    chainId: 0,\n    address: null as string | null,\n    ensName: null as string | null,\n    addOnBlockListener: (_name: string, _listener: OnBlockListener) => {},\n    removeOnBlockListener: (_name: string) => {},\n    tokens: [ETH] as Token[],\n    updateTokens: async () => {},\n    loadingTokens: false,\n    customTokens: [ETH] as Token[],\n    addCustomToken: (_token: Token) => {},\n    removeCustomToken: (_token: Token) => {},\n    approveToken: async (_token: string, _spender: string, _amount?: ethers.BigNumber) => {\n        return {} as ethers.providers.TransactionResponse | undefined;\n    },\n    getTokenAllowance: async (_token: string, _spender: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTokenBalance: async (_token: string, _who: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTotalSupply: async (_token: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    }\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const EthersContextProvider = ({ children }) => {\n    const [ethereum, setEthereum] = useState<Ethereum | undefined>(window.ethereum);\n    const [provider, setProvider] = useState<ethers.providers.JsonRpcProvider>();\n    const [signer, setSigner] = useState<ethers.providers.JsonRpcSigner>();\n    const [kovanSigner, setKovanSigner] = useState<ethers.Signer>();\n    const [chainId, setChainId] = useState<number>(1);\n    const [address, setAddress] = useState<string | null>(null);\n    const [ensName, setENSName] = useState<string | null>(null);\n    const [onBlockListeners, setOnBlockListeners] = useState<{ [name: string]: OnBlockListener }>({});\n    const [tokens, setTokens] = useState<Token[]>([]);\n    const [customTokens, setCustomTokens] = useState<Token[]>([]);\n    const [loadingTokens, setLoadingTokens] = useState(true);\n\n    useEffect(() => {\n        // Kovan\n        setKovanSigner(new ethers.Wallet(PRIVATE_KEY, KOVAN_PROVIDER));\n    }, [KOVAN_PROVIDER]);\n\n    useAsyncEffect(async () => {\n        // Mainnet\n        if (ethereum) {\n            const web3 = new ethers.providers.Web3Provider(ethereum);\n            const web3Signer = await web3.getSigner();\n            setProvider(ethereum.isMetaMask ? web3Signer.provider : ALCHEMY_PROVIDER);\n            setSigner(web3Signer);\n        }\n    }, [ethereum]);\n\n    useEffect(() => {\n        if (ethereum) {\n            const onAccountsChanged = async () => {\n                const accounts = await ethereum.request({ method: \"eth_accounts\" });\n                if (accounts?.[0]) {\n                    setAddress(accounts[0]);\n                    Analytics.setUserId(accounts[0]);\n                } else {\n                    setAddress(null);\n                }\n            };\n            const onChainChanged = async () => {\n                setChainId(Number(await ethereum.request({ method: \"eth_chainId\" })));\n            };\n            const onDisconnect = () => {\n                setAddress(null);\n                setEthereum(undefined);\n            };\n            onAccountsChanged();\n            onChainChanged();\n            ethereum.on(\"accountsChanged\", onAccountsChanged);\n            ethereum.on(\"chainChanged\", onChainChanged);\n            ethereum.on(\"disconnect\", onDisconnect);\n            return () => {\n                ethereum.off(\"accountsChanged\", onAccountsChanged);\n                ethereum.off(\"chainChanged\", onAccountsChanged);\n                ethereum.off(\"disconnect\", onDisconnect);\n            };\n        }\n    }, [ethereum]);\n\n    useAsyncEffect(async () => {\n        if (provider && address) {\n            const ens = await provider.lookupAddress(address);\n            setENSName(ens);\n        }\n    }, [provider, address]);\n\n    const updateTokens = async () => {\n        if (address && customTokens) {\n            try {\n                const data = await fetchTokens(address, customTokens);\n                if (data) {\n                    await setTokens(data);\n                }\n            } finally {\n                setLoadingTokens(false);\n            }\n        }\n    };\n\n    useAsyncEffect(async () => {\n        setCustomTokens(JSON.parse((await AsyncStorage.getItem(\"custom_tokens\")) || \"[]\"));\n    }, []);\n\n    useAsyncEffect(async () => {\n        if (address && customTokens) {\n            setLoadingTokens(true);\n            await updateTokens();\n        }\n    }, [address, customTokens]);\n\n    const addCustomToken = useCallback(\n        async (token: Token) => {\n            if (\n                customTokens.findIndex(t => t.address === token.address) === -1 &&\n                tokens.findIndex(t => t.address === token.address) === -1\n            ) {\n                const custom = [...customTokens, token];\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [tokens, customTokens]\n    );\n\n    const removeCustomToken = useCallback(\n        async (token: Token) => {\n            if (customTokens.findIndex(t => t.address === token.address) !== -1) {\n                const custom = customTokens.filter(t => t.address !== token.address);\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [customTokens]\n    );\n\n    const approveToken = useCallback(\n        async (token: string, spender: string, amount?: ethers.BigNumber) => {\n            if (signer) {\n                amount = amount || ethers.constants.MaxUint256;\n                const erc20 = getContract(\"ERC20\", token, signer);\n                const gasLimit = await erc20.estimateGas.approve(spender, amount);\n                const tx = await erc20.approve(spender, amount, {\n                    gasLimit\n                });\n                return await logTransaction(tx, \"ERC20.approve()\", spender, amount.toString());\n            }\n        },\n        [signer]\n    );\n\n    const getTokenAllowance = useCallback(\n        async (token: string, spender: string) => {\n            if (address) {\n                return await ALCHEMY_PROVIDER.send(\"alchemy_getTokenAllowance\", [\n                    {\n                        contract: token,\n                        owner: address,\n                        spender\n                    }\n                ]);\n            }\n        },\n        [address]\n    );\n\n    const getTokenBalance = useCallback(\n        async (token: string, who: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.balanceOf(who);\n            }\n        },\n        [provider]\n    );\n\n    const getTotalSupply = useCallback(\n        async (token: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.totalSupply();\n            }\n        },\n        [provider]\n    );\n\n    const addOnBlockListener = useCallback(\n        (name, listener) => {\n            setOnBlockListeners(old => ({ ...old, [name]: listener }));\n        },\n        [setOnBlockListeners]\n    );\n\n    const removeOnBlockListener = useCallback(\n        name => {\n            setOnBlockListeners(old => {\n                delete old[name];\n                return old;\n            });\n        },\n        [setOnBlockListeners]\n    );\n\n    useEffect(() => {\n        if (provider && chainId === 1) {\n            const onBlock = async (block: number) => {\n                for (const listener of Object.entries(onBlockListeners)) {\n                    await listener[1]?.(block);\n                }\n            };\n            provider.on(\"block\", onBlock);\n            return () => {\n                provider.off(\"block\", onBlock);\n            };\n        }\n    }, [provider, chainId, onBlockListeners]);\n\n    return (\n        <EthersContext.Provider\n            value={{\n                ethereum,\n                setEthereum,\n                provider,\n                signer,\n                kovanSigner,\n                chainId,\n                address,\n                ensName,\n                tokens,\n                updateTokens,\n                loadingTokens,\n                customTokens,\n                addCustomToken,\n                removeCustomToken,\n                approveToken,\n                getTokenAllowance,\n                getTokenBalance,\n                getTotalSupply,\n                addOnBlockListener,\n                removeOnBlockListener\n            }}>\n            {children}\n        </EthersContext.Provider>\n    );\n};\n\nexport const EthersContextConsumer = EthersContext.Consumer;\n","import * as Analytics from \"expo-firebase-analytics\";\n\nimport { ethers } from \"ethers\";\n\nexport const logTransaction = async (\n    tx: ethers.providers.TransactionResponse,\n    name: string,\n    ...args: any[]\n): Promise<ethers.providers.TransactionResponse> => {\n    await Analytics.logEvent(\"tx:\" + name, {\n        args: args || [],\n        hash: tx.hash,\n        value: tx.value.toString(),\n        gasLimit: tx.gasLimit.toString(),\n        gasPrice: tx.gasPrice.toString(),\n        chainId: tx.chainId\n    });\n    return tx;\n};\n","import React from \"react\";\n\nimport { EthersContextConsumer, EthersContextProvider } from \"./EthersContext\";\nimport { GlobalContextConsumer, GlobalContextProvider } from \"./GlobalContext\";\n\nexport const ContextProvider = ({ children }) => {\n    return (\n        <GlobalContextProvider>\n            <EthersContextProvider>{children}</EthersContextProvider>\n        </GlobalContextProvider>\n    );\n};\n\nexport const ContextConsumer = ({ children }) => {\n    return (\n        <GlobalContextConsumer>\n            {globalContext => (\n                <EthersContextConsumer>\n                    {ethersContext =>\n                        children({\n                            ...globalContext,\n                            ...ethersContext\n                        })\n                    }\n                </EthersContextConsumer>\n            )}\n        </GlobalContextConsumer>\n    );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { View } from \"react-native\";\n\nimport Switch from \"expo-dark-mode-switch\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst DarkModeSwitch = props => {\n    const { darkMode, setDarkMode } = useContext(GlobalContext);\n    const onChange = useCallback(\n        async dark => {\n            await setDarkMode(dark);\n        },\n        [setDarkMode]\n    );\n    return (\n        <View style={props.style}>\n            <Switch\n                value={darkMode}\n                onChange={onChange}\n                style={{\n                    transform: [\n                        {\n                            scale: 0.75\n                        }\n                    ]\n                }}\n            />\n        </View>\n    );\n};\n\nexport default DarkModeSwitch;\n","import React, { useContext } from \"react\";\nimport { TouchableWithoutFeedback, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport Modal from \"modal-react-native-web\";\nimport { Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport useColors from \"../../hooks/useColors\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nconst MobileWebMenu = ({ expanded, onCollapse }) => {\n    const { overlay } = useColors();\n    return (\n        <Modal animationType=\"slide\" transparent={true} visible={expanded}>\n            <TouchableWithoutFeedback style={{ height: \"100%\" }} onPress={onCollapse}>\n                <View\n                    style={{\n                        height: \"100%\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"flex-end\",\n                        paddingRight: Spacing.normal,\n                        paddingBottom: Spacing.normal,\n                        backgroundColor: overlay\n                    }}>\n                    <FlexView style={{ marginTop: Spacing.small }}>\n                        <DarkModeSwitch style={{ marginTop: -2 }} />\n                        <CloseButton onPress={onCollapse} />\n                    </FlexView>\n                    <View style={{ alignItems: \"flex-end\" }}>\n                        <Status />\n                        <View style={{ height: Spacing.large }} />\n                        <MobileWebMenuItem title={\"Swap\"} path={\"/swap\"} />\n                        <MobileWebMenuItem title={\"Liquidity\"} path={\"/liquidity\"} />\n                        <MobileWebMenuItem title={\"Migrate\"} path={\"/migrate\"} />\n                        {/*<MobileWebMenuItem title={\"Farming\"} path={\"/farming\"} />*/}\n                        <MobileWebMenuItem title={\"Staking\"} path={\"/staking\"} />\n                    </View>\n                </View>\n            </TouchableWithoutFeedback>\n        </Modal>\n    );\n};\n\nconst CloseButton = ({ onPress }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={textDark} size={32} onPress={onPress} />;\n};\n\nconst MobileWebMenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ textDecoration: \"none\", marginBottom: Spacing.tiny }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 24,\n                    color: active ? textDark : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst Status = () => {\n    const { textLight, green, accent } = useColors();\n    const { ethereum, chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : \"Not connected\";\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        ethereum?.disconnect?.();\n    };\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.tiny }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginTop: 8 }} />\n                <Text style={{ fontSize: 18, color: textLight, marginLeft: 8 }}>{title}</Text>\n            </FlexView>\n            {ethereum?.isWalletConnect && (\n                <Text\n                    style={{\n                        fontFamily: \"regular\",\n                        fontSize: 15,\n                        color: accent,\n                        alignSelf: \"flex-end\"\n                    }}\n                    onPress={onPress}>\n                    Disconnect\n                </Text>\n            )}\n        </View>\n    );\n};\n\nexport default MobileWebMenu;\n","import React, { FC, useContext } from \"react\";\nimport { TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_HEIGHT, HEADER_WIDTH, IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebHeaderProps {\n    onExpandMenu?: () => void;\n}\n\nconst WebHeader: FC<WebHeaderProps> = props => {\n    const { header } = useColors();\n    return (\n        <View\n            // @ts-ignore\n            style={{\n                position: \"fixed\",\n                top: 0,\n                zIndex: 100,\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                paddingBottom: Spacing.small,\n                backgroundColor: header\n            }}>\n            <FlexView\n                style={{\n                    flex: 1,\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    alignSelf: \"center\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"flex-end\",\n                    paddingTop: Spacing.small,\n                    paddingHorizontal: Spacing.normal\n                }}>\n                <Title />\n                {IS_DESKTOP ? <Menu /> : <MenuIcon onExpand={props.onExpandMenu} />}\n            </FlexView>\n        </View>\n    );\n};\n\nexport const Title = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { textDark, white } = useColors();\n    const color = darkMode ? white : textDark;\n    return (\n        <View style={{ alignSelf: \"center\", alignItems: \"center\" }}>\n            <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\n                <Text style={{ fontSize: 28, color }}>SushiSwap</Text>\n            </Link>\n        </View>\n    );\n};\n\nconst Menu = () => {\n    return (\n        <FlexView\n            style={{\n                height: \"100%\",\n                alignItems: \"flex-end\"\n            }}>\n            <MenuItem title={\"Swap\"} path={\"/swap\"} />\n            <MenuItem title={\"Liquidity\"} path={\"/liquidity\"} />\n            <MenuItem title={\"Migrate\"} path={\"/migrate\"} />\n            {/*<MenuItem title={\"Farming\"} path={\"/farming\"} />*/}\n            <MenuItem title={\"Stake\"} path={\"/staking\"} />\n            <Status />\n            <DarkModeSwitch style={{ marginLeft: Spacing.tiny, marginRight: -8, marginBottom: -3 }} />\n        </FlexView>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ marginLeft: Spacing.tiny, textDecoration: \"none\" }}>\n            <Text style={{ fontFamily: \"regular\", fontSize: 18, color: active ? textDark : textLight, padding: 3 }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst MenuIcon = ({ onExpand }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"menu\"} size={28} color={textDark} onPress={onExpand} />;\n};\n\nconst Status = () => {\n    const { textLight, green, borderDark } = useColors();\n    const { ethereum, chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : \"Not connected\";\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        if (confirm(\"Do you want to disconnect?\")) ethereum?.disconnect?.();\n    };\n    return (\n        <TouchableHighlight onPress={onPress} disabled={!ethereum?.isWalletConnect}>\n            <FlexView\n                style={{\n                    height: 28,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    marginLeft: Spacing.small,\n                    paddingHorizontal: Spacing.small,\n                    borderRadius: 16,\n                    borderWidth: 1,\n                    borderColor: borderDark\n                }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginRight: 12 }} />\n                <Text style={{ fontSize: 15, color: textLight, marginRight: 2 }}>{title}</Text>\n                {ethereum?.isWalletConnect && <CloseIcon />}\n            </FlexView>\n        </TouchableHighlight>\n    );\n};\n\nconst CloseIcon = () => {\n    const { textLight } = useColors();\n    return (\n        <Icon\n            type={\"material-community\"}\n            name={\"close\"}\n            size={15}\n            color={textLight}\n            style={{ paddingLeft: 2, paddingTop: 2 }}\n        />\n    );\n};\n\nexport default WebHeader;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport Title from \"../components/Title\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport WebSubMenu from \"../components/web/WebSubMenu\";\nimport useColors from \"../hooks/useColors\";\nimport Screen from \"./Screen\";\n\nconst EmptyScreen = () => {\n    const { background } = useColors();\n    return (\n        <View style={{ width: \"100%\", height: \"100%\", backgroundColor: background }}>\n            <Screen>\n                <WebSubMenu items={[]} />\n                <Container>\n                    <Content>\n                        <Title text={\"Loading...\"} />\n                    </Content>\n                </Container>\n            </Screen>\n            <WebHeader />\n        </View>\n    );\n};\n\nexport default EmptyScreen;\n","import React, { lazy, Suspense, useContext, useEffect, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { DefaultTheme, NavigationContainer, Theme } from \"@react-navigation/native\";\nimport useAsyncEffect from \"use-async-effect\";\nimport MobileWebMenu from \"../components/web/MobileWebMenu\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport EmptyScreen from \"./EmptyScreen\";\n\nconst FarmingScreen = lazy(() => import(\"./FarmingScreen\"));\nconst LiquidityScreen = lazy(() => import(\"./LiquidityScreen\"));\nconst MigrateScreen = lazy(() => import(\"./MigrateScreen\"));\nconst MyLimitOrdersScreen = lazy(() => import(\"./MyLimitOrdersScreen\"));\nconst RemoveLiquidityScreen = lazy(() => import(\"./RemoveLiquidityScreen\"));\nconst StakeScreen = lazy(() => import(\"./StakeScreen\"));\nconst UnstakeScreen = lazy(() => import(\"./UnstakeScreen\"));\nconst SwapScreen = lazy(() => import(\"./SwapScreen\"));\n\nexport const Screens = () => {\n    const { load } = useContext(GlobalContext);\n    useAsyncEffect(load, []);\n    return Platform.OS === \"web\" ? <WebScreens /> : <AppScreens />;\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst WebScreens = () => {\n    const { address } = useContext(EthersContext);\n    const [menuExpanded, setMenuExpanded] = useState(false);\n    const { background } = useColors();\n    useEffect(() => {\n        if (!address) setMenuExpanded(false);\n    }, [address]);\n    return (\n        <Router>\n            <Suspense fallback={<EmptyScreen />}>\n                <View style={{ flex: 1, backgroundColor: background }}>\n                    <Switch>\n                        <Route path={\"/swap/my-orders\"}>\n                            <MyLimitOrdersScreen />\n                        </Route>\n                        <Route path={\"/swap\"}>\n                            <SwapScreen />\n                        </Route>\n                        <Route path={\"/liquidity/migrate\"}>\n                            <Redirect to={\"/migrate\"} />\n                        </Route>\n                        <Route path={\"/liquidity/remove\"}>\n                            <RemoveLiquidityScreen />\n                        </Route>\n                        <Route path={\"/liquidity\"}>\n                            <LiquidityScreen />\n                        </Route>\n                        {/*<Route path={\"/farming\"}>*/}\n                        {/*    <FarmingScreen />*/}\n                        {/*</Route>*/}\n                        <Route path={\"/migrate\"}>\n                            <MigrateScreen />\n                        </Route>\n                        <Route path={\"/staking/unstake\"}>\n                            <UnstakeScreen />\n                        </Route>\n                        <Route path={\"/staking\"}>\n                            <StakeScreen />\n                        </Route>\n                        <Redirect to={\"/swap\"} />\n                    </Switch>\n                    <WebHeader onExpandMenu={() => setMenuExpanded(true)} />\n                    {!IS_DESKTOP && <MobileWebMenu expanded={menuExpanded} onCollapse={() => setMenuExpanded(false)} />}\n                </View>\n            </Suspense>\n        </Router>\n    );\n};\n\nconst Tab = createBottomTabNavigator();\n\nconst AppScreens = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary, accent, background, border, textDark, disabled } = useColors();\n    const theme: Theme = {\n        ...DefaultTheme,\n        dark: darkMode,\n        colors: {\n            primary,\n            background,\n            border,\n            card: background,\n            notification: background,\n            text: textDark\n        }\n    };\n    return (\n        <NavigationContainer theme={theme}>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: accent,\n                    inactiveTintColor: disabled,\n                    labelStyle: { marginBottom: 4 }\n                }}>\n                <Tab.Screen name=\"Home\" component={SwapScreen} options={tabOptions(\"home\")} />\n                <Tab.Screen name=\"Liquidity\" component={LiquidityScreen} options={tabOptions(\"water\")} />\n                <Tab.Screen name=\"Farming\" component={FarmingScreen} options={tabOptions(\"leaf\")} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n};\n\nconst tabOptions = iconName => ({\n    tabBarIcon: ({ color }) => <Icon type={\"material-community\"} name={iconName} color={color} />\n});\n","/* tslint:disable:ordered-imports */\nimport \"./globals\";\nimport React from \"react\";\n\nimport { OpenSans_300Light, OpenSans_400Regular, OpenSans_600SemiBold } from \"@expo-google-fonts/open-sans\";\nimport { AppLoading } from \"expo\";\nimport { useFonts } from \"expo-font\";\n\nimport { ContextProvider } from \"./src/context\";\nimport { Screens } from \"./src/screens\";\nimport { YellowBox } from \"react-native\";\n\nif (__DEV__) {\n    YellowBox.ignoreWarnings([\"Setting a timer\", \"VirtualizedLists should never be nested\"]);\n}\n\nconst App = () => {\n    const [fontsLoaded] = useFonts({\n        light: OpenSans_300Light,\n        regular: OpenSans_400Regular,\n        bold: OpenSans_600SemiBold\n    });\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    }\n    return (\n        <ContextProvider>\n            <Screens />\n        </ContextProvider>\n    );\n};\n\nexport default App;\n","import React, { useState } from \"react\";\nimport { useColorScheme } from \"react-native-appearance\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nexport const GlobalContext = React.createContext({\n    load: async () => {},\n    clear: async () => {},\n    darkMode: false,\n    setDarkMode: async _darkMode => {},\n    mnemonic: \"\",\n    setMnemonic: (_mnemonic: string) => {}\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const GlobalContextProvider = ({ children }) => {\n    const colorScheme = useColorScheme();\n    const [darkMode, setDarkMode] = useState(colorScheme === \"dark\");\n    const [mnemonic, setMnemonic] = useState(\"\");\n    return (\n        <GlobalContext.Provider\n            value={{\n                load: async () => {\n                    const mode = await AsyncStorage.getItem(\"dark_mode\");\n                    setDarkMode(mode === \"true\");\n                    const mne = await AsyncStorage.getItem(\"mnemonic\");\n                    if (mne) {\n                        setMnemonic(mne);\n                    }\n                },\n                clear: async () => {\n                    setDarkMode(false);\n                    await AsyncStorage.removeItem(\"dark_mode\");\n                    await AsyncStorage.removeItem(\"mnemonic\");\n                },\n                darkMode,\n                setDarkMode: async (mode: boolean) => {\n                    await AsyncStorage.setItem(\"dark_mode\", String(mode));\n                    setDarkMode(mode);\n                },\n                mnemonic,\n                setMnemonic: async (mne: string) => {\n                    await AsyncStorage.setItem(\"mnemonic\", mne);\n                    setMnemonic(mne);\n                }\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const GlobalContextConsumer = GlobalContext.Consumer;\n","global.Buffer = require('buffer').Buffer;\n","import React, { FC } from \"react\";\nimport { Text as NativeText, TextProps as NativeTextProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface TextProps extends NativeTextProps {\n    note?: boolean;\n    caption?: boolean;\n    dark?: boolean;\n    medium?: boolean;\n    light?: boolean;\n    disabled?: boolean;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\nconst Text: FC<TextProps> = props => {\n    const { textDark, textMedium, textLight, placeholder } = useColors();\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = props.disabled\n        ? placeholder\n        : props.medium\n        ? textMedium\n        : props.note || props.light\n        ? textLight\n        : textDark;\n    return (\n        <NativeText\n            {...props}\n            h1Style={[{ fontFamily }, props.h1Style]}\n            h2Style={[{ fontFamily }, props.h2Style]}\n            h3Style={[{ fontFamily }, props.h3Style]}\n            h4Style={[{ fontFamily }, props.h4Style]}\n            style={[\n                {\n                    fontFamily,\n                    fontSize: props.note ? 13 : props.caption ? 18 : 15,\n                    color\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Text;\n"],"sourceRoot":""}