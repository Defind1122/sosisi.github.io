{"version":3,"sources":["src/hooks/useStyles.tsx","src/components/Heading.tsx","src/hooks/useLinker.tsx","src/components/ErrorMessage.tsx","src/components/ItemSeparator.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/components/Selectable.tsx","src/components/Column.tsx","src/components/FetchingButton.tsx","src/components/InsufficientBalanceButton.tsx","src/components/TokenLogo.tsx","src/components/Meta.tsx","src/components/Notice.tsx","src/components/TokenInput.tsx","src/components/ApproveButton.tsx","src/components/Expandable.tsx","src/components/Input.tsx","src/components/Loading.tsx","index.tsx","assets/empty-token.png","src/hooks/useDelayedOnBlockEffect.tsx","src/hooks/useTokenPairState.tsx","assets/ETH.png","src/hooks/useLPTokensState.tsx","src/components/LPTokenSelect.tsx","src/components/ButtonGroup.tsx","src/components/CloseIcon.tsx","src/components/SelectIcon.tsx","src/hooks/useFarmingState.tsx","src/screens/FarmingScreen.tsx"],"names":["useStyles","useColors","shadowColor","shadow","borderDark","border","useCallback","attrs","borderColor","color","borderWidth","borderRadius","radius","padding","Spacing","small","tiny","elevation","shadowOffset","width","height","shadowOpacity","shadowRadius","overflow","Heading","props","accent","style","alignItems","marginBottom","disabled","medium","fontWeight","flex","fontSize","paddingBottom","text","buttonText","type","size","title","onPress","onPressButton","Platform","OS","path","route","target","history","useHistory","window","open","push","_target","navigate","useNavigation","ErrorMessage","error","marginTop","code","note","message","ITEM_SEPARATOR_HEIGHT","ItemSeparator","SocialIcon","darkMode","useContext","GlobalContext","background","textLight","light","iconColor","undefined","backgroundColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressDiscord","FlexView","justifyContent","name","raised","reverse","reverseColor","containerStyle","Link","to","Text","textDecorationLine","WebFooter","Column","noTopMargin","View","normal","huge","textAlign","Selectable","overlay","backgroundLight","hovered","activeOpacity","underlayColor","selected","large","FetchingButton","InsufficientBalanceButton","symbol","TokenLogo","useState","setError","placeholder","require","ETH","source","replaceWETH","token","uri","logoURI","onError","opacity","Meta","textMedium","url","suffix","label","Notice","borderStyle","clear","paddingHorizontal","titleStyle","buttonStyle","paddingVertical","alignSelf","MaxButton","onPressMax","balance","fee","pow10","gt","sub","ethers","constants","Zero","updateAmount","formatBalance","decimals","position","right","bottom","maxButtonText","IS_DESKTOP","TokenInput","onChangeText","onAmountChanged","parseBalance","e","endsWith","indexOf","length","value","amount","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","labelStyle","fontFamily","paddingTop","hideMaxButton","ApproveButton","approveToken","EthersContext","loading","setLoading","a","async","address","spender","tx","wait","onSuccess","hidden","Expandable","expanded","setExpanded","shouldExpand","onExpand","display","children","Input","textDark","errors","forbidden","forEach","validation","match","regexp","allowed","join","minHeight","outline","placeholderTextColor","errorStyle","Loading","marginVertical","isServer","process","hoverListener","hasMouse","refs","mousePosition","x","y","hover","hoverFunc","containsEvent","r","previousHoverFunc","unhover","document","event","add","ref","remove","createHoverListener","Hoverable","rest","hostRef","React","hr","setHovered","parent","enhanceScrollView","WrappedComponent","EnhancedScrollView","onScroll","scrollEventThrottle","forwardedRef","setRef","setLocalRef","getForwardedRef","setAndForwardRef","hostNode","interactionState","module","exports","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","addOnBlockListener","removeOnBlockListener","eventName","useAsyncEffect","setTimeout","handles","handle","clearTimeout","useTokenPairState","provider","signer","tokens","updateTokens","getTokenAllowance","useSDK","wrapETH","unwrapETH","fromSymbol","setFromSymbol","toSymbol","setToSymbol","fromAmount","setFromAmount","toAmount","setToAmount","fromTokenAllowed","setFromTokenAllowed","toTokenAllowed","setToTokenAllowed","wrapping","setWrapping","unwrapping","setUnwrapping","fromToken","find","toToken","useEffect","minAllowance","BigNumber","from","pow","ROUTER","fromAllowance","gte","toAllowance","onWrap","onUnwrap","useLPTokensState","mode","state","lastTimeRefreshed","setLastTimeRefreshed","lpTokens","setLPTokens","selectedLPToken","setSelectedLPToken","pair","setPair","setAmount","getPair","updateLPTokens","fetchPools","fetchMyLPTokens","fetchMyUniswapLPTokens","data","tokenA","tokenB","block","updateLastTimeRefreshed","Date","now","LPTokenList","emptyText","filter","Item","renderItem","item","key","onSelectToken","sort","t1","t2","totalDeposited","div","toNumber","amountDeposited","FlatList","keyExtractor","JSON","stringify","EmptyList","margin","LPTokenItem","marginLeft","caption","LPTokenSelect","ButtonGroup","index","setIndex","i","selectedIndex","textStyle","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","buttons","borderBottomRightRadius","selectedButtonStyle","CloseIcon","SelectIcon","useFarmingState","getExpectedSushiRewardPerBlock","deposit","withdraw","filteredBy","setFilteredBy","action","setAction","expectedSushiRewardPerBlock","setExpectedSushiRewardPerBlock","depositing","setDepositing","withdrawing","setWithdrawing","setSelectedLPTokenAllowed","MASTER_CHEF","allowance","onDeposit","id","onWithdraw","Actions","Farming","h4","showFilter","onFilterChanged","TokenItem","field","TouchableHighlight","LogoSymbol","isEmpty","setIsEmpty","Image","replace","ActionSelect","element","DepositText","WithdrawText","Deposit","isZero","AddLiquidityNotice","green","DepositInfo","sushiReward","mul","isEmptyValue","DepositControls","approveRequired","selectedLPTokenAllowed","AddLiquidityButton","Button","DepositButton","catch","Withdraw","NoLPTokenNotice","WithdrawInfo","pendingSushi","WithdrawControls","WithdrawButton","FarmingScreen","Screen","Container","Content"],"mappings":"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","file":"static/js/5.6090735b.chunk.js","sourcesContent":["import { useCallback } from \"react\";\nimport { ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"./useColors\";\n\nconst useStyles = () => {\n    const { shadow: shadowColor, borderDark } = useColors();\n    const border = useCallback(\n        (attrs?: { color?: string; radius?: number }) => ({\n            borderColor: attrs?.color || borderDark,\n            borderWidth: 1,\n            borderRadius: attrs?.radius || 8,\n            padding: Spacing.small\n        }),\n        []\n    );\n    const shadow = () =>\n        ({\n            borderRadius: Spacing.tiny,\n            elevation: Spacing.small,\n            shadowColor,\n            shadowOffset: { width: 0, height: 2 },\n            shadowOpacity: 0.5,\n            shadowRadius: 4,\n            overflow: \"visible\"\n        } as ViewStyle);\n    return { border, shadow };\n};\n\nexport default useStyles;\n","import React, { FC } from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={\"bold\"}\n                disabled={props.disabled}\n                style={{ flex: 1, fontSize: 18, paddingBottom: Spacing.tiny }}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport const ITEM_SEPARATOR_HEIGHT = 10;\n\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\n\nexport default ItemSeparator;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/sushiswap\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/sushiswap\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/YS8xH7E\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React, { useCallback } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport Column from \"../Column\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst WebFooter = () => (\n    <Column noTopMargin={true}>\n        <View\n            style={{\n                width: \"100%\",\n                padding: Spacing.normal,\n                marginTop: Spacing.huge\n            }}>\n            <SocialIcons />\n            <Text note={true} style={{ marginTop: Spacing.tiny, textAlign: \"center\", width: \"100%\" }}>\n                2020 Built by <Link to={\"https://levx.io\"} text={\"LevX Team\"} />\n            </Text>\n        </View>\n    </Column>\n);\n\nconst Link = ({ to, text }) => {\n    const onPress = useCallback(() => {\n        window.open(to, \"_blank\");\n    }, []);\n    return (\n        <Text note={true} style={{ textDecorationLine: \"underline\" }} onPress={onPress}>\n            {text}\n        </Text>\n    );\n};\n\nexport default WebFooter;\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps, ViewStyle } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n    containerStyle?: ViewStyle;\n}\n\nconst Selectable: FC<SelectableProps> = props => {\n    const { borderDark, accent, overlay } = useColors();\n    const { border } = useStyles();\n    const { background, backgroundLight } = useColors();\n    return (\n        <Hoverable style={props.containerStyle}>\n            {({ hovered }) => (\n                <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={props.onPress}>\n                    <View\n                        {...props}\n                        style={[\n                            {\n                                ...border({ color: props.selected ? accent : borderDark }),\n                                backgroundColor: hovered && !props.disabled ? backgroundLight : background\n                            },\n                            props.style\n                        ]}\n                    />\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nexport default Selectable;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst FetchingButton = () => {\n    return <Button title={\"Fetching…\"} disabled={true} />;\n};\nexport default FetchingButton;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    return <Button title={\"Insufficient \" + (symbol ? symbol : \"Balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport Token from \"../types/Token\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && props.token.symbol === \"WETH\" ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? \"black\" : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React, { FC } from \"react\";\n\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    url?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const { textMedium, textLight, placeholder } = useColors();\n    const onPress = useLinker(props.url || \"\", \"\", \"_blank\");\n    const text = props.disabled\n        ? \"N/A\"\n        : props.text\n        ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n        : \"Fetching…\";\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4 }}>\n            <Text fontWeight={\"bold\"} style={{ fontSize: 13, color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text\n                onPress={props.url ? onPress : undefined}\n                style={{\n                    fontSize: 13,\n                    color: props.disabled ? placeholder : props.text ? textMedium : textLight,\n                    textDecorationLine: props.url ? \"underline\" : \"none\"\n                }}>\n                {text}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || borderStyle.borderColor;\n    return (\n        <View style={[props.clear ? { paddingHorizontal: Spacing.tiny } : borderStyle, props.style]}>\n            <Text\n                note={true}\n                style={{\n                    color\n                }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    token?: Token;\n    amount: string;\n    onAmountChanged: (amount: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenInput: FC<TokenInputProps> = props => {\n    const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.token && props.onAmountChanged) {\n                try {\n                    parseBalance(text, props.token.decimals);\n                    props.onAmountChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAmountChanged(text);\n                    }\n                }\n            }\n        },\n        [props.token, props.onAmountChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.amount}\n                    onChangeText={onChangeText}\n                    placeholder={\"0.0\"}\n                    autoFocus={props.autoFocus || false}\n                    inputStyle={{ marginHorizontal: 4 }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 15,\n                        paddingBottom: 2\n                    }}\n                />\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\n                    <MaxButton\n                        token={props.token}\n                        maxButtonText={props.maxButtonText}\n                        updateAmount={props.onAmountChanged}\n                    />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(() => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (props.token.symbol === \"ETH\") {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount]);\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 12 : 24 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || (IS_DESKTOP ? \"MAX \" + props.token.symbol : \"MAX\")}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: 4 }}\n            />\n        </View>\n    );\n};\n\nexport default TokenInput;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={\"Approve \" + (props.token?.symbol || \"\")}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React, { FC, ReactNode, useState } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport Heading from \"./Heading\";\n\nexport interface ExpandableProps {\n    title: string;\n    expanded: boolean;\n    onExpand?: () => void;\n    style?: ViewStyle;\n    children?: ReactNode;\n}\n\nconst Expandable: FC<ExpandableProps> = props => {\n    const [expanded, setExpanded] = useState(true);\n    const shouldExpand = props.expanded && expanded;\n    const buttonText = shouldExpand ? undefined : \"Change\";\n    const onPress = () => {\n        setExpanded(true);\n        props.onExpand?.();\n    };\n\n    return (\n        <View style={props.style}>\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\n        </View>\n    );\n};\n\nexport default Expandable;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface Validation {\n    regexp: RegExp;\n    error: string;\n}\n\nexport interface InputProps extends NativeInputProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    allowed?: Validation[];\n    forbidden?: Validation[];\n    onError?: (error: string) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Input: FC<InputProps> = props => {\n    const { textDark, textMedium, textLight } = useColors();\n    const size = props.size || \"normal\";\n    const color = props.color || textDark;\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\n    const onChangeText = useCallback(\n        (text: string) => {\n            props.onChangeText?.(text);\n            props.onError?.(\"\");\n            const errors = [] as string[];\n            if (text !== \"\" && props.forbidden) {\n                props.forbidden.forEach(validation => {\n                    if (text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (text !== \"\" && props.allowed) {\n                props.allowed.forEach(validation => {\n                    if (!text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (errors.length > 0) {\n                props.onError?.(errors.join(\"\\n\"));\n            }\n        },\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\n    );\n    return (\n        <NativeInput\n            {...props}\n            inputStyle={[\n                { fontSize, fontFamily: \"regular\", paddingBottom: 4, color, marginTop: 0, minHeight: 32 },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\n                props.inputStyle\n            ]}\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\n            placeholderTextColor={props.placeholderTextColor || textLight}\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\n            onChangeText={onChangeText}\n        />\n    );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import * as React from 'react';\nimport type {\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  PressableStateCallbackType,\n  FlatListProps,\n  VirtualizedListProps,\n  ScrollViewProps,\n} from 'react-native';\n\nimport {\n  View,\n  Pressable as NativePressable,\n  ScrollView as NativeScrollView,\n  FlatList as NativeFlatList,\n  VirtualizedList as NativeVirtualizedList,\n  //@ts-ignore\n} from 'react-native-web';\n\nconst isServer =\n  typeof process !== 'undefined' &&\n  process.release &&\n  process.release.name === 'node';\n\nconst hoverListener = createHoverListener();\n\ninterface PressableStateCallbackTypeWeb extends PressableStateCallbackType {\n  focused?: boolean;\n  hovered?: boolean;\n}\n\ntype ChildrenType =\n  | React.ReactNode\n  | ((state: PressableStateCallbackTypeWeb) => React.ReactNode);\n\ntype StylesType =\n  | StyleProp<ViewStyle>\n  | ((state: PressableStateCallbackTypeWeb) => StyleProp<ViewStyle>);\n\ninterface HoverableProps extends ViewProps {\n  children:\n    | React.ReactNode\n    | ((state: { hovered: boolean }) => React.ReactNode);\n}\n\ninterface PressableProps extends Omit<ViewProps, 'style'> {\n  children: ChildrenType;\n  style?: StylesType;\n}\n\nexport function Hoverable({ children, ...rest }: HoverableProps) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <View\n      ref={hostRef}\n      children={\n        typeof children === 'function' ? children({ hovered }) : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction PressableWithoutRef(\n  { style, children, ...rest }: PressableProps,\n  forwardedRef: any\n) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n\n  const setRef = setAndForwardRef({\n    getForwardedRef: () => forwardedRef,\n    setLocalRef: (hostNode: any) => {\n      hostRef.current = hostNode;\n    },\n  });\n\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <NativePressable\n      //@ts-ignore\n      ref={setRef}\n      style={(interactionState: any) =>\n        typeof style === 'function'\n          ? style({ ...interactionState, hovered })\n          : style\n      }\n      children={(interactionState: any) =>\n        typeof children === 'function'\n          ? children({ ...interactionState, hovered })\n          : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction containsEvent(parent: any, clickTarget: any) {\n  if (parent === clickTarget) {\n    return true;\n  }\n  if (!parent) {\n    return false;\n  }\n  for (let child of parent.childNodes) {\n    if (containsEvent(child, clickTarget)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction createHoverListener() {\n  let hasMouse = isServer ? false : window.matchMedia('(pointer:fine)').matches;\n\n  let refs = new Map<any, (h: boolean) => any>();\n  let previousHoverFunc: undefined | ((h: boolean) => any);\n  let mousePosition = {\n    x: 0,\n    y: 0,\n  };\n\n  function hover(target: any) {\n    // hover is targeted directly\n    let hoverFunc = refs.get(target);\n\n    // let's try to see if any of the children of the hover event are hovered\n    if (!hoverFunc) {\n      for (let r of refs.keys()) {\n        if (containsEvent(r, target)) {\n          hoverFunc = refs.get(r);\n        }\n      }\n    }\n\n    previousHoverFunc && previousHoverFunc(false);\n    hoverFunc && hoverFunc(true);\n\n    // cache the previous hover so we can un-hover this later on\n    previousHoverFunc = hoverFunc;\n  }\n\n  function hoverEvent(event: any) {\n    hover(event.target);\n  }\n\n  function unhover() {\n    previousHoverFunc && previousHoverFunc(false);\n  }\n\n  function captureMousePosition(event: any) {\n    mousePosition.x = event.pageX;\n    mousePosition.y = event.pageY;\n  }\n\n  // touch devices have a bug where the onMouseOver is handled while it should not\n  // if the user would click something it keeps hovered while it should unhover\n  // so only listen to these events if the device has a mouse\n  if (hasMouse) {\n    document.onmouseover = hoverEvent;\n    document.onmousemove = captureMousePosition;\n    document.ontouchstart = unhover;\n    document.ontouchend = unhover;\n    document.ontouchcancel = unhover;\n    document.ontouchmove = unhover;\n  }\n\n  function add(ref: any, setHovered: any) {\n    refs.set(ref, setHovered);\n  }\n\n  function remove(ref: any) {\n    refs.delete(ref);\n  }\n\n  return {\n    add,\n    remove,\n    mousePosition,\n    hover,\n  };\n}\n\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }: any) {\n  return function forwardRef(ref: React.ElementRef<any>) {\n    const forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nfunction enhanceScrollView(WrappedComponent: any) {\n  const EnhancedScrollView = ({\n    forwardedRef,\n    onScroll,\n    scrollEventThrottle,\n    ...rest\n  }: any) => {\n    const onScrollInner = (e: any) => {\n      onScroll && onScroll(e);\n      const { mousePosition, hover } = hoverListener;\n      hover(document.elementFromPoint(mousePosition.x, mousePosition.y));\n    };\n    return (\n      <WrappedComponent\n        ref={forwardedRef}\n        onScroll={onScrollInner}\n        scrollEventThrottle={scrollEventThrottle || 25}\n        {...rest}\n      />\n    );\n  };\n\n  return React.forwardRef((props, ref) => {\n    return <EnhancedScrollView {...props} forwardedRef={ref} />;\n  });\n}\n\nexport const Pressable = React.forwardRef(PressableWithoutRef);\nexport const ScrollView = enhanceScrollView(\n  NativeScrollView\n) as React.ElementType<ScrollViewProps>;\nexport const FlatList = enhanceScrollView(NativeFlatList) as React.ElementType<\n  FlatListProps<unknown>\n>;\nexport const VirtualizedList = enhanceScrollView(\n  NativeVirtualizedList\n) as React.ElementType<VirtualizedListProps<unknown>>;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { parseBalance } from \"../utils\";\nimport useSDK from \"./useSDK\";\n\nexport interface TokenPairState {\n    fromSymbol: string;\n    setFromSymbol: (symbol: string) => void;\n    toSymbol: string;\n    setToSymbol: (symbol: string) => void;\n    fromToken?: Token;\n    toToken?: Token;\n    fromAmount: string;\n    setFromAmount: (amount: string) => void;\n    toAmount: string;\n    setToAmount: (amount: string) => void;\n    fromTokenAllowed: boolean;\n    setFromTokenAllowed: (allowed: boolean) => void;\n    toTokenAllowed: boolean;\n    setToTokenAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onWrap: () => Promise<void>;\n    wrapping: boolean;\n    onUnwrap: () => Promise<void>;\n    unwrapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useTokenPairState: () => TokenPairState = () => {\n    const { provider, signer, address, tokens, updateTokens, getTokenAllowance } = useContext(EthersContext);\n    const { wrapETH, unwrapETH } = useSDK();\n    const [fromSymbol, setFromSymbol] = useState(\"\");\n    const [toSymbol, setToSymbol] = useState(\"\");\n    const [fromAmount, setFromAmount] = useState(\"\");\n    const [toAmount, setToAmount] = useState(\"\");\n    const [fromTokenAllowed, setFromTokenAllowed] = useState(false);\n    const [toTokenAllowed, setToTokenAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [wrapping, setWrapping] = useState(false);\n    const [unwrapping, setUnwrapping] = useState(false);\n\n    const fromToken = tokens.find(token => token.symbol === fromSymbol);\n    const toToken = tokens.find(token => token.symbol === toSymbol);\n\n    useEffect(() => {\n        if (fromSymbol === \"\") {\n            setToSymbol(\"\");\n        }\n        setFromAmount(\"\");\n        setToAmount(\"\");\n    }, [fromSymbol, toSymbol]);\n\n    useEffect(() => {\n        setFromSymbol(\"\");\n    }, [address]);\n\n    useAsyncEffect(async () => {\n        if (fromToken && toToken && provider && signer) {\n            setFromTokenAllowed(false);\n            setToTokenAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                if (fromToken.symbol !== \"ETH\") {\n                    const fromAllowance = await getTokenAllowance(fromToken.address, ROUTER);\n                    setFromTokenAllowed(ethers.BigNumber.from(fromAllowance).gte(minAllowance));\n                }\n                if (toToken.symbol !== \"ETH\") {\n                    const toAllowance = await getTokenAllowance(toToken.address, ROUTER);\n                    setToTokenAllowed(ethers.BigNumber.from(toAllowance).gte(minAllowance));\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [fromToken, toToken, provider, signer]);\n\n    const onWrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setWrapping(true);\n            try {\n                const tx = await wrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setWrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    const onUnwrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setUnwrapping(true);\n            try {\n                const tx = await unwrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setUnwrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    return {\n        fromSymbol,\n        setFromSymbol,\n        toSymbol,\n        setToSymbol,\n        fromToken,\n        toToken,\n        fromAmount,\n        setFromAmount,\n        toAmount,\n        setToAmount,\n        fromTokenAllowed,\n        setFromTokenAllowed,\n        toTokenAllowed,\n        setToTokenAllowed,\n        loading,\n        onWrap,\n        wrapping,\n        onUnwrap,\n        unwrapping\n    };\n};\n\nexport default useTokenPairState;\n","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","import { useContext, useEffect, useState } from \"react\";\n\nimport { Pair } from \"@sushiswap/sdk\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport { fetchMyLPTokens, fetchMyUniswapLPTokens, fetchPools } from \"../utils/fetch-utils\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport interface LPTokensState extends TokenPairState {\n    updateLPTokens: () => Promise<void>;\n    lastTimeRefreshed: number;\n    updateLastTimeRefreshed: () => void;\n    lpTokens: LPToken[];\n    selectedLPToken?: LPToken;\n    setSelectedLPToken: (token?: LPToken) => void;\n    pair?: Pair;\n    amount: string;\n    setAmount: (amount: string) => void;\n}\n\ntype Mode = \"pools\" | \"my-lp-tokens\" | \"my-uniswap-lp-tokens\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useLPTokensState: (mode: Mode) => LPTokensState = mode => {\n    const state = useTokenPairState();\n    const { provider, signer, address, tokens } = useContext(EthersContext);\n    const [lastTimeRefreshed, setLastTimeRefreshed] = useState(0);\n    const [loading, setLoading] = useState(true);\n    const [lpTokens, setLPTokens] = useState<LPToken[]>([]);\n    const [selectedLPToken, setSelectedLPToken] = useState<LPToken>();\n    const [pair, setPair] = useState<Pair>();\n    const [amount, setAmount] = useState(\"\");\n    const { getPair } = useSDK();\n\n    const updateLPTokens = async () => {\n        if (provider && signer) {\n            try {\n                const data = await (mode === \"pools\"\n                    ? fetchPools(provider, signer)\n                    : mode === \"my-lp-tokens\"\n                    ? fetchMyLPTokens(tokens, provider, signer)\n                    : fetchMyUniswapLPTokens(tokens, provider, signer));\n                if (data) {\n                    setLPTokens(data);\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n    };\n\n    useEffect(() => {\n        if (!selectedLPToken) {\n            setAmount(\"\");\n        }\n    }, [selectedLPToken]);\n\n    useAsyncEffect(async () => {\n        setLoading(true);\n        setPair(undefined);\n        if (selectedLPToken && provider) {\n            try {\n                setPair(await getPair(selectedLPToken.tokenA, selectedLPToken.tokenB, provider));\n            } catch (e) {\n            } finally {\n                setLoading(false);\n            }\n        } else {\n            setLoading(false);\n        }\n    }, [selectedLPToken, provider]);\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (address && (mode === \"pools\" || tokens.length > 0)) {\n                if (!block) {\n                    setLoading(true);\n                }\n                await updateLPTokens();\n            }\n        },\n        () => \"updateLPTokens()\",\n        [tokens.length, address, lastTimeRefreshed],\n        0\n    );\n\n    return {\n        ...state,\n        fromToken: state.fromToken || selectedLPToken?.tokenA,\n        toToken: state.toToken || selectedLPToken?.tokenB,\n        updateLPTokens,\n        loading: state.loading || loading,\n        lastTimeRefreshed,\n        updateLastTimeRefreshed: () => {\n            setLastTimeRefreshed(Date.now());\n        },\n        lpTokens,\n        selectedLPToken,\n        setSelectedLPToken,\n        pair,\n        amount,\n        setAmount\n    };\n};\n\nexport default useLPTokensState;\n","import React, { FC, useCallback } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport { LPTokensState } from \"../hooks/useLPTokensState\";\nimport LPToken from \"../types/LPToken\";\nimport { formatBalance, pow10 } from \"../utils\";\nimport CheckBox from \"./CheckBox\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport Text from \"./Text\";\nimport TokenLogo from \"./TokenLogo\";\n\nexport type LPTokenSelectFilter = \"balance\" | \"amountDeposited\" | \"\";\n\nexport interface LPTokenSelectProps {\n    state: LPTokensState;\n    title: string;\n    emptyText: string;\n    showFilter?: boolean;\n    filter?: LPTokenSelectFilter;\n    onFilterChanged?: (filter: LPTokenSelectFilter) => void;\n    Item: FC<LPTokenItemProps>;\n    style?: ViewStyle;\n}\n\nexport interface LPTokenItemProps {\n    token: LPToken;\n    selected: boolean;\n    filter?: LPTokenSelectFilter;\n    onSelectToken: (token: LPToken) => void;\n}\n\nconst LPTokenSelect: FC<LPTokenSelectProps> = props => {\n    const onUnselectToken = () => props.state.setSelectedLPToken();\n    return (\n        <View style={props.style}>\n            <Expandable\n                title={props.title}\n                expanded={!props.state.selectedLPToken}\n                onExpand={() => props.state.setSelectedLPToken()}>\n                <LPTokenList state={props.state} filter={props.filter} emptyText={props.emptyText} Item={props.Item} />\n            </Expandable>\n            {props.state.selectedLPToken && (\n                <LPTokenItem token={props.state.selectedLPToken} selected={true} onSelectToken={onUnselectToken} />\n            )}\n        </View>\n    );\n};\n\nconst Filter = ({ filter, onFilterChanged }) => {\n    const handler = (f: string) => () => onFilterChanged(f);\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"flex-end\" }}>\n            <CheckBox checked={filter === \"balance\"} onPress={handler(\"balance\")} title={\"with balance\"} />\n            <CheckBox\n                checked={filter === \"amountDeposited\"}\n                onPress={handler(\"amountDeposited\")}\n                title={\"with deposit\"}\n            />\n            <CheckBox checked={!filter} onPress={handler(\"\")} title={\"all\"} />\n        </FlexView>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LPTokenList = ({\n    state,\n    emptyText,\n    filter,\n    Item\n}: {\n    state: LPTokensState;\n    emptyText: string;\n    filter?: LPTokenSelectFilter;\n    Item: FC<LPTokenItemProps>;\n}) => {\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <Item\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    filter={filter}\n                    onSelectToken={state.setSelectedLPToken}\n                />\n            );\n        },\n        [filter, state.setSelectedLPToken]\n    );\n    let data = state.lpTokens.sort((t1, t2) => {\n        return (t2.totalDeposited || ethers.constants.Zero)\n            .sub(t1.totalDeposited || ethers.constants.Zero)\n            .div(pow10(14))\n            .toNumber();\n    });\n    if (filter === \"amountDeposited\") {\n        data = data.filter(token => token.amountDeposited?.gt(0));\n    } else if (filter === \"balance\") {\n        data = data.filter(token => token.balance.gt(0));\n    }\n    return state.loading ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList text={emptyText} />\n    ) : (\n        <FlatList keyExtractor={item => JSON.stringify(item)} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = ({ text }: { text: string }) => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {text}\n            </Text>\n        </View>\n    );\n};\n\nexport const LPTokenItem: FC<LPTokenItemProps> = props => {\n    const { textMedium } = useColors();\n    const balance = formatBalance(props.token.balance, props.token.decimals, 8);\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            containerStyle={{ marginBottom: ITEM_SEPARATOR_HEIGHT }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token.tokenA} small={true} replaceWETH={true} />\n                <TokenLogo token={props.token.tokenB} small={true} replaceWETH={true} style={{ marginLeft: 4 }} />\n                <Text medium={true} caption={true} style={{ marginLeft: Spacing.tiny }}>\n                    {props.token.tokenA.symbol}-{props.token.tokenB.symbol}\n                </Text>\n                <View style={{ flex: 1, marginLeft: Spacing.tiny }}>\n                    {/*<Text note={true} style={{ textAlign: \"right\", color: textLight }}>*/}\n                    {/*    My Balance*/}\n                    {/*</Text>*/}\n                    <Text caption={true} light={true} style={{ textAlign: \"right\", color: textMedium }}>\n                        {balance}\n                    </Text>\n                </View>\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default LPTokenSelect;\n","import React, { FC, useCallback, useState } from \"react\";\nimport { ButtonGroup as NativeButtonGroup, ButtonGroupProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\n// tslint:disable-next-line:max-func-body-length\nconst ButtonGroup: FC<ButtonGroupProps> = props => {\n    const { borderDark } = useColors();\n    const { shadow } = useStyles();\n    const [index, setIndex] = useState<number>();\n    const onPress = useCallback(i => {\n        setIndex(i);\n        props.onPress(i);\n    }, []);\n    return (\n        <NativeButtonGroup\n            {...props}\n            selectedIndex={props.selectedIndex || index}\n            onPress={onPress}\n            textStyle={[\n                {\n                    fontFamily: \"regular\"\n                },\n                props.textStyle\n            ]}\n            buttonStyle={[\n                {\n                    borderTopLeftRadius: index === 0 ? Spacing.tiny : 0,\n                    borderBottomLeftRadius: index === 0 ? Spacing.tiny : 0,\n                    borderTopRightRadius:\n                        props.buttons.length > 0 && index === props.buttons.length - 1 ? Spacing.tiny : 0,\n                    borderBottomRightRadius:\n                        props.buttons.length > 0 && index === props.buttons.length - 1 ? Spacing.tiny : 0\n                },\n                props.buttonStyle\n            ]}\n            selectedButtonStyle={[\n                {\n                    backgroundColor: borderDark\n                },\n                props.selectedButtonStyle\n            ]}\n            containerStyle={[\n                {\n                    marginHorizontal: 0,\n                    marginVertical: 0,\n                    height: 56,\n                    ...shadow()\n                },\n                props.containerStyle\n            ]}\n        />\n    );\n};\n\nexport default ButtonGroup;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst CloseIcon = () => {\n    const { textLight } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={textLight} style={{ marginLeft: Spacing.tiny }} />;\n};\n\nexport default CloseIcon;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst SelectIcon = () => {\n    const { accent } = useColors();\n    return (\n        <Icon type={\"material-community\"} name={\"chevron-right\"} color={accent} style={{ marginLeft: Spacing.tiny }} />\n    );\n};\n\nexport default SelectIcon;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { LPTokenSelectFilter } from \"../components/LPTokenSelect\";\nimport { MASTER_CHEF } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { parseBalance } from \"../utils\";\nimport useLPTokensState, { LPTokensState } from \"./useLPTokensState\";\nimport useSDK from \"./useSDK\";\n\nexport interface FarmingState extends LPTokensState {\n    action?: Action;\n    setAction: (action?: Action) => void;\n    expectedSushiRewardPerBlock?: ethers.BigNumber;\n    filteredBy: LPTokenSelectFilter;\n    setFilteredBy: (filter: LPTokenSelectFilter) => void;\n    onDeposit: () => Promise<void>;\n    depositing: boolean;\n    onWithdraw: () => Promise<void>;\n    withdrawing: boolean;\n}\n\nexport type Action = \"deposit\" | \"withdraw\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useFarmingState: () => FarmingState = () => {\n    const state = useLPTokensState(\"pools\");\n    const { provider, signer, getTokenAllowance } = useContext(EthersContext);\n    const { getExpectedSushiRewardPerBlock, deposit, withdraw } = useSDK();\n    const [filteredBy, setFilteredBy] = useState(\"\" as LPTokenSelectFilter);\n    const [action, setAction] = useState<Action>();\n    const [loading, setLoading] = useState(false);\n    const [expectedSushiRewardPerBlock, setExpectedSushiRewardPerBlock] = useState<ethers.BigNumber>();\n    const [depositing, setDepositing] = useState(false);\n    const [withdrawing, setWithdrawing] = useState(false);\n\n    useEffect(() => {\n        setFilteredBy(\"\");\n        setAction(undefined);\n        setLoading(false);\n        setDepositing(false);\n        setWithdrawing(false);\n        setExpectedSushiRewardPerBlock(undefined);\n    }, [state.selectedLPToken]);\n\n    useAsyncEffect(async () => {\n        if (signer && state.selectedLPToken) {\n            setLoading(true);\n            try {\n                setExpectedSushiRewardPerBlock(await getExpectedSushiRewardPerBlock(state.selectedLPToken, signer));\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [signer, state.selectedLPToken]);\n\n    useAsyncEffect(async () => {\n        if (provider && signer && state.selectedLPToken) {\n            setLoading(true);\n            state.setSelectedLPTokenAllowed(false);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                const allowance = await getTokenAllowance(state.selectedLPToken.address, MASTER_CHEF);\n                state.setSelectedLPTokenAllowed(ethers.BigNumber.from(allowance).gte(minAllowance));\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [provider, signer, state.selectedLPToken]);\n\n    useEffect(() => {\n        state.setAmount(\"\");\n    }, [action]);\n\n    const onDeposit = useCallback(async () => {\n        if (state.selectedLPToken?.id && state.amount && signer) {\n            setDepositing(true);\n            try {\n                const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\n                const tx = await deposit(state.selectedLPToken.id, amount, signer);\n                await tx.wait();\n                state.setSelectedLPToken(undefined);\n                await state.updateLastTimeRefreshed();\n            } finally {\n                setDepositing(false);\n            }\n        }\n    }, [state.selectedLPToken, state.amount, signer]);\n\n    const onWithdraw = useCallback(async () => {\n        if (state.selectedLPToken?.id && state.amount && signer) {\n            setWithdrawing(true);\n            try {\n                const amount = parseBalance(state.amount, state.selectedLPToken.decimals);\n                const tx = await withdraw(state.selectedLPToken.id, amount, signer);\n                await tx.wait();\n                state.setSelectedLPToken(undefined);\n                await state.updateLastTimeRefreshed();\n            } finally {\n                setWithdrawing(false);\n            }\n        }\n    }, [state.selectedLPToken, state.amount, signer]);\n\n    return {\n        ...state,\n        loading: state.loading || loading,\n        filteredBy,\n        setFilteredBy,\n        action,\n        setAction,\n        expectedSushiRewardPerBlock,\n        onDeposit,\n        depositing,\n        onWithdraw,\n        withdrawing\n    };\n};\n\nexport default useFarmingState;\n","import React, { FC, useCallback, useState } from \"react\";\nimport { Image, Platform, TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Button from \"../components/Button\";\nimport ButtonGroup from \"../components/ButtonGroup\";\nimport CloseIcon from \"../components/CloseIcon\";\nimport Column from \"../components/Column\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport FlexView from \"../components/FlexView\";\nimport Heading from \"../components/Heading\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport LPTokenSelect, { LPTokenItemProps } from \"../components/LPTokenSelect\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport SelectIcon from \"../components/SelectIcon\";\nimport Text from \"../components/Text\";\nimport TokenInput from \"../components/TokenInput\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { MASTER_CHEF } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useFarmingState, { Action, FarmingState } from \"../hooks/useFarmingState\";\nimport useLinker from \"../hooks/useLinker\";\nimport LPToken from \"../types/LPToken\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { formatBalance, isEmptyValue, parseBalance, pow10 } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst Actions = [\"deposit\", \"withdraw\"];\n\nconst FarmingScreen = () => {\n    return (\n        <Screen>\n            <Container>\n                <Content>\n                    <Farming />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst Farming = () => {\n    const state = useFarmingState();\n    const emptyText =\n        state.filteredBy === \"amountDeposited\"\n            ? \"You don't have any pool with deposit.\"\n            : state.filteredBy === \"balance\"\n            ? \"You don't have any pool with balance.\"\n            : \"Temporarily unable to load pools.\";\n    return (\n        <>\n            <Column>\n                <Text h4={true} style={{ textAlign: \"center\", marginBottom: Spacing.normal }}>\n                    🌾 Farming\n                </Text>\n            </Column>\n            <LPTokenSelect\n                state={state}\n                title={\"1. Select a pool for yield farming:\"}\n                emptyText={emptyText}\n                showFilter={!state.selectedLPToken}\n                filter={state.filteredBy}\n                onFilterChanged={state.setFilteredBy}\n                Item={TokenItem}\n            />\n            <ActionSelect state={state} />\n            <Deposit state={state} />\n            <Withdraw state={state} />\n        </>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenItem: FC<LPTokenItemProps> = props => {\n    const { background, backgroundLight, textMedium } = useColors();\n    const amount =\n        (props.filter === \"balance\"\n            ? props.token.balance\n            : props.filter === \"amountDeposited\"\n            ? props.token.amountDeposited\n            : props.token.totalDeposited) || \"0\";\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    const field =\n        props.filter === \"amountDeposited\" ? \"My Deposit\" : props.filter === \"balance\" ? \"My Balance\" : \"Total Deposit\";\n    return (\n        <Hoverable>\n            {({ hovered }) => (\n                <TouchableHighlight onPress={onPress}>\n                    <View style={{ backgroundColor: hovered ? backgroundLight : background }}>\n                        <FlexView style={{ alignItems: \"center\", margin: Spacing.small }}>\n                            <View>\n                                <LogoSymbol token={props.token.tokenA} />\n                                <LogoSymbol token={props.token.tokenB} />\n                            </View>\n                            <View style={{ flex: 1 }}>\n                                <Text style={{ textAlign: \"right\", fontSize: 15 }}>{field}</Text>\n                                <Text light={true} style={{ textAlign: \"right\", fontSize: 22, color: textMedium }}>\n                                    {formatBalance(amount, props.token.decimals, 8)}\n                                </Text>\n                            </View>\n                            {props.selected ? <CloseIcon /> : <SelectIcon />}\n                        </FlexView>\n                    </View>\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nconst LogoSymbol = ({ token }) => {\n    const { textMedium } = useColors();\n    const [isEmpty, setIsEmpty] = useState(false);\n    const source = !token.logoURI || isEmpty ? require(\"../../assets/empty-token.png\") : { uri: token.logoURI };\n    return (\n        <FlexView style={{ alignItems: \"center\", marginBottom: Spacing.tiny }}>\n            <Image\n                source={source}\n                onError={() => setIsEmpty(true)}\n                style={{ width: 24, height: 24, backgroundColor: \"white\", borderRadius: 12 }}\n            />\n            <Text light={true} style={{ fontSize: 22, color: textMedium, marginLeft: Spacing.small }}>\n                {token.symbol.replace(/\\+/g, \"+\\n\")}\n            </Text>\n        </FlexView>\n    );\n};\n\nconst ActionSelect = ({ state }: { state: FarmingState }) => {\n    if (!state.selectedLPToken) {\n        return <Column noTopMargin={true} />;\n    }\n    const index = state.action ? Actions.indexOf(state.action) : null;\n    const onPress = useCallback((i: number) => {\n        state.setAction(Actions[i] as Action);\n    }, []);\n    const balance = formatBalance(state.selectedLPToken!.balance, state.selectedLPToken!.decimals);\n    const deposit = formatBalance(state.selectedLPToken.amountDeposited || \"0\", state.selectedLPToken!.decimals);\n    return (\n        <Column>\n            <Heading text={\"2. Do you want to DEPOSIT or WITHDRAW?\"} />\n            <View style={{ marginHorizontal: Spacing.small, marginBottom: Spacing.normal }}>\n                <Meta label={\"My Balance\"} text={balance} />\n                <Meta label={\"My Deposit\"} text={deposit} />\n            </View>\n            <ButtonGroup\n                selectedIndex={index}\n                onPress={onPress}\n                buttons={[{ element: DepositText }, { element: WithdrawText }]}\n                containerStyle={{ marginHorizontal: Spacing.small }}\n            />\n        </Column>\n    );\n};\n\nconst DepositText = () => {\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <Text style={{ color: \"black\" }}>Deposit</Text>\n            <Icon\n                type={\"material-community\"}\n                name={\"chevron-right\"}\n                color={\"black\"}\n                style={{ marginLeft: Spacing.tiny, marginTop: 2 }}\n            />\n        </FlexView>\n    );\n};\n\nconst WithdrawText = () => {\n    return (\n        <FlexView style={{ alignItems: \"center\" }}>\n            <Text style={{ color: \"black\" }}>Withdraw</Text>\n            <Icon\n                type={\"material-community\"}\n                name={\"chevron-right\"}\n                color={\"black\"}\n                style={{ marginLeft: Spacing.tiny, marginTop: 2 }}\n            />\n        </FlexView>\n    );\n};\n\nconst Deposit = ({ state }: { state: FarmingState }) => {\n    if (!state.selectedLPToken || state.action !== \"deposit\") {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <Column>\n            <AddLiquidityNotice state={state} />\n            <TokenInput\n                title={\"3. Amount of tokens to DEPOSIT:\"}\n                token={state.selectedLPToken}\n                hidden={state.selectedLPToken.balance.isZero()}\n                amount={state.amount}\n                onAmountChanged={state.setAmount}\n            />\n            <DepositInfo state={state} />\n            <DepositControls state={state} />\n        </Column>\n    );\n};\n\nconst AddLiquidityNotice = ({ state }: { state: FarmingState }) => {\n    const { green } = useColors();\n    if (!state.selectedLPToken!.balance.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <>\n            <View style={{ marginHorizontal: Spacing.small }}>\n                <Notice\n                    color={green}\n                    text={\n                        \"You need some \" +\n                        state.selectedLPToken!.symbol +\n                        \" token to start farming. Add liquidity to get the LP token.\"\n                    }\n                />\n            </View>\n            <AddLiquidityButton />\n        </>\n    );\n};\n\nconst DepositInfo = ({ state }: { state: FarmingState }) => {\n    if (state.selectedLPToken!.balance.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    const balance = formatBalance(state.selectedLPToken!.balance, state.selectedLPToken!.decimals);\n    const sushiReward =\n        state.expectedSushiRewardPerBlock && state.amount\n            ? formatBalance(state.expectedSushiRewardPerBlock.mul(parseBalance(state.amount, 18)).div(pow10(18)), 18)\n            : undefined;\n    return (\n        <Column noTopMargin={true}>\n            <Meta label={\"My Balance\"} text={balance} />\n            {!isEmptyValue(state.amount) && <Meta label={\"SUSHI Reward per Block\"} text={sushiReward} />}\n        </Column>\n    );\n};\n\nconst DepositControls = ({ state }: { state: FarmingState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.selectedLPToken]);\n    if (state.selectedLPToken!.balance.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    const approveRequired = !state.selectedLPTokenAllowed;\n    const disabled = approveRequired || isEmptyValue(state.amount);\n    return (\n        <Column>\n            {parseBalance(state.amount, state.selectedLPToken!.decimals).gt(state.selectedLPToken!.balance) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken!.symbol} />\n            ) : state.loading ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.selectedLPToken!}\n                        spender={MASTER_CHEF}\n                        onSuccess={() => state.setSelectedLPTokenAllowed(true)}\n                        onError={setError}\n                        hidden={isEmptyValue(state.amount) || !approveRequired}\n                    />\n                    <DepositButton state={state} onError={setError} disabled={disabled} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </Column>\n    );\n};\n\nconst AddLiquidityButton = () => {\n    const { green } = useColors();\n    const onPress = useLinker(\"/liquidity\", \"Liquidity\");\n    return (\n        <Button\n            color={green}\n            title={\"Add Liquidity\"}\n            containerStyle={{ marginTop: Spacing.normal }}\n            onPress={onPress}\n        />\n    );\n};\n\nconst DepositButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: FarmingState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onDeposit().catch(onError);\n    }, [state.onDeposit, onError]);\n    return <Button title={\"Deposit\"} disabled={disabled} loading={state.depositing} onPress={onPress} />;\n};\n\nconst Withdraw = ({ state }: { state: FarmingState }) => {\n    if (!state.selectedLPToken || state.action !== \"withdraw\") {\n        return <Column noTopMargin={true} />;\n    }\n    const token: LPToken = {\n        ...state.selectedLPToken,\n        balance: state.selectedLPToken.amountDeposited || ethers.constants.Zero\n    };\n    return (\n        <Column>\n            <NoLPTokenNotice state={state} />\n            <TokenInput\n                title={\"3. Amount of tokens to WITHDRAW:\"}\n                token={token}\n                hidden={state.loading || state.selectedLPToken.amountDeposited?.isZero() || false}\n                amount={state.amount}\n                onAmountChanged={state.setAmount}\n            />\n            <WithdrawInfo state={state} />\n            <WithdrawControls state={state} />\n        </Column>\n    );\n};\n\nconst NoLPTokenNotice = ({ state }: { state: FarmingState }) => {\n    if (state.loading || !state.selectedLPToken || !state.selectedLPToken.amountDeposited?.isZero()) {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <Column noTopMargin={true}>\n            <View style={{ marginHorizontal: Spacing.small }}>\n                <Notice\n                    text={\"You don't have any \" + state.selectedLPToken!.symbol + \" token deposited. Deposit it first.\"}\n                />\n            </View>\n        </Column>\n    );\n};\n\nconst WithdrawInfo = ({ state }: { state: FarmingState }) => {\n    if (\n        state.loading ||\n        !state.selectedLPToken ||\n        !state.selectedLPToken.amountDeposited ||\n        state.selectedLPToken.amountDeposited?.isZero() ||\n        !state.selectedLPToken.pendingSushi\n    ) {\n        return <Column noTopMargin={true} />;\n    }\n    const deposit = formatBalance(state.selectedLPToken.amountDeposited, state.selectedLPToken!.decimals);\n    const pendingSushi = formatBalance(\n        state.selectedLPToken.pendingSushi || ethers.constants.Zero,\n        state.selectedLPToken!.decimals\n    );\n    return (\n        <Column noTopMargin={true}>\n            <Meta label={\"My Deposit\"} text={deposit} />\n            <Meta label={\"Pending Sushi Reward\"} text={pendingSushi} />\n            <View style={{ marginTop: Spacing.normal, marginHorizontal: Spacing.small }}>\n                <Notice text={\"All pending sushi reward will be transferred to you if you withdraw.\"} />\n            </View>\n        </Column>\n    );\n};\n\nconst WithdrawControls = ({ state }: { state: FarmingState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.selectedLPToken]);\n    if (state.loading) {\n        return (\n            <Column>\n                <FetchingButton />\n            </Column>\n        );\n    }\n    if (\n        !state.selectedLPToken ||\n        !state.selectedLPToken.amountDeposited ||\n        state.selectedLPToken.amountDeposited.isZero()\n    ) {\n        return <Column noTopMargin={true} />;\n    }\n    return (\n        <Column>\n            {parseBalance(state.amount, state.selectedLPToken!.decimals).gt(state.selectedLPToken.amountDeposited) ? (\n                <InsufficientBalanceButton symbol={state.selectedLPToken!.symbol} />\n            ) : (\n                <WithdrawButton state={state} onError={setError} disabled={isEmptyValue(state.amount)} />\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </Column>\n    );\n};\n\nconst WithdrawButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: FarmingState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onWithdraw().catch(onError);\n    }, [state.onWithdraw, onError]);\n    return (\n        <Button size={\"large\"} title={\"Withdraw\"} disabled={disabled} loading={state.withdrawing} onPress={onPress} />\n    );\n};\n\nexport default FarmingScreen;\n"],"sourceRoot":""}