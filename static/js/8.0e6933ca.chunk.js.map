{"version":3,"sources":["src/components/InsufficientBalanceButton.tsx","src/components/AmountMeta.tsx","src/components/ApproveButton.tsx","src/components/Notice.tsx","src/hooks/useDelayedEffect.tsx","src/components/TokenAmount.tsx","src/components/TokenSymbol.tsx","src/components/UnsupportedButton.tsx","src/components/TokenName.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/hooks/useAddLiquidityState.tsx","src/screens/LiquidityScreen.tsx"],"names":["InsufficientBalanceButton","symbol","title","disabled","AmountMeta","props","useColors","textDark","textLight","placeholder","style","fontSize","IS_DESKTOP","marginBottom","Spacing","normal","color","amount","suffix","ApproveButton","approveToken","useContext","EthersContext","useState","loading","setLoading","onPress","useCallback","a","async","token","onError","address","spender","tx","wait","onSuccess","hidden","containerStyle","tiny","Notice","borderStyle","border","useStyles","clear","note","text","buttonText","onPressButton","type","size","fontWeight","titleStyle","buttonStyle","paddingHorizontal","paddingVertical","alignSelf","marginTop","handles","useDelayedEffect","effect","timeout","inputs","key","toString","useAsyncEffect","handle","setTimeout","clearTimeout","TokenAmount","caption","formatBalance","balance","decimals","TokenSymbol","medium","marginLeft","UnsupportedButton","state","fromSymbol","toSymbol","TokenName","Text","numberOfLines","ellipsizeMode","small","width","name","Loading","ActivityIndicator","position","right","bottom","TokenItem","accent","onSelectToken","Selectable","selected","ITEM_SEPARATOR_HEIGHT","FlexView","alignItems","TokenLogo","View","flex","Button","duplicate","height","TokenSearch","provider","tokens","tokenToAdd","setTokenToAdd","findIndex","t","useEffect","undefined","trim","ethers","utils","isAddress","findOrFetchToken","Input","value","onChangeText","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","marginRight","labelStyle","paddingTop","paddingBottom","onAddToken","TokenList","loadingTokens","renderItem","item","data","useMemo","filter","sort","t1","t2","isZero","localeCompare","length","FlatList","keyExtractor","EmptyList","margin","textAlign","selectable","CloseIcon","SelectIcon","TokenSelect","addCustomToken","search","setSearch","query","setQuery","find","toLowerCase","Expandable","expanded","onExpand","onChangeSymbol","includes","useAddLiquidityState","useTokenPairState","signer","updateTokens","pair","setPair","adding","setAdding","useSDK","getPair","addLiquidity","addLiquidityETH","useDelayedOnBlockEffect","block","fromToken","toToken","onAdd","fromAmount","toAmount","parseBalance","amountETH","setFromSymbol","AddLiquidity","large","Border","ItemSeparator","FromTokenSelect","customTokens","ToTokenSelect","setToSymbol","Heading","FromTokenInput","TokenInput","onAmountChanged","newAmount","setFromAmount","priceOf","convertToken","quote","convertAmount","toExact","setToAmount","isEmptyValue","hideMaxButton","ToTokenInput","PriceInfo","FirstProviderInfo","green","noAmount","initialPrice","Fraction","from","InfoBox","price","PairPriceInfo","setAmount","calculateAmountOfLPTokenMinted","minted","toFixed","PriceMeta","Meta","label","Controls","error","setError","fromApproveRequired","fromTokenAllowed","toApproveRequired","toTokenAllowed","FetchingButton","gt","ROUTER","setFromTokenAllowed","setToTokenAllowed","message","code","ErrorMessage","SupplyButton","goToRemoveLiquidity","useLinker","LiquidityScreen","Screen","Container","BackgroundImage","Content","Title","light","Platform","OS","WebFooter"],"mappings":"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","file":"static/js/8.0e6933ca.chunk.js","sourcesContent":["import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    return <Button title={\"Insufficient \" + (symbol ? symbol : \"Balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","import React, { FC } from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Text from \"./Text\";\n\nexport interface AmountMetaProps {\n    amount?: string;\n    suffix?: string;\n    disabled?: boolean;\n}\n\nconst AmountMeta: FC<AmountMetaProps> = props => {\n    const { textDark, textLight, placeholder } = useColors();\n    return (\n        <Text\n            style={{\n                fontSize: IS_DESKTOP ? 28 : 20,\n                marginBottom: Spacing.normal,\n                color: props.disabled ? placeholder : props.amount ? textDark : textLight\n            }}>\n            {props.disabled ? \"N/A\" : props.amount ? props.amount + \" \" + (props.suffix || \"\") : \"Fetching…\"}\n        </Text>\n    );\n};\n\nexport default AmountMeta;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={\"Approve \" + (props.token?.symbol || \"\")}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { textLight } = useColors();\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || textLight;\n    return (\n        <View style={[props.clear ? {} : borderStyle, props.style]}>\n            <Text note={true} style={{ color }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import useAsyncEffect from \"use-async-effect\";\n\nconst handles = {};\n\nconst useDelayedEffect = (\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\n    timeout: number,\n    inputs?: any[]\n) => {\n    const key = effect.toString();\n    useAsyncEffect<number>(\n        () => {\n            const handle = setTimeout(effect, timeout);\n            handles[key] = handle;\n            return handle;\n        },\n        handle => {\n            clearTimeout(handle);\n        },\n        inputs\n    );\n};\nexport default useDelayedEffect;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={IS_DESKTOP} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import React from \"react\";\n\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\nimport Button from \"./Button\";\n\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" Not Supported\"} disabled={true} />;\n};\n\nexport default UnsupportedButton;\n","import React from \"react\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {IS_DESKTOP ? props.token.name : props.token.symbol}\n    </Text>\n);\n\nexport default TokenName;\n","import React, { FC, useCallback, useContext, useEffect, useState } from \"react\";\nimport { ActivityIndicator, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Input from \"./Input\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Selectable from \"./Selectable\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\n\nexport interface TokenSearchProps {\n    tokens?: Token[];\n    text: string;\n    onChangeText: (text: string) => void;\n    onAddToken?: (token: Token) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSearch: FC<TokenSearchProps> = props => {\n    const { border } = useStyles();\n    const { provider, tokens } = useContext(EthersContext);\n    const [tokenToAdd, setTokenToAdd] = useState<Token>();\n    const [loading, setLoading] = useState(false);\n    const duplicate = !!tokenToAdd && tokens.findIndex(t => t.address === tokenToAdd.address) !== -1;\n    if (!props.tokens) return <View />;\n    useEffect(() => {\n        if (props.text === \"\") {\n            setLoading(false);\n            setTokenToAdd(undefined);\n        }\n    }, [props.text]);\n    useDelayedEffect(\n        async () => {\n            const address = props.text.trim();\n            if (provider && ethers.utils.isAddress(address)) {\n                setLoading(true);\n                try {\n                    const token = await findOrFetchToken(address, provider);\n                    if (token.name && token.symbol && token.decimals) {\n                        setTokenToAdd(token as Token);\n                    }\n                } finally {\n                    setLoading(false);\n                }\n            }\n        },\n        300,\n        [provider, props.text]\n    );\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.small }}>\n                <Input\n                    value={props.text}\n                    onChangeText={props.onChangeText}\n                    placeholder={\"Token name, symbol or address\"}\n                    autoFocus={IS_DESKTOP}\n                    inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\n                    inputContainerStyle={{ borderBottomWidth: 0, marginRight: loading ? 32 : 0 }}\n                    labelStyle={{ height: 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 12,\n                        paddingBottom: 0\n                    }}\n                />\n                {props.onAddToken && loading && <Loading />}\n            </FlexView>\n            {props.onAddToken && tokenToAdd && (\n                <TokenItem token={tokenToAdd} selected={true} onSelectToken={props.onAddToken} duplicate={duplicate} />\n            )}\n        </View>\n    );\n};\n\nconst Loading = () => <ActivityIndicator size={\"small\"} style={{ position: \"absolute\", right: 16, bottom: 16 }} />;\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    duplicate: boolean;\n}) => {\n    const { accent } = useColors();\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={false}\n            disabled={true}\n            onPress={onPress}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} />\n                <TokenName token={props.token} />\n                <View style={{ flex: 1 }} />\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    color={accent}\n                    title={props.duplicate ? \"Already Added\" : \"ADD \" + props.token.symbol}\n                    fontWeight={\"bold\"}\n                    onPress={onPress}\n                    disabled={props.duplicate}\n                    buttonStyle={{ paddingHorizontal: 4, height: 27 }}\n                />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSearch;\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport Token from \"../types/Token\";\nimport CloseIcon from \"./CloseIcon\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport SelectIcon from \"./SelectIcon\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenSearch from \"./TokenSearch\";\nimport TokenSymbol from \"./TokenSymbol\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    style?: ViewStyle;\n}\n\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens, addCustomToken } = useContext(EthersContext);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\n    const onAddToken = async (t: Token) => {\n        await addCustomToken(t);\n        setSearch(\"\");\n        setQuery(\"\");\n        props.onChangeSymbol(t.symbol);\n    };\n    const hidden = (t: Token) => {\n        if (query.length > 0) {\n            return !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\n        }\n        return props.hidden?.(t) || false;\n    };\n    useEffect(() => setSearch(\"\"), [props.symbol]);\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\n    return (\n        <View style={props.style}>\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={onAddToken} />\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\n            </Expandable>\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () =>\n            tokens\n                .filter(token => (props.hidden ? !props.hidden(token) : true))\n                .sort(\n                    (t1, t2) =>\n                        (t2.balance.isZero() ? 0 : 10000000000) -\n                        (t1.balance.isZero() ? 0 : 10000000000) +\n                        t1.symbol.localeCompare(t2.symbol)\n                ),\n        [tokens, props.hidden]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any matching tokens.\"}\n            </Text>\n        </View>\n    );\n};\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            containerStyle={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <TokenName token={props.token} disabled={props.disabled} />\n                <TokenAmount token={props.token} disabled={props.disabled} style={{ flex: 1, textAlign: \"right\" }} />\n                {IS_DESKTOP && <TokenSymbol token={props.token} disabled={props.disabled} />}\n                {props.selected ? <CloseIcon /> : <SelectIcon />}\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSelect;\n","import { useCallback, useContext, useState } from \"react\";\n\nimport { Pair } from \"@sushiswap/sdk\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { parseBalance } from \"../utils\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport interface AddLiquidityState extends TokenPairState {\n    pair?: Pair;\n    onAdd: () => Promise<void>;\n    adding: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useAddLiquidityState: () => AddLiquidityState = () => {\n    const state = useTokenPairState();\n    const { provider, signer, updateTokens } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const [pair, setPair] = useState<Pair>();\n    const [adding, setAdding] = useState(false);\n    const { getPair, addLiquidity, addLiquidityETH } = useSDK();\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n                setPair(undefined);\n            }\n            if (state.fromToken && state.toToken && provider) {\n                try {\n                    setPair(await getPair(state.fromToken, state.toToken, provider));\n                } catch (e) {\n                } finally {\n                    setLoading(false);\n                }\n            } else {\n                setLoading(false);\n            }\n        },\n        () => \"getPair(\" + state.fromSymbol + \",\" + state.toSymbol + \")\",\n        [state.fromSymbol, state.toSymbol, provider],\n        0\n    );\n\n    const onAdd = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && state.toAmount && signer) {\n            setAdding(true);\n            try {\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const toAmount = parseBalance(state.toAmount, state.toToken.decimals);\n                if (state.fromSymbol === \"ETH\" || state.toSymbol === \"ETH\") {\n                    const [token, amount, amountETH] =\n                        state.fromSymbol === \"ETH\"\n                            ? [state.toToken, toAmount, fromAmount]\n                            : [state.fromToken, fromAmount, toAmount];\n                    const tx = await addLiquidityETH(token, amount, amountETH, signer);\n                    await tx.wait();\n                } else {\n                    const tx = await addLiquidity(state.fromToken, state.toToken, fromAmount, toAmount, signer);\n                    await tx.wait();\n                }\n                await updateTokens();\n                state.setFromSymbol(\"\");\n            } finally {\n                setAdding(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, state.toAmount, signer]);\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        pair,\n        onAdd,\n        adding\n    };\n};\n\nexport default useAddLiquidityState;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport AmountMeta from \"../components/AmountMeta\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport ItemSeparator from \"../components/ItemSeparator\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { LiquiditySubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useAddLiquidityState, { AddLiquidityState } from \"../hooks/useAddLiquidityState\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport useSDK from \"../hooks/useSDK\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport { convertAmount, convertToken, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst LiquidityScreen = () => {\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={\"Add Liquidity\"} />\n                    <Text light={true}>Add liquidity to a pool and get LP tokens of the pair.</Text>\n                    <AddLiquidity />\n                </Content>\n                {Platform.OS === \"web\" && <WebFooter />}\n            </Container>\n            <LiquiditySubMenu />\n        </Screen>\n    );\n};\n\nconst AddLiquidity = () => {\n    const state = useAddLiquidityState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <FromTokenSelect state={state} />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <FromTokenInput state={state} />\n            <ItemSeparator />\n            <ToTokenInput state={state} />\n            <ItemSeparator />\n            <PriceInfo state={state} />\n        </View>\n    );\n};\n\nconst FromTokenSelect = ({ state }: { state: AddLiquidityState }) => {\n    const { customTokens } = useContext(EthersContext);\n    return (\n        <TokenSelect\n            title={\"1st Token\"}\n            symbol={state.fromSymbol}\n            onChangeSymbol={state.setFromSymbol}\n            hidden={token => !customTokens.find(t => t.address === token.address) && token.balance.isZero()}\n        />\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: AddLiquidityState }) => {\n    const { customTokens } = useContext(EthersContext);\n    if (!state.fromSymbol) {\n        return <Heading text={\"2nd Token\"} disabled={true} />;\n    }\n    return (\n        <View>\n            <TokenSelect\n                title={\"2nd Token\"}\n                symbol={state.toSymbol}\n                onChangeSymbol={state.setToSymbol}\n                hidden={token =>\n                    token.symbol === state.fromSymbol ||\n                    (!customTokens.find(t => t.address === token.address) && token.balance.isZero())\n                }\n            />\n        </View>\n    );\n};\n\nconst FromTokenInput = ({ state }: { state: AddLiquidityState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={\"Amount of Tokens\"} disabled={true} />;\n    }\n    const onAmountChanged = (newAmount: string) => {\n        state.setFromAmount(newAmount);\n        if (state.pair && state.fromToken) {\n            const fromPrice = state.pair.priceOf(convertToken(state.fromToken));\n            const toAmount = fromPrice.quote(convertAmount(state.fromToken, newAmount)).toExact();\n            state.setToAmount(isEmptyValue(toAmount) ? \"\" : toAmount);\n        }\n    };\n    return (\n        <TokenInput\n            title={\"Amount of Tokens\"}\n            token={state.fromToken}\n            amount={state.fromAmount}\n            onAmountChanged={onAmountChanged}\n            hideMaxButton={state.loading && !state.pair}\n        />\n    );\n};\n\nconst ToTokenInput = ({ state }: { state: AddLiquidityState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <View />;\n    }\n    const onAmountChanged = (newAmount: string) => {\n        state.setToAmount(newAmount);\n        if (state.pair && state.toToken) {\n            const toPrice = state.pair.priceOf(convertToken(state.toToken));\n            const fromAmount = toPrice.quote(convertAmount(state.toToken, newAmount)).toExact();\n            state.setFromAmount(isEmptyValue(fromAmount) ? \"\" : fromAmount);\n        }\n    };\n    return (\n        <TokenInput\n            token={state.toToken}\n            amount={state.toAmount}\n            onAmountChanged={onAmountChanged}\n            hideMaxButton={state.loading && !state.pair}\n        />\n    );\n};\n\nconst PriceInfo = ({ state }: { state: AddLiquidityState }) => {\n    if (state.fromToken && state.toToken && !state.loading && !state.pair) {\n        return <FirstProviderInfo state={state} />;\n    } else {\n        return <PairPriceInfo state={state} />;\n    }\n};\n\nconst FirstProviderInfo = ({ state }: { state: AddLiquidityState }) => {\n    const { green } = useColors();\n    const noAmount = isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount);\n    const initialPrice = Fraction.from(\n        parseBalance(state.toAmount, state.toToken!.decimals),\n        parseBalance(state.fromAmount, state.fromToken!.decimals)\n    ).toString(8);\n    return (\n        <View>\n            <InfoBox style={{ marginTop: Spacing.normal }}>\n                <PriceMeta state={state} price={initialPrice} disabled={noAmount} />\n            </InfoBox>\n            <Notice\n                text={\n                    \"You are the first liquidity provider.\\n\" +\n                    \"The ratio of tokens you add will set the price of this pool.\"\n                }\n                color={green}\n                style={{ marginTop: Spacing.small }}\n            />\n        </View>\n    );\n};\n\nconst PairPriceInfo = ({ state }: { state: AddLiquidityState }) => {\n    const [amount, setAmount] = useState<string>();\n    const { calculateAmountOfLPTokenMinted } = useSDK();\n    useAsyncEffect(async () => {\n        if (state.pair && !isEmptyValue(state.fromAmount) && !isEmptyValue(state.toAmount)) {\n            const minted = await calculateAmountOfLPTokenMinted(\n                state.pair,\n                convertAmount(state.fromToken!, state.fromAmount),\n                convertAmount(state.toToken!, state.toAmount)\n            );\n            setAmount(minted?.toFixed(8));\n        }\n    }, [state.pair, state.fromAmount, state.toAmount]);\n    const disabled = isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount);\n    const price =\n        state.pair && state.fromToken ? state.pair.priceOf(convertToken(state.fromToken)).toFixed(8) : undefined;\n    const symbol = state.fromSymbol + \"-\" + state.toSymbol;\n    return (\n        <InfoBox>\n            <AmountMeta amount={amount} suffix={symbol} disabled={disabled} />\n            <PriceMeta state={state} price={price} disabled={!state.fromSymbol || !state.toSymbol} />\n            <Controls state={state} />\n        </InfoBox>\n    );\n};\n\nconst PriceMeta = ({ state, price, disabled }) => (\n    <Meta label={\"Ratio\"} text={price} suffix={state.toSymbol + \" = 1 \" + state.fromSymbol} disabled={disabled} />\n);\n\n// tslint:disable-next-line:max-func-body-length\nconst Controls = ({ state }: { state: AddLiquidityState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const fromApproveRequired = state.fromSymbol !== \"ETH\" && !state.fromTokenAllowed;\n    const toApproveRequired = state.toSymbol !== \"ETH\" && !state.toTokenAllowed;\n    const disabled =\n        fromApproveRequired || toApproveRequired || isEmptyValue(state.fromAmount) || isEmptyValue(state.toAmount);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken ||\n            !state.toToken ||\n            state.loading ||\n            isEmptyValue(state.fromAmount) ||\n            isEmptyValue(state.toAmount) ? (\n                <SupplyButton state={state} onError={setError} disabled={true} />\n            ) : state.loading || !state.pair ? (\n                <FetchingButton />\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : parseBalance(state.toAmount, state.toToken.decimals).gt(state.toToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.toSymbol} />\n            ) : (state.fromSymbol === \"ETH\" && state.toSymbol === \"WETH\") ||\n              (state.fromSymbol === \"WETH\" && state.toSymbol === \"ETH\") ? (\n                <UnsupportedButton state={state} />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setFromTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!fromApproveRequired}\n                    />\n                    <ApproveButton\n                        token={state.toToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setToTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!toApproveRequired}\n                    />\n                    <SupplyButton state={state} onError={setError} disabled={disabled} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SupplyButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: AddLiquidityState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const goToRemoveLiquidity = useLinker(\"/liquidity/remove\", \"RemoveLiquidity\");\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onAdd();\n            goToRemoveLiquidity();\n        } catch (e) {\n            onError(e);\n        }\n    }, [state.onAdd, onError]);\n    return (\n        <Button\n            title={state.fromSymbol && state.toSymbol ? \"Supply \" + state.fromSymbol + \"-\" + state.toSymbol : \"Supply\"}\n            disabled={disabled}\n            loading={state.adding}\n            onPress={onPress}\n        />\n    );\n};\n\nexport default LiquidityScreen;\n"],"sourceRoot":""}