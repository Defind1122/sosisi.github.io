{"version":3,"sources":["src/components/Heading.tsx","src/hooks/useLinker.tsx","src/components/ItemSeparator.tsx","src/components/Selectable.tsx","src/components/TokenLogo.tsx","src/components/Column.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/components/Border.tsx","src/components/CloseIcon.tsx","src/components/ErrorMessage.tsx","src/components/InfoBox.tsx","src/components/SelectIcon.tsx","src/components/Expandable.tsx","src/hooks/useAllCommonPairs.tsx","src/hooks/useSDK.tsx","src/components/FetchingButton.tsx","src/components/Loading.tsx","src/components/Meta.tsx","src/components/TokenInput.tsx","src/components/Input.tsx","src/hooks/useDelayedOnBlockEffect.tsx","src/hooks/useWeth.tsx","src/hooks/useTokenPairState.tsx","assets/empty-token.png","assets/ETH.png","index.tsx"],"names":["Heading","props","accent","useColors","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","IS_DESKTOP","paddingBottom","tiny","text","buttonText","type","size","title","onPress","onPressButton","color","buttonStyle","paddingHorizontal","Platform","OS","path","route","target","history","useHistory","useCallback","window","open","push","_target","navigate","useNavigation","ITEM_SEPARATOR_HEIGHT","ItemSeparator","Selectable","borderDark","overlay","border","useStyles","background","backgroundLight","containerStyle","hovered","activeOpacity","underlayColor","selected","backgroundColor","TokenLogo","useState","error","setError","placeholder","require","ETH","source","replaceWETH","isWETH","token","uri","logoURI","width","borderRadius","onError","opacity","Column","View","marginTop","noTopMargin","large","normal","SocialIcon","darkMode","useContext","GlobalContext","textLight","light","iconColor","undefined","borderWidth","borderColor","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressDiscord","FlexView","justifyContent","name","raised","reverse","reverseColor","WebFooter","padding","Text","note","textAlign","Border","CloseIcon","marginLeft","ErrorMessage","code","message","InfoBox","SelectIcon","Expandable","expanded","setExpanded","shouldExpand","onExpand","display","children","DAI","Token","ChainId","MAINNET","USDC","USDT","SUSHI","YAM","AMPL","BASES_TO_CHECK_TRADES_AGAINST","WETH","CUSTOM_BASES","address","wrappedCurrency","currency","ETHER","useAllCommonPairs","loadAllCommonPairs","currencyA","currencyB","provider","a","async","bases","tokenA","tokenB","basePairs","flatMap","base","map","otherBase","filter","t0","t1","allPairCombinations","tokens","Boolean","b","customBases","customBasesA","customBasesB","find","equals","Promise","all","pair","Fetcher","fetchPairData","pairs","useSDK","getTotalSupply","EthersContext","getTrade","fromToken","toToken","fromAmount","eth","isETH","from","convertToken","to","Currency","amount","CurrencyAmount","ether","toString","TokenAmount","Trade","bestTradeExactIn","maxHops","maxNumResults","getPair","calculateAmountOfLPTokenMinted","toAmount","liquidityToken","totalSupply","minted","getLiquidityMinted","ethers","BigNumber","raw","FetchingButton","Loading","marginVertical","Meta","textMedium","url","suffix","label","textDecorationLine","MaxButton","onPressMax","balance","fee","pow10","gt","sub","constants","Zero","updateAmount","formatBalance","decimals","position","right","bottom","maxButtonText","symbol","TokenInput","onChangeText","onAmountChanged","parseBalance","e","endsWith","indexOf","length","value","keyboardType","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","labelStyle","fontFamily","paddingTop","hideMaxButton","Input","textDark","errors","forbidden","forEach","validation","match","regexp","allowed","join","minHeight","outline","placeholderTextColor","errorStyle","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","addOnBlockListener","removeOnBlockListener","eventName","useAsyncEffect","setTimeout","handles","handle","clearTimeout","useWeth","wrapETH","signer","weth","getContract","estimateGas","deposit","gasLimit","tx","logTransaction","unwrapETH","withdraw","useTokenPairState","updateTokens","getTokenAllowance","fromSymbol","setFromSymbol","toSymbol","setToSymbol","setFromAmount","setToAmount","fromTokenAllowed","setFromTokenAllowed","toTokenAllowed","setToTokenAllowed","loading","setLoading","wrapping","setWrapping","unwrapping","setUnwrapping","useEffect","minAllowance","pow","ROUTER","fromAllowance","gte","toAllowance","onWrap","wait","onUnwrap","module","exports","isServer","process","hoverListener","hasMouse","refs","mousePosition","x","y","hover","hoverFunc","containsEvent","r","previousHoverFunc","unhover","document","event","add","ref","remove","createHoverListener","Hoverable","rest","hostRef","React","hr","setHovered","parent","enhanceScrollView","WrappedComponent","EnhancedScrollView","onScroll","scrollEventThrottle","forwardedRef","setRef","setLocalRef","getForwardedRef","setAndForwardRef","hostNode","interactionState"],"mappings":"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","file":"static/js/0.a2d6c7d4.chunk.js","sourcesContent":["import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n    style?: TextStyle;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={props.fontWeight || \"bold\"}\n                disabled={props.disabled}\n                style={[{ flex: 1, fontSize: IS_DESKTOP ? 24 : 18, paddingBottom: Spacing.tiny }, props.style]}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                    buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport const ITEM_SEPARATOR_HEIGHT = 10;\n\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\n\nexport default ItemSeparator;\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps, ViewStyle } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n    containerStyle?: ViewStyle;\n}\n\nconst Selectable: FC<SelectableProps> = props => {\n    const { borderDark, accent, overlay } = useColors();\n    const { border } = useStyles();\n    const { background, backgroundLight } = useColors();\n    return (\n        <Hoverable style={props.containerStyle}>\n            {({ hovered }) => (\n                <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={props.onPress}>\n                    <View\n                        {...props}\n                        style={[\n                            {\n                                ...border({ color: props.selected ? accent : borderDark }),\n                                backgroundColor: hovered && !props.disabled ? backgroundLight : background\n                            },\n                            props.style\n                        ]}\n                    />\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nexport default Selectable;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport useColors from \"../hooks/useColors\";\nimport Token from \"../types/Token\";\nimport { isWETH } from \"../utils\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const { backgroundLight: disabled } = useColors();\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && isWETH(props.token) ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? disabled : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={!props.token.logoURI || error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/sushiswap\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/sushiswap\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/YS8xH7E\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport Column from \"../Column\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst WebFooter = () => (\n    <Column noTopMargin={true}>\n        <View\n            style={{\n                width: \"100%\",\n                padding: Spacing.normal\n            }}>\n            <SocialIcons />\n            <Text note={true} style={{ marginTop: Spacing.tiny, textAlign: \"center\", width: \"100%\" }}>\n                Built with ❤️ by SushiSwap\n            </Text>\n        </View>\n    </Column>\n);\n\nexport default WebFooter;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = props => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: props.small ? Spacing.tiny : Spacing.small,\n                marginBottom: props.small ? Spacing.tiny : Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nconst CloseIcon = () => {\n    const { accent } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={accent} style={{ marginLeft: 4 }} />;\n};\n\nexport default CloseIcon;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React, { PropsWithChildren, useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { backgroundLight, borderDark } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: darkMode ? borderDark : backgroundLight }),\n                    backgroundColor: backgroundLight,\n                    marginTop: Spacing.normal + Spacing.small,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\n\nexport default InfoBox;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nconst SelectIcon = () => {\n    const { accent } = useColors();\n    return <Icon type={\"material-community\"} name={\"chevron-right\"} color={accent} style={{ marginLeft: 4 }} />;\n};\n\nexport default SelectIcon;\n","import React, { FC, ReactNode, useState } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport Heading from \"./Heading\";\n\nexport interface ExpandableProps {\n    title: string;\n    expanded: boolean;\n    onExpand?: () => void;\n    style?: ViewStyle;\n    children?: ReactNode;\n}\n\nconst Expandable: FC<ExpandableProps> = props => {\n    const [expanded, setExpanded] = useState(true);\n    const shouldExpand = props.expanded && expanded;\n    const buttonText = shouldExpand ? undefined : \"Change\";\n    const onPress = () => {\n        setExpanded(true);\n        props.onExpand?.();\n    };\n\n    return (\n        <View style={props.style}>\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\n        </View>\n    );\n};\n\nexport default Expandable;\n","import { useCallback } from \"react\";\n\nimport { ChainId, Currency, ETHER, Fetcher, Pair, Token, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\n\nconst DAI = new Token(ChainId.MAINNET, \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", 18, \"DAI\", \"Dai Stablecoin\");\nconst USDC = new Token(ChainId.MAINNET, \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\", 6, \"USDC\", \"USD//C\");\nconst USDT = new Token(ChainId.MAINNET, \"0xdAC17F958D2ee523a2206206994597C13D831ec7\", 6, \"USDT\", \"Tether USD\");\nconst SUSHI = new Token(ChainId.MAINNET, \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\", 18, \"SUSHI\", \"SushiToken\");\nconst YAM = new Token(ChainId.MAINNET, \"0x0e2298E3B3390e3b945a5456fBf59eCc3f55DA16\", 18, \"YAM\", \"YAM\");\nconst AMPL = new Token(ChainId.MAINNET, \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\", 9, \"AMPL\", \"Ampleforth\");\n\nconst BASES_TO_CHECK_TRADES_AGAINST = [WETH[ChainId.MAINNET], DAI, USDC, USDT, SUSHI, YAM];\nconst CUSTOM_BASES = {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n};\n\nfunction wrappedCurrency(currency: Currency | undefined): Token | undefined {\n    return currency === ETHER ? WETH[ChainId.MAINNET] : currency instanceof Token ? currency : undefined;\n}\n\n// Source: https://github.com/Uniswap/uniswap-interface/blob/master/src/hooks/Trades.ts\nconst useAllCommonPairs = () => {\n    const loadAllCommonPairs = useCallback(\n        // tslint:disable-next-line:max-func-body-length\n        async (currencyA?: Currency, currencyB?: Currency, provider?: ethers.providers.BaseProvider) => {\n            const bases: Token[] = BASES_TO_CHECK_TRADES_AGAINST;\n            const [tokenA, tokenB] = [wrappedCurrency(currencyA), wrappedCurrency(currencyB)];\n            const basePairs: [Token, Token][] = bases\n                .flatMap((base): [Token, Token][] => bases.map(otherBase => [base, otherBase]))\n                .filter(([t0, t1]) => t0.address !== t1.address);\n\n            const allPairCombinations =\n                tokenA && tokenB\n                    ? [\n                          // the direct pair\n                          [tokenA, tokenB],\n                          // token A against all bases\n                          ...bases.map((base): [Token, Token] => [tokenA, base]),\n                          // token B against all bases\n                          ...bases.map((base): [Token, Token] => [tokenB, base]),\n                          // each base against all bases\n                          ...basePairs\n                      ]\n                          .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n                          .filter(([t0, t1]) => t0.address !== t1.address)\n                          .filter(([a, b]) => {\n                              const customBases = CUSTOM_BASES;\n                              if (!customBases) return true;\n\n                              const customBasesA: Token[] | undefined = customBases[a.address];\n                              const customBasesB: Token[] | undefined = customBases[b.address];\n\n                              if (!customBasesA && !customBasesB) return true;\n\n                              if (customBasesA && !customBasesA.find(base => tokenB.equals(base))) return false;\n                              return !(customBasesB && !customBasesB.find(base => tokenA.equals(base)));\n                          })\n                    : [];\n\n            const pairs = await Promise.all(\n                allPairCombinations.map(async pair => {\n                    try {\n                        return await Fetcher.fetchPairData(pair[0], pair[1], provider);\n                    } catch (e) {\n                        return null;\n                    }\n                })\n            );\n            return pairs.filter(pair => pair !== null) as Pair[];\n        },\n        []\n    );\n\n    return { loadAllCommonPairs };\n};\n\nexport default useAllCommonPairs;\n","import { useCallback, useContext } from \"react\";\n\nimport { Currency, CurrencyAmount, Fetcher, Pair, TokenAmount, Trade } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { convertToken, isETH } from \"../utils\";\nimport useAllCommonPairs from \"./useAllCommonPairs\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSDK = () => {\n    const { getTotalSupply } = useContext(EthersContext);\n    const { loadAllCommonPairs } = useAllCommonPairs();\n\n    const getTrade = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider\n        ) => {\n            if (provider) {\n                const eth = isETH(fromToken);\n                const from = convertToken(fromToken);\n                const to = isETH(toToken) ? Currency.ETHER : convertToken(toToken);\n                const pairs = await loadAllCommonPairs(from, to, provider);\n                const amount = eth\n                    ? CurrencyAmount.ether(fromAmount.toString())\n                    : new TokenAmount(from, fromAmount.toString());\n                return Trade.bestTradeExactIn(pairs, amount, to, { maxHops: 3, maxNumResults: 1 })[0];\n            }\n        },\n        []\n    );\n\n    const getPair = useCallback(async (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => {\n        const from = convertToken(fromToken);\n        const to = convertToken(toToken);\n        return await Fetcher.fetchPairData(from, to, provider);\n    }, []);\n\n    const calculateAmountOfLPTokenMinted = async (pair: Pair, fromAmount: TokenAmount, toAmount: TokenAmount) => {\n        const totalSupply = await getTotalSupply(pair.liquidityToken.address);\n        if (totalSupply) {\n            const minted = pair.getLiquidityMinted(\n                new TokenAmount(pair.liquidityToken, totalSupply.toString()),\n                fromAmount,\n                toAmount\n            );\n            return ethers.BigNumber.from(minted.raw.toString());\n        }\n    };\n\n    return {\n        getTrade,\n        getPair,\n        calculateAmountOfLPTokenMinted\n    };\n};\n\nexport default useSDK;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst FetchingButton = () => {\n    return <Button title={\"Fetching…\"} disabled={true} />;\n};\nexport default FetchingButton;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import React, { FC } from \"react\";\n\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    url?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const { textMedium, textLight, placeholder } = useColors();\n    const onPress = useLinker(props.url || \"\", \"\", \"_blank\");\n    const text = props.disabled\n        ? \"N/A\"\n        : props.text\n        ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n        : \"Fetching…\";\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4 }}>\n            <Text note={!IS_DESKTOP} fontWeight={\"bold\"} style={{ color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text\n                note={!IS_DESKTOP}\n                onPress={props.url ? onPress : undefined}\n                style={{\n                    color: props.disabled ? placeholder : props.text ? textMedium : textLight,\n                    textDecorationLine: props.url ? \"underline\" : \"none\"\n                }}>\n                {text}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isETH, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    token?: Token;\n    amount: string;\n    onAmountChanged: (amount: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenInput: FC<TokenInputProps> = props => {\n    const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.token && props.onAmountChanged) {\n                try {\n                    parseBalance(text, props.token.decimals);\n                    props.onAmountChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAmountChanged(text);\n                    }\n                }\n            }\n        },\n        [props.token, props.onAmountChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.amount}\n                    onChangeText={onChangeText}\n                    placeholder={\"0.0\"}\n                    keyboardType={\"numeric\"}\n                    autoFocus={props.autoFocus || false}\n                    inputStyle={{ marginHorizontal: Spacing.tiny }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 15,\n                        paddingBottom: 2\n                    }}\n                />\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\n                    <MaxButton\n                        token={props.token}\n                        maxButtonText={props.maxButtonText}\n                        updateAmount={props.onAmountChanged}\n                    />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(() => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (isETH(props.token)) {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount]);\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 12 : 24 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || (IS_DESKTOP ? \"MAX \" + props.token.symbol : \"MAX\")}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n            />\n        </View>\n    );\n};\n\nexport default TokenInput;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface Validation {\n    regexp: RegExp;\n    error: string;\n}\n\nexport interface InputProps extends NativeInputProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    allowed?: Validation[];\n    forbidden?: Validation[];\n    onError?: (error: string) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Input: FC<InputProps> = props => {\n    const { textDark, textMedium, textLight } = useColors();\n    const size = props.size || \"normal\";\n    const color = props.color || textDark;\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\n    const onChangeText = useCallback(\n        (text: string) => {\n            props.onChangeText?.(text);\n            props.onError?.(\"\");\n            const errors = [] as string[];\n            if (text !== \"\" && props.forbidden) {\n                props.forbidden.forEach(validation => {\n                    if (text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (text !== \"\" && props.allowed) {\n                props.allowed.forEach(validation => {\n                    if (!text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (errors.length > 0) {\n                props.onError?.(errors.join(\"\\n\"));\n            }\n        },\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\n    );\n    return (\n        <NativeInput\n            {...props}\n            inputStyle={[\n                { fontSize, fontFamily: \"regular\", paddingBottom: 4, color, marginTop: 0, minHeight: 32 },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\n                props.inputStyle\n            ]}\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\n            placeholderTextColor={props.placeholderTextColor || textLight}\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\n            onChangeText={onChangeText}\n        />\n    );\n};\n\nexport default Input;\n","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","import { useCallback } from \"react\";\n\nimport { WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\nconst useWeth = () => {\n    const wrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.deposit({\n            value: amount\n        });\n        const tx = await weth.deposit({\n            value: amount,\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.deposit()\");\n    }, []);\n\n    const unwrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.withdraw(amount);\n        const tx = await weth.withdraw(amount, {\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.withdraw()\");\n    }, []);\n\n    return {\n        wrapETH,\n        unwrapETH\n    };\n};\n\nexport default useWeth;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { parseBalance } from \"../utils\";\nimport useWeth from \"./useWeth\";\n\nexport interface TokenPairState {\n    fromSymbol: string;\n    setFromSymbol: (symbol: string) => void;\n    toSymbol: string;\n    setToSymbol: (symbol: string) => void;\n    fromToken?: Token;\n    toToken?: Token;\n    fromAmount: string;\n    setFromAmount: (amount: string) => void;\n    toAmount: string;\n    setToAmount: (amount: string) => void;\n    fromTokenAllowed: boolean;\n    setFromTokenAllowed: (allowed: boolean) => void;\n    toTokenAllowed: boolean;\n    setToTokenAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onWrap: () => Promise<void>;\n    wrapping: boolean;\n    onUnwrap: () => Promise<void>;\n    unwrapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useTokenPairState: () => TokenPairState = () => {\n    const { signer, address, tokens, updateTokens, getTokenAllowance } = useContext(EthersContext);\n    const { wrapETH, unwrapETH } = useWeth();\n    const [fromSymbol, setFromSymbol] = useState(\"\");\n    const [toSymbol, setToSymbol] = useState(\"\");\n    const [fromAmount, setFromAmount] = useState(\"\");\n    const [toAmount, setToAmount] = useState(\"\");\n    const [fromTokenAllowed, setFromTokenAllowed] = useState(false);\n    const [toTokenAllowed, setToTokenAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [wrapping, setWrapping] = useState(false);\n    const [unwrapping, setUnwrapping] = useState(false);\n\n    const fromToken = tokens.find(token => token.symbol === fromSymbol);\n    const toToken = tokens.find(token => token.symbol === toSymbol);\n\n    useEffect(() => {\n        if (fromSymbol === \"\") {\n            setToSymbol(\"\");\n        }\n        setFromAmount(\"\");\n        setToAmount(\"\");\n    }, [fromSymbol, toSymbol]);\n\n    useEffect(() => {\n        setFromSymbol(\"\");\n    }, [address]);\n\n    useAsyncEffect(async () => {\n        if (fromToken && toToken && signer) {\n            setFromTokenAllowed(false);\n            setToTokenAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                if (fromToken.symbol !== \"ETH\") {\n                    const fromAllowance = await getTokenAllowance(fromToken.address, ROUTER);\n                    setFromTokenAllowed(ethers.BigNumber.from(fromAllowance).gte(minAllowance));\n                }\n                if (toToken.symbol !== \"ETH\") {\n                    const toAllowance = await getTokenAllowance(toToken.address, ROUTER);\n                    setToTokenAllowed(ethers.BigNumber.from(toAllowance).gte(minAllowance));\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [fromToken, toToken, signer]);\n\n    const onWrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setWrapping(true);\n            try {\n                const tx = await wrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setWrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    const onUnwrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setUnwrapping(true);\n            try {\n                const tx = await unwrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setUnwrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    return {\n        fromSymbol,\n        setFromSymbol,\n        toSymbol,\n        setToSymbol,\n        fromToken,\n        toToken,\n        fromAmount,\n        setFromAmount,\n        toAmount,\n        setToAmount,\n        fromTokenAllowed,\n        setFromTokenAllowed,\n        toTokenAllowed,\n        setToTokenAllowed,\n        loading,\n        onWrap,\n        wrapping,\n        onUnwrap,\n        unwrapping\n    };\n};\n\nexport default useTokenPairState;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","import * as React from 'react';\nimport type {\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  PressableStateCallbackType,\n  FlatListProps,\n  VirtualizedListProps,\n  ScrollViewProps,\n} from 'react-native';\n\nimport {\n  View,\n  Pressable as NativePressable,\n  ScrollView as NativeScrollView,\n  FlatList as NativeFlatList,\n  VirtualizedList as NativeVirtualizedList,\n  //@ts-ignore\n} from 'react-native-web';\n\nconst isServer =\n  typeof process !== 'undefined' &&\n  process.release &&\n  process.release.name === 'node';\n\nconst hoverListener = createHoverListener();\n\ninterface PressableStateCallbackTypeWeb extends PressableStateCallbackType {\n  focused?: boolean;\n  hovered?: boolean;\n}\n\ntype ChildrenType =\n  | React.ReactNode\n  | ((state: PressableStateCallbackTypeWeb) => React.ReactNode);\n\ntype StylesType =\n  | StyleProp<ViewStyle>\n  | ((state: PressableStateCallbackTypeWeb) => StyleProp<ViewStyle>);\n\ninterface HoverableProps extends ViewProps {\n  children:\n    | React.ReactNode\n    | ((state: { hovered: boolean }) => React.ReactNode);\n}\n\ninterface PressableProps extends Omit<ViewProps, 'style'> {\n  children: ChildrenType;\n  style?: StylesType;\n}\n\nexport function Hoverable({ children, ...rest }: HoverableProps) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <View\n      ref={hostRef}\n      children={\n        typeof children === 'function' ? children({ hovered }) : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction PressableWithoutRef(\n  { style, children, ...rest }: PressableProps,\n  forwardedRef: any\n) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n\n  const setRef = setAndForwardRef({\n    getForwardedRef: () => forwardedRef,\n    setLocalRef: (hostNode: any) => {\n      hostRef.current = hostNode;\n    },\n  });\n\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <NativePressable\n      //@ts-ignore\n      ref={setRef}\n      style={(interactionState: any) =>\n        typeof style === 'function'\n          ? style({ ...interactionState, hovered })\n          : style\n      }\n      children={(interactionState: any) =>\n        typeof children === 'function'\n          ? children({ ...interactionState, hovered })\n          : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction containsEvent(parent: any, clickTarget: any) {\n  if (parent === clickTarget) {\n    return true;\n  }\n  if (!parent) {\n    return false;\n  }\n  for (let child of parent.childNodes) {\n    if (containsEvent(child, clickTarget)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction createHoverListener() {\n  let hasMouse = isServer ? false : window.matchMedia('(pointer:fine)').matches;\n\n  let refs = new Map<any, (h: boolean) => any>();\n  let previousHoverFunc: undefined | ((h: boolean) => any);\n  let mousePosition = {\n    x: 0,\n    y: 0,\n  };\n\n  function hover(target: any) {\n    // hover is targeted directly\n    let hoverFunc = refs.get(target);\n\n    // let's try to see if any of the children of the hover event are hovered\n    if (!hoverFunc) {\n      for (let r of refs.keys()) {\n        if (containsEvent(r, target)) {\n          hoverFunc = refs.get(r);\n        }\n      }\n    }\n\n    previousHoverFunc && previousHoverFunc(false);\n    hoverFunc && hoverFunc(true);\n\n    // cache the previous hover so we can un-hover this later on\n    previousHoverFunc = hoverFunc;\n  }\n\n  function hoverEvent(event: any) {\n    hover(event.target);\n  }\n\n  function unhover() {\n    previousHoverFunc && previousHoverFunc(false);\n  }\n\n  function captureMousePosition(event: any) {\n    mousePosition.x = event.pageX;\n    mousePosition.y = event.pageY;\n  }\n\n  // touch devices have a bug where the onMouseOver is handled while it should not\n  // if the user would click something it keeps hovered while it should unhover\n  // so only listen to these events if the device has a mouse\n  if (hasMouse) {\n    document.onmouseover = hoverEvent;\n    document.onmousemove = captureMousePosition;\n    document.ontouchstart = unhover;\n    document.ontouchend = unhover;\n    document.ontouchcancel = unhover;\n    document.ontouchmove = unhover;\n  }\n\n  function add(ref: any, setHovered: any) {\n    refs.set(ref, setHovered);\n  }\n\n  function remove(ref: any) {\n    refs.delete(ref);\n  }\n\n  return {\n    add,\n    remove,\n    mousePosition,\n    hover,\n  };\n}\n\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }: any) {\n  return function forwardRef(ref: React.ElementRef<any>) {\n    const forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nfunction enhanceScrollView(WrappedComponent: any) {\n  const EnhancedScrollView = ({\n    forwardedRef,\n    onScroll,\n    scrollEventThrottle,\n    ...rest\n  }: any) => {\n    const onScrollInner = (e: any) => {\n      onScroll && onScroll(e);\n      const { mousePosition, hover } = hoverListener;\n      hover(document.elementFromPoint(mousePosition.x, mousePosition.y));\n    };\n    return (\n      <WrappedComponent\n        ref={forwardedRef}\n        onScroll={onScrollInner}\n        scrollEventThrottle={scrollEventThrottle || 25}\n        {...rest}\n      />\n    );\n  };\n\n  return React.forwardRef((props, ref) => {\n    return <EnhancedScrollView {...props} forwardedRef={ref} />;\n  });\n}\n\nexport const Pressable = React.forwardRef(PressableWithoutRef);\nexport const ScrollView = enhanceScrollView(\n  NativeScrollView\n) as React.ElementType<ScrollViewProps>;\nexport const FlatList = enhanceScrollView(NativeFlatList) as React.ElementType<\n  FlatListProps<unknown>\n>;\nexport const VirtualizedList = enhanceScrollView(\n  NativeVirtualizedList\n) as React.ElementType<VirtualizedListProps<unknown>>;\n"],"sourceRoot":""}