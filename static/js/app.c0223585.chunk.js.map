{"version":3,"sources":["assets/metamask-dark.png","assets/metamask.png","assets/sushiswap.jpg","src/components/FlexView.tsx","src/constants/tokens.ts","src/constants/dimension.ts","src/components/Button.tsx","src/utils/index.ts","src/hooks/useAllCommonPairs.tsx","src/hooks/useSDK.tsx","src/components/Container.tsx","src/components/Content.tsx","src/components/app/AppHeader.tsx","src/components/web/ConnectToWallet.tsx","src/screens/Screen.tsx","src/components/Title.tsx","src/components/web/WebSubMenu.tsx","src/utils/fetch-utils.ts","src/constants/Fraction.ts","src/constants/colors.ts","src/hooks/useColors.tsx","src/constants/contracts.ts","src/utils/analytics-utils.ts","src/context/EthersContext.tsx","src/context/index.tsx","src/components/DarkModeSwitch.tsx","src/components/web/MobileWebMenu.tsx","src/components/web/WebHeader.tsx","src/screens/EmptyScreen.tsx","src/screens/index.tsx","App.tsx","globals.js","src/context/GlobalContext.tsx","src/components/Text.tsx"],"names":["module","exports","FlexView","props","flexDirection","direction","style","ETH","name","address","ethers","constants","AddressZero","decimals","symbol","logoURI","balance","BigNumber","from","SCREEN_WIDTH","Math","round","Dimensions","get","width","SCREEN_HEIGHT","height","HEADER_HEIGHT","HEADER_WIDTH","DESKTOP_CONTENT_WIDTH","SUB_MENU_HEIGHT","IS_DESKTOP","Spacing","tiny","small","normal","large","huge","Button","useColors","primary","textMedium","placeholder","backgroundLight","type","size","fontSize","fontFamily","fontWeight","color","disabled","loading","onPress","undefined","loadingProps","buttonStyle","paddingHorizontal","backgroundColor","borderColor","titleStyle","disabledTitleStyle","disabledStyle","CONTRACTS","ERC20","IUniswapV2Factory","IUniswapV2Pair","IUniswapV2Router02","IWETH","MasterChef","SushiBar","SushiRoll","OrderBook","Settlement","LPTokenScanner","abi","formatBalance","value","maxFraction","formatted","utils","formatUnits","split","length","substr","parseBalance","parseUnits","isEmptyValue","text","isBigNumber","isZero","replace","convertToken","token","WETH","SDKToken","ChainId","MAINNET","convertAmount","amount","TokenAmount","toString","parseCurrencyAmount","toExact","getContract","signerOrProvider","contract","Contract","pow10","exp","pow","DAI","Token","USDC","USDT","SUSHI","YAM","AMPL","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","wrappedCurrency","currency","ETHER","useAllCommonPairs","loadAllCommonPairs","useCallback","currencyA","currencyB","provider","a","async","bases","tokenA","tokenB","basePairs","flatMap","base","map","otherBase","filter","t0","t1","allPairCombinations","tokens","Boolean","b","customBases","customBasesA","customBasesB","find","equals","Promise","all","pair","Fetcher","fetchPairData","pairs","minAmount","percent","sub","mul","numerator","div","denominator","Order","maker","fromToken","toToken","amountIn","amountOutMin","recipient","deadline","floor","Date","now","v","r","s","filledAmountIn","canceled","this","eq","toNumber","SETTLEMENT","settlement","getAddress","hashOfOrder","hash","signMessage","arrayify","signature","splitSignature","sign","useSDK","useContext","EthersContext","ethereum","getTotalSupply","allowedSlippage","Percent","getTrade","fromAmount","isETH","to","CurrencyAmount","ether","Trade","bestTradeExactIn","maxHops","maxNumResults","swap","trade","signer","Router","feeOnTransfer","ttl","params","swapCallParameters","router","ROUTER","estimateGas","methodName","args","gasLimit","functions","tx","logTransaction","arg","createOrder","kovanSigner","order","toArgs","orderBook","ORDER_BOOK","cancelOrder","slice","queryOrderFilledEvents","filters","OrderFilled","queryFilter","wrapETH","weth","deposit","unwrapETH","withdraw","getPair","addLiquidity","toAmount","getTime","removeLiquidityETH","liquidity","amountETH","removeLiquidity","addLiquidityETH","getExpectedSushiRewardPerBlock","masterChef","MASTER_CHEF","totalAllocPoint","sushiPerBlock","poolInfo","id","allocPoint","lpTokenId","enterSushiBar","sushiBar","SUSHI_BAR","enter","leaveSushiBar","leave","migrate","lpToken","sushiRoll","SUSHI_ROLL","Zero","migrateWithPermit","signERC2612Permit","permit","calculateSwapFee","calculateLimitOrderFee","calculateLimitOrderReturn","price","limitOrderFeeDeducted","swapFeeDeducted","Fraction","parse","apply","calculateAmountOfLPTokenMinted","liquidityToken","totalSupply","getLiquidityMinted","Container","Platform","select","web","contentContainerStyle","flex","default","Content","marginLeft","marginRight","paddingVertical","AppHeader","background","View","StatusBar","translucent","ConnectButton","setEthereum","metaMask","window","isMetaMask","request","method","alert","title","containerStyle","marginTop","marginHorizontal","WalletConnectButton","darkMode","GlobalContext","WalletConnectProvider","rpc","1","enable","ConnectWallet","source","require","alignItems","justifyContent","Image","marginBottom","WebScreen","chainId","Text","light","textAlign","position","top","right","bottom","left","ConnectToWallet","AppScreen","Screen","Title","SwapSubMenu","WebSubMenu","items","path","LiquiditySubMenu","MigrateSubMenu","StakingSubMenu","borderDark","submenu","borderBottomWidth","alignSelf","item","MenuItem","key","accent","textLight","match","useRouteMatch","active","isExact","paddingTop","paddingBottom","textDecoration","fetchTokens","customTokens","fetch","response","json","fetchTokenBalances","balances","getBalance","i","sort","t2","fetchPools","pools","pool","poolToken","balanceOf","totalDeposited","userInfo","amountDeposited","pendingSushi","fetchMyLPTokens","fetchLPTokens","SUSHISWAP_FACTORY","fetchMyUniswapLPTokens","UNISWAP_FACTORY","factory","factoryContract","allPairsLength","scanner","LP_TOKEN_SCANNER","account","pages","push","page","findPairs","min","flat","index","erc20","Number","findOrFetchToken","token0","token1","t","toLowerCase","send","meta","logo","addresses","tokenBalances","tokenBalance","fetchMyLimitOrders","canceledHashes","numberOfHashesOfMaker","hashesOfMaker","hashes","HashZero","orderOfHash","filledAmountInOfHash","includes","myOrders","compareOrders","o0","o1","status","compared","fetchMyCanceledLimitOrderHashes","numberOfCanceledHashesOfMaker","allCanceledHashes","sdk","numeratorToken","denominatorToken","NAN","ZERO","BASE","isNaN","fraction","gt","lt","maxFractions","str","endsWith","substring","One","Colors","common","white","transparent","secondary","green","red","twitter","facebook","header","border","textDark","shadow","overlay","dark","Analytics","gasPrice","React","createContext","_ethereum","kovanProvider","ensName","addOnBlockListener","_name","_listener","removeOnBlockListener","updateTokens","loadingTokens","addCustomToken","_token","removeCustomToken","approveToken","_spender","_amount","getTokenAllowance","getTokenBalance","_who","EthersContextProvider","children","useState","setProvider","setKovanProvider","setSigner","setKovanSigner","setChainId","setAddress","setENSName","onBlockListeners","setOnBlockListeners","setTokens","setCustomTokens","setLoadingTokens","useEffect","kovan","providers","AlchemyProvider","wallet","Wallet","useAsyncEffect","web3","Web3Provider","alchemy","network","getSigner","onAccountsChanged","accounts","onChainChanged","onDisconnect","on","off","lookupAddress","ens","data","AsyncStorage","removeItem","findIndex","custom","setItem","JSON","stringify","spender","MaxUint256","approve","owner","who","listener","old","onBlock","block","Object","entries","Provider","EthersContextConsumer","Consumer","ContextProvider","DarkModeSwitch","setDarkMode","onChange","transform","scale","CloseButton","MobileWebMenuItem","startsWith","Status","connected","borderRadius","isWalletConnect","disconnect","MobileWebMenu","expanded","onCollapse","animationType","visible","TouchableWithoutFeedback","paddingRight","Menu","padding","MenuIcon","onExpand","TouchableHighlight","confirm","borderWidth","CloseIcon","paddingLeft","WebHeader","zIndex","onExpandMenu","EmptyScreen","FarmingScreen","lazy","LiquidityScreen","MigrateScreen","MyLimitOrdersScreen","RemoveLiquidityScreen","StakeScreen","UnstakeScreen","SwapScreen","Screens","load","OS","WebScreens","menuExpanded","setMenuExpanded","fallback","Tab","createBottomTabNavigator","AppScreens","theme","DefaultTheme","colors","card","notification","NavigationContainer","Navigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","component","options","tabOptions","iconName","tabBarIcon","App","useFonts","OpenSans_300Light","regular","OpenSans_400Regular","bold","OpenSans_600SemiBold","AppLoading","global","Buffer","clear","_darkMode","mnemonic","setMnemonic","_mnemonic","GlobalContextProvider","colorScheme","useColorScheme","getItem","mode","mne","String","GlobalContextConsumer","medium","note","h1Style","h2Style","h3Style","h4Style","caption"],"mappings":"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","file":"static/js/app.c0223585.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/metamask-dark.2137a831.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask.15e22fef.png\";","module.exports = __webpack_public_path__ + \"static/media/sushiswap.ef005f32.jpg\";","import React, { FunctionComponent } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\ninterface FlexViewProps extends ViewProps {\n    direction?: \"row\" | \"column\";\n}\n\nconst FlexView: FunctionComponent<FlexViewProps> = props => {\n    const flexDirection = props.direction || \"row\";\n    return <View {...props} style={[{ flexDirection }, props.style]} />;\n};\nexport default FlexView;\n","import { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\n\nexport const ETH: Token = {\n    name: \"Ethereum\",\n    address: ethers.constants.AddressZero,\n    decimals: 18,\n    symbol: \"ETH\",\n    logoURI: \"https://lite.sushiswap.fi/images/tokens/ETH.png\",\n    balance: ethers.BigNumber.from(0)\n};\n","import { Dimensions } from \"react-native\";\n\nexport const SCREEN_WIDTH = Math.round(Dimensions.get(\"window\").width);\nexport const SCREEN_HEIGHT = Math.round(Dimensions.get(\"window\").height);\nexport const IS_HIGH_RESOLUTION = SCREEN_HEIGHT > 667;\nexport const HEADER_HEIGHT = 64;\nexport const HEADER_WIDTH = 980;\nexport const DESKTOP_CONTENT_WIDTH = 540;\nexport const SUB_MENU_HEIGHT = 40;\nexport const IS_DESKTOP = SCREEN_WIDTH > DESKTOP_CONTENT_WIDTH;\n\nexport const Spacing = IS_HIGH_RESOLUTION\n    ? {\n          tiny: 8,\n          small: 16,\n          normal: 32,\n          large: 48,\n          huge: 64\n      }\n    : {\n          tiny: 6,\n          small: 12,\n          normal: 24,\n          large: 32,\n          huge: 48\n      };\n","import React, { FC } from \"react\";\nimport { Button as NativeButton, ButtonProps as NativeButtonProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nexport interface ButtonProps extends NativeButtonProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Button: FC<ButtonProps> = props => {\n    const { primary, textMedium, placeholder, backgroundLight } = useColors();\n    const type = props.type || \"solid\";\n    const size = props.size || \"normal\";\n    const height = props.size === \"small\" ? 36 : size === \"normal\" ? 45 : 54;\n    const fontSize = props.size === \"small\" ? 13 : size === \"normal\" ? 15 : 18;\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = type === \"solid\" ? \"white\" : props.color || textMedium;\n    return (\n        <NativeButton\n            {...props}\n            disabled={props.loading || props.disabled}\n            onPress={props.loading ? undefined : props.onPress}\n            type={type}\n            loadingProps={{ color: textMedium }}\n            buttonStyle={[\n                {\n                    height,\n                    paddingHorizontal: Spacing.small,\n                    backgroundColor: \"transparent\",\n                    borderColor: color\n                },\n                props.buttonStyle\n            ]}\n            titleStyle={[{ fontSize, fontFamily, color }, props.titleStyle]}\n            disabledTitleStyle={[{ fontSize, fontFamily, color: placeholder }, props.titleStyle]}\n            style={[{ backgroundColor: type === \"solid\" ? props.color || primary : \"transparent\" }, props.style]}\n            disabledStyle={[\n                { backgroundColor: type === \"solid\" ? backgroundLight : \"transparent\" },\n                props.disabledStyle\n            ]}\n        />\n    );\n};\nexport default Button;\n","import ERC20 from \"@sushiswap/core/build/contracts/ERC20.json\";\nimport IUniswapV2Factory from \"@sushiswap/core/build/contracts/IUniswapV2Factory.json\";\nimport IUniswapV2Pair from \"@sushiswap/core/build/contracts/IUniswapV2Pair.json\";\nimport IUniswapV2Router02 from \"@sushiswap/core/build/contracts/IUniswapV2Router02.json\";\nimport IWETH from \"@sushiswap/core/build/contracts/IWETH.json\";\nimport MasterChef from \"@sushiswap/core/build/contracts/MasterChef.json\";\nimport SushiBar from \"@sushiswap/core/build/contracts/SushiBar.json\";\nimport SushiRoll from \"@sushiswap/core/build/contracts/SushiRoll.json\";\nimport { ChainId, CurrencyAmount, Token as SDKToken, TokenAmount, WETH } from \"@sushiswap/sdk\";\nimport OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\nimport { ethers } from \"ethers\";\nimport LPTokenScanner from \"../constants/abi/LPTokenScanner.json\";\nimport Token from \"../types/Token\";\n\nconst CONTRACTS = {\n    ERC20,\n    IUniswapV2Factory,\n    IUniswapV2Pair,\n    IUniswapV2Router02,\n    IWETH,\n    MasterChef,\n    SushiBar,\n    SushiRoll,\n    OrderBook,\n    Settlement,\n    LPTokenScanner: { abi: LPTokenScanner }\n};\n\nexport const formatBalance = (value: ethers.BigNumberish, decimals = 18, maxFraction = 0) => {\n    const formatted = ethers.utils.formatUnits(value, decimals);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const parseBalance = (value: string, decimals = 18) => {\n    return ethers.utils.parseUnits(value || \"0\", decimals);\n};\n\nexport const isEmptyValue = (text: string) =>\n    ethers.BigNumber.isBigNumber(text)\n        ? ethers.BigNumber.from(text).isZero()\n        : text === \"\" || text.replace(/0/g, \"\").replace(/\\./, \"\") === \"\";\n\nexport const convertToken = (token: Token) => {\n    return token.symbol === \"ETH\" ? WETH[\"1\"] : new SDKToken(ChainId.MAINNET, token.address, token.decimals);\n};\n\nexport const convertAmount = (token: Token, amount: string) => {\n    return new TokenAmount(convertToken(token), parseBalance(amount, token.decimals).toString());\n};\n\nexport const parseCurrencyAmount = (value: CurrencyAmount, decimals = 18) => {\n    return ethers.BigNumber.from(parseBalance(value.toExact(), decimals));\n};\n\nexport const getContract = (\n    name: string,\n    address: string,\n    signerOrProvider: ethers.Signer | ethers.providers.Provider\n) => {\n    const contract = CONTRACTS[name];\n    return new ethers.Contract(address, contract.abi, signerOrProvider);\n};\n\nexport const pow10 = (exp: ethers.BigNumberish) => {\n    return ethers.BigNumber.from(10).pow(exp);\n};\n\nexport const formatDate = (date: Date) => {\n    return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n};\n","import { useCallback } from \"react\";\n\nimport { ChainId, Currency, ETHER, Fetcher, Pair, Token, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\n\nconst DAI = new Token(ChainId.MAINNET, \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", 18, \"DAI\", \"Dai Stablecoin\");\nconst USDC = new Token(ChainId.MAINNET, \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\", 6, \"USDC\", \"USD//C\");\nconst USDT = new Token(ChainId.MAINNET, \"0xdAC17F958D2ee523a2206206994597C13D831ec7\", 6, \"USDT\", \"Tether USD\");\nconst SUSHI = new Token(ChainId.MAINNET, \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\", 18, \"SUSHI\", \"SushiToken\");\nconst YAM = new Token(ChainId.MAINNET, \"0x0e2298E3B3390e3b945a5456fBf59eCc3f55DA16\", 18, \"YAM\", \"YAM\");\nconst AMPL = new Token(ChainId.MAINNET, \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\", 9, \"AMPL\", \"Ampleforth\");\n\nconst BASES_TO_CHECK_TRADES_AGAINST = [WETH[ChainId.MAINNET], DAI, USDC, USDT, SUSHI, YAM];\nconst CUSTOM_BASES = {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n};\n\nfunction wrappedCurrency(currency: Currency | undefined): Token | undefined {\n    return currency === ETHER ? WETH[ChainId.MAINNET] : currency instanceof Token ? currency : undefined;\n}\n\n// Source: https://github.com/Uniswap/uniswap-interface/blob/master/src/hooks/Trades.ts\nconst useAllCommonPairs = () => {\n    const loadAllCommonPairs = useCallback(\n        // tslint:disable-next-line:max-func-body-length\n        async (currencyA?: Currency, currencyB?: Currency, provider?: ethers.providers.BaseProvider) => {\n            const bases: Token[] = BASES_TO_CHECK_TRADES_AGAINST;\n            const [tokenA, tokenB] = [wrappedCurrency(currencyA), wrappedCurrency(currencyB)];\n            const basePairs: [Token, Token][] = bases\n                .flatMap((base): [Token, Token][] => bases.map(otherBase => [base, otherBase]))\n                .filter(([t0, t1]) => t0.address !== t1.address);\n\n            const allPairCombinations =\n                tokenA && tokenB\n                    ? [\n                          // the direct pair\n                          [tokenA, tokenB],\n                          // token A against all bases\n                          ...bases.map((base): [Token, Token] => [tokenA, base]),\n                          // token B against all bases\n                          ...bases.map((base): [Token, Token] => [tokenB, base]),\n                          // each base against all bases\n                          ...basePairs\n                      ]\n                          .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n                          .filter(([t0, t1]) => t0.address !== t1.address)\n                          .filter(([a, b]) => {\n                              const customBases = CUSTOM_BASES;\n                              if (!customBases) return true;\n\n                              const customBasesA: Token[] | undefined = customBases[a.address];\n                              const customBasesB: Token[] | undefined = customBases[b.address];\n\n                              if (!customBasesA && !customBasesB) return true;\n\n                              if (customBasesA && !customBasesA.find(base => tokenB.equals(base))) return false;\n                              return !(customBasesB && !customBasesB.find(base => tokenA.equals(base)));\n                          })\n                    : [];\n\n            const pairs = await Promise.all(\n                allPairCombinations.map(async pair => {\n                    try {\n                        return await Fetcher.fetchPairData(pair[0], pair[1], provider);\n                    } catch (e) {\n                        return null;\n                    }\n                })\n            );\n            return pairs.filter(pair => pair !== null) as Pair[];\n        },\n        []\n    );\n\n    return { loadAllCommonPairs };\n};\n\nexport default useAllCommonPairs;\n","import { useCallback, useContext } from \"react\";\n\nimport { CurrencyAmount, Fetcher, Pair, Percent, Router, TokenAmount, Trade, WETH } from \"@sushiswap/sdk\";\nimport { signERC2612Permit } from \"eth-permit\";\nimport { ethers } from \"ethers\";\nimport { MASTER_CHEF, ORDER_BOOK, ROUTER, SETTLEMENT, SUSHI_BAR, SUSHI_ROLL } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { convertToken, getContract, pow10 } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport useAllCommonPairs from \"./useAllCommonPairs\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSDK = () => {\n    const { ethereum, getTotalSupply } = useContext(EthersContext);\n    const { loadAllCommonPairs } = useAllCommonPairs();\n    const allowedSlippage = new Percent(\"50\", \"10000\"); // 0.05%\n    const ttl = 60 * 20;\n\n    const getTrade = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider\n        ) => {\n            if (provider) {\n                const isETH = fromToken.symbol === \"ETH\";\n                const from = convertToken(fromToken);\n                const to = convertToken(toToken);\n                const pairs = await loadAllCommonPairs(from, to, provider);\n                const amount = isETH\n                    ? CurrencyAmount.ether(fromAmount.toString())\n                    : new TokenAmount(from, fromAmount.toString());\n                return Trade.bestTradeExactIn(pairs, amount, to, { maxHops: 3, maxNumResults: 1 })[0];\n            }\n        },\n        []\n    );\n\n    const swap = useCallback(async (trade: Trade, signer: ethers.Signer) => {\n        if (trade) {\n            const params = Router.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                allowedSlippage,\n                recipient: await signer.getAddress(),\n                ttl\n            });\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const gasLimit = await router.estimateGas[params.methodName](...params.args, {\n                value: params.value\n            });\n            const tx = await router.functions[params.methodName](...params.args, {\n                value: params.value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            await logTransaction(\n                tx,\n                \"UniswapV2Router02.\" + params.methodName + \"()\",\n                ...params.args.map(arg => arg.toString())\n            );\n            return {\n                trade,\n                tx\n            };\n        }\n    }, []);\n\n    const createOrder = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            amountIn: ethers.BigNumber,\n            amountOutMin: ethers.BigNumber,\n            signer: ethers.Signer,\n            kovanSigner: ethers.Signer\n        ) => {\n            const order = new Order(signer, fromToken, toToken, amountIn, amountOutMin, await signer.getAddress());\n            const args = await order.toArgs();\n\n            const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n            const gasLimit = await orderBook.estimateGas.createOrder(args);\n            const tx = await orderBook.createOrder(args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return await logTransaction(tx, \"OrderBook.createOrder()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const cancelOrder = useCallback(async (order: Order, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const args = (await order.toArgs()).slice(0, 7);\n        const gasLimit = await settlement.estimateGas.cancelOrder(...args);\n        const tx = await settlement.cancelOrder(...args, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return await logTransaction(tx, \"Settlement.cancelOrder()\", ...args.map(arg => arg.toString()));\n    }, []);\n\n    const queryOrderFilledEvents = useCallback(async (hash: string, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const filter = settlement.filters.OrderFilled(hash);\n        return await settlement.queryFilter(filter);\n    }, []);\n\n    const wrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.deposit({\n            value: amount\n        });\n        const tx = await weth.deposit({\n            value: amount,\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.deposit()\");\n    }, []);\n\n    const unwrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.withdraw(amount);\n        const tx = await weth.withdraw(amount, {\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.withdraw()\");\n    }, []);\n\n    const getPair = useCallback(async (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => {\n        const from = convertToken(fromToken);\n        const to = convertToken(toToken);\n        return await Fetcher.fetchPairData(from, to, provider);\n    }, []);\n\n    const addLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                fromAmount,\n                toAmount,\n                minAmount(fromAmount, allowedSlippage),\n                minAmount(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidity(...args);\n            const tx = await router.functions.addLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidityETH = useCallback(\n        async (\n            token: Token,\n            liquidity: ethers.BigNumber,\n            amount: ethers.BigNumber,\n            amountETH: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                liquidity,\n                minAmount(amount, allowedSlippage),\n                minAmount(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidityETH(...args);\n            const tx = await router.functions.removeLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            liquidity: ethers.BigNumber,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                liquidity,\n                minAmount(fromAmount, allowedSlippage),\n                minAmount(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidity(...args);\n            const tx = await router.functions.removeLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const addLiquidityETH = useCallback(\n        async (token: Token, amount: ethers.BigNumber, amountETH: ethers.BigNumber, signer: ethers.Signer) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                amount,\n                minAmount(amount, allowedSlippage),\n                minAmount(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidityETH(...args, {\n                value: amountETH\n            });\n            const tx = await router.functions.addLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100),\n                value: amountETH\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const getExpectedSushiRewardPerBlock = useCallback(async (token: LPToken, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const totalAllocPoint = await masterChef.totalAllocPoint();\n        const sushiPerBlock = await masterChef.sushiPerBlock();\n        const { allocPoint } = await masterChef.poolInfo(token.id);\n        return ethers.BigNumber.from(sushiPerBlock)\n            .mul(allocPoint)\n            .div(totalAllocPoint);\n    }, []);\n\n    const deposit = useCallback(async (lpTokenId: number, amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const gasLimit = await masterChef.estimateGas.deposit(lpTokenId, amount);\n        const tx = await masterChef.deposit(lpTokenId, amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"MasterChef.deposit()\", lpTokenId, amount.toString());\n    }, []);\n\n    const withdraw = useCallback(async (lpTokenId: number, amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const gasLimit = await masterChef.estimateGas.withdraw(lpTokenId, amount);\n        const tx = await masterChef.withdraw(lpTokenId, amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"MasterChef.withdraw()\", lpTokenId, amount.toString());\n    }, []);\n\n    const enterSushiBar = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const sushiBar = getContract(\"SushiBar\", SUSHI_BAR, signer);\n        const gasLimit = await sushiBar.estimateGas.enter(amount);\n        const tx = await sushiBar.enter(amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"SushiBar.enter()\", amount.toString());\n    }, []);\n\n    const leaveSushiBar = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const sushiBar = getContract(\"SushiBar\", SUSHI_BAR, signer);\n        const gasLimit = await sushiBar.estimateGas.leave(amount);\n        const tx = await sushiBar.leave(amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"SushiBar.leave()\", amount.toString());\n    }, []);\n\n    const migrate = useCallback(\n        async (lpToken: LPToken, amount: ethers.BigNumber, signer: ethers.Signer) => {\n            const sushiRoll = getContract(\"SushiRoll\", SUSHI_ROLL, signer);\n            const deadline = Math.floor(new Date().getTime() / 1000) + ttl;\n            const args = [\n                lpToken.tokenA.address,\n                lpToken.tokenB.address,\n                amount,\n                ethers.constants.Zero,\n                ethers.constants.Zero,\n                deadline\n            ];\n            const gasLimit = await sushiRoll.estimateGas.migrate(...args);\n            const tx = await sushiRoll.migrate(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"SushiRoll.migrate()\", ...args.map(arg => arg.toString()));\n        },\n        [ethereum]\n    );\n\n    const migrateWithPermit = useCallback(\n        async (lpToken: LPToken, amount: ethers.BigNumber, signer: ethers.Signer) => {\n            const sushiRoll = getContract(\"SushiRoll\", SUSHI_ROLL, signer);\n            const deadline = Math.floor(new Date().getTime() / 1000) + ttl;\n            const permit = await signERC2612Permit(\n                ethereum,\n                lpToken.address,\n                await signer.getAddress(),\n                SUSHI_ROLL,\n                amount.toString(),\n                deadline\n            );\n            const args = [\n                lpToken.tokenA.address,\n                lpToken.tokenB.address,\n                amount,\n                ethers.constants.Zero,\n                ethers.constants.Zero,\n                deadline,\n                permit.v,\n                permit.r,\n                permit.s\n            ];\n            const gasLimit = await sushiRoll.estimateGas.migrateWithPermit(...args);\n            const tx = await sushiRoll.migrateWithPermit(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"SushiRoll.migrateWithPermit()\", ...args.map(arg => arg.toString()));\n        },\n        [ethereum]\n    );\n\n    const calculateSwapFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(3).div(1000);\n    };\n\n    const calculateLimitOrderFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(2).div(1000);\n    };\n\n    const calculateLimitOrderReturn = (\n        fromToken: Token,\n        toToken: Token,\n        fromAmount: ethers.BigNumber,\n        price: string\n    ) => {\n        const limitOrderFeeDeducted = fromAmount.sub(calculateLimitOrderFee(fromAmount));\n        const swapFeeDeducted = limitOrderFeeDeducted.sub(calculateSwapFee(limitOrderFeeDeducted));\n        return Fraction.parse(price).apply(swapFeeDeducted.mul(pow10(toToken.decimals)).div(pow10(fromToken.decimals)));\n    };\n\n    const calculateAmountOfLPTokenMinted = async (pair: Pair, fromAmount: TokenAmount, toAmount: TokenAmount) => {\n        const totalSupply = await getTotalSupply(pair.liquidityToken.address);\n        if (totalSupply) {\n            return pair.getLiquidityMinted(\n                new TokenAmount(pair.liquidityToken, totalSupply.toString()),\n                fromAmount,\n                toAmount\n            );\n        }\n    };\n\n    return {\n        allowedSlippage,\n        getTrade,\n        swap,\n        createOrder,\n        cancelOrder,\n        queryOrderFilledEvents,\n        wrapETH,\n        unwrapETH,\n        getPair,\n        addLiquidity,\n        addLiquidityETH,\n        removeLiquidity,\n        removeLiquidityETH,\n        getExpectedSushiRewardPerBlock,\n        deposit,\n        withdraw,\n        enterSushiBar,\n        leaveSushiBar,\n        migrate,\n        migrateWithPermit,\n        calculateSwapFee,\n        calculateLimitOrderFee,\n        calculateLimitOrderReturn,\n        calculateAmountOfLPTokenMinted\n    };\n};\n\nconst minAmount = (amount: ethers.BigNumber, percent: Percent) => {\n    return amount.sub(amount.mul(percent.numerator.toString()).div(percent.denominator.toString()));\n};\n\nexport type OrderStatus = \"Open\" | \"Expired\" | \"Filled\" | \"Canceled\";\n\nexport class Order {\n    maker: ethers.Signer;\n    fromToken: Token;\n    toToken: Token;\n    amountIn: ethers.BigNumber;\n    amountOutMin: ethers.BigNumber;\n    recipient: string;\n    deadline: ethers.BigNumber;\n    v?: number;\n    r?: string;\n    s?: string;\n    filledAmountIn?: ethers.BigNumber;\n    canceled?: boolean;\n\n    constructor(\n        maker: ethers.Signer,\n        fromToken: Token,\n        toToken: Token,\n        amountIn: ethers.BigNumber,\n        amountOutMin: ethers.BigNumber,\n        recipient: string,\n        deadline = ethers.BigNumber.from(Math.floor(Date.now() / 1000 + 24 * 3600)),\n        v?: number,\n        r?: string,\n        s?: string,\n        filledAmountIn?: ethers.BigNumber,\n        canceled?: boolean\n    ) {\n        this.maker = maker;\n        this.fromToken = fromToken;\n        this.toToken = toToken;\n        this.amountIn = amountIn;\n        this.amountOutMin = amountOutMin;\n        this.recipient = recipient;\n        this.deadline = deadline;\n        this.v = v;\n        this.r = r;\n        this.s = s;\n        this.filledAmountIn = filledAmountIn;\n        this.canceled = canceled;\n    }\n\n    status(): OrderStatus {\n        return this.canceled\n            ? \"Canceled\"\n            : this.filledAmountIn?.eq(this.amountIn)\n            ? \"Filled\"\n            : this.deadline.toNumber() * 1000 < Date.now()\n            ? \"Expired\"\n            : \"Open\";\n    }\n\n    async hash() {\n        const settlement = await getContract(\"Settlement\", SETTLEMENT, this.maker);\n        return await settlement.hashOfOrder(\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline\n        );\n    }\n\n    async sign() {\n        const hash = await this.hash();\n        const signature = await this.maker.signMessage(ethers.utils.arrayify(hash));\n        return ethers.utils.splitSignature(signature);\n    }\n\n    async toArgs() {\n        const { v, r, s } = this.v && this.r && this.s ? { v: this.v, r: this.r, s: this.s } : await this.sign();\n        return [\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline,\n            v,\n            r,\n            s\n        ];\n    }\n}\n\nexport default useSDK;\n","import React, { FC } from \"react\";\nimport { Platform, SafeAreaView, ScrollView, ViewProps } from \"react-native\";\n\nexport type ContainerProps = ViewProps;\n\nconst Container: FC<ContainerProps> = props => {\n    return Platform.select({\n        web: (\n            <ScrollView\n                contentContainerStyle={{ flex: 1 }}\n                style={[\n                    {\n                        flex: 1\n                    },\n                    props.style\n                ]}\n                {...props}\n            />\n        ),\n        default: (\n            <SafeAreaView style={{ flex: 1 }}>\n                <ScrollView {...props} />\n            </SafeAreaView>\n        )\n    });\n};\n\nexport default Container;\n","import React from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { DESKTOP_CONTENT_WIDTH, IS_DESKTOP, Spacing } from \"../constants/dimension\";\n\nconst Content: React.FunctionComponent<ViewProps> = props => {\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    width: IS_DESKTOP ? DESKTOP_CONTENT_WIDTH : \"100%\",\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    paddingHorizontal: Spacing.normal,\n                    paddingVertical: Spacing.huge\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Content;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { StatusBar } from \"expo-status-bar\";\n\nimport { HEADER_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\n\nconst AppHeader = () => {\n    const { background } = useColors();\n    return (\n        <View\n            style={{\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                backgroundColor: background\n            }}>\n            <StatusBar translucent={false} backgroundColor={background} />\n        </View>\n    );\n};\n\nexport default AppHeader;\n","import React, { useContext } from \"react\";\nimport { Image, View } from \"react-native\";\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport Button from \"../Button\";\n\nconst ConnectWallet = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const metaMask = window.ethereum?.isMetaMask || false;\n    const source = metaMask\n        ? darkMode\n            ? require(\"../../../assets/metamask-dark.png\")\n            : require(\"../../../assets/metamask.png\")\n        : require(\"../../../assets/sushiswap.jpg\");\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <Image\n                source={source}\n                style={{ width: metaMask ? 223 : 200, height: metaMask ? 183 : 200, marginBottom: Spacing.normal }}\n            />\n            {window.ethereum && <ConnectButton />}\n            <WalletConnectButton />\n        </View>\n    );\n};\n\nconst ConnectButton = () => {\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        if (window.ethereum) {\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\n            setEthereum(window.ethereum);\n        } else {\n            alert(\"No ethereum provider found.\");\n        }\n    };\n    const metaMask = window.ethereum?.isMetaMask || false;\n    return (\n        <Button\n            size={\"large\"}\n            color={metaMask ? \"#e2761b\" : primary}\n            onPress={onPress}\n            title={metaMask ? \"MetaMask\" : \"Connect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nconst WalletConnectButton = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        const ethereum = new WalletConnectProvider({\n            rpc: {\n                1: \"https://eth-mainnet.alchemyapi.io/v2/fF51JjrwO8qCZW13KRflYpqU_ZeOH1Er\"\n            }\n        });\n        await ethereum.enable();\n        // @ts-ignore\n        setEthereum(ethereum);\n    };\n    return (\n        <Button\n            size={\"large\"}\n            type={\"outline\"}\n            color={darkMode ? \"white\" : primary}\n            onPress={onPress}\n            title={\"WalletConnect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nexport default ConnectWallet;\n","import React, { useContext } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport AppHeader from \"../components/app/AppHeader\";\nimport Text from \"../components/Text\";\nimport ConnectToWallet from \"../components/web/ConnectToWallet\";\nimport { HEADER_HEIGHT } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\n\nconst Screen = props => {\n    return Platform.select({\n        web: <WebScreen {...props} />,\n        default: <AppScreen {...props} />\n    });\n};\n\nconst WebScreen = props => {\n    const { address, chainId } = useContext(EthersContext);\n    if (!address) return <ConnectToWallet />;\n    if (chainId !== 1)\n        return (\n            <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n                <Text light={true} style={{ textAlign: \"center\" }}>\n                    {\"Please switch network to\\n'Ethereum Mainnet'\"}\n                </Text>\n            </View>\n        );\n    return (\n        <View\n            {...props}\n            style={[{ position: \"absolute\", top: HEADER_HEIGHT, right: 0, bottom: 0, left: 0 }, props.style]}\n        />\n    );\n};\n\nconst AppScreen = props => (\n    <View style={{ width: \"100%\", height: \"100%\" }}>\n        <AppHeader />\n        <View {...props} style={[{ flex: 1 }, props.style]} />\n    </View>\n);\n\nexport default Screen;\n","import React, { FC } from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Text from \"./Text\";\n\ninterface TitleProps {\n    text: string;\n}\n\nconst Title: FC<TitleProps> = props => {\n    return (\n        <Text fontWeight={\"bold\"} style={{ marginBottom: Spacing.tiny, fontSize: 40 }}>\n            {props.text}\n        </Text>\n    );\n};\n\nexport default Title;\n","import React, { FC } from \"react\";\nimport { View } from \"react-native\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_WIDTH, IS_DESKTOP, Spacing, SUB_MENU_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebSubMenuItem {\n    title: string;\n    path: string;\n}\n\nexport interface WebSubMenuProps {\n    items: WebSubMenuItem[];\n}\n\nexport const SwapSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"New Order\",\n                path: \"/swap\"\n            },\n            {\n                title: \"My Orders\",\n                path: \"/swap/my-orders\"\n            }\n        ]}\n    />\n);\n\nexport const LiquiditySubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Add Liquidity\",\n                path: \"/liquidity\"\n            },\n            {\n                title: \"Remove Liquidity\",\n                path: \"/liquidity/remove\"\n            }\n        ]}\n    />\n);\n\nexport const MigrateSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Migrate Liquidity\",\n                path: \"/migrate\"\n            }\n        ]}\n    />\n);\n\nexport const StakingSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Stake\",\n                path: \"/staking\"\n            },\n            {\n                title: \"Unstake\",\n                path: \"/staking/unstake\"\n            }\n        ]}\n    />\n);\n\nconst WebSubMenu: FC<WebSubMenuProps> = props => {\n    const { borderDark, submenu } = useColors();\n    return (\n        <View\n            style={{\n                height: SUB_MENU_HEIGHT,\n                width: \"100%\",\n                borderBottomWidth: 1,\n                borderColor: borderDark + \"40\",\n                backgroundColor: submenu\n            }}>\n            <FlexView\n                style={{\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    marginTop: 2,\n                    paddingHorizontal: Spacing.normal,\n                    alignSelf: \"center\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\"\n                }}>\n                {props.items.map(item => (\n                    <MenuItem key={item.path} {...item} />\n                ))}\n            </FlexView>\n        </View>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { accent, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.isExact;\n    return (\n        <Link\n            to={path}\n            style={{\n                marginLeft: Spacing.small,\n                paddingTop: Spacing.tiny,\n                paddingBottom: Spacing.tiny,\n                textDecoration: \"none\"\n            }}>\n            <Text\n                fontWeight={active ? \"regular\" : \"light\"}\n                style={{\n                    fontSize: 13,\n                    color: active ? accent : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nexport default WebSubMenu;\n","import { FACTORY_ADDRESS as SUSHISWAP_FACTORY } from \"@sushiswap/sdk\";\nimport { FACTORY_ADDRESS as UNISWAP_FACTORY } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { LP_TOKEN_SCANNER, MASTER_CHEF, ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport { ETH } from \"../constants/tokens\";\nimport { Order, OrderStatus } from \"../hooks/useSDK\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { getContract } from \"./index\";\n\nexport const fetchTokens = async (\n    address: string,\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer,\n    customTokens?: Token[]\n) => {\n    const response = await fetch(\"https://lite.sushiswap.fi/tokens.json\");\n    const json = await response.json();\n    const tokens = [...json.tokens, ...(customTokens || [])];\n\n    const balances = await fetchTokenBalances(\n        tokens.map(token => token.address),\n        provider,\n        signer\n    );\n    return [\n        {\n            ...ETH,\n            balance: await provider.getBalance(address)\n        },\n        ...tokens.map((token, i) => ({\n            ...token,\n            balance: ethers.BigNumber.from(balances[i] || 0)\n        }))\n    ].sort((t1, t2) => {\n        return t2.balance\n            .sub(t1.balance)\n            .div(ethers.BigNumber.from(10).pow(10))\n            .toNumber();\n    });\n};\n\nexport const fetchPools = async (provider: ethers.providers.JsonRpcProvider, signer: ethers.Signer) => {\n    const response = await fetch(\"https://lite.sushiswap.fi/pools.json\");\n    const pools = await response.json();\n    const address = await signer.getAddress();\n    const balances = await fetchTokenBalances(\n        pools.map(pool => pool.address),\n        provider,\n        signer\n    );\n    return (await Promise.all(\n        pools.map(async (pool, i) => {\n            const poolToken = getContract(\"ERC20\", pool.address, signer);\n            const totalDeposited = await poolToken.balanceOf(MASTER_CHEF);\n            const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n            const { amount: amountDeposited } = await masterChef.userInfo(i, address);\n            const pendingSushi = await masterChef.pendingSushi(i, address);\n            return {\n                ...pool,\n                id: i,\n                symbol: pool.tokenA.symbol + \"-\" + pool.tokenB.symbol + \" LP\",\n                balance: ethers.BigNumber.from(balances[i] || 0),\n                totalDeposited,\n                amountDeposited,\n                pendingSushi\n            };\n        })\n    )) as LPToken[];\n};\n\nexport const fetchMyLPTokens = async (\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer\n) => {\n    return await fetchLPTokens(SUSHISWAP_FACTORY, tokens, provider, signer);\n};\n\nexport const fetchMyUniswapLPTokens = async (\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer\n) => {\n    return await fetchLPTokens(UNISWAP_FACTORY, tokens, provider, signer);\n};\n\nconst LP_TOKENS_LIMIT = 100;\n\n// tslint:disable-next-line:max-func-body-length\nconst fetchLPTokens = async (\n    factory: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer\n) => {\n    const factoryContract = getContract(\"IUniswapV2Factory\", factory, provider);\n    const length = await factoryContract.allPairsLength();\n    const scanner = getContract(\"LPTokenScanner\", LP_TOKEN_SCANNER, provider);\n    const account = await signer.getAddress();\n    const pages: number[] = [];\n    for (let i = 0; i < length; i += LP_TOKENS_LIMIT) pages.push(i);\n    const pairs = (\n        await Promise.all(\n            pages.map(page =>\n                scanner.findPairs(account, factory, page, Math.min(page + LP_TOKENS_LIMIT, length.toNumber()))\n            )\n        )\n    ).flat();\n    const balances = await fetchTokenBalances(\n        pairs.map(pair => pair.token),\n        provider,\n        signer\n    );\n    return await Promise.all(\n        pairs.map(async (pair, index) => {\n            const address = pair.token;\n            const balance = ethers.BigNumber.from(balances[index]);\n            const contract = getContract(\"IUniswapV2Pair\", address, provider);\n            const erc20 = getContract(\"ERC20\", address, provider);\n            const decimals = Number(await erc20.decimals());\n            const totalSupply = await erc20.totalSupply();\n            const tokenA = await findOrFetchToken(provider, await contract.token0(), tokens);\n            const tokenB = await findOrFetchToken(provider, await contract.token1(), tokens);\n            const name = tokenA.symbol + \"-\" + tokenB.symbol + \" LP Token\";\n            const symbol = tokenA.symbol + \"-\" + tokenB.symbol;\n            return { address, decimals, name, symbol, balance, totalSupply, tokenA, tokenB } as LPToken;\n        })\n    );\n};\n\nexport const findOrFetchToken = async (\n    provider: ethers.providers.JsonRpcProvider,\n    address: string,\n    tokens?: Token[]\n) => {\n    if (tokens) {\n        const token = tokens.find(t => t.address.toLowerCase() === address.toLowerCase());\n        if (token) {\n            return token;\n        }\n    }\n    const meta = await provider.send(\"alchemy_getTokenMetadata\", [address]);\n    return {\n        address,\n        name: meta.name,\n        symbol: meta.symbol,\n        decimals: meta.decimals,\n        logoURI: meta.logo,\n        balance: ethers.constants.Zero\n    } as Token;\n};\n\nconst fetchTokenBalances = async (\n    addresses: string[],\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer\n) => {\n    const account = await signer.getAddress();\n    const balances = await provider.send(\"alchemy_getTokenBalances\", [account, addresses]);\n    return balances.tokenBalances.map(balance => balance.tokenBalance);\n};\n\nconst LIMIT_ORDERS_LIMIT = 20;\n\nexport const fetchMyLimitOrders = async (\n    signer: ethers.Signer,\n    kovanSigner: ethers.Signer,\n    provider: ethers.providers.JsonRpcProvider,\n    tokens?: Token[],\n    canceledHashes?: string[]\n) => {\n    const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, provider);\n    const maker = await signer.getAddress();\n    const length = await orderBook.numberOfHashesOfMaker(maker);\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    const hashes = (await Promise.all(pages.map(page => orderBook.hashesOfMaker(maker, page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n    const myOrders = await Promise.all(\n        hashes.map(async hash => {\n            const args = await orderBook.orderOfHash(hash);\n            return new Order(\n                signer,\n                await findOrFetchToken(provider, args.fromToken, tokens),\n                await findOrFetchToken(provider, args.toToken, tokens),\n                args.amountIn,\n                args.amountOutMin,\n                args.recipient,\n                args.deadline,\n                args.v,\n                args.r,\n                args.s,\n                await settlement.filledAmountInOfHash(hash),\n                canceledHashes && canceledHashes.includes(hash)\n            );\n        })\n    );\n    return myOrders.sort(compareOrders) as Order[];\n};\n\nconst compareOrders = (o0, o1) => {\n    const status = (s: OrderStatus) => (s === \"Open\" ? 0 : s === \"Filled\" ? 1 : 2);\n    const compared = status(o0.status()) - status(o1.status());\n    return compared === 0 ? o1.deadline.toNumber() - o0.deadline.toNumber() : compared;\n};\n\nexport const fetchMyCanceledLimitOrderHashes = async (signer: ethers.Signer) => {\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, signer);\n    const length = await settlement.numberOfCanceledHashesOfMaker(await signer.getAddress());\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    return (await Promise.all(pages.map(page => settlement.allCanceledHashes(page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n};\n","import { Fraction as SDKFraction } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\n\nclass Fraction {\n    static BASE = ethers.BigNumber.from(10).pow(18);\n    static NAN = new Fraction(ethers.constants.Zero, ethers.constants.Zero);\n    static ZERO = new Fraction(ethers.constants.Zero, ethers.constants.One);\n    static convert(sdk: SDKFraction) {\n        return new Fraction(\n            ethers.BigNumber.from(sdk.numerator.toString()),\n            ethers.BigNumber.from(sdk.denominator.toString())\n        );\n    }\n    static from(numerator: ethers.BigNumberish, denominator: ethers.BigNumberish) {\n        return new Fraction(ethers.BigNumber.from(numerator), ethers.BigNumber.from(denominator));\n    }\n    static fromTokens(\n        numerator: ethers.BigNumberish,\n        denominator: ethers.BigNumberish,\n        numeratorToken: Token,\n        denominatorToken: Token\n    ) {\n        return new Fraction(\n            ethers.BigNumber.from(numerator).mul(ethers.BigNumber.from(10).pow(denominatorToken.decimals)),\n            ethers.BigNumber.from(denominator).mul(ethers.BigNumber.from(10).pow(numeratorToken.decimals))\n        );\n    }\n    static parse(value: string) {\n        return value === \"\"\n            ? Fraction.NAN\n            : isEmptyValue(value)\n            ? Fraction.ZERO\n            : new Fraction(parseBalance(value, 18), Fraction.BASE);\n    }\n\n    numerator: ethers.BigNumber;\n    denominator: ethers.BigNumber;\n\n    private constructor(numerator: ethers.BigNumber, denominator: ethers.BigNumber) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n    }\n\n    isZero() {\n        return !this.isNaN() && this.numerator.isZero();\n    }\n\n    isNaN() {\n        return this.denominator.isZero();\n    }\n\n    eq(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .eq(this.denominator);\n    }\n\n    gt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .gt(this.denominator);\n    }\n\n    lt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .lt(this.denominator);\n    }\n\n    toString(maxFractions = 8) {\n        if (this.isNaN()) return \"\";\n        if (this.isZero()) return \"0\";\n        let str = formatBalance(this.numerator.mul(Fraction.BASE).div(this.denominator), 18, maxFractions);\n        if (str.endsWith(\".0\")) str = str.substring(0, str.length - 2);\n        return str;\n    }\n\n    apply(value: ethers.BigNumberish) {\n        return this.denominator.isZero() ? ethers.constants.Zero : this.numerator.mul(value).div(this.denominator);\n    }\n}\n\nexport default Fraction;\n","export const Colors = {\n    common: {\n        white: \"#ffffff\",\n        transparent: \"#ffffff00\",\n        primary: \"#291C64\",\n        secondary: \"#9BECEE\",\n        green: \"#32CD32\",\n        red: \"#FF0000\",\n        twitter: \"#1da1f2\",\n        facebook: \"#3B5998\"\n    },\n    light: {\n        accent: \"#291C64\",\n        header: \"#ffffffb8\",\n        submenu: \"#ffffffb8\",\n        background: \"#f8f8f8\",\n        backgroundLight: \"#f0f0f0\",\n        border: \"#e5e5e5\",\n        borderDark: \"#cccccc\",\n        textDark: \"#1d1d1f\",\n        textMedium: \"#222222\",\n        textLight: \"#888888\",\n        disabled: \"#b4b4b4\",\n        shadow: \"#444444\",\n        placeholder: \"#b4b4b4\",\n        overlay: \"#ffffffc0\"\n    },\n    dark: {\n        accent: \"#9BECEE\",\n        header: \"#000000\",\n        submenu: \"#121212\",\n        background: \"#121212\",\n        backgroundLight: \"#1a1a1a\",\n        border: \"#ffffff33\",\n        borderDark: \"#666666\",\n        textDark: \"#d5d1cc\",\n        textMedium: \"#cccccc\",\n        textLight: \"#aaaaaa\",\n        disabled: \"#aaaaaa80\",\n        shadow: \"#03080c\",\n        placeholder: \"#666666\",\n        overlay: \"#000000c0\"\n    }\n};\n","import { useContext } from \"react\";\n\nimport { Colors } from \"../constants/colors\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useColors = () => {\n    const { darkMode } = useContext(GlobalContext);\n    return {\n        ...Colors[darkMode ? \"dark\" : \"light\"],\n        ...Colors.common\n    };\n};\n\nexport default useColors;\n","import OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\n\n// export const UNISWAP_ROUTER = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nexport const SUSHISWAP_ROUTER = \"0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\";\nexport const ROUTER = SUSHISWAP_ROUTER;\nexport const MASTER_CHEF = \"0xc2edad668740f1aa35e4d8f227fb8e17dca888cd\";\nexport const SUSHI_BAR = \"0x8798249c2e607446efb7ad49ec89dd1865ff4272\";\nexport const SUSHI_ROLL = \"0x16E58463eb9792Bc236d8860F5BC69A81E26E32B\";\nexport const LP_TOKEN_SCANNER = \"0xD132Ce8eA8865348Ac25E416d95ab1Ba84D216AF\";\nexport const ORDER_BOOK = OrderBook.address;\nexport const SETTLEMENT = Settlement.address;\n","import * as Analytics from \"expo-firebase-analytics\";\n\nimport { ethers } from \"ethers\";\n\nexport const logTransaction = async (\n    tx: ethers.providers.TransactionResponse,\n    name: string,\n    ...args: any[]\n): Promise<ethers.providers.TransactionResponse> => {\n    await Analytics.logEvent(\"tx:\" + name, {\n        args: args || [],\n        hash: tx.hash,\n        value: tx.value.toString(),\n        gasLimit: tx.gasLimit.toString(),\n        gasPrice: tx.gasPrice.toString(),\n        chainId: tx.chainId\n    });\n    return tx;\n};\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport * as Analytics from \"expo-firebase-analytics\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ETH } from \"../constants/tokens\";\nimport Ethereum from \"../types/Ethereum\";\nimport Token from \"../types/Token\";\nimport { getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport { fetchTokens } from \"../utils/fetch-utils\";\n\nexport type OnBlockListener = (block?: number) => void | Promise<void>;\n\nconst PRIVATE_KEY = \"0xca417c154948d370f011c5d9ac3fba516d7b15671a069e7d5d48f56b723c9cc1\";\n\nexport const EthersContext = React.createContext({\n    ethereum: undefined as Ethereum | undefined,\n    setEthereum: (_ethereum: Ethereum | undefined) => {},\n    provider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    signer: undefined as ethers.providers.JsonRpcSigner | undefined,\n    kovanProvider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    kovanSigner: undefined as ethers.Signer | undefined,\n    chainId: 0,\n    address: null as string | null,\n    ensName: null as string | null,\n    addOnBlockListener: (_name: string, _listener: OnBlockListener) => {},\n    removeOnBlockListener: (_name: string) => {},\n    tokens: [ETH] as Token[],\n    updateTokens: async () => {},\n    loadingTokens: false,\n    customTokens: [ETH] as Token[],\n    addCustomToken: (_token: Token) => {},\n    removeCustomToken: (_token: Token) => {},\n    approveToken: async (_token: string, _spender: string, _amount?: ethers.BigNumber) => {\n        return {} as ethers.providers.TransactionResponse | undefined;\n    },\n    getTokenAllowance: async (_token: string, _spender: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTokenBalance: async (_token: string, _who: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTotalSupply: async (_token: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    }\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const EthersContextProvider = ({ children }) => {\n    // const { mnemonic } = useContext(GlobalContext);\n    const [ethereum, setEthereum] = useState<Ethereum | undefined>(window.ethereum);\n    const [provider, setProvider] = useState<ethers.providers.JsonRpcProvider>();\n    const [kovanProvider, setKovanProvider] = useState<ethers.providers.JsonRpcProvider>();\n    const [signer, setSigner] = useState<ethers.providers.JsonRpcSigner>();\n    const [kovanSigner, setKovanSigner] = useState<ethers.Signer>();\n    const [chainId, setChainId] = useState<number>(1);\n    const [address, setAddress] = useState<string | null>(null);\n    const [ensName, setENSName] = useState<string | null>(null);\n    const [onBlockListeners, setOnBlockListeners] = useState<{ [name: string]: OnBlockListener }>({});\n    const [tokens, setTokens] = useState<Token[]>([]);\n    const [customTokens, setCustomTokens] = useState<Token[]>([]);\n    const [loadingTokens, setLoadingTokens] = useState(true);\n\n    useEffect(() => {\n        // Kovan\n        const kovan = new ethers.providers.AlchemyProvider(42, \"8a03ORJJcIv8YA49M-cIxg-mBEMJYe0J\");\n        const wallet = new ethers.Wallet(PRIVATE_KEY, kovan);\n        setKovanProvider(kovan);\n        setKovanSigner(wallet);\n    }, []);\n\n    useAsyncEffect(async () => {\n        // Mainnet\n        if (ethereum) {\n            const web3 = new ethers.providers.Web3Provider(ethereum);\n            const alchemy = new ethers.providers.AlchemyProvider(\n                web3.network,\n                __DEV__ ? \"DnNxl6bicDp7fp7nF_G23RWIeCGu8xsd\" : \"DgnfFsj5PXR37FkOmUVJ9GtfDsKws446\"\n            );\n            setProvider(alchemy);\n            setSigner(await web3.getSigner());\n        }\n    }, [ethereum]);\n\n    useEffect(() => {\n        if (ethereum) {\n            const onAccountsChanged = async () => {\n                const accounts = await ethereum.request({ method: \"eth_accounts\" });\n                if (accounts?.[0]) {\n                    setAddress(accounts[0]);\n                    Analytics.setUserId(accounts[0]);\n                } else {\n                    setAddress(null);\n                }\n            };\n            const onChainChanged = async () => {\n                setChainId(Number(await ethereum.request({ method: \"eth_chainId\" })));\n            };\n            const onDisconnect = () => {\n                setAddress(null);\n                setEthereum(undefined);\n            };\n            onAccountsChanged();\n            onChainChanged();\n            ethereum.on(\"accountsChanged\", onAccountsChanged);\n            ethereum.on(\"chainChanged\", onChainChanged);\n            ethereum.on(\"disconnect\", onDisconnect);\n            return () => {\n                ethereum.off(\"accountsChanged\", onAccountsChanged);\n                ethereum.off(\"chainChanged\", onAccountsChanged);\n                ethereum.off(\"disconnect\", onDisconnect);\n            };\n        }\n    }, [ethereum]);\n\n    useAsyncEffect(async () => {\n        if (signer && address) {\n            const ens = await signer.provider.lookupAddress(address);\n            setENSName(ens);\n        }\n    }, [signer, address]);\n\n    // Set provider and signer for mobile app\n    // useEffect(() => {\n    //     if (mnemonic) {\n    //         const alchemy = new ethers.providers.AlchemyProvider(1, Constants.manifest.extra.alchemyApiKey);\n    //         setProvider(alchemy);\n    //         const wallet = ethers.Wallet.fromMnemonic(mnemonic).connect(alchemy);\n    //         setSigner(wallet);\n    //     }\n    // }, [mnemonic]);\n\n    const updateTokens = async () => {\n        if (address && provider && signer && customTokens) {\n            try {\n                const data = await fetchTokens(address, provider, signer, customTokens);\n                if (data) {\n                    await setTokens(data);\n                }\n            } finally {\n                setLoadingTokens(false);\n            }\n        }\n    };\n\n    useAsyncEffect(async () => {\n        await AsyncStorage.removeItem(\"custom_tokens\");\n        // setCustomTokens(JSON.parse((await AsyncStorage.getItem(\"custom_tokens\")) || \"[]\"));\n    }, []);\n\n    useAsyncEffect(async () => {\n        if (address && provider && signer && customTokens) {\n            setLoadingTokens(true);\n            await updateTokens();\n        }\n    }, [provider, signer, address, customTokens]);\n\n    const addCustomToken = useCallback(\n        async (token: Token) => {\n            if (\n                customTokens.findIndex(t => t.address === token.address) === -1 &&\n                tokens.findIndex(t => t.address === token.address) === -1\n            ) {\n                const custom = [...customTokens, token];\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [tokens, customTokens]\n    );\n\n    const removeCustomToken = useCallback(\n        async (token: Token) => {\n            if (customTokens.findIndex(t => t.address === token.address) !== -1) {\n                const custom = customTokens.filter(t => t.address !== token.address);\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [customTokens]\n    );\n\n    const approveToken = useCallback(\n        async (token: string, spender: string, amount?: ethers.BigNumber) => {\n            if (signer) {\n                amount = amount || ethers.constants.MaxUint256;\n                const erc20 = getContract(\"ERC20\", token, signer);\n                const gasLimit = await erc20.estimateGas.approve(spender, amount);\n                const tx = await erc20.approve(spender, amount, {\n                    gasLimit\n                });\n                return await logTransaction(tx, \"ERC20.approve()\", spender, amount.toString());\n            }\n        },\n        [signer]\n    );\n\n    const getTokenAllowance = useCallback(\n        async (token: string, spender: string) => {\n            if (provider && address) {\n                return await provider.send(\"alchemy_getTokenAllowance\", [\n                    {\n                        contract: token,\n                        owner: address,\n                        spender\n                    }\n                ]);\n            }\n        },\n        [provider, address]\n    );\n\n    const getTokenBalance = useCallback(\n        async (token: string, who: string) => {\n            if (provider && signer) {\n                const erc20 = getContract(\"ERC20\", token, signer);\n                return await erc20.balanceOf(who);\n            }\n        },\n        [provider, signer]\n    );\n\n    const getTotalSupply = useCallback(\n        async (token: string) => {\n            if (signer) {\n                const erc20 = getContract(\"ERC20\", token, signer);\n                return await erc20.totalSupply();\n            }\n        },\n        [signer]\n    );\n\n    const addOnBlockListener = useCallback(\n        (name, listener) => {\n            setOnBlockListeners(old => ({ ...old, [name]: listener }));\n        },\n        [setOnBlockListeners]\n    );\n\n    const removeOnBlockListener = useCallback(\n        name => {\n            setOnBlockListeners(old => {\n                delete old[name];\n                return old;\n            });\n        },\n        [setOnBlockListeners]\n    );\n\n    useEffect(() => {\n        if (provider && chainId === 1) {\n            const onBlock = async (block: number) => {\n                for (const listener of Object.entries(onBlockListeners)) {\n                    await listener[1]?.(block);\n                }\n            };\n            provider.on(\"block\", onBlock);\n            return () => {\n                provider.off(\"block\", onBlock);\n            };\n        }\n    }, [provider, chainId, onBlockListeners]);\n\n    return (\n        <EthersContext.Provider\n            value={{\n                ethereum,\n                setEthereum,\n                provider,\n                signer,\n                kovanProvider,\n                kovanSigner,\n                chainId,\n                address,\n                ensName,\n                tokens,\n                updateTokens,\n                loadingTokens,\n                customTokens,\n                addCustomToken,\n                removeCustomToken,\n                approveToken,\n                getTokenAllowance,\n                getTokenBalance,\n                getTotalSupply,\n                addOnBlockListener,\n                removeOnBlockListener\n            }}>\n            {children}\n        </EthersContext.Provider>\n    );\n};\n\nexport const EthersContextConsumer = EthersContext.Consumer;\n","import React from \"react\";\n\nimport { EthersContextConsumer, EthersContextProvider } from \"./EthersContext\";\nimport { GlobalContextConsumer, GlobalContextProvider } from \"./GlobalContext\";\n\nexport const ContextProvider = ({ children }) => {\n    return (\n        <GlobalContextProvider>\n            <EthersContextProvider>{children}</EthersContextProvider>\n        </GlobalContextProvider>\n    );\n};\n\nexport const ContextConsumer = ({ children }) => {\n    return (\n        <GlobalContextConsumer>\n            {globalContext => (\n                <EthersContextConsumer>\n                    {ethersContext =>\n                        children({\n                            ...globalContext,\n                            ...ethersContext\n                        })\n                    }\n                </EthersContextConsumer>\n            )}\n        </GlobalContextConsumer>\n    );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { View } from \"react-native\";\n\nimport Switch from \"expo-dark-mode-switch\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst DarkModeSwitch = props => {\n    const { darkMode, setDarkMode } = useContext(GlobalContext);\n    const onChange = useCallback(\n        async dark => {\n            await setDarkMode(dark);\n        },\n        [setDarkMode]\n    );\n    return (\n        <View style={props.style}>\n            <Switch\n                value={darkMode}\n                onChange={onChange}\n                style={{\n                    transform: [\n                        {\n                            scale: 0.75\n                        }\n                    ]\n                }}\n            />\n        </View>\n    );\n};\n\nexport default DarkModeSwitch;\n","import React, { useContext } from \"react\";\nimport { TouchableWithoutFeedback, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport Modal from \"modal-react-native-web\";\nimport { Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport useColors from \"../../hooks/useColors\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nconst MobileWebMenu = ({ expanded, onCollapse }) => {\n    const { overlay } = useColors();\n    return (\n        <Modal animationType=\"slide\" transparent={true} visible={expanded}>\n            <TouchableWithoutFeedback style={{ height: \"100%\" }} onPress={onCollapse}>\n                <View\n                    style={{\n                        height: \"100%\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"flex-end\",\n                        paddingRight: Spacing.normal,\n                        paddingBottom: Spacing.normal,\n                        backgroundColor: overlay\n                    }}>\n                    <FlexView style={{ marginTop: Spacing.small }}>\n                        <DarkModeSwitch style={{ marginTop: -2 }} />\n                        <CloseButton onPress={onCollapse} />\n                    </FlexView>\n                    <View style={{ alignItems: \"flex-end\" }}>\n                        <Status />\n                        <View style={{ height: Spacing.large }} />\n                        <MobileWebMenuItem title={\"Swap\"} path={\"/swap\"} />\n                        <MobileWebMenuItem title={\"Liquidity\"} path={\"/liquidity\"} />\n                        <MobileWebMenuItem title={\"Migrate\"} path={\"/migrate\"} />\n                        {/*<MobileWebMenuItem title={\"Farming\"} path={\"/farming\"} />*/}\n                        <MobileWebMenuItem title={\"Staking\"} path={\"/staking\"} />\n                    </View>\n                </View>\n            </TouchableWithoutFeedback>\n        </Modal>\n    );\n};\n\nconst CloseButton = ({ onPress }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={textDark} size={32} onPress={onPress} />;\n};\n\nconst MobileWebMenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ textDecoration: \"none\", marginBottom: Spacing.tiny }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 24,\n                    color: active ? textDark : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst Status = () => {\n    const { textLight, green, accent } = useColors();\n    const { ethereum, chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : \"Not connected\";\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        ethereum?.disconnect?.();\n    };\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.tiny }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginTop: 8 }} />\n                <Text style={{ fontSize: 18, color: textLight, marginLeft: 8 }}>{title}</Text>\n            </FlexView>\n            {ethereum?.isWalletConnect && (\n                <Text\n                    style={{\n                        fontFamily: \"regular\",\n                        fontSize: 15,\n                        color: accent,\n                        alignSelf: \"flex-end\"\n                    }}\n                    onPress={onPress}>\n                    Disconnect\n                </Text>\n            )}\n        </View>\n    );\n};\n\nexport default MobileWebMenu;\n","import React, { FC, useContext } from \"react\";\nimport { TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_HEIGHT, HEADER_WIDTH, IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebHeaderProps {\n    onExpandMenu?: () => void;\n}\n\nconst WebHeader: FC<WebHeaderProps> = props => {\n    const { header } = useColors();\n    return (\n        <View\n            // @ts-ignore\n            style={{\n                position: \"fixed\",\n                top: 0,\n                zIndex: 100,\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                paddingBottom: Spacing.small,\n                backgroundColor: header\n            }}>\n            <FlexView\n                style={{\n                    flex: 1,\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    alignSelf: \"center\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"flex-end\",\n                    paddingTop: Spacing.small,\n                    paddingHorizontal: Spacing.normal\n                }}>\n                <Title />\n                {IS_DESKTOP ? <Menu /> : <MenuIcon onExpand={props.onExpandMenu} />}\n            </FlexView>\n        </View>\n    );\n};\n\nexport const Title = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { textDark, white } = useColors();\n    const color = darkMode ? white : textDark;\n    return (\n        <View style={{ alignSelf: \"center\", alignItems: \"center\" }}>\n            <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\n                <Text style={{ fontSize: 28, color }}>SushiSwap</Text>\n            </Link>\n        </View>\n    );\n};\n\nconst Menu = () => {\n    return (\n        <FlexView\n            style={{\n                height: \"100%\",\n                alignItems: \"flex-end\"\n            }}>\n            <MenuItem title={\"Swap\"} path={\"/swap\"} />\n            <MenuItem title={\"Liquidity\"} path={\"/liquidity\"} />\n            <MenuItem title={\"Migrate\"} path={\"/migrate\"} />\n            {/*<MenuItem title={\"Farming\"} path={\"/farming\"} />*/}\n            <MenuItem title={\"Stake\"} path={\"/staking\"} />\n            <Status />\n            <DarkModeSwitch style={{ marginLeft: Spacing.tiny, marginRight: -8, marginBottom: -3 }} />\n        </FlexView>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ marginLeft: Spacing.tiny, textDecoration: \"none\" }}>\n            <Text style={{ fontFamily: \"regular\", fontSize: 18, color: active ? textDark : textLight, padding: 3 }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst MenuIcon = ({ onExpand }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"menu\"} size={28} color={textDark} onPress={onExpand} />;\n};\n\nconst Status = () => {\n    const { textLight, green, borderDark } = useColors();\n    const { ethereum, chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : \"Not connected\";\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        if (confirm(\"Do you want to disconnect?\")) ethereum?.disconnect?.();\n    };\n    return (\n        <TouchableHighlight onPress={onPress} disabled={!ethereum?.isWalletConnect}>\n            <FlexView\n                style={{\n                    height: 28,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    marginLeft: Spacing.small,\n                    paddingHorizontal: Spacing.small,\n                    borderRadius: 16,\n                    borderWidth: 1,\n                    borderColor: borderDark\n                }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginRight: 12 }} />\n                <Text style={{ fontSize: 15, color: textLight, marginRight: 2 }}>{title}</Text>\n                {ethereum?.isWalletConnect && <CloseIcon />}\n            </FlexView>\n        </TouchableHighlight>\n    );\n};\n\nconst CloseIcon = () => {\n    const { textLight } = useColors();\n    return (\n        <Icon\n            type={\"material-community\"}\n            name={\"close\"}\n            size={15}\n            color={textLight}\n            style={{ paddingLeft: 2, paddingTop: 2 }}\n        />\n    );\n};\n\nexport default WebHeader;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport Title from \"../components/Title\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport WebSubMenu from \"../components/web/WebSubMenu\";\nimport useColors from \"../hooks/useColors\";\nimport Screen from \"./Screen\";\n\nconst EmptyScreen = () => {\n    const { background } = useColors();\n    return (\n        <View style={{ width: \"100%\", height: \"100%\", backgroundColor: background }}>\n            <Screen>\n                <WebSubMenu items={[]} />\n                <Container>\n                    <Content>\n                        <Title text={\"Loading...\"} />\n                    </Content>\n                </Container>\n            </Screen>\n            <WebHeader />\n        </View>\n    );\n};\n\nexport default EmptyScreen;\n","import React, { lazy, Suspense, useContext, useEffect, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { DefaultTheme, NavigationContainer, Theme } from \"@react-navigation/native\";\nimport useAsyncEffect from \"use-async-effect\";\nimport MobileWebMenu from \"../components/web/MobileWebMenu\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport EmptyScreen from \"./EmptyScreen\";\n\nconst FarmingScreen = lazy(() => import(\"./FarmingScreen\"));\nconst LiquidityScreen = lazy(() => import(\"./LiquidityScreen\"));\nconst MigrateScreen = lazy(() => import(\"./MigrateScreen\"));\nconst MyLimitOrdersScreen = lazy(() => import(\"./MyLimitOrdersScreen\"));\nconst RemoveLiquidityScreen = lazy(() => import(\"./RemoveLiquidityScreen\"));\nconst StakeScreen = lazy(() => import(\"./StakeScreen\"));\nconst UnstakeScreen = lazy(() => import(\"./UnstakeScreen\"));\nconst SwapScreen = lazy(() => import(\"./SwapScreen\"));\n\nexport const Screens = () => {\n    const { load } = useContext(GlobalContext);\n    useAsyncEffect(load, []);\n    return Platform.OS === \"web\" ? <WebScreens /> : <AppScreens />;\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst WebScreens = () => {\n    const { address } = useContext(EthersContext);\n    const [menuExpanded, setMenuExpanded] = useState(false);\n    const { background } = useColors();\n    useEffect(() => {\n        if (!address) setMenuExpanded(false);\n    }, [address]);\n    return (\n        <Router>\n            <Suspense fallback={<EmptyScreen />}>\n                <View style={{ flex: 1, backgroundColor: background }}>\n                    <Switch>\n                        <Route path={\"/swap/my-orders\"}>\n                            <MyLimitOrdersScreen />\n                        </Route>\n                        <Route path={\"/swap\"}>\n                            <SwapScreen />\n                        </Route>\n                        <Route path={\"/liquidity/migrate\"}>\n                            <Redirect to={\"/migrate\"} />\n                        </Route>\n                        <Route path={\"/liquidity/remove\"}>\n                            <RemoveLiquidityScreen />\n                        </Route>\n                        <Route path={\"/liquidity\"}>\n                            <LiquidityScreen />\n                        </Route>\n                        {/*<Route path={\"/farming\"}>*/}\n                        {/*    <FarmingScreen />*/}\n                        {/*</Route>*/}\n                        <Route path={\"/migrate\"}>\n                            <MigrateScreen />\n                        </Route>\n                        <Route path={\"/staking/unstake\"}>\n                            <UnstakeScreen />\n                        </Route>\n                        <Route path={\"/staking\"}>\n                            <StakeScreen />\n                        </Route>\n                        <Redirect to={\"/swap\"} />\n                    </Switch>\n                    <WebHeader onExpandMenu={() => setMenuExpanded(true)} />\n                    {!IS_DESKTOP && <MobileWebMenu expanded={menuExpanded} onCollapse={() => setMenuExpanded(false)} />}\n                </View>\n            </Suspense>\n        </Router>\n    );\n};\n\nconst Tab = createBottomTabNavigator();\n\nconst AppScreens = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary, accent, background, border, textDark, disabled } = useColors();\n    const theme: Theme = {\n        ...DefaultTheme,\n        dark: darkMode,\n        colors: {\n            primary,\n            background,\n            border,\n            card: background,\n            notification: background,\n            text: textDark\n        }\n    };\n    return (\n        <NavigationContainer theme={theme}>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: accent,\n                    inactiveTintColor: disabled,\n                    labelStyle: { marginBottom: 4 }\n                }}>\n                <Tab.Screen name=\"Home\" component={SwapScreen} options={tabOptions(\"home\")} />\n                <Tab.Screen name=\"Liquidity\" component={LiquidityScreen} options={tabOptions(\"water\")} />\n                <Tab.Screen name=\"Farming\" component={FarmingScreen} options={tabOptions(\"leaf\")} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n};\n\nconst tabOptions = iconName => ({\n    tabBarIcon: ({ color }) => <Icon type={\"material-community\"} name={iconName} color={color} />\n});\n","/* tslint:disable:ordered-imports */\nimport \"./globals\";\nimport React from \"react\";\n\nimport { OpenSans_300Light, OpenSans_400Regular, OpenSans_600SemiBold } from \"@expo-google-fonts/open-sans\";\nimport { AppLoading } from \"expo\";\nimport { useFonts } from \"expo-font\";\n\nimport { ContextProvider } from \"./src/context\";\nimport { Screens } from \"./src/screens\";\nimport { YellowBox } from \"react-native\";\n\nif (__DEV__) {\n    YellowBox.ignoreWarnings([\"Setting a timer\", \"VirtualizedLists should never be nested\"]);\n}\n\nconst App = () => {\n    const [fontsLoaded] = useFonts({\n        light: OpenSans_300Light,\n        regular: OpenSans_400Regular,\n        bold: OpenSans_600SemiBold\n    });\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    }\n    return (\n        <ContextProvider>\n            <Screens />\n        </ContextProvider>\n    );\n};\n\nexport default App;\n","global.Buffer = require('buffer').Buffer;\n","import React, { useState } from \"react\";\nimport { useColorScheme } from \"react-native-appearance\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nexport const GlobalContext = React.createContext({\n    load: async () => {},\n    clear: async () => {},\n    darkMode: false,\n    setDarkMode: async _darkMode => {},\n    mnemonic: \"\",\n    setMnemonic: (_mnemonic: string) => {}\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const GlobalContextProvider = ({ children }) => {\n    const colorScheme = useColorScheme();\n    const [darkMode, setDarkMode] = useState(colorScheme === \"dark\");\n    const [mnemonic, setMnemonic] = useState(\"\");\n    return (\n        <GlobalContext.Provider\n            value={{\n                load: async () => {\n                    const mode = await AsyncStorage.getItem(\"dark_mode\");\n                    setDarkMode(mode === \"true\");\n                    const mne = await AsyncStorage.getItem(\"mnemonic\");\n                    if (mne) {\n                        setMnemonic(mne);\n                    }\n                },\n                clear: async () => {\n                    setDarkMode(false);\n                    await AsyncStorage.removeItem(\"dark_mode\");\n                    await AsyncStorage.removeItem(\"mnemonic\");\n                },\n                darkMode,\n                setDarkMode: async (mode: boolean) => {\n                    await AsyncStorage.setItem(\"dark_mode\", String(mode));\n                    setDarkMode(mode);\n                },\n                mnemonic,\n                setMnemonic: async (mne: string) => {\n                    await AsyncStorage.setItem(\"mnemonic\", mne);\n                    setMnemonic(mne);\n                }\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const GlobalContextConsumer = GlobalContext.Consumer;\n","import React, { FC } from \"react\";\nimport { Text as NativeText, TextProps as NativeTextProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface TextProps extends NativeTextProps {\n    note?: boolean;\n    caption?: boolean;\n    dark?: boolean;\n    medium?: boolean;\n    light?: boolean;\n    disabled?: boolean;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\nconst Text: FC<TextProps> = props => {\n    const { textDark, textMedium, textLight, placeholder } = useColors();\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = props.disabled\n        ? placeholder\n        : props.medium\n        ? textMedium\n        : props.note || props.light\n        ? textLight\n        : textDark;\n    return (\n        <NativeText\n            {...props}\n            h1Style={[{ fontFamily }, props.h1Style]}\n            h2Style={[{ fontFamily }, props.h2Style]}\n            h3Style={[{ fontFamily }, props.h3Style]}\n            h4Style={[{ fontFamily }, props.h4Style]}\n            style={[\n                {\n                    fontFamily,\n                    fontSize: props.note ? 13 : props.caption ? 18 : 15,\n                    color\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Text;\n"],"sourceRoot":""}