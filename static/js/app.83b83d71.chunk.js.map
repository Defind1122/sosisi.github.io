{"version":3,"sources":["assets/metamask-dark.png","assets/metamask.png","assets/sushiswap.jpg","src/components/FlexView.tsx","src/constants/tokens.ts","src/constants/Fraction.ts","src/utils/getContract.ts","src/utils/index.ts","src/constants/dimension.ts","src/components/Button.tsx","src/utils/fetch-utils.ts","src/hooks/useStyles.tsx","src/components/Container.tsx","src/components/Content.tsx","src/components/Title.tsx","src/components/svg/SvgBackgroundDark.tsx","src/components/svg/SvgBackgroundLight.tsx","src/components/BackgroundImage.tsx","src/components/app/AppHeader.tsx","src/components/web/ConnectToWallet.tsx","src/screens/Screen.tsx","src/hooks/useAllCommonPairs.tsx","src/hooks/useSDK.tsx","src/components/web/WebSubMenu.tsx","src/hooks/useSwapRouter.tsx","src/hooks/useSettlement.tsx","src/constants/colors.ts","src/hooks/useColors.tsx","src/context/EthersContext.tsx","src/context/GlobalContext.tsx","src/constants/contracts.ts","src/context/index.tsx","src/components/svg/SvgMoon.tsx","src/components/svg/SvgSun.tsx","src/components/DarkModeSwitch.tsx","src/components/web/MobileWebMenu.tsx","src/components/svg/SvgLogoDark.tsx","src/components/svg/SvgLogoLight.tsx","src/components/web/WebHeader.tsx","src/screens/EmptyScreen.tsx","src/screens/index.tsx","App.tsx","globals.js","src/components/Text.tsx","src/utils/analytics-utils.ts"],"names":["module","exports","FlexView","props","flexDirection","direction","style","ETH","name","address","ethers","constants","AddressZero","decimals","symbol","logoURI","balance","BigNumber","from","Fraction","numerator","denominator","this","sdk","toString","numeratorToken","denominatorToken","mul","pow","value","NAN","isEmptyValue","ZERO","parseBalance","BASE","isNaN","isZero","fraction","div","eq","gt","lt","maxFractions","str","formatBalance","endsWith","substring","length","Zero","One","CONTRACTS","ERC20","IUniswapV2Factory","IUniswapV2Pair","IUniswapV2Router02","IWETH","MasterChef","SushiBar","SushiRoll","OrderBook","Settlement","LPTokenScanner","abi","ZapIn","ZapOut","getContract","signerOrProvider","contract","Contract","formatUSD","maxFraction","formatter","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","formatted","String","split","substr","utils","formatUnits","parseUnits","text","isBigNumber","replace","isETH","token","toLowerCase","isWETH","WETH","isETHWETHPair","fromToken","toToken","convertToken","SDKToken","ChainId","MAINNET","convertAmount","amount","TokenAmount","parseCurrencyAmount","toExact","deduct","percent","sub","pow10","exp","SCREEN_WIDTH","Math","round","Dimensions","get","width","SCREEN_HEIGHT","height","HEADER_HEIGHT","HEADER_WIDTH","DESKTOP_CONTENT_WIDTH","SUB_MENU_HEIGHT","IS_DESKTOP","Spacing","tiny","small","normal","large","huge","Button","useColors","accent","textMedium","placeholder","backgroundLight","type","size","fontSize","fontFamily","fontWeight","color","disabled","loading","onPress","undefined","loadingProps","buttonStyle","paddingHorizontal","backgroundColor","borderColor","titleStyle","disabledTitleStyle","disabledStyle","fetchTokens","account","customTokens","a","async","fetch","response","json","tokens","fetchTokenBalances","map","balances","ALCHEMY_PROVIDER","getBalance","i","fetchTokenWithValue","weth","wethPriceUSD","getPair","provider","fetched","priceUSD","Number","valueUSD","apply","pair","priceETH","convert","priceOf","fetchPools","sushiData","sushi","info","masterchef","masterchefInfo","pools","pool","poolId","reduce","sushiPerBlock","floor","allocPoint","totalAllocPoint","fetchPool","slpBalance","Promise","all","fetchStakedValue","fetchPairTokens","result","apy","calcAPY","derivedETH","totalValueETH","totalSupply","tokenA","tokenB","sushiRewardedPerYear","calcSushiRewardedPerYear","totalValueUSD","multiplier","filter","fetchMyPools","fetchMyPool","fetchMyStake","id","myStake","amountDeposited","pendingSushi","lpToken","stakedValue","masterChef","MASTER_CHEF","userInfo","findOrFetchToken","token0","token1","fetchMyLPTokens","fetchLPTokens","SUSHISWAP_FACTORY","fetchMyUniswapLPTokens","UNISWAP_FACTORY","factory","factoryContract","allPairsLength","scanner","LP_TOKEN_SCANNER","pages","push","page","findPairs","min","toNumber","pairs","flat","index","erc20","find","t","send","meta","fetchTokenMeta","logo","field","callStatic","e","data","fetchLPTokenWithValue","fetchTotalValue","values","add","lpPair","tokenWithValue","tokenReserve","reserveOf","tokenPrice","addresses","tokenBalances","tokenBalance","fetchMyLimitOrders","signer","kovanSigner","canceledHashes","orderBook","ORDER_BOOK","SETTLEMENT","settlement","getAddress","maker","numberOfHashesOfMaker","hashesOfMaker","hashes","hash","HashZero","orderOfHash","args","Order","amountIn","amountOutMin","recipient","deadline","v","r","s","filledAmountInOfHash","includes","myOrders","sort","compareOrders","o0","o1","status","compared","fetchMyCanceledLimitOrderHashes","numberOfCanceledHashesOfMaker","allCanceledHashes","useStyles","shadowColor","shadow","borderDark","border","useCallback","attrs","borderWidth","borderRadius","radius","padding","elevation","shadowOffset","shadowOpacity","shadowRadius","overflow","Container","Platform","select","web","contentContainerStyle","flex","default","Content","darkMode","useContext","GlobalContext","background","marginLeft","marginRight","marginTop","marginBottom","Title","SvgBackgroundDark","viewBox","fillRule","clipRule","strokeLinecap","strokeMiterlimit","transform","fill","d","clipPath","cx","cy","stroke","strokeWidth","strokeLinejoin","rx","ry","strokeDasharray","fillOpacity","x1","y1","x2","y2","gradientUnits","gradientTransform","offset","stopColor","stopOpacity","SvgBackgroundLight","BackgroundImage","View","position","aspectRatio","alignSelf","AppHeader","StatusBar","translucent","ConnectButton","primary","setEthereum","EthersContext","metaMask","window","ethereum","isMetaMask","request","method","alert","title","containerStyle","marginHorizontal","WalletConnectButton","WalletConnectProvider","rpc","1","enable","ConnectWallet","source","require","alignItems","justifyContent","Image","WebScreen","chainId","Text","light","textAlign","top","right","bottom","left","ConnectToWallet","AppScreen","Screen","WBTC","Token","DAI","USDC","USDT","SUSHI","YAM","AMPL","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","wrappedCurrency","ETHER","useAllCommonPairs","loadAllCommonPairs","currencyA","currencyB","bases","basePairs","flatMap","base","otherBase","t0","t1","allPairCombinations","Boolean","b","customBases","customBasesA","customBasesB","equals","Fetcher","fetchPairData","useSDK","getTotalSupply","getTrade","fromAmount","eth","to","Currency","CurrencyAmount","ether","Trade","bestTradeExactIn","maxHops","maxNumResults","calculateAmountOfLPTokenMinted","toAmount","liquidityToken","minted","getLiquidityMinted","raw","SwapSubMenu","WebSubMenu","items","path","LiquiditySubMenu","MigrateSubMenu","StakingSubMenu","FarmingSubMenu","submenu","item","MenuItem","key","textLight","match","useRouteMatch","active","isExact","paddingTop","paddingBottom","textDecoration","FEE","Percent","useSwapRouter","allowedSlippage","swap","trade","Router","feeOnTransfer","ttl","params","swapCallParameters","router","ROUTER","estimateGas","methodName","gasLimit","functions","tx","logTransaction","arg","addLiquidity","Date","getTime","removeLiquidityETH","liquidity","amountETH","removeLiquidity","addLiquidityETH","calculateSwapFee","now","filledAmountIn","canceled","hashOfOrder","signMessage","arrayify","signature","splitSignature","sign","useSettlement","createOrder","order","toArgs","cancelOrder","slice","queryOrderFilledEvents","filters","OrderFilled","queryFilter","calculateLimitOrderFee","calculateLimitOrderReturn","price","limitOrderFeeDeducted","swapFeeDeducted","parse","Colors","common","white","transparent","secondary","green","red","twitter","facebook","header","textDark","overlay","dark","providers","AlchemyProvider","KOVAN_PROVIDER","React","createContext","_ethereum","ensName","addOnBlockListener","_name","_listener","removeOnBlockListener","updateTokens","loadingTokens","addCustomToken","_token","removeCustomToken","approveToken","_spender","_amount","getTokenAllowance","getTokenBalance","_who","EthersContextProvider","children","useState","setProvider","setSigner","setKovanSigner","setChainId","setAddress","setENSName","onBlockListeners","setOnBlockListeners","setTokens","setCustomTokens","setLoadingTokens","useEffect","Wallet","useAsyncEffect","web3","Web3Provider","getSigner","web3Signer","onAccountsChanged","accounts","Analytics","onChainChanged","onDisconnect","on","off","lookupAddress","ens","list","JSON","AsyncStorage","getItem","findIndex","custom","setItem","stringify","spender","MaxUint256","approve","allowance","who","balanceOf","listener","old","onBlock","block","Object","entries","Provider","EthersContextConsumer","Consumer","load","clear","setDarkMode","_darkMode","mnemonic","setMnemonic","_mnemonic","GlobalContextProvider","colorScheme","useColorScheme","mode","mne","removeItem","GlobalContextConsumer","SUSHI_BAR","SUSHI_ROLL","ZAP_IN","ZAP_OUT","ContextProvider","SvgMoon","SvgSun","DarkModeSwitch","TouchableHighlight","activeOpacity","underlayColor","margin","CloseButton","MobileWebMenuItem","startsWith","Status","connected","isWalletConnect","disconnect","MobileWebMenu","expanded","onCollapse","animationType","visible","TouchableWithoutFeedback","paddingRight","SvgLogoDark","xmlns","className","data-name","SvgLogoLight","SvgLogo","Menu","MenuIcon","onExpand","confirm","CloseIcon","paddingLeft","WebHeader","zIndex","borderBottomWidth","onExpandMenu","EmptyScreen","FarmingScreen","lazy","HarvestScreen","LiquidityScreen","MigrateScreen","MyLimitOrdersScreen","RemoveLiquidityScreen","StakeScreen","UnstakeScreen","SwapScreen","HomeScreen","Screens","OS","WebScreens","menuExpanded","setMenuExpanded","fallback","exact","Tab","createBottomTabNavigator","AppScreens","theme","DefaultTheme","colors","card","notification","NavigationContainer","Navigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","component","options","tabOptions","iconName","tabBarIcon","App","useFonts","OpenSans_300Light","regular","OpenSans_400Regular","bold","OpenSans_600SemiBold","AppLoading","global","Buffer","medium","note","h1Style","h2Style","h3Style","h4Style","caption","gasPrice"],"mappings":"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","file":"static/js/app.83b83d71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/metamask-dark.2137a831.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask.15e22fef.png\";","module.exports = __webpack_public_path__ + \"static/media/sushiswap.ef005f32.jpg\";","import React, { FunctionComponent } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\ninterface FlexViewProps extends ViewProps {\n    direction?: \"row\" | \"column\";\n}\n\nconst FlexView: FunctionComponent<FlexViewProps> = props => {\n    const flexDirection = props.direction || \"row\";\n    return <View {...props} style={[{ flexDirection }, props.style]} />;\n};\nexport default FlexView;\n","import { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\n\nexport const ETH: Token = {\n    name: \"Ethereum\",\n    address: ethers.constants.AddressZero,\n    decimals: 18,\n    symbol: \"ETH\",\n    logoURI: \"https://lite.sushiswap.fi/images/tokens/ETH.png\",\n    balance: ethers.BigNumber.from(0)\n};\n","import { Fraction as SDKFraction } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\n\nclass Fraction {\n    static BASE = ethers.BigNumber.from(10).pow(18);\n    static NAN = new Fraction(ethers.constants.Zero, ethers.constants.Zero);\n    static ZERO = new Fraction(ethers.constants.Zero, ethers.constants.One);\n    static convert(sdk: SDKFraction) {\n        return new Fraction(\n            ethers.BigNumber.from(sdk.numerator.toString()),\n            ethers.BigNumber.from(sdk.denominator.toString())\n        );\n    }\n    static from(numerator: ethers.BigNumberish, denominator: ethers.BigNumberish) {\n        return new Fraction(ethers.BigNumber.from(numerator), ethers.BigNumber.from(denominator));\n    }\n    static fromTokens(\n        numerator: ethers.BigNumberish,\n        denominator: ethers.BigNumberish,\n        numeratorToken: Token,\n        denominatorToken: Token\n    ) {\n        return new Fraction(\n            ethers.BigNumber.from(numerator).mul(ethers.BigNumber.from(10).pow(denominatorToken.decimals)),\n            ethers.BigNumber.from(denominator).mul(ethers.BigNumber.from(10).pow(numeratorToken.decimals))\n        );\n    }\n    static parse(value: string) {\n        return value === \"\"\n            ? Fraction.NAN\n            : isEmptyValue(value)\n            ? Fraction.ZERO\n            : new Fraction(parseBalance(value, 18), Fraction.BASE);\n    }\n\n    numerator: ethers.BigNumber;\n    denominator: ethers.BigNumber;\n\n    private constructor(numerator: ethers.BigNumber, denominator: ethers.BigNumber) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n    }\n\n    isZero() {\n        return !this.isNaN() && this.numerator.isZero();\n    }\n\n    isNaN() {\n        return this.denominator.isZero();\n    }\n\n    eq(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .eq(this.denominator);\n    }\n\n    gt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .gt(this.denominator);\n    }\n\n    lt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .lt(this.denominator);\n    }\n\n    toString(maxFractions = 8) {\n        if (this.isNaN()) return \"\";\n        if (this.isZero()) return \"0\";\n        let str = formatBalance(this.numerator.mul(Fraction.BASE).div(this.denominator), 18, maxFractions);\n        if (str.endsWith(\".0\")) str = str.substring(0, str.length - 2);\n        return str;\n    }\n\n    apply(value: ethers.BigNumberish) {\n        return this.denominator.isZero() ? ethers.constants.Zero : this.numerator.mul(value).div(this.denominator);\n    }\n}\n\nexport default Fraction;\n","import ERC20 from \"@sushiswap/core/build/contracts/ERC20.json\";\nimport IUniswapV2Factory from \"@sushiswap/core/build/contracts/IUniswapV2Factory.json\";\nimport IUniswapV2Pair from \"@sushiswap/core/build/contracts/IUniswapV2Pair.json\";\nimport IUniswapV2Router02 from \"@sushiswap/core/build/contracts/IUniswapV2Router02.json\";\nimport IWETH from \"@sushiswap/core/build/contracts/IWETH.json\";\nimport MasterChef from \"@sushiswap/core/build/contracts/MasterChef.json\";\nimport SushiBar from \"@sushiswap/core/build/contracts/SushiBar.json\";\nimport SushiRoll from \"@sushiswap/core/build/contracts/SushiRoll.json\";\nimport OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\nimport ZapIn from \"@sushiswap/zapper/artifacts/Sushiswap_ZapIn_General_V2.json\";\nimport ZapOut from \"@sushiswap/zapper/artifacts/Sushiswap_ZapOut_General_V1.json\";\nimport { ethers } from \"ethers\";\nimport LPTokenScanner from \"../constants/abi/LPTokenScanner.json\";\n\nconst CONTRACTS = {\n    ERC20,\n    IUniswapV2Factory,\n    IUniswapV2Pair,\n    IUniswapV2Router02,\n    IWETH,\n    MasterChef,\n    SushiBar,\n    SushiRoll,\n    OrderBook,\n    Settlement,\n    LPTokenScanner: { abi: LPTokenScanner },\n    ZapIn,\n    ZapOut\n};\n\nconst getContract = (name: string, address: string, signerOrProvider: ethers.Signer | ethers.providers.Provider) => {\n    const contract = CONTRACTS[name];\n    return new ethers.Contract(address, contract.abi, signerOrProvider);\n};\n\nexport default getContract;\n","import { ChainId, CurrencyAmount, Percent, Token as SDKToken, TokenAmount, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { ETH } from \"../constants/tokens\";\nimport Token from \"../types/Token\";\nimport getContract from \"./getContract\";\n\nexport const formatUSD = (value: number, maxFraction = 0) => {\n    const formatter = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction\n    });\n    return formatter.format(value);\n};\n\nexport const formatPercentage = (value: number, maxFraction = 2) => {\n    const formatted = String(value * 100);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const formatBalance = (value: ethers.BigNumberish, decimals = 18, maxFraction = 0) => {\n    const formatted = ethers.utils.formatUnits(value, decimals);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const parseBalance = (value: string, decimals = 18) => {\n    return ethers.utils.parseUnits(value || \"0\", decimals);\n};\n\nexport const isEmptyValue = (text: string) =>\n    ethers.BigNumber.isBigNumber(text)\n        ? ethers.BigNumber.from(text).isZero()\n        : text === \"\" || text.replace(/0/g, \"\").replace(/\\./, \"\") === \"\";\n\nexport const isETH = (token?: Token) => token?.address.toLowerCase() === ETH.address.toLowerCase();\n\nexport const isWETH = (token?: Token) => token?.address.toLowerCase() === WETH[1].address.toLowerCase();\n\nexport const isETHWETHPair = (fromToken?: Token, toToken?: Token) => {\n    return (isETH(fromToken) && isWETH(toToken)) || (isWETH(fromToken) && isETH(toToken));\n};\n\nexport const convertToken = (token: Token) => {\n    return token.symbol === \"ETH\" ? WETH[\"1\"] : new SDKToken(ChainId.MAINNET, token.address, token.decimals);\n};\n\nexport const convertAmount = (token: Token, amount: string) => {\n    return new TokenAmount(convertToken(token), parseBalance(amount, token.decimals).toString());\n};\n\nexport const parseCurrencyAmount = (value: CurrencyAmount, decimals = 18) => {\n    return ethers.BigNumber.from(parseBalance(value.toExact(), decimals));\n};\n\nexport const deduct = (amount: ethers.BigNumber, percent: Percent) => {\n    return amount.sub(amount.mul(percent.numerator.toString()).div(percent.denominator.toString()));\n};\n\nexport const pow10 = (exp: ethers.BigNumberish) => {\n    return ethers.BigNumber.from(10).pow(exp);\n};\n\nexport const formatDate = (date: Date) => {\n    return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n};\n\nexport { getContract };\n","import { Dimensions } from \"react-native\";\n\nexport const SCREEN_WIDTH = Math.round(Dimensions.get(\"window\").width);\nexport const SCREEN_HEIGHT = Math.round(Dimensions.get(\"window\").height);\nexport const IS_HIGH_RESOLUTION = SCREEN_HEIGHT > 667;\nexport const HEADER_HEIGHT = 64;\nexport const HEADER_WIDTH = 980;\nexport const DESKTOP_CONTENT_WIDTH = 540;\nexport const SUB_MENU_HEIGHT = 40;\nexport const IS_DESKTOP = SCREEN_WIDTH > DESKTOP_CONTENT_WIDTH;\n\nexport const Spacing = IS_HIGH_RESOLUTION\n    ? {\n          tiny: 8,\n          small: 16,\n          normal: 32,\n          large: 48,\n          huge: 64\n      }\n    : {\n          tiny: 6,\n          small: 12,\n          normal: 24,\n          large: 32,\n          huge: 48\n      };\n","import React, { FC } from \"react\";\nimport { Button as NativeButton, ButtonProps as NativeButtonProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nexport interface ButtonProps extends NativeButtonProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Button: FC<ButtonProps> = props => {\n    const { accent, textMedium, placeholder, backgroundLight } = useColors();\n    const type = props.type || \"solid\";\n    const size = props.size || \"normal\";\n    const height = props.size === \"small\" ? 36 : size === \"normal\" ? 45 : 54;\n    const fontSize = props.size === \"small\" ? 13 : size === \"normal\" ? 15 : 18;\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = type === \"solid\" ? \"white\" : props.color || textMedium;\n    return (\n        <NativeButton\n            {...props}\n            disabled={props.loading || props.disabled}\n            onPress={props.loading ? undefined : props.onPress}\n            type={type}\n            loadingProps={{ color: textMedium }}\n            buttonStyle={[\n                {\n                    height,\n                    paddingHorizontal: Spacing.small,\n                    backgroundColor: \"transparent\",\n                    borderColor: color\n                },\n                props.buttonStyle\n            ]}\n            titleStyle={[{ fontSize, fontFamily, color }, props.titleStyle]}\n            disabledTitleStyle={[{ fontSize, fontFamily, color: placeholder }, props.titleStyle]}\n            style={[{ backgroundColor: type === \"solid\" ? props.color || accent : \"transparent\" }, props.style]}\n            disabledStyle={[\n                { backgroundColor: type === \"solid\" ? backgroundLight : \"transparent\" },\n                props.disabledStyle\n            ]}\n        />\n    );\n};\nexport default Button;\n","import { FACTORY_ADDRESS as SUSHISWAP_FACTORY, Pair } from \"@sushiswap/sdk\";\nimport sushiData from \"@sushiswap/sushi-data\";\nimport { FACTORY_ADDRESS as UNISWAP_FACTORY } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { LP_TOKEN_SCANNER, MASTER_CHEF, ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport { ALCHEMY_PROVIDER } from \"../context/EthersContext\";\nimport { Order, OrderStatus } from \"../hooks/useSettlement\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport {\n    convertToken,\n    formatBalance,\n    getContract,\n    isETH,\n    isWETH,\n    parseBalance,\n    parseCurrencyAmount,\n    pow10\n} from \"./index\";\n\nconst blocksPerDay = 6500;\n\nexport const fetchTokens = async (account: string, customTokens?: Token[]) => {\n    const response = await fetch(\"https://lite.sushiswap.fi/tokens.json\");\n    const json = await response.json();\n    const tokens = [...json.tokens, ...(customTokens || [])];\n\n    const balances = await fetchTokenBalances(\n        account,\n        tokens.map(token => token.address)\n    );\n    return [\n        {\n            ...ETH,\n            balance: await ALCHEMY_PROVIDER.getBalance(account)\n        },\n        ...tokens.map((token, i) => ({\n            ...token,\n            balance: ethers.BigNumber.from(balances[i] || 0)\n        }))\n    ];\n};\n\nexport const fetchTokenWithValue = async (\n    token: Token,\n    weth: Token,\n    wethPriceUSD: Fraction,\n    getPair: (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => Promise<Pair>,\n    provider: ethers.providers.BaseProvider\n) => {\n    let fetched: TokenWithValue;\n    if (isETH(token) || isWETH(token)) {\n        fetched = {\n            ...token,\n            priceUSD: Number(wethPriceUSD.toString()),\n            valueUSD: Number(formatBalance(wethPriceUSD.apply(token.balance)))\n        } as TokenWithValue;\n    } else {\n        try {\n            const pair = await getPair(token, weth, provider);\n            const priceETH = Fraction.convert(pair.priceOf(convertToken(token)));\n            const priceUSD = priceETH.apply(wethPriceUSD.numerator).div(pow10(18 - token.decimals));\n            fetched = {\n                ...token,\n                priceUSD: Number(formatBalance(priceUSD)),\n                valueUSD: Number(formatBalance(priceUSD.mul(token.balance).div(pow10(token.decimals))))\n            } as TokenWithValue;\n        } catch (e) {\n            fetched = { ...token, priceUSD: null, valueUSD: null } as TokenWithValue;\n        }\n    }\n    return fetched;\n};\n\n// tslint:disable-next-line:max-func-body-length\nexport const fetchPools = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const info = await sushiData.sushi.info();\n    const masterchefInfo = await sushiData.masterchef.info();\n    const pools = await sushiData.masterchef.pools();\n    const reduce = await sushiData.masterchef.pool({ poolId: \"45\" });\n    if (!reduce) return undefined;\n    const sushiPerBlock = Math.floor(100 - 100 * (reduce.allocPoint / masterchefInfo.totalAllocPoint));\n    const balances = await fetchTokenBalances(\n        account,\n        pools.map(pool => pool.pair)\n    );\n    // tslint:disable-next-line:max-func-body-length\n    const fetchPool = async (pool, i): Promise<LPToken | null> => {\n        if (pool.slpBalance === 0) return null;\n        try {\n            const result = await Promise.all([\n                fetchStakedValue(pool.pair),\n                fetchPairTokens(pool.pair, tokens, provider)\n            ]);\n            if (!result[0]) return null;\n            const apy = calcAPY(\n                info.derivedETH,\n                sushiPerBlock,\n                pool.allocPoint,\n                masterchefInfo.totalAllocPoint,\n                result[0].totalValueETH,\n                pool.slpBalance,\n                result[0].totalSupply\n            );\n            if (apy === 0) return null;\n            return {\n                ...pool,\n                apy,\n                address: pool.pair,\n                decimals: 18,\n                tokenA: result[1].tokenA,\n                tokenB: result[1].tokenB,\n                symbol: result[1].tokenA.symbol + \"-\" + result[1].tokenB.symbol + \" LP\",\n                balance: ethers.BigNumber.from(balances[i] || 0),\n                sushiRewardedPerYear: calcSushiRewardedPerYear(\n                    sushiPerBlock,\n                    pool.allocPoint,\n                    masterchefInfo.totalAllocPoint,\n                    result[0].totalSupply\n                ),\n                totalSupply: parseBalance(String(result[0].totalSupply), 18),\n                totalValueUSD: result[0].totalValueUSD,\n                multiplier: pool.allocPoint / 1000\n            };\n        } catch (e) {\n            return null;\n        }\n    };\n    return (await Promise.all(pools.map(fetchPool))).filter(pool => !!pool) as LPToken[];\n};\n\nexport const fetchMyPools = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const pools = await sushiData.masterchef.pools();\n    const fetchMyPool = async (pool): Promise<LPToken | null> => {\n        try {\n            const myStake = await fetchMyStake(pool.id, account, provider);\n            if (myStake.amountDeposited.isZero()) return null;\n            const result = await Promise.all([\n                fetchStakedValue(pool.pair),\n                fetchPairTokens(pool.pair, tokens, provider)\n            ]);\n            return {\n                ...pool,\n                address: pool.pair,\n                decimals: 18,\n                tokenA: result[1].tokenA,\n                tokenB: result[1].tokenB,\n                symbol: result[1].tokenA.symbol + \"-\" + result[1].tokenB.symbol + \" LP\",\n                balance: ethers.constants.Zero,\n                amountDeposited: myStake.amountDeposited,\n                pendingSushi: myStake.pendingSushi,\n                totalSupply: parseBalance(String(result[0].totalSupply), 18)\n            };\n        } catch (e) {\n            return null;\n        }\n    };\n    return (await Promise.all(pools.map(fetchMyPool))).filter(pool => !!pool) as LPToken[];\n};\n\nconst calcAPY = (derivedETH, sushiPerBlock, allocPoint, totalAllocPoint, totalValueETH, slpBalance, totalSupply) => {\n    return (\n        (derivedETH * blocksPerDay * sushiPerBlock * 3 * 365 * (allocPoint / totalAllocPoint)) /\n        (totalValueETH * (slpBalance / totalSupply))\n    );\n};\n\nconst calcSushiRewardedPerYear = (sushiPerBlock, allocPoint, totalAllocPoint, totalSupply) => {\n    return ethers.BigNumber.from(blocksPerDay * sushiPerBlock * 3 * 365 * allocPoint)\n        .mul(pow10(36))\n        .div(totalAllocPoint)\n        .div(parseBalance(String(totalSupply)));\n};\n\nconst fetchStakedValue = async (lpToken: string) => {\n    return await sushiData.masterchef.stakedValue({ lpToken });\n};\n\nconst fetchMyStake = async (poolId: number, account: string, provider: ethers.providers.JsonRpcProvider) => {\n    const masterChef = getContract(\"MasterChef\", MASTER_CHEF, provider);\n    const { amount: amountDeposited } = await masterChef.userInfo(poolId, account);\n    const pendingSushi = await masterChef.pendingSushi(poolId, account);\n    return { amountDeposited, pendingSushi };\n};\n\nconst fetchPairTokens = async (pair: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const contract = getContract(\"IUniswapV2Pair\", pair, provider);\n    const tokenA = await findOrFetchToken(await contract.token0(), provider, tokens);\n    const tokenB = await findOrFetchToken(await contract.token1(), provider, tokens);\n    return { tokenA, tokenB };\n};\n\nexport const fetchMyLPTokens = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    return await fetchLPTokens(SUSHISWAP_FACTORY, account, tokens, provider);\n};\n\nexport const fetchMyUniswapLPTokens = async (\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    return await fetchLPTokens(UNISWAP_FACTORY, account, tokens, provider);\n};\n\nconst LP_TOKENS_LIMIT = 100;\n\n// tslint:disable-next-line:max-func-body-length\nconst fetchLPTokens = async (\n    factory: string,\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    const factoryContract = getContract(\"IUniswapV2Factory\", factory, provider);\n    const length = await factoryContract.allPairsLength();\n    const scanner = getContract(\"LPTokenScanner\", LP_TOKEN_SCANNER, provider);\n    const pages: number[] = [];\n    for (let i = 0; i < length; i += LP_TOKENS_LIMIT) pages.push(i);\n    const pairs = (\n        await Promise.all(\n            pages.map(page =>\n                scanner.findPairs(account, factory, page, Math.min(page + LP_TOKENS_LIMIT, length.toNumber()))\n            )\n        )\n    ).flat();\n    const balances = await fetchTokenBalances(\n        account,\n        pairs.map(pair => pair.token)\n    );\n    return await Promise.all(\n        pairs.map(async (pair, index) => {\n            const erc20 = getContract(\"ERC20\", pair.token, provider);\n            const result = await Promise.all([\n                erc20.decimals(),\n                erc20.totalSupply(),\n                fetchPairTokens(pair.token, tokens, provider)\n            ]);\n            return {\n                address: pair.token,\n                decimals: Number(result[0]),\n                name: result[2].tokenA.symbol + \"-\" + result[2].tokenB.symbol + \" LP Token\",\n                symbol: result[2].tokenA.symbol + \"-\" + result[2].tokenB.symbol,\n                balance: ethers.BigNumber.from(balances[index]),\n                totalSupply: result[1],\n                tokenA: result[2].tokenA,\n                tokenB: result[2].tokenB\n            } as LPToken;\n        })\n    );\n};\n\nexport const findOrFetchToken = async (\n    address: string,\n    provider: ethers.providers.JsonRpcProvider,\n    tokens?: Token[]\n) => {\n    if (tokens) {\n        const token = tokens.find(t => t.address.toLowerCase() === address.toLowerCase());\n        if (token) {\n            return token;\n        }\n    }\n    let meta = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenMetadata\", [address]);\n    if (!meta.name || meta.symbol || meta.decimals || meta.logoURI) {\n        meta = await fetchTokenMeta(address, provider);\n    }\n    return {\n        address,\n        name: meta.name,\n        symbol: meta.symbol,\n        decimals: meta.decimals,\n        logoURI: meta.logo,\n        balance: ethers.constants.Zero\n    } as Token;\n};\n\nconst fetchTokenMeta = async (address: string, provider: ethers.providers.JsonRpcProvider) => {\n    const erc20 = getContract(\"ERC20\", address, provider);\n    const data = await Promise.all(\n        [\"name\", \"symbol\", \"decimals\"].map(field => {\n            try {\n                return erc20.callStatic[field]();\n            } catch (e) {\n                return \"\";\n            }\n        })\n    );\n    return {\n        name: data[0],\n        symbol: data[1],\n        decimals: data[2],\n        logoURI: \"\"\n    };\n};\n\nexport const fetchLPTokenWithValue = async (\n    lpToken: LPToken,\n    weth: Token,\n    wethPriceUSD: Fraction,\n    getPair: (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => Promise<Pair>,\n    provider: ethers.providers.BaseProvider\n) => {\n    const pair = await getPair(lpToken.tokenA, lpToken.tokenB, provider);\n    const values = await Promise.all([\n        await fetchTotalValue(lpToken.tokenA, pair, weth, wethPriceUSD, getPair, provider),\n        await fetchTotalValue(lpToken.tokenB, pair, weth, wethPriceUSD, getPair, provider)\n    ]);\n    const priceUSD = values[0]\n        .add(values[1])\n        .mul(pow10(18))\n        .div(lpToken.totalSupply);\n    return {\n        ...lpToken,\n        priceUSD: Number(formatBalance(priceUSD)),\n        valueUSD: Number(\n            formatBalance(priceUSD.mul(lpToken.amountDeposited || lpToken.balance).div(pow10(lpToken.decimals)))\n        )\n    };\n};\n\nconst fetchTotalValue = async (token: Token, lpPair: Pair, weth: Token, wethPriceUSD: Fraction, getPair, provider) => {\n    const tokenWithValue = await fetchTokenWithValue(token, weth, wethPriceUSD, getPair, provider);\n    const tokenReserve = parseCurrencyAmount(lpPair.reserveOf(convertToken(token)), token.decimals);\n    const tokenPrice = parseBalance(String(tokenWithValue.priceUSD || 0));\n    return tokenReserve.mul(tokenPrice).div(pow10(token.decimals));\n};\n\nconst fetchTokenBalances = async (account: string, addresses: string[]) => {\n    const balances = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenBalances\", [account, addresses]);\n    return balances.tokenBalances.map(balance => balance.tokenBalance);\n};\n\nconst LIMIT_ORDERS_LIMIT = 20;\n\nexport const fetchMyLimitOrders = async (\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer,\n    kovanSigner: ethers.Signer,\n    tokens?: Token[],\n    canceledHashes?: string[]\n) => {\n    const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, provider);\n    const maker = await signer.getAddress();\n    const length = await orderBook.numberOfHashesOfMaker(maker);\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    const hashes = (await Promise.all(pages.map(page => orderBook.hashesOfMaker(maker, page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n    const myOrders = await Promise.all(\n        hashes.map(async hash => {\n            const args = await orderBook.orderOfHash(hash);\n            return new Order(\n                signer,\n                await findOrFetchToken(args.fromToken, provider, tokens),\n                await findOrFetchToken(args.toToken, provider, tokens),\n                args.amountIn,\n                args.amountOutMin,\n                args.recipient,\n                args.deadline,\n                args.v,\n                args.r,\n                args.s,\n                await settlement.filledAmountInOfHash(hash),\n                canceledHashes && canceledHashes.includes(hash)\n            );\n        })\n    );\n    return myOrders.sort(compareOrders) as Order[];\n};\n\nconst compareOrders = (o0, o1) => {\n    const status = (s: OrderStatus) => (s === \"Open\" ? 0 : s === \"Filled\" ? 1 : 2);\n    const compared = status(o0.status()) - status(o1.status());\n    return compared === 0 ? o1.deadline.toNumber() - o0.deadline.toNumber() : compared;\n};\n\nexport const fetchMyCanceledLimitOrderHashes = async (signer: ethers.providers.JsonRpcSigner) => {\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, signer);\n    const length = await settlement.numberOfCanceledHashesOfMaker(await signer.getAddress());\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    return (await Promise.all(pages.map(page => settlement.allCanceledHashes(page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n};\n","import { useCallback } from \"react\";\nimport { ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"./useColors\";\n\nconst useStyles = () => {\n    const { shadow: shadowColor, borderDark } = useColors();\n    const border = useCallback(\n        (attrs?: { color?: string; radius?: number }) => ({\n            borderColor: attrs?.color || borderDark,\n            borderWidth: 1,\n            borderRadius: attrs?.radius || 8,\n            padding: Spacing.small\n        }),\n        []\n    );\n    const shadow = () =>\n        ({\n            borderRadius: Spacing.tiny,\n            elevation: Spacing.small,\n            shadowColor,\n            shadowOffset: { width: 0, height: 4 },\n            shadowOpacity: 0.5,\n            shadowRadius: 4,\n            overflow: \"visible\"\n        } as ViewStyle);\n    return { border, shadow };\n};\n\nexport default useStyles;\n","import React, { FC } from \"react\";\nimport { Platform, SafeAreaView, ScrollView, ViewProps } from \"react-native\";\n\nexport type ContainerProps = ViewProps;\n\nconst Container: FC<ContainerProps> = props => {\n    return Platform.select({\n        web: (\n            <ScrollView\n                contentContainerStyle={{ flex: 1 }}\n                style={[\n                    {\n                        flex: 1\n                    },\n                    props.style\n                ]}\n                {...props}\n            />\n        ),\n        default: (\n            <SafeAreaView style={{ flex: 1 }}>\n                <ScrollView {...props} />\n            </SafeAreaView>\n        )\n    });\n};\n\nexport default Container;\n","import React, { useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { DESKTOP_CONTENT_WIDTH, IS_DESKTOP, SCREEN_WIDTH, Spacing, SUB_MENU_HEIGHT } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst Content: React.FunctionComponent<ViewProps> = props => {\n    const { darkMode } = useContext(GlobalContext);\n    const { borderDark: borderColor, background } = useColors();\n    const { border, shadow } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: darkMode ? borderColor : undefined }),\n                    ...shadow(),\n                    backgroundColor: background,\n                    width: IS_DESKTOP ? DESKTOP_CONTENT_WIDTH : SCREEN_WIDTH - Spacing.large,\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    marginTop: Spacing.huge + SUB_MENU_HEIGHT,\n                    marginBottom: Spacing.large,\n                    padding: IS_DESKTOP ? Spacing.normal : Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Content;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Text from \"./Text\";\n\ninterface TitleProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    disabled?: boolean;\n    style?: TextStyle;\n}\n\nconst Title: FC<TitleProps> = props => {\n    return (\n        <Text\n            fontWeight={props.fontWeight || \"bold\"}\n            disabled={props.disabled}\n            style={[{ marginBottom: Spacing.tiny, fontSize: IS_DESKTOP ? 40 : 28 }, props.style]}>\n            {props.text}\n        </Text>\n    );\n};\n\nexport default Title;\n","import * as React from \"react\";\nimport Svg, {\n    Circle,\n    ClipPath,\n    Defs,\n    Ellipse,\n    G,\n    LinearGradient,\n    Path,\n    RadialGradient,\n    Stop,\n    SvgProps\n} from \"react-native-svg\";\n\n// tslint:disable-next-line:max-func-body-length\nfunction SvgBackgroundDark(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 2100 2100\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit={1.5}\n            {...props}>\n            <G transform=\"matrix(.92374 0 0 1.88904 -15674.56 -16430.71)\">\n                <Path fill=\"#0e0f23\" d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                <ClipPath id=\"prefix__a\">\n                    <Path d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                </ClipPath>\n                <G clipPath=\"url(#prefix__a)\">\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear2)\"\n                        strokeWidth={3}\n                        transform=\"matrix(1.08256 0 0 .52937 11950.485 6652.866)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear3)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.70103 0 0 .3428 14109.24 7569.495)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear4)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.65148 0 0 .31857 14389.612 7688.545)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear5)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.59951 0 0 .29316 14683.668 7813.402)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear6)\"\n                        strokeWidth={2.97}\n                        transform=\"matrix(1.45883 0 0 .71336 9821.49 5748.873)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear7)\"\n                        strokeWidth={1.09}\n                        transform=\"matrix(1.98142 0 0 .9689 6864.553 4493.326)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear8)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.08295 0 0 1.01856 6290.06 4249.393)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear9)\"\n                        strokeWidth={0.99}\n                        transform=\"matrix(2.1815 0 0 1.06675 5732.466 4012.633)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear10)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.51596 0 0 1.2303 3840.076 3209.103)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear11)\"\n                        strokeWidth={0.76}\n                        transform=\"matrix(2.84743 0 0 1.39238 1964.432 2412.72)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={2.98}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(1.02642 -.18032 .36875 .50192 -8192.387 8615.588)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.52195 -.0917 .18751 .25523 4129.043 8824.098)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.5544 .00739 .01511 -.2711 5758.093 11686.348)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.46928 .14454 -.29559 .22948 10245.833 3948.758)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(-.05308 -.52873 .90826 -.0218 11138.133 21929.848)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(1.04567 .13701 -.23536 .42952 -4115.147 2068.338)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(.28019 -.51133 .87836 .11509 4233.503 20687.448)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(.81456 -.34867 -.59895 -.33459 4984.583 20568.648)\"\n                    />\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\"\n                        />\n                        <G transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__b\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__b)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .23937 .4057 13752.838 7678.974)\"\n                        />\n                        <G transform=\"matrix(.5441 -.07676 .16282 .27595 15179.303 8147.075)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__c\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__c)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\"\n                        />\n                        <G transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__d\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__d)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .23684 .40605 13983.858 7907.01)\"\n                        />\n                        <G transform=\"matrix(.54457 -.07596 .1611 .27619 15407.406 8377.228)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__e\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__e)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\"\n                        />\n                        <G transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__f\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__f)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.143 .41641 14337.534 7060.022)\"\n                        />\n                        <G transform=\"matrix(.55847 .04586 -.09727 .28324 15209.655 7783.768)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__g\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__g)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\"\n                        />\n                        <G transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__h\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__h)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.17215 .44792 14309.713 6521.024)\"\n                        />\n                        <G transform=\"matrix(.60073 .0552 -.1171 .30467 15219.919 7311.01)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__i\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__i)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\"\n                        />\n                        <G transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__j\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__j)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2407 .4403 12950.42 7711.006)\"\n                        />\n                        <G transform=\"matrix(.59051 -.07719 .16372 .2995 14469.505 8230.993)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__k\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__k)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\"\n                        />\n                        <G transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__l\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__l)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.2057 .24809 17661.276 7556.892)\"\n                        />\n                        <G transform=\"matrix(.33273 .06596 -.1399 .16875 17997.348 8063.5)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__m\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__m)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5429.1 4921.27l-245.63-534.63c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l245.64 534.63-8.29 3.81z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={6.24}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(1.96709 .45188 -.9241 .9619 11860.057 2667.155)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00776 -.44649 18561.7 11282.448)\"\n                        />\n                        <Path\n                            d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(-1.35639 -.00564 .01257 -.7235 18543.284 12342.036)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.73}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00756 -.43517 18562.452 11239.16)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.77}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00736 -.42342 18563.234 11194.216)\"\n                        />\n                        <Path\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.81}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3139.43h14.614v1166.61h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00715 -.4115 18564.025 11148.607)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5300.61 5786.96c-.24-.17-.47-.35-.7-.53-17.41-13.86-4.09-63.98 30.06-114.74 1.44-2.13 7.58-10.81 9.18-12.95 35.31-47.46 76.53-76.3 96.18-67.31.9.41 1.75.9 2.55 1.47l125.89 89.04s2.73 2.01 3.31 2.57c15.89 15.44 1.4 66.2-33.58 116.88-.72 1.05-5.39 7.6-7 9.76-36.02 48.39-78.11 77.44-97.17 66.75-.47-.27-2.29-1.52-2.29-1.52l-126.43-89.42z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={11.5}\n                            transform=\"matrix(.99854 .20457 -.41815 .48829 15048.865 5342.07)\"\n                        />\n                        <Path\n                            d=\"M1040.64 697.661c0 22.723-51.581 41.17-115.115 41.17-63.534 0-115.116-18.447-115.116-41.17V546.583l.003.266c.4 22.6 51.827 40.904 115.113 40.904 63.534 0 115.115-18.448 115.115-41.17v151.078z\"\n                            fill=\"#0e0f23\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={5}\n                            transform=\"matrix(.9478 -.28962 .59237 .46355 16830.032 9233.44)\"\n                        />\n                        <Ellipse\n                            cx={925.525}\n                            cy={546.583}\n                            rx={115.115}\n                            ry={41.17}\n                            fill=\"#fff\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={5.19}\n                            transform=\"matrix(.9478 -.28962 .59487 .4655 16828.667 9232.372)\"\n                        />\n                        <G transform=\"matrix(.55592 -.16987 .26032 .2037 17374.22 9264.638)\">\n                            <Ellipse cx={925.525} cy={546.583} rx={115.115} ry={41.17} fill=\"#f14f9b\" />\n                            <Path\n                                d=\"M925.525 496.312c-45.853 0-85.627 9.645-105.389 23.272-11.22 7.737-16.547 17.689-16.547 26.999 0 9.311 5.327 19.262 16.547 26.999 19.762 13.627 59.536 23.272 105.389 23.272 45.852 0 85.625-9.645 105.385-23.272 11.22-7.737 16.55-17.688 16.55-26.999 0-9.31-5.33-19.262-16.55-26.999-19.76-13.627-59.533-23.272-105.385-23.272zm0 9.101c63.534 0 115.115 18.448 115.115 41.17s-51.581 41.17-115.115 41.17c-63.534 0-115.116-18.448-115.116-41.17s51.582-41.17 115.116-41.17z\"\n                                fill=\"#0e0f23\"\n                            />\n                        </G>\n                        <Path\n                            d=\"M11345.5 4849.24c37.3 20.18 78.8 24.3 118.1 24.29 39.4-.02 87.8-6.02 118.1-24.29\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={2.09}\n                            strokeLinejoin=\"round\"\n                            strokeDasharray=\"4.17,4.17,52.17,52.17\"\n                            transform=\"matrix(.79239 -.24213 .49524 .38754 6562.684 10128.41)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5418.56 4898.33l-235.09-511.69c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l235.1 511.69-8.29 3.81z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={6.24}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(1.90515 .51142 -1.04584 .93162 12852.245 2495.204)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35299 -.0473 .0651 -.44537 18433.904 11299.36)\"\n                        />\n                        <Path\n                            d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(-1.35299 -.0473 .1055 -.72168 18279.407 12356.292)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.73}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35299 -.0473 .06345 -.43408 18440.216 11256.18)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.77}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35299 -.0473 .06174 -.42236 18446.77 11211.35)\"\n                        />\n                        <Path\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.81}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3204.63h14.614v1101.41h-14.614z\"\n                            transform=\"matrix(-1.35299 -.0473 .06 -.41046 18453.418 11165.855)\"\n                        />\n                    </G>\n                    <G>\n                        <Path fill=\"#0e0f23\" fillOpacity={0.4} d=\"M16968.732 8697.914h2273.376v1111.677h-2273.376z\" />\n                    </G>\n                    <G>\n                        <Path\n                            fill=\"url(#prefix___Radial24)\"\n                            d=\"M22952.2 8435.28h1429.52v707.246H22952.2z\"\n                            transform=\"matrix(1.59031 0 0 1.57184 -19532.4 -4560.99)\"\n                        />\n                    </G>\n                </G>\n            </G>\n            <Defs>\n                <LinearGradient\n                    id=\"prefix___Linear2\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(1323.868) rotate(-48.234 5.87 -2.209)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear3\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2019.98) rotate(-48.234 3.706 -1.203)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear4\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2173.61) rotate(-48.234 3.415 -1.068)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear5\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 7345.403 -2188.287) scale(2362.04)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear6\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(982.411) rotate(-48.234 8.054 -3.223)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear7\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8019.154 -3350.118) scale(723.304)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear8\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8033.639 -3375.117) scale(688.047)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear9\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(656.966) rotate(-48.234 12.248 -5.171)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear10\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(569.632) rotate(-48.234 14.189 -6.072)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear11\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8109.595 -3506.09) scale(503.321)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <RadialGradient\n                    id=\"prefix___Radial24\"\n                    cx={0}\n                    cy={0}\n                    r={1}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"matrix(778.647 -360.127 670.211 418.392 23603 8795.41)\">\n                    <Stop offset={0} stopColor=\"#0e0f23\" stopOpacity={0} />\n                    <Stop offset={1} stopColor=\"#0e0f23\" />\n                </RadialGradient>\n            </Defs>\n        </Svg>\n    );\n}\n\nexport default SvgBackgroundDark;\n","import * as React from \"react\";\nimport Svg, {\n    Circle,\n    ClipPath,\n    Defs,\n    Ellipse,\n    G,\n    LinearGradient,\n    Path,\n    RadialGradient,\n    Stop,\n    SvgProps\n} from \"react-native-svg\";\n\n// tslint:disable-next-line:max-func-body-length\nfunction SvgBackgroundLight(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 2100 2100\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit={1.5}\n            {...props}>\n            <G transform=\"matrix(.92374 0 0 1.88904 -15674.56 -16430.7)\">\n                <Path fill=\"#fff\" d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                <ClipPath id=\"prefix__a\">\n                    <Path d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                </ClipPath>\n                <G clipPath=\"url(#prefix__a)\">\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear2)\"\n                        strokeWidth={3}\n                        transform=\"matrix(1.08256 0 0 .52937 11950.485 6652.866)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear3)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.70103 0 0 .3428 14109.24 7569.495)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear4)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.65148 0 0 .31857 14389.612 7688.545)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear5)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.59951 0 0 .29316 14683.668 7813.402)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear6)\"\n                        strokeWidth={2.97}\n                        transform=\"matrix(1.45883 0 0 .71336 9821.49 5748.873)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear7)\"\n                        strokeWidth={1.09}\n                        transform=\"matrix(1.98142 0 0 .9689 6864.553 4493.326)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear8)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.08295 0 0 1.01856 6290.06 4249.393)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear9)\"\n                        strokeWidth={0.99}\n                        transform=\"matrix(2.1815 0 0 1.06675 5732.466 4012.633)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear10)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.51596 0 0 1.2303 3840.076 3209.103)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear11)\"\n                        strokeWidth={0.76}\n                        transform=\"matrix(2.84743 0 0 1.39238 1964.432 2412.72)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={2.98}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(1.02642 -.18032 .36875 .50192 -8192.387 8615.588)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.52195 -.0917 .18751 .25523 4129.043 8824.098)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.5544 .00739 .01511 -.2711 5758.093 11686.348)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.46928 .14454 -.29559 .22948 10245.833 3948.758)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(-.05308 -.52873 .90826 -.0218 11138.133 21929.848)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(1.04567 .13701 -.23536 .42952 -4115.147 2068.338)\"\n                    />\n                    <G>\n                        <Path\n                            d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                            fill=\"#fff\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.25}\n                            strokeLinecap=\"butt\"\n                            strokeMiterlimit={4}\n                            transform=\"matrix(.28019 -.51133 .87836 .11509 4233.503 20687.448)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                            fill=\"#fff\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.25}\n                            strokeLinecap=\"butt\"\n                            strokeMiterlimit={4}\n                            transform=\"matrix(.81456 -.34867 -.59895 -.33459 4984.583 20568.648)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\"\n                        />\n                        <G transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__b\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__b)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .23937 .4057 13752.838 7678.974)\"\n                        />\n                        <G transform=\"matrix(.5441 -.07676 .16282 .27595 15179.303 8147.075)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__c\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__c)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\"\n                        />\n                        <G transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__d\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__d)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .23684 .40605 13983.858 7907.01)\"\n                        />\n                        <G transform=\"matrix(.54457 -.07596 .1611 .27619 15407.406 8377.228)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__e\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__e)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\"\n                        />\n                        <G transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__f\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__f)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.143 .41641 14337.534 7060.022)\"\n                        />\n                        <G transform=\"matrix(.55847 .04586 -.09727 .28324 15209.655 7783.768)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__g\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__g)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\"\n                        />\n                        <G transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__h\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__h)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.17215 .44792 14309.713 6521.024)\"\n                        />\n                        <G transform=\"matrix(.60073 .0552 -.1171 .30467 15219.919 7311.01)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__i\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__i)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\"\n                        />\n                        <G transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__j\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__j)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2407 .4403 12950.42 7711.006)\"\n                        />\n                        <G transform=\"matrix(.59051 -.07719 .16372 .2995 14469.505 8230.993)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__k\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__k)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\"\n                        />\n                        <G transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__l\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__l)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.2057 .24809 17661.276 7556.892)\"\n                        />\n                        <G transform=\"matrix(.33273 .06596 -.1399 .16875 17997.348 8063.5)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__m\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__m)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5429.1 4921.27l-245.63-534.63c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l245.64 534.63-8.29 3.81z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={6.24}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(1.96709 .45188 -.9241 .9619 11860.057 2667.169)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00776 -.44649 18561.7 11282.462)\"\n                        />\n                        <Path\n                            d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(-1.35639 -.00564 .01257 -.7235 18543.284 12342.05)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.73}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00756 -.43517 18562.452 11239.173)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.77}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00736 -.42342 18563.234 11194.23)\"\n                        />\n                        <Path\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.81}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3139.43h14.614v1166.61h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00715 -.4115 18564.025 11148.62)\"\n                        />\n                        <G>\n                            <Path\n                                d=\"M5300.61 5786.96c-.24-.17-.47-.35-.7-.53-17.41-13.86-4.09-63.98 30.06-114.74 1.44-2.13 7.58-10.81 9.18-12.95 35.31-47.46 76.53-76.3 96.18-67.31.9.41 1.75.9 2.55 1.47l125.89 89.04s2.73 2.01 3.31 2.57c15.89 15.44 1.4 66.2-33.58 116.88-.72 1.05-5.39 7.6-7 9.76-36.02 48.39-78.11 77.44-97.17 66.75-.47-.27-2.29-1.52-2.29-1.52l-126.43-89.42z\"\n                                fill=\"#fff\"\n                                stroke=\"#fff\"\n                                strokeWidth={11.5}\n                                transform=\"matrix(.99854 .20457 -.41815 .48829 15048.865 5342.095)\"\n                            />\n                            <Path\n                                d=\"M1040.64 697.661c0 22.723-51.581 41.17-115.115 41.17-63.534 0-115.116-18.447-115.116-41.17V546.583l.003.266c.4 22.6 51.827 40.904 115.113 40.904 63.534 0 115.115-18.448 115.115-41.17v151.078z\"\n                                fill=\"#0e0f23\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={5}\n                                transform=\"matrix(.9478 -.28962 .59237 .46355 16830.032 9233.464)\"\n                            />\n                            <Ellipse\n                                cx={925.525}\n                                cy={546.583}\n                                rx={115.115}\n                                ry={41.17}\n                                fill=\"#fff\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={5.19}\n                                transform=\"matrix(.9478 -.28962 .59487 .4655 16828.667 9232.396)\"\n                            />\n                            <G transform=\"matrix(.55592 -.16987 .26032 .2037 17374.22 9264.662)\">\n                                <Ellipse cx={925.525} cy={546.583} rx={115.115} ry={41.17} fill=\"#f14f9b\" />\n                                <Path\n                                    d=\"M925.525 496.312c-45.853 0-85.627 9.645-105.389 23.272-11.22 7.737-16.547 17.689-16.547 26.999 0 9.311 5.327 19.262 16.547 26.999 19.762 13.627 59.536 23.272 105.389 23.272 45.852 0 85.625-9.645 105.385-23.272 11.22-7.737 16.55-17.688 16.55-26.999 0-9.31-5.33-19.262-16.55-26.999-19.76-13.627-59.533-23.272-105.385-23.272zm0 9.101c63.534 0 115.115 18.448 115.115 41.17s-51.581 41.17-115.115 41.17c-63.534 0-115.116-18.448-115.116-41.17s51.582-41.17 115.116-41.17z\"\n                                    fill=\"#0e0f23\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M11345.5 4849.24c37.3 20.18 78.8 24.3 118.1 24.29 39.4-.02 87.8-6.02 118.1-24.29\"\n                                fill=\"none\"\n                                stroke=\"#fff\"\n                                strokeWidth={2.09}\n                                strokeLinejoin=\"round\"\n                                strokeDasharray=\"4.17,4.17,52.17,52.17\"\n                                transform=\"matrix(.79239 -.24213 .49524 .38754 6562.684 10128.433)\"\n                            />\n                        </G>\n                        <G>\n                            <Path\n                                d=\"M5418.56 4898.33l-235.09-511.69c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l235.1 511.69-8.29 3.81z\"\n                                fill=\"#fff\"\n                                stroke=\"#fff\"\n                                strokeWidth={6.24}\n                                strokeLinejoin=\"round\"\n                                transform=\"matrix(1.90515 .51142 -1.04584 .93162 12852.245 2495.218)\"\n                            />\n                            <Path\n                                fill=\"#f9f9f9\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.69}\n                                strokeLinejoin=\"round\"\n                                d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                                transform=\"matrix(-1.35299 -.0473 .0651 -.44537 18433.904 11299.374)\"\n                            />\n                            <Path\n                                d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                                fill=\"#f9f9f9\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.69}\n                                strokeLinejoin=\"round\"\n                                transform=\"matrix(-1.35299 -.0473 .1055 -.72168 18279.407 12356.306)\"\n                            />\n                            <Path\n                                fill=\"#f9f9f9\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.73}\n                                strokeLinejoin=\"round\"\n                                d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                                transform=\"matrix(-1.35299 -.0473 .06345 -.43408 18440.216 11256.194)\"\n                            />\n                            <Path\n                                fill=\"#f9f9f9\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.77}\n                                strokeLinejoin=\"round\"\n                                d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                                transform=\"matrix(-1.35299 -.0473 .06174 -.42236 18446.77 11211.364)\"\n                            />\n                            <Path\n                                fill=\"#fa52a0\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.81}\n                                strokeLinejoin=\"round\"\n                                d=\"M423.791 3204.63h14.614v1101.41h-14.614z\"\n                                transform=\"matrix(-1.35299 -.0473 .06 -.41046 18453.418 11165.869)\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path fill=\"#fff\" fillOpacity={0.4} d=\"M16968.732 8697.914h2273.376v1111.677h-2273.376z\" />\n                    </G>\n                    <G>\n                        <Path\n                            fill=\"url(#prefix___Radial24)\"\n                            d=\"M22952.2 8435.28h1429.52v707.246H22952.2z\"\n                            transform=\"matrix(1.59031 0 0 1.57184 -19532.4 -4560.99)\"\n                        />\n                    </G>\n                </G>\n            </G>\n            <Defs>\n                <LinearGradient\n                    id=\"prefix___Linear2\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(1323.868) rotate(-48.234 5.87 -2.209)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear3\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2019.98) rotate(-48.234 3.706 -1.203)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear4\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2173.61) rotate(-48.234 3.415 -1.068)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear5\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 7345.403 -2188.287) scale(2362.04)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear6\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(982.411) rotate(-48.234 8.054 -3.223)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear7\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8019.154 -3350.118) scale(723.304)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear8\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8033.639 -3375.117) scale(688.047)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear9\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(656.966) rotate(-48.234 12.248 -5.171)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear10\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(569.632) rotate(-48.234 14.189 -6.072)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear11\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8109.595 -3506.09) scale(503.321)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <RadialGradient\n                    id=\"prefix___Radial24\"\n                    cx={0}\n                    cy={0}\n                    r={1}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"matrix(778.647 -360.127 670.211 418.392 23603 8795.41)\">\n                    <Stop offset={0} stopColor=\"#fff\" stopOpacity={0} />\n                    <Stop offset={1} stopColor=\"#fff\" />\n                </RadialGradient>\n            </Defs>\n        </Svg>\n    );\n}\n\nexport default SvgBackgroundLight;\n","import React, { useContext } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport SvgBackgroundDark from \"./svg/SvgBackgroundDark\";\nimport SvgBackgroundLight from \"./svg/SvgBackgroundLight\";\n\nconst BackgroundImage = ({ style }: { style?: ViewStyle }) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background } = useColors();\n    const props = {\n        width: 1920,\n        height: 1920\n    };\n    return (\n        <View\n            style={[\n                {\n                    position: \"absolute\",\n                    width: \"100%\",\n                    aspectRatio: 1,\n                    backgroundColor: background\n                },\n                style\n            ]}>\n            <View style={{ marginTop: -400, marginLeft: -1000, alignSelf: \"center\" }}>\n                {darkMode ? <SvgBackgroundDark {...props} /> : <SvgBackgroundLight {...props} />}\n            </View>\n        </View>\n    );\n};\n\nexport default BackgroundImage;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { StatusBar } from \"expo-status-bar\";\n\nimport { HEADER_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\n\nconst AppHeader = () => {\n    const { background } = useColors();\n    return (\n        <View\n            style={{\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                backgroundColor: background\n            }}>\n            <StatusBar translucent={false} backgroundColor={background} />\n        </View>\n    );\n};\n\nexport default AppHeader;\n","import React, { useContext } from \"react\";\nimport { Image, View } from \"react-native\";\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport Button from \"../Button\";\n\nconst ConnectWallet = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const metaMask = window.ethereum?.isMetaMask || false;\n    const source = metaMask\n        ? darkMode\n            ? require(\"../../../assets/metamask-dark.png\")\n            : require(\"../../../assets/metamask.png\")\n        : require(\"../../../assets/sushiswap.jpg\");\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <Image\n                source={source}\n                style={{ width: metaMask ? 223 : 200, height: metaMask ? 183 : 200, marginBottom: Spacing.normal }}\n            />\n            {window.ethereum && <ConnectButton />}\n            <WalletConnectButton />\n        </View>\n    );\n};\n\nconst ConnectButton = () => {\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        if (window.ethereum) {\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\n            setEthereum(window.ethereum);\n        } else {\n            alert(\"No ethereum provider found.\");\n        }\n    };\n    const metaMask = window.ethereum?.isMetaMask || false;\n    return (\n        <Button\n            size={\"large\"}\n            color={metaMask ? \"#e2761b\" : primary}\n            onPress={onPress}\n            title={metaMask ? \"MetaMask\" : \"Connect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nconst WalletConnectButton = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        const ethereum = new WalletConnectProvider({\n            rpc: {\n                1: \"https://eth-mainnet.alchemyapi.io/v2/fF51JjrwO8qCZW13KRflYpqU_ZeOH1Er\"\n            }\n        });\n        await ethereum.enable();\n        // @ts-ignore\n        setEthereum(ethereum);\n    };\n    return (\n        <Button\n            size={\"large\"}\n            type={\"outline\"}\n            color={darkMode ? \"white\" : primary}\n            onPress={onPress}\n            title={\"WalletConnect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nexport default ConnectWallet;\n","import React, { useContext } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport AppHeader from \"../components/app/AppHeader\";\nimport Text from \"../components/Text\";\nimport ConnectToWallet from \"../components/web/ConnectToWallet\";\nimport { HEADER_HEIGHT } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\n\nconst Screen = props => {\n    return Platform.select({\n        web: <WebScreen {...props} />,\n        default: <AppScreen {...props} />\n    });\n};\n\nconst WebScreen = props => {\n    const { address, chainId } = useContext(EthersContext);\n    if (!address) return <ConnectToWallet />;\n    if (chainId !== 1)\n        return (\n            <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n                <Text light={true} style={{ textAlign: \"center\" }}>\n                    {\"Please switch network to\\n'Ethereum Mainnet'\"}\n                </Text>\n            </View>\n        );\n    return (\n        <View\n            {...props}\n            style={[{ position: \"absolute\", top: HEADER_HEIGHT, right: 0, bottom: 0, left: 0 }, props.style]}\n        />\n    );\n};\n\nconst AppScreen = props => (\n    <View style={{ width: \"100%\", height: \"100%\" }}>\n        <AppHeader />\n        <View {...props} style={[{ flex: 1 }, props.style]} />\n    </View>\n);\n\nexport default Screen;\n","import { useCallback } from \"react\";\n\nimport { ChainId, Currency, ETHER, Fetcher, Pair, Token, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\n\nconst WBTC = new Token(ChainId.MAINNET, \"0x2260fac5e5542a773aa44fbcfedf7c193bc2c599\", 8, \"WBTC\", \"Wrapped BTC\");\nconst DAI = new Token(ChainId.MAINNET, \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", 18, \"DAI\", \"Dai Stablecoin\");\nconst USDC = new Token(ChainId.MAINNET, \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\", 6, \"USDC\", \"USD//C\");\nconst USDT = new Token(ChainId.MAINNET, \"0xdAC17F958D2ee523a2206206994597C13D831ec7\", 6, \"USDT\", \"Tether USD\");\nconst SUSHI = new Token(ChainId.MAINNET, \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\", 18, \"SUSHI\", \"SushiToken\");\nconst YAM = new Token(ChainId.MAINNET, \"0x0e2298E3B3390e3b945a5456fBf59eCc3f55DA16\", 18, \"YAM\", \"YAM\");\nconst AMPL = new Token(ChainId.MAINNET, \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\", 9, \"AMPL\", \"Ampleforth\");\n\nconst BASES_TO_CHECK_TRADES_AGAINST = [WETH[ChainId.MAINNET], WBTC, DAI, USDC, USDT, SUSHI, YAM];\nconst CUSTOM_BASES = {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET], WBTC]\n};\n\nfunction wrappedCurrency(currency: Currency | undefined): Token | undefined {\n    return currency === ETHER ? WETH[ChainId.MAINNET] : currency instanceof Token ? currency : undefined;\n}\n\n// Source: https://github.com/Uniswap/uniswap-interface/blob/master/src/hooks/Trades.ts\nconst useAllCommonPairs = () => {\n    const loadAllCommonPairs = useCallback(\n        // tslint:disable-next-line:max-func-body-length\n        async (currencyA?: Currency, currencyB?: Currency, provider?: ethers.providers.BaseProvider) => {\n            const bases: Token[] = BASES_TO_CHECK_TRADES_AGAINST;\n            const [tokenA, tokenB] = [wrappedCurrency(currencyA), wrappedCurrency(currencyB)];\n            const basePairs: [Token, Token][] = bases\n                .flatMap((base): [Token, Token][] => bases.map(otherBase => [base, otherBase]))\n                .filter(([t0, t1]) => t0.address !== t1.address);\n\n            const allPairCombinations =\n                tokenA && tokenB\n                    ? [\n                          // the direct pair\n                          [tokenA, tokenB],\n                          // token A against all bases\n                          ...bases.map((base): [Token, Token] => [tokenA, base]),\n                          // token B against all bases\n                          ...bases.map((base): [Token, Token] => [tokenB, base]),\n                          // each base against all bases\n                          ...basePairs\n                      ]\n                          .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n                          .filter(([t0, t1]) => t0.address !== t1.address)\n                          .filter(([a, b]) => {\n                              const customBases = CUSTOM_BASES;\n                              if (!customBases) return true;\n\n                              const customBasesA: Token[] | undefined = customBases[a.address];\n                              const customBasesB: Token[] | undefined = customBases[b.address];\n\n                              if (!customBasesA && !customBasesB) return true;\n\n                              if (customBasesA && !customBasesA.find(base => tokenB.equals(base))) return false;\n                              return !(customBasesB && !customBasesB.find(base => tokenA.equals(base)));\n                          })\n                    : [];\n\n            const pairs = await Promise.all(\n                allPairCombinations.map(async pair => {\n                    try {\n                        return await Fetcher.fetchPairData(pair[0], pair[1], provider);\n                    } catch (e) {\n                        return null;\n                    }\n                })\n            );\n            return pairs.filter(pair => pair !== null) as Pair[];\n        },\n        []\n    );\n\n    return { loadAllCommonPairs };\n};\n\nexport default useAllCommonPairs;\n","import { useCallback, useContext } from \"react\";\n\nimport { Currency, CurrencyAmount, Fetcher, Pair, TokenAmount, Trade } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { convertToken, isETH } from \"../utils\";\nimport useAllCommonPairs from \"./useAllCommonPairs\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSDK = () => {\n    const { getTotalSupply } = useContext(EthersContext);\n    const { loadAllCommonPairs } = useAllCommonPairs();\n\n    const getTrade = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider\n        ) => {\n            if (provider) {\n                const eth = isETH(fromToken);\n                const from = convertToken(fromToken);\n                const to = isETH(toToken) ? Currency.ETHER : convertToken(toToken);\n                const pairs = await loadAllCommonPairs(from, to, provider);\n                const amount = eth\n                    ? CurrencyAmount.ether(fromAmount.toString())\n                    : new TokenAmount(from, fromAmount.toString());\n                return Trade.bestTradeExactIn(pairs, amount, to, { maxHops: 3, maxNumResults: 1 })[0];\n            }\n        },\n        []\n    );\n\n    const getPair = useCallback(async (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => {\n        const from = convertToken(fromToken);\n        const to = convertToken(toToken);\n        return await Fetcher.fetchPairData(from, to, provider);\n    }, []);\n\n    const calculateAmountOfLPTokenMinted = async (pair: Pair, fromAmount: TokenAmount, toAmount: TokenAmount) => {\n        const totalSupply = await getTotalSupply(pair.liquidityToken.address);\n        if (totalSupply) {\n            const minted = pair.getLiquidityMinted(\n                new TokenAmount(pair.liquidityToken, totalSupply.toString()),\n                fromAmount,\n                toAmount\n            );\n            return ethers.BigNumber.from(minted.raw.toString());\n        }\n    };\n\n    return {\n        getTrade,\n        getPair,\n        calculateAmountOfLPTokenMinted\n    };\n};\n\nexport default useSDK;\n","import React, { FC } from \"react\";\nimport { View } from \"react-native\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_WIDTH, IS_DESKTOP, Spacing, SUB_MENU_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebSubMenuItem {\n    title: string;\n    path: string;\n}\n\nexport interface WebSubMenuProps {\n    items: WebSubMenuItem[];\n}\n\nexport const SwapSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"New Order\",\n                path: \"/swap\"\n            },\n            {\n                title: \"My Orders\",\n                path: \"/swap/my-orders\"\n            }\n        ]}\n    />\n);\n\nexport const LiquiditySubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Add Liquidity\",\n                path: \"/liquidity\"\n            },\n            {\n                title: \"Remove Liquidity\",\n                path: \"/liquidity/remove\"\n            }\n        ]}\n    />\n);\n\nexport const MigrateSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Migrate Liquidity\",\n                path: \"/migrate\"\n            }\n        ]}\n    />\n);\n\nexport const StakingSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Stake\",\n                path: \"/staking\"\n            },\n            {\n                title: \"Unstake\",\n                path: \"/staking/unstake\"\n            }\n        ]}\n    />\n);\n\nexport const FarmingSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Plant LP Tokens\",\n                path: \"/farming\"\n            },\n            {\n                title: \"Harvest SUSHI\",\n                path: \"/farming/harvest\"\n            }\n        ]}\n    />\n);\n\nconst WebSubMenu: FC<WebSubMenuProps> = props => {\n    const { submenu } = useColors();\n    return (\n        <View\n            style={{\n                position: \"absolute\",\n                top: 0,\n                height: SUB_MENU_HEIGHT,\n                width: \"100%\",\n                backgroundColor: submenu\n            }}>\n            <FlexView\n                style={{\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    marginTop: 2,\n                    paddingHorizontal: Spacing.normal,\n                    alignSelf: \"center\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\"\n                }}>\n                {props.items.map(item => (\n                    <MenuItem key={item.path} {...item} />\n                ))}\n            </FlexView>\n        </View>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { accent, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.isExact;\n    return (\n        <Link\n            to={path}\n            style={{\n                marginLeft: Spacing.small,\n                paddingTop: Spacing.tiny,\n                paddingBottom: Spacing.tiny,\n                textDecoration: \"none\"\n            }}>\n            <Text\n                fontWeight={active ? \"regular\" : \"light\"}\n                style={{\n                    fontSize: 13,\n                    color: active ? accent : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nexport default WebSubMenu;\n","import { useCallback } from \"react\";\n\nimport { Percent, Router, Trade } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { ROUTER } from \"../constants/contracts\";\nimport Token from \"../types/Token\";\nimport { deduct, getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\n\nexport const FEE = new Percent(\"3\", \"1000\"); // 0.3%\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapRouter = () => {\n    const allowedSlippage = new Percent(\"50\", \"10000\"); // 0.05%\n    const ttl = 60 * 20;\n\n    const swap = useCallback(async (trade: Trade, signer: ethers.Signer) => {\n        if (trade) {\n            const params = Router.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                allowedSlippage,\n                recipient: await signer.getAddress(),\n                ttl\n            });\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const gasLimit = await router.estimateGas[params.methodName](...params.args, {\n                value: params.value\n            });\n            const tx = await router.functions[params.methodName](...params.args, {\n                value: params.value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            await logTransaction(\n                tx,\n                \"UniswapV2Router02.\" + params.methodName + \"()\",\n                ...params.args.map(arg => arg.toString())\n            );\n            return {\n                trade,\n                tx\n            };\n        }\n    }, []);\n\n    const addLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                fromAmount,\n                toAmount,\n                deduct(fromAmount, allowedSlippage),\n                deduct(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidity(...args);\n            const tx = await router.functions.addLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidityETH = useCallback(\n        async (\n            token: Token,\n            liquidity: ethers.BigNumber,\n            amount: ethers.BigNumber,\n            amountETH: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                liquidity,\n                deduct(amount, allowedSlippage),\n                deduct(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidityETH(...args);\n            const tx = await router.functions.removeLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            liquidity: ethers.BigNumber,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                liquidity,\n                deduct(fromAmount, allowedSlippage),\n                deduct(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidity(...args);\n            const tx = await router.functions.removeLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const addLiquidityETH = useCallback(\n        async (token: Token, amount: ethers.BigNumber, amountETH: ethers.BigNumber, signer: ethers.Signer) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                amount,\n                deduct(amount, allowedSlippage),\n                deduct(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidityETH(...args, {\n                value: amountETH\n            });\n            const tx = await router.functions.addLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100),\n                value: amountETH\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const calculateSwapFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(3).div(1000);\n    };\n\n    return {\n        allowedSlippage,\n        ttl,\n        swap,\n        addLiquidity,\n        addLiquidityETH,\n        removeLiquidity,\n        removeLiquidityETH,\n        calculateSwapFee\n    };\n};\n\nexport default useSwapRouter;\n","import { useCallback } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport { ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport Token from \"../types/Token\";\nimport { getContract, pow10 } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport useSwapRouter from \"./useSwapRouter\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSettlement = () => {\n    const { calculateSwapFee } = useSwapRouter();\n\n    const createOrder = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            amountIn: ethers.BigNumber,\n            amountOutMin: ethers.BigNumber,\n            signer: ethers.Signer,\n            kovanSigner: ethers.Signer\n        ) => {\n            const order = new Order(signer, fromToken, toToken, amountIn, amountOutMin, await signer.getAddress());\n            const args = await order.toArgs();\n\n            const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n            const gasLimit = await orderBook.estimateGas.createOrder(args);\n            const tx = await orderBook.createOrder(args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return await logTransaction(tx, \"OrderBook.createOrder()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const cancelOrder = useCallback(async (order: Order, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const args = (await order.toArgs()).slice(0, 7);\n        const gasLimit = await settlement.estimateGas.cancelOrder(...args);\n        const tx = await settlement.cancelOrder(...args, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return await logTransaction(tx, \"Settlement.cancelOrder()\", ...args.map(arg => arg.toString()));\n    }, []);\n\n    const queryOrderFilledEvents = useCallback(async (hash: string, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const filter = settlement.filters.OrderFilled(hash);\n        return await settlement.queryFilter(filter);\n    }, []);\n\n    const calculateLimitOrderFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(2).div(1000);\n    };\n\n    const calculateLimitOrderReturn = (\n        fromToken: Token,\n        toToken: Token,\n        fromAmount: ethers.BigNumber,\n        price: string\n    ) => {\n        const limitOrderFeeDeducted = fromAmount.sub(calculateLimitOrderFee(fromAmount));\n        const swapFeeDeducted = limitOrderFeeDeducted.sub(calculateSwapFee(limitOrderFeeDeducted));\n        const fraction = Fraction.parse(price);\n        return swapFeeDeducted\n            .mul(pow10(toToken.decimals))\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .div(pow10(fromToken.decimals));\n    };\n\n    return { createOrder, cancelOrder, queryOrderFilledEvents, calculateLimitOrderFee, calculateLimitOrderReturn };\n};\n\nexport type OrderStatus = \"Open\" | \"Expired\" | \"Filled\" | \"Canceled\";\n\nexport class Order {\n    maker: ethers.Signer;\n    fromToken: Token;\n    toToken: Token;\n    amountIn: ethers.BigNumber;\n    amountOutMin: ethers.BigNumber;\n    recipient: string;\n    deadline: ethers.BigNumber;\n    v?: number;\n    r?: string;\n    s?: string;\n    filledAmountIn?: ethers.BigNumber;\n    canceled?: boolean;\n\n    constructor(\n        maker: ethers.Signer,\n        fromToken: Token,\n        toToken: Token,\n        amountIn: ethers.BigNumber,\n        amountOutMin: ethers.BigNumber,\n        recipient: string,\n        deadline = ethers.BigNumber.from(Math.floor(Date.now() / 1000 + 24 * 3600)),\n        v?: number,\n        r?: string,\n        s?: string,\n        filledAmountIn?: ethers.BigNumber,\n        canceled?: boolean\n    ) {\n        this.maker = maker;\n        this.fromToken = fromToken;\n        this.toToken = toToken;\n        this.amountIn = amountIn;\n        this.amountOutMin = amountOutMin;\n        this.recipient = recipient;\n        this.deadline = deadline;\n        this.v = v;\n        this.r = r;\n        this.s = s;\n        this.filledAmountIn = filledAmountIn;\n        this.canceled = canceled;\n    }\n\n    status(): OrderStatus {\n        return this.canceled\n            ? \"Canceled\"\n            : this.filledAmountIn?.eq(this.amountIn)\n            ? \"Filled\"\n            : this.deadline.toNumber() * 1000 < Date.now()\n            ? \"Expired\"\n            : \"Open\";\n    }\n\n    async hash() {\n        const settlement = await getContract(\"Settlement\", SETTLEMENT, this.maker);\n        return await settlement.hashOfOrder(\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline\n        );\n    }\n\n    async sign() {\n        const hash = await this.hash();\n        const signature = await this.maker.signMessage(ethers.utils.arrayify(hash));\n        return ethers.utils.splitSignature(signature);\n    }\n\n    async toArgs() {\n        const { v, r, s } = this.v && this.r && this.s ? { v: this.v, r: this.r, s: this.s } : await this.sign();\n        return [\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline,\n            v,\n            r,\n            s\n        ];\n    }\n}\n\nexport default useSettlement;\n","export const Colors = {\n    common: {\n        white: \"#ffffff\",\n        transparent: \"#ffffff00\",\n        primary: \"#FA52A0\",\n        secondary: \"#27B0E6\",\n        green: \"#32CD32\",\n        red: \"#FF0000\",\n        twitter: \"#1da1f2\",\n        facebook: \"#3B5998\"\n    },\n    light: {\n        accent: \"#FA52A0\",\n        header: \"#ffffffb8\",\n        submenu: \"#ffffff80\",\n        background: \"#ffffff\",\n        backgroundLight: \"#f0f0f0\",\n        border: \"#e5e5e5\",\n        borderDark: \"#cccccc\",\n        textDark: \"#1d1d1f\",\n        textMedium: \"#222222\",\n        textLight: \"#888888\",\n        disabled: \"#b4b4b4\",\n        shadow: \"#444444\",\n        placeholder: \"#b4b4b4\",\n        overlay: \"#ffffffc0\"\n    },\n    dark: {\n        accent: \"#27B0E6\",\n        header: \"#0D0E20\",\n        submenu: \"#00000020\",\n        background: \"#0e0f23\",\n        backgroundLight: \"#0D0E20\",\n        border: \"#ffffff33\",\n        borderDark: \"#666666\",\n        textDark: \"#d5d1cc\",\n        textMedium: \"#cccccc\",\n        textLight: \"#aaaaaa\",\n        disabled: \"#aaaaaa80\",\n        shadow: \"#03080c\",\n        placeholder: \"#666666\",\n        overlay: \"#000000c0\"\n    }\n};\n","import { useContext } from \"react\";\n\nimport { Colors } from \"../constants/colors\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useColors = () => {\n    const { darkMode } = useContext(GlobalContext);\n    return {\n        ...Colors[darkMode ? \"dark\" : \"light\"],\n        ...Colors.common\n    };\n};\n\nexport default useColors;\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport * as Analytics from \"expo-firebase-analytics\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport sushiData from \"@sushiswap/sushi-data\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport useSDK from \"../hooks/useSDK\";\nimport Ethereum from \"../types/Ethereum\";\nimport Token from \"../types/Token\";\nimport TokenWithValue from \"../types/TokenWithValue\";\nimport { getContract, isWETH } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport { fetchTokens, fetchTokenWithValue } from \"../utils/fetch-utils\";\n\nexport type OnBlockListener = (block?: number) => void | Promise<void>;\n\nconst PRIVATE_KEY = \"0xca417c154948d370f011c5d9ac3fba516d7b15671a069e7d5d48f56b723c9cc1\";\nexport const ALCHEMY_PROVIDER = new ethers.providers.AlchemyProvider(\n    1,\n    __DEV__ ? process.env.MAINNET_API_KEY : \"DgnfFsj5PXR37FkOmUVJ9GtfDsKws446\"\n);\nconst KOVAN_PROVIDER = new ethers.providers.AlchemyProvider(\n    42,\n    __DEV__ ? process.env.KOVAN_API_KEY : \"8a03ORJJcIv8YA49M-cIxg-mBEMJYe0J\"\n);\n\nexport const EthersContext = React.createContext({\n    ethereum: undefined as Ethereum | undefined,\n    setEthereum: (_ethereum: Ethereum | undefined) => {},\n    provider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    signer: undefined as ethers.providers.JsonRpcSigner | undefined,\n    kovanSigner: undefined as ethers.Signer | undefined,\n    chainId: 0,\n    address: null as string | null,\n    ensName: null as string | null,\n    addOnBlockListener: (_name: string, _listener: OnBlockListener) => {},\n    removeOnBlockListener: (_name: string) => {},\n    tokens: [ETH] as TokenWithValue[],\n    updateTokens: async () => {},\n    loadingTokens: false,\n    customTokens: [ETH] as Token[],\n    addCustomToken: (_token: Token) => {},\n    removeCustomToken: (_token: Token) => {},\n    approveToken: async (_token: string, _spender: string, _amount?: ethers.BigNumber) => {\n        return {} as ethers.providers.TransactionResponse | undefined;\n    },\n    getTokenAllowance: async (_token: string, _spender: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTokenBalance: async (_token: string, _who: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTotalSupply: async (_token: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    }\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const EthersContextProvider = ({ children }) => {\n    const { getPair } = useSDK();\n    const [ethereum, setEthereum] = useState<Ethereum | undefined>(window.ethereum);\n    const [provider, setProvider] = useState<ethers.providers.JsonRpcProvider>();\n    const [signer, setSigner] = useState<ethers.providers.JsonRpcSigner>();\n    const [kovanSigner, setKovanSigner] = useState<ethers.Signer>();\n    const [chainId, setChainId] = useState<number>(1);\n    const [address, setAddress] = useState<string | null>(null);\n    const [ensName, setENSName] = useState<string | null>(null);\n    const [onBlockListeners, setOnBlockListeners] = useState<{ [name: string]: OnBlockListener }>({});\n    const [tokens, setTokens] = useState<TokenWithValue[]>([]);\n    const [customTokens, setCustomTokens] = useState<Token[]>([]);\n    const [loadingTokens, setLoadingTokens] = useState(true);\n\n    useEffect(() => {\n        // Kovan\n        setKovanSigner(new ethers.Wallet(PRIVATE_KEY, KOVAN_PROVIDER));\n    }, [KOVAN_PROVIDER]);\n\n    useAsyncEffect(async () => {\n        // Mainnet\n        if (ethereum) {\n            const web3 = new ethers.providers.Web3Provider(ethereum);\n            const web3Signer = await web3.getSigner();\n            setProvider(ethereum.isMetaMask ? web3Signer.provider : ALCHEMY_PROVIDER);\n            setSigner(web3Signer);\n        }\n    }, [ethereum]);\n\n    useEffect(() => {\n        if (ethereum) {\n            const onAccountsChanged = async () => {\n                const accounts = await ethereum.request({ method: \"eth_accounts\" });\n                if (accounts?.[0]) {\n                    setAddress(accounts[0]);\n                    Analytics.setUserId(accounts[0]);\n                } else {\n                    setAddress(null);\n                }\n            };\n            const onChainChanged = async () => {\n                setChainId(Number(await ethereum.request({ method: \"eth_chainId\" })));\n            };\n            const onDisconnect = () => {\n                setAddress(null);\n                setEthereum(undefined);\n            };\n            onAccountsChanged();\n            onChainChanged();\n            ethereum.on(\"accountsChanged\", onAccountsChanged);\n            ethereum.on(\"chainChanged\", onChainChanged);\n            ethereum.on(\"disconnect\", onDisconnect);\n            return () => {\n                ethereum.off(\"accountsChanged\", onAccountsChanged);\n                ethereum.off(\"chainChanged\", onAccountsChanged);\n                ethereum.off(\"disconnect\", onDisconnect);\n            };\n        }\n    }, [ethereum]);\n\n    useAsyncEffect(async () => {\n        if (provider && address) {\n            const ens = await provider.lookupAddress(address);\n            setENSName(ens);\n        }\n    }, [provider, address]);\n\n    const updateTokens = async () => {\n        if (address && customTokens) {\n            try {\n                const list = await fetchTokens(address, customTokens);\n                const weth = list.find(t => isWETH(t));\n                if (list?.length > 0 && weth && provider) {\n                    const wethPriceUSD = Fraction.parse(String(await sushiData.weth.price()));\n                    setTokens(\n                        await Promise.all(\n                            list.map(\n                                async token => await fetchTokenWithValue(token, weth, wethPriceUSD, getPair, provider)\n                            )\n                        )\n                    );\n                }\n            } finally {\n                setLoadingTokens(false);\n            }\n        }\n    };\n\n    useAsyncEffect(async () => {\n        setCustomTokens(JSON.parse((await AsyncStorage.getItem(\"custom_tokens\")) || \"[]\"));\n    }, []);\n\n    useAsyncEffect(async () => {\n        if (address && customTokens) {\n            setLoadingTokens(true);\n            await updateTokens();\n        }\n    }, [address, customTokens]);\n\n    const addCustomToken = useCallback(\n        async (token: Token) => {\n            if (\n                customTokens.findIndex(t => t.address === token.address) === -1 &&\n                tokens.findIndex(t => t.address === token.address) === -1\n            ) {\n                const custom = [...customTokens, token];\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [tokens, customTokens]\n    );\n\n    const removeCustomToken = useCallback(\n        async (token: Token) => {\n            if (customTokens.findIndex(t => t.address === token.address) !== -1) {\n                const custom = customTokens.filter(t => t.address !== token.address);\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [customTokens]\n    );\n\n    const approveToken = useCallback(\n        async (token: string, spender: string, amount?: ethers.BigNumber) => {\n            if (signer) {\n                amount = amount || ethers.constants.MaxUint256;\n                const erc20 = getContract(\"ERC20\", token, signer);\n                const gasLimit = await erc20.estimateGas.approve(spender, amount);\n                const tx = await erc20.approve(spender, amount, {\n                    gasLimit\n                });\n                return await logTransaction(tx, \"ERC20.approve()\", spender, amount.toString());\n            }\n        },\n        [signer]\n    );\n\n    const getTokenAllowance = useCallback(\n        async (token: string, spender: string) => {\n            if (provider && address) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return erc20.allowance(address, spender);\n            }\n        },\n        [provider, address]\n    );\n\n    const getTokenBalance = useCallback(\n        async (token: string, who: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.balanceOf(who);\n            }\n        },\n        [provider]\n    );\n\n    const getTotalSupply = useCallback(\n        async (token: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.totalSupply();\n            }\n        },\n        [provider]\n    );\n\n    const addOnBlockListener = useCallback(\n        (name, listener) => {\n            setOnBlockListeners(old => ({ ...old, [name]: listener }));\n        },\n        [setOnBlockListeners]\n    );\n\n    const removeOnBlockListener = useCallback(\n        name => {\n            setOnBlockListeners(old => {\n                delete old[name];\n                return old;\n            });\n        },\n        [setOnBlockListeners]\n    );\n\n    useEffect(() => {\n        if (provider && chainId === 1) {\n            const onBlock = async (block: number) => {\n                for (const listener of Object.entries(onBlockListeners)) {\n                    await listener[1]?.(block);\n                }\n            };\n            provider.on(\"block\", onBlock);\n            return () => {\n                provider.off(\"block\", onBlock);\n            };\n        }\n    }, [provider, chainId, onBlockListeners]);\n\n    return (\n        <EthersContext.Provider\n            value={{\n                ethereum,\n                setEthereum,\n                provider,\n                signer,\n                kovanSigner,\n                chainId,\n                address,\n                ensName,\n                tokens,\n                updateTokens,\n                loadingTokens,\n                customTokens,\n                addCustomToken,\n                removeCustomToken,\n                approveToken,\n                getTokenAllowance,\n                getTokenBalance,\n                getTotalSupply,\n                addOnBlockListener,\n                removeOnBlockListener\n            }}>\n            {children}\n        </EthersContext.Provider>\n    );\n};\n\nexport const EthersContextConsumer = EthersContext.Consumer;\n","import React, { useState } from \"react\";\nimport { useColorScheme } from \"react-native-appearance\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nexport const GlobalContext = React.createContext({\n    load: async () => {},\n    clear: async () => {},\n    darkMode: false,\n    setDarkMode: async _darkMode => {},\n    mnemonic: \"\",\n    setMnemonic: (_mnemonic: string) => {}\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const GlobalContextProvider = ({ children }) => {\n    const colorScheme = useColorScheme();\n    const [darkMode, setDarkMode] = useState(colorScheme === \"dark\");\n    const [mnemonic, setMnemonic] = useState(\"\");\n    return (\n        <GlobalContext.Provider\n            value={{\n                load: async () => {\n                    const mode = await AsyncStorage.getItem(\"dark_mode\");\n                    setDarkMode(mode === \"true\");\n                    const mne = await AsyncStorage.getItem(\"mnemonic\");\n                    if (mne) {\n                        setMnemonic(mne);\n                    }\n                },\n                clear: async () => {\n                    setDarkMode(false);\n                    await AsyncStorage.removeItem(\"dark_mode\");\n                    await AsyncStorage.removeItem(\"mnemonic\");\n                },\n                darkMode,\n                setDarkMode: async (mode: boolean) => {\n                    await AsyncStorage.setItem(\"dark_mode\", String(mode));\n                    setDarkMode(mode);\n                },\n                mnemonic,\n                setMnemonic: async (mne: string) => {\n                    await AsyncStorage.setItem(\"mnemonic\", mne);\n                    setMnemonic(mne);\n                }\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const GlobalContextConsumer = GlobalContext.Consumer;\n","import OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\n\n// export const UNISWAP_ROUTER = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nexport const SUSHISWAP_ROUTER = \"0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\";\nexport const ROUTER = SUSHISWAP_ROUTER;\nexport const MASTER_CHEF = \"0xc2edad668740f1aa35e4d8f227fb8e17dca888cd\";\nexport const SUSHI_BAR = \"0x8798249c2e607446efb7ad49ec89dd1865ff4272\";\nexport const SUSHI_ROLL = \"0x16E58463eb9792Bc236d8860F5BC69A81E26E32B\";\nexport const LP_TOKEN_SCANNER = \"0xD132Ce8eA8865348Ac25E416d95ab1Ba84D216AF\";\nexport const ZAP_IN = \"0xfF350eDc2242Ca4d7252A64746aec4A5487a852B\";\nexport const ZAP_OUT = \"0xf12CAB7Acaa14Eed3bEa82199ea2f5c2C2194B81\";\nexport const ORDER_BOOK = OrderBook.address;\nexport const SETTLEMENT = Settlement.address;\n","import React from \"react\";\n\nimport { EthersContextConsumer, EthersContextProvider } from \"./EthersContext\";\nimport { GlobalContextConsumer, GlobalContextProvider } from \"./GlobalContext\";\n\nexport const ContextProvider = ({ children }) => {\n    return (\n        <GlobalContextProvider>\n            <EthersContextProvider>{children}</EthersContextProvider>\n        </GlobalContextProvider>\n    );\n};\n\nexport const ContextConsumer = ({ children }) => {\n    return (\n        <GlobalContextConsumer>\n            {globalContext => (\n                <EthersContextConsumer>\n                    {ethersContext =>\n                        children({\n                            ...globalContext,\n                            ...ethersContext\n                        })\n                    }\n                </EthersContextConsumer>\n            )}\n        </GlobalContextConsumer>\n    );\n};\n","import * as React from \"react\";\nimport Svg, { Path, SvgProps } from \"react-native-svg\";\n\nfunction SvgMoon(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 520 520\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={2}\n            {...props}>\n            <Path fill=\"none\" d=\"M0 0h519.851v519.851H0z\" />\n            <Path\n                d=\"M248.7 44.15c-33.5 29.48-54.6 72.67-54.6 120.76 0 88.79 72 160.88 160.8 160.88 48.1 0 91.3-21.15 120.8-54.64-5.9 114.05-100.3 204.84-215.8 204.84-119.2 0-216.1-96.81-216.1-216.06C43.8 144.44 134.6 50 248.7 44.15z\"\n                fill=\"#fff\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgMoon;\n","import * as React from \"react\";\nimport Svg, { Circle, Path, SvgProps } from \"react-native-svg\";\n\nfunction SvgSun(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 520 520\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={2}\n            {...props}>\n            <Path fill=\"none\" d=\"M.056 0h519.851v519.851H.056z\" />\n            <Path\n                d=\"M260 476.13l-16.5-62.6a154.397 154.397 0 0032.9 0l-16.4 62.6zM342.7 459.67l-39.1-51.55c10.6-3.13 20.8-7.37 30.3-12.57l8.8 64.12zM186 395.55c9.6 5.23 19.7 9.47 30.4 12.57l-39.2 51.55 8.8-64.12zM412.8 412.8l-55.9-32.67c8.6-6.9 16.4-14.7 23.3-23.26l32.6 55.93zM139.8 356.87a156.5 156.5 0 0023.2 23.26l-55.9 32.67 32.7-55.93zM459.7 342.66l-64.1-8.77c5.2-9.56 9.5-19.72 12.6-30.37l51.5 39.14zM111.8 303.52c3.1 10.64 7.3 20.81 12.6 30.37l-64.2 8.77 51.6-39.14zM476.2 259.93l-62.6 16.43c.6-5.4.9-10.88.9-16.43 0-5.55-.3-11.04-.9-16.43l62.6 16.43zM106.4 243.5c-.6 5.39-.9 10.88-.9 16.43 0 5.55.3 11.03.9 16.43l-62.6-16.43 62.6-16.43zM408.2 216.33c-3.2-10.64-7.4-20.81-12.6-30.36l64.1-8.78-51.5 39.14zM124.4 185.97c-5.3 9.55-9.5 19.71-12.6 30.36l-51.6-39.14 64.2 8.78zM163 139.73c-8.5 6.9-16.3 14.69-23.2 23.25l-32.7-55.93 55.9 32.68zM380.2 162.98c-6.9-8.56-14.7-16.36-23.3-23.25l55.9-32.68-32.6 55.93zM333.9 124.3c-9.5-5.22-19.7-9.47-30.3-12.56l39.1-51.56-8.8 64.12zM216.4 111.74c-10.7 3.12-20.8 7.36-30.4 12.56l-8.8-64.12 39.2 51.56zM276.4 106.33c-5.4-.59-10.9-.88-16.4-.88-5.6 0-11.1.29-16.5.88l16.5-62.6 16.4 62.6z\"\n                fill=\"#FA52A0\"\n            />\n            <Circle\n                cx={26447}\n                cy={9542.46}\n                r={216.2}\n                fill=\"#FA52A0\"\n                transform=\"matrix(.5998 0 0 .5998 -15602.944 -5463.63)\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgSun;\n","import React, { useContext } from \"react\";\nimport { TouchableHighlight, View } from \"react-native\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport SvgMoon from \"./svg/SvgMoon\";\nimport SvgSun from \"./svg/SvgSun\";\n\nconst DarkModeSwitch = props => {\n    const { darkMode, setDarkMode } = useContext(GlobalContext);\n    const { overlay } = useColors();\n    const onPress = async () => {\n        await setDarkMode(!darkMode);\n    };\n    return (\n        <View style={props.style}>\n            <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={onPress}>\n                {darkMode ? (\n                    <SvgMoon width={24} height={24} style={{ margin: 3 }} />\n                ) : (\n                    <SvgSun width={30} height={30} />\n                )}\n            </TouchableHighlight>\n        </View>\n    );\n};\n\nexport default DarkModeSwitch;\n","import React, { useContext } from \"react\";\nimport { TouchableWithoutFeedback, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport Modal from \"modal-react-native-web\";\nimport { Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport useColors from \"../../hooks/useColors\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\n// tslint:disable-next-line:max-func-body-length\nconst MobileWebMenu = ({ expanded, onCollapse }) => {\n    const { overlay } = useColors();\n    return (\n        <Modal animationType=\"slide\" transparent={true} visible={expanded}>\n            <TouchableWithoutFeedback style={{ height: \"100%\" }} onPress={onCollapse}>\n                <View\n                    style={{\n                        height: \"100%\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"flex-end\",\n                        paddingRight: Spacing.normal,\n                        paddingBottom: Spacing.normal,\n                        backgroundColor: overlay\n                    }}>\n                    <View style={{ marginTop: Spacing.small }}>\n                        <CloseButton onPress={onCollapse} />\n                    </View>\n                    <View style={{ alignItems: \"flex-end\" }}>\n                        <DarkModeSwitch style={{ marginBottom: 4 }} />\n                        <Status />\n                        <View style={{ height: Spacing.large }} />\n                        <MobileWebMenuItem title={\"Home\"} path={\"/\"} />\n                        <MobileWebMenuItem title={\"Swap\"} path={\"/swap\"} />\n                        <MobileWebMenuItem title={\"Liquidity\"} path={\"/liquidity\"} />\n                        <MobileWebMenuItem title={\"Migrate\"} path={\"/migrate\"} />\n                        <MobileWebMenuItem title={\"Stake\"} path={\"/staking\"} />\n                        <MobileWebMenuItem title={\"Farm\"} path={\"/farming\"} />\n                    </View>\n                </View>\n            </TouchableWithoutFeedback>\n        </Modal>\n    );\n};\n\nconst CloseButton = ({ onPress }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={textDark} size={32} onPress={onPress} />;\n};\n\nconst MobileWebMenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ textDecoration: \"none\", marginBottom: Spacing.tiny }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 24,\n                    color: active ? textDark : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst Status = () => {\n    const { textLight, green, accent } = useColors();\n    const { ethereum, chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : \"Not connected\";\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        ethereum?.disconnect?.();\n    };\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.tiny }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginTop: 8 }} />\n                <Text style={{ fontSize: 18, color: textLight, marginLeft: 8 }}>{title}</Text>\n            </FlexView>\n            {ethereum?.isWalletConnect && (\n                <Text\n                    style={{\n                        fontFamily: \"regular\",\n                        fontSize: 15,\n                        color: accent,\n                        alignSelf: \"flex-end\"\n                    }}\n                    onPress={onPress}>\n                    Disconnect\n                </Text>\n            )}\n        </View>\n    );\n};\n\nexport default MobileWebMenu;\n","import * as React from \"react\";\n\n// tslint:disable-next-line:max-func-body-length\nfunction SvgLogoDark(props) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 518.93 99.15\" {...props}>\n            <defs>\n                <clipPath id=\"lite-logo-darkmode_svg__clip-path\">\n                    <path className=\"lite-logo-darkmode_svg__cls-1\" d=\"M0 0h110.78v99.15H0z\" />\n                </clipPath>\n                <style>{\".lite-logo-darkmode_svg__cls-1{fill:none}.lite-logo-darkmode_svg__cls-6{fill:#fff}\"}</style>\n            </defs>\n            <g id=\"lite-logo-darkmode_svg__Layer_2\" data-name=\"Layer 2\">\n                <g id=\"lite-logo-darkmode_svg__Layer_1-2\" data-name=\"Layer 1\">\n                    <g id=\"lite-logo-darkmode_svg__Artboard1\">\n                        <path className=\"lite-logo-darkmode_svg__cls-1\" d=\"M0 0h110.78v99.15H0z\" />\n                        <g clipPath=\"url(#lite-logo-darkmode_svg__clip-path)\">\n                            <path\n                                d=\"M31.65 15.14c5.46-7.63 24-3.71 41.41 8.74s27.06 28.76 21.59 36.39L77.9 83.63c-5.47 7.63-24 3.71-41.38-8.74S9.47 46.12 14.93 38.49z\"\n                                stroke=\"#fff\"\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                strokeWidth={5.51}\n                                fill=\"none\"\n                            />\n                            <path\n                                d=\"M30.5 14.3c2.39-3.39 7.11-4.9 13.21-4.4 8.38.69 19.51 5.16 30.16 12.82S92.36 39.46 95.7 47.18c2.44 5.59 2.52 10.54.08 13.93L79.07 84.46c-2.44 3.4-7.16 4.9-13.22 4.4-8.38-.69-19.51-5.16-30.2-12.81S17.16 59.31 13.82 51.59c-2.44-5.6-2.52-10.54-.08-13.93m15-16l-12.7 17.7c-1.9 2.64-1.51 6.64.41 11.08 3.19 7.36 10.7 16 20.89 23.28S58.1 85.34 66.09 86c4.83.4 8.69-.5 10.66-3.21l12.66-17.7a21.47 21.47 0 01-6.84.42c-8.38-.69-19.51-5.16-30.17-12.81S33.92 36 30.57 28.23a21.93 21.93 0 01-1.81-6.6zm64.7 37.81c1.93-2.71 1.57-6.65-.39-11.11-3.19-7.36-10.7-16-20.85-23.28S51.46 13.43 43.47 12.76c-4.87-.4-8.73.51-10.65 3.22l-.12.16c-1.81 2.71-1.42 6.58.47 11 3.22 7.36 10.7 16 20.88 23.28S74.82 62 82.8 62.65c4.76.4 8.57-.46 10.54-3l.12-.16zm-26-27.77c5.12 3.65 8.85 8 10.46 11.64.91 2.08 1.15 3.91.24 5.16s-2.71 1.62-5 1.44c-4-.33-9.32-2.51-14.4-6.17s-8.85-8-10.46-11.63c-.9-2.08-1.14-3.91-.24-5.17s2.72-1.62 5-1.43c4.04.3 9.31 2.46 14.42 6.13z\"\n                                fillRule=\"evenodd\"\n                                fill=\"#191919\"\n                            />\n                            <path\n                                d=\"M66.81 61.05L41.32 76.42c1.18.74 2.36 1.44 3.5 2.1L71 62.74c-1.4-.5-2.78-1.06-4.19-1.69zm-9.76-5.23L33 70.37c1.1.88 2.2 1.74 3.38 2.6L61 58.11c-1.35-.72-2.65-1.47-3.95-2.29zM52 52.4c-10.48-7.59-18.11-16.55-21.41-24.17a21.36 21.36 0 01-1.81-6.6l-12.71 17.7c-1.92 2.71-1.53 6.65.4 11.11 2.2 5.05 6.41 10.69 12.11 16.09zm41.49 7c1.93-2.71 1.57-6.65-.39-11.12-3.19-7.35-10.7-16-20.85-23.27S51.47 13.43 43.49 12.76c-4.88-.4-8.74.51-10.66 3.22l-.12.16c-1.81 2.7-1.42 6.57.47 11 3.23 7.36 10.7 16 20.89 23.28S74.83 62 82.81 62.65c4.76.4 8.58-.46 10.54-3l.12-.16zm-26-27.77c5.11 3.65 8.84 8 10.46 11.64.9 2.08 1.14 3.91.23 5.16s-2.71 1.62-5 1.44c-4-.33-9.32-2.51-14.4-6.17s-8.85-8-10.46-11.63c-.9-2.08-1.14-3.91-.23-5.17s2.71-1.62 4.95-1.43c4.05.37 9.32 2.53 14.44 6.2z\"\n                                fill=\"#fff\"\n                                fillRule=\"evenodd\"\n                            />\n                        </g>\n                    </g>\n                    <path\n                        className=\"lite-logo-darkmode_svg__cls-6\"\n                        d=\"M125.61 68.35c-8.73 0-15.54-4.33-15.83-12.53h10.51a4.65 4.65 0 005 4.62c2.89 0 4.74-1.45 4.74-3.81 0-7.51-20.28-3.47-20.17-17.85 0-7.69 6.3-12 14.79-12 8.84 0 14.79 4.39 15.19 12.13h-10.65c-.18-2.6-2-4.16-4.68-4.22-2.37 0-4.16 1.16-4.16 3.7 0 7 20 3.87 20 17.44.04 6.86-5.27 12.52-14.74 12.52zM178.3 68h-9.87v-4.44a11.75 11.75 0 01-9.76 4.73c-7.45 0-12.48-5.14-12.48-13.75V35.72H156v17.5c0 4.39 2.48 6.81 6.18 6.81s6.24-2.42 6.24-6.81v-17.5h9.87zM198.54 68.41c-8.61 0-14.38-4.8-14.84-11h9.76c.23 2.25 2.25 3.75 5 3.75 2.54 0 3.87-1.16 3.87-2.6 0-5.2-17.56-1.44-17.56-13.28 0-5.49 4.68-10 13.11-10s12.94 4.63 13.57 11h-9.15c-.29-2.2-2-3.64-4.74-3.64-2.31 0-3.58.92-3.58 2.48 0 5.14 17.44 1.51 17.62 13.52 0 5.55-4.97 9.77-13.06 9.77zM217.68 25.2h9.88v14.85a11.85 11.85 0 019.93-4.68c7.34 0 12.25 5.08 12.25 13.75V68h-9.82V50.45c0-4.39-2.43-6.82-6.18-6.82s-6.18 2.43-6.18 6.82V68h-9.88zM255.71 27.05c0-3 2.36-5.37 5.89-5.37s5.83 2.37 5.83 5.37-2.37 5.31-5.83 5.31-5.89-2.36-5.89-5.31zm.92 8.67h9.88V68h-9.88zM288.35 68.35c-8.72 0-15.54-4.33-15.82-12.53H283a4.64 4.64 0 005 4.62c2.89 0 4.74-1.45 4.74-3.81 0-7.51-20.27-3.47-20.16-17.85 0-7.69 6.3-12 14.79-12 8.83 0 14.78 4.39 15.19 12.13h-10.63c-.17-2.6-2-4.16-4.67-4.22-2.37 0-4.17 1.16-4.17 3.7 0 7 20.05 3.87 20.05 17.44 0 6.86-5.32 12.52-14.79 12.52zM305.87 35.72h9.88l4.56 23 5.43-23h10.46l5.49 22.93 4.5-22.93h9.3L346.77 68h-10.92l-5.08-21-5.26 21h-10.86zM371.51 35.25c4.8 0 8.21 2.2 9.94 5v-4.53h9.88V68h-9.88v-4.62c-1.79 2.83-5.2 5-10 5-7.86 0-14.15-6.47-14.15-16.64s6.3-16.49 14.21-16.49zm2.89 8.61c-3.7 0-7 2.77-7 7.91s3.34 8 7 8 7.05-2.83 7.05-8-3.3-7.91-7.05-7.91zM418.32 35.25c7.91 0 14.21 6.36 14.21 16.52s-6.3 16.64-14.21 16.64a11.55 11.55 0 01-9.93-5v19.9h-9.88V35.72h9.88v4.56a11.34 11.34 0 019.93-5.03zm-2.94 8.61c-3.7 0-7.05 2.83-7.05 8s3.35 8 7.05 8 7.1-2.88 7.1-8-3.35-8-7.1-8zM450.48 35.76v30h11.72v2.66h-15V35.76zM466.88 35.76h3.27v32.65h-3.27zM475.25 35.76h21.44v2.71h-9.07v29.94h-3.27V38.47h-9.1zM518.93 38.43h-13.78v12.19h12.38v2.7h-12.38V65.7h13.78v2.71h-17V35.72h17z\"\n                    />\n                </g>\n            </g>\n        </svg>\n    );\n}\n\nexport default SvgLogoDark;\n","import * as React from \"react\";\n\n// tslint:disable-next-line:max-func-body-length\nfunction SvgLogoLight(props) {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 518.93 99.15\" {...props}>\n            <defs>\n                <clipPath id=\"lite-logo-light-mode_svg__clip-path\">\n                    <path className=\"lite-logo-light-mode_svg__cls-1\" d=\"M0 0h110.78v99.15H0z\" />\n                </clipPath>\n                <style>\n                    {\n                        \".lite-logo-light-mode_svg__cls-1,.lite-logo-light-mode_svg__cls-3{fill:none}.lite-logo-light-mode_svg__cls-3{stroke:#fff;stroke-linecap:round;stroke-linejoin:round;stroke-width:5.51px}.lite-logo-light-mode_svg__cls-5{fill-rule:evenodd;fill:#191919}\"\n                    }\n                </style>\n            </defs>\n            <g id=\"lite-logo-light-mode_svg__Layer_2\" data-name=\"Layer 2\">\n                <g id=\"lite-logo-light-mode_svg__Layer_1-2\" data-name=\"Layer 1\">\n                    <g id=\"lite-logo-light-mode_svg__Artboard1\">\n                        <path className=\"lite-logo-light-mode_svg__cls-1\" d=\"M0 0h110.78v99.15H0z\" />\n                        <g clipPath=\"url(#lite-logo-light-mode_svg__clip-path)\">\n                            <path\n                                className=\"lite-logo-light-mode_svg__cls-3\"\n                                d=\"M31.65 15.14c5.46-7.63 24-3.71 41.41 8.74s27.06 28.76 21.59 36.39L77.9 83.63c-5.47 7.63-24 3.71-41.38-8.74S9.47 46.12 14.93 38.49z\"\n                            />\n                            <path\n                                d=\"M31.65 15.14c5.47-7.63 24-3.71 41.38 8.74s27.05 28.76 21.59 36.39L77.9 83.63c-5.46 7.63-24 3.71-41.41-8.75S9.43 46.12 14.9 38.49z\"\n                                fillRule=\"evenodd\"\n                                stroke=\"#f9c16e\"\n                                fill=\"#fff\"\n                                strokeWidth={1.93}\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                            />\n                            <path\n                                className=\"lite-logo-light-mode_svg__cls-5\"\n                                d=\"M30.5 14.31c2.39-3.39 7.11-4.9 13.21-4.4 8.38.69 19.51 5.16 30.16 12.82S92.36 39.46 95.7 47.18c2.44 5.59 2.52 10.54.08 13.93L79.07 84.46c-2.44 3.4-7.16 4.9-13.22 4.4-8.38-.69-19.51-5.16-30.2-12.81S17.16 59.31 13.82 51.59c-2.44-5.6-2.52-10.54-.08-13.93L30.5 14.3zm-1.74 7.32l-12.7 17.7c-1.92 2.67-1.53 6.67.39 11.11 3.19 7.36 10.7 16 20.89 23.28S58.1 85.34 66.09 86c4.83.4 8.69-.5 10.66-3.21l12.66-17.7a21.47 21.47 0 01-6.84.42c-8.38-.69-19.51-5.16-30.17-12.81S33.92 36 30.57 28.23a21.93 21.93 0 01-1.81-6.6zm64.7 37.81c1.93-2.71 1.57-6.65-.39-11.11-3.19-7.36-10.7-16-20.85-23.28S51.46 13.43 43.47 12.76c-4.87-.4-8.73.51-10.65 3.22l-.12.16c-1.81 2.71-1.42 6.58.47 11 3.22 7.36 10.7 16 20.88 23.28S74.82 62 82.8 62.65c4.76.4 8.57-.46 10.54-3l.12-.16zm-26-27.77c5.12 3.65 8.85 8 10.46 11.64.91 2.08 1.15 3.91.24 5.16s-2.71 1.62-5 1.44c-4-.33-9.32-2.51-14.4-6.17s-8.85-8-10.46-11.63c-.9-2.08-1.14-3.91-.24-5.17s2.72-1.62 5-1.43c4.02.33 9.29 2.49 14.4 6.16z\"\n                            />\n                            <path\n                                className=\"lite-logo-light-mode_svg__cls-3\"\n                                d=\"M31.63 15.34c5.47-7.63 24-3.72 41.41 8.74s27.06 28.76 21.6 36.39L77.88 83.82c-5.46 7.64-24 3.72-41.37-8.74S9.45 46.32 14.92 38.69z\"\n                            />\n                            <path\n                                d=\"M31.67 15.71C37.13 8.08 55.66 12 73 24.45s27.1 28.76 21.63 36.39L77.92 84.19c-5.47 7.63-24 3.72-41.42-8.74s-27-28.76-21.59-36.39z\"\n                                fillRule=\"evenodd\"\n                                fill=\"#fff\"\n                                strokeWidth={1.93}\n                                strokeLinecap=\"round\"\n                                strokeLinejoin=\"round\"\n                                stroke=\"#fff\"\n                            />\n                            <path\n                                className=\"lite-logo-light-mode_svg__cls-5\"\n                                d=\"M30.51 14.31c2.4-3.39 7.12-4.9 13.21-4.4 8.38.69 19.51 5.16 30.17 12.81s18.48 16.74 21.82 24.46c2.44 5.59 2.52 10.54.08 13.93L79.08 84.46c-2.44 3.4-7.16 4.9-13.22 4.4-8.37-.69-19.5-5.16-30.2-12.81S17.18 59.31 13.83 51.59c-2.44-5.6-2.51-10.54-.08-13.93L30.51 14.3zm36.3 46.74L41.32 76.42c1.18.74 2.36 1.44 3.5 2.1L71 62.74c-1.4-.5-2.78-1.06-4.19-1.69zm-9.76-5.23L33 70.37c1.1.88 2.2 1.74 3.38 2.6L61 58.11c-1.35-.72-2.65-1.47-3.95-2.29zM52 52.4c-10.48-7.59-18.11-16.55-21.41-24.17a21.36 21.36 0 01-1.81-6.6l-12.71 17.7c-1.92 2.71-1.53 6.65.4 11.11 2.2 5.05 6.41 10.69 12.11 16.09zm41.49 7c1.93-2.71 1.57-6.65-.39-11.12-3.19-7.35-10.7-16-20.85-23.27S51.47 13.43 43.49 12.76c-4.88-.4-8.74.51-10.66 3.22l-.12.16c-1.81 2.7-1.42 6.57.47 11 3.23 7.36 10.7 16 20.89 23.28S74.83 62 82.81 62.65c4.76.4 8.58-.46 10.54-3l.12-.16zm-26-27.77c5.11 3.65 8.84 8 10.46 11.64.9 2.08 1.14 3.91.23 5.16s-2.71 1.62-5 1.44c-4-.33-9.32-2.51-14.4-6.17s-8.85-8-10.46-11.63c-.9-2.08-1.14-3.91-.23-5.17s2.71-1.62 4.95-1.43c4.05.37 9.32 2.53 14.44 6.2z\"\n                            />\n                        </g>\n                    </g>\n                    <path d=\"M125.61 68.35c-8.73 0-15.54-4.33-15.83-12.53h10.51a4.65 4.65 0 005 4.62c2.89 0 4.74-1.45 4.74-3.81 0-7.51-20.28-3.47-20.17-17.85 0-7.69 6.3-12 14.79-12 8.84 0 14.79 4.39 15.19 12.13h-10.65c-.18-2.6-2-4.16-4.68-4.22-2.37 0-4.16 1.16-4.16 3.7 0 7 20 3.87 20 17.44.04 6.86-5.27 12.52-14.74 12.52zM178.3 68h-9.87v-4.44a11.75 11.75 0 01-9.76 4.73c-7.45 0-12.48-5.14-12.48-13.75V35.72H156v17.5c0 4.39 2.48 6.81 6.18 6.81s6.24-2.42 6.24-6.81v-17.5h9.87zM198.54 68.41c-8.61 0-14.38-4.8-14.84-11h9.76c.23 2.25 2.25 3.75 5 3.75 2.54 0 3.87-1.16 3.87-2.6 0-5.2-17.56-1.44-17.56-13.28 0-5.49 4.68-10 13.11-10s12.94 4.63 13.57 11h-9.15c-.29-2.2-2-3.64-4.74-3.64-2.31 0-3.58.92-3.58 2.48 0 5.14 17.44 1.51 17.62 13.52 0 5.55-4.97 9.77-13.06 9.77zM217.68 25.2h9.88v14.85a11.85 11.85 0 019.93-4.68c7.34 0 12.25 5.08 12.25 13.75V68h-9.82V50.45c0-4.39-2.43-6.82-6.18-6.82s-6.18 2.43-6.18 6.82V68h-9.88zM255.71 27.05c0-3 2.36-5.37 5.89-5.37s5.83 2.37 5.83 5.37-2.37 5.31-5.83 5.31-5.89-2.36-5.89-5.31zm.92 8.67h9.88V68h-9.88zM288.35 68.35c-8.72 0-15.54-4.33-15.82-12.53H283a4.64 4.64 0 005 4.62c2.89 0 4.74-1.45 4.74-3.81 0-7.51-20.27-3.47-20.16-17.85 0-7.69 6.3-12 14.79-12 8.83 0 14.78 4.39 15.19 12.13h-10.63c-.17-2.6-2-4.16-4.67-4.22-2.37 0-4.17 1.16-4.17 3.7 0 7 20.05 3.87 20.05 17.44 0 6.86-5.32 12.52-14.79 12.52zM305.87 35.72h9.88l4.56 23 5.43-23h10.46l5.49 22.93 4.5-22.93h9.3L346.77 68h-10.92l-5.08-21-5.26 21h-10.86zM371.51 35.25c4.8 0 8.21 2.2 9.94 5v-4.53h9.88V68h-9.88v-4.62c-1.79 2.83-5.2 5-10 5-7.86 0-14.15-6.47-14.15-16.64s6.3-16.49 14.21-16.49zm2.89 8.61c-3.7 0-7 2.77-7 7.91s3.34 8 7 8 7.05-2.83 7.05-8-3.3-7.91-7.05-7.91zM418.32 35.25c7.91 0 14.21 6.36 14.21 16.52s-6.3 16.64-14.21 16.64a11.55 11.55 0 01-9.93-5v19.9h-9.88V35.72h9.88v4.56a11.34 11.34 0 019.93-5.03zm-2.94 8.61c-3.7 0-7.05 2.83-7.05 8s3.35 8 7.05 8 7.1-2.88 7.1-8-3.35-8-7.1-8zM450.48 35.76v30h11.72v2.66h-15V35.76zM466.88 35.76h3.27v32.65h-3.27zM475.25 35.76h21.44v2.71h-9.07v29.94h-3.27V38.47h-9.1zM518.93 38.43h-13.78v12.19h12.38v2.7h-12.38V65.7h13.78v2.71h-17V35.72h17z\" />\n                </g>\n            </g>\n        </svg>\n    );\n}\n\nexport default SvgLogoLight;\n","import React, { FC, useContext } from \"react\";\nimport { TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_HEIGHT, HEADER_WIDTH, IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport SvgLogoDark from \"../svg/SvgLogoDark\";\nimport SvgLogoLight from \"../svg/SvgLogoLight\";\nimport Text from \"../Text\";\n\nexport interface WebHeaderProps {\n    onExpandMenu?: () => void;\n}\n\nconst WebHeader: FC<WebHeaderProps> = props => {\n    const { header, borderDark } = useColors();\n    return (\n        <View\n            // @ts-ignore\n            style={{\n                position: \"fixed\",\n                top: 0,\n                zIndex: 100,\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                paddingBottom: Spacing.small,\n                backgroundColor: header,\n                borderBottomWidth: 1,\n                borderColor: borderDark\n            }}>\n            <FlexView\n                style={{\n                    flex: 1,\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    alignSelf: \"center\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"flex-end\",\n                    paddingTop: Spacing.small,\n                    paddingHorizontal: Spacing.normal\n                }}>\n                <Title />\n                {IS_DESKTOP ? <Menu /> : <MenuIcon onExpand={props.onExpandMenu} />}\n            </FlexView>\n        </View>\n    );\n};\n\nexport const Title = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const SvgLogo = darkMode ? SvgLogoDark : SvgLogoLight;\n    return (\n        <View style={{ alignSelf: \"center\" }}>\n            <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\n                <SvgLogo width={259} height={45} style={{ marginTop: 8 }} />\n            </Link>\n        </View>\n    );\n};\n\nconst Menu = () => {\n    return (\n        <FlexView\n            style={{\n                height: \"100%\",\n                alignItems: \"center\"\n            }}>\n            <MenuItem title={\"Swap\"} path={\"/swap\"} />\n            <MenuItem title={\"Liquidity\"} path={\"/liquidity\"} />\n            <MenuItem title={\"Migrate\"} path={\"/migrate\"} />\n            <MenuItem title={\"Stake\"} path={\"/staking\"} />\n            <MenuItem title={\"Farm\"} path={\"/farming\"} />\n            <DarkModeSwitch style={{ marginLeft: Spacing.small }} />\n            <Status />\n        </FlexView>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ marginLeft: Spacing.tiny, textDecoration: \"none\" }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 18,\n                    color: active ? textDark : textLight,\n                    padding: 3\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst MenuIcon = ({ onExpand }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"menu\"} size={28} color={textDark} onPress={onExpand} />;\n};\n\nconst Status = () => {\n    const { textLight, green, borderDark } = useColors();\n    const { ethereum, chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : \"Not connected\";\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        if (confirm(\"Do you want to disconnect?\")) ethereum?.disconnect?.();\n    };\n    return (\n        <TouchableHighlight onPress={onPress} disabled={!ethereum?.isWalletConnect}>\n            <FlexView\n                style={{\n                    height: 28,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    marginLeft: Spacing.small,\n                    paddingHorizontal: Spacing.small,\n                    borderRadius: 16,\n                    borderWidth: 1,\n                    borderColor: borderDark\n                }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginRight: 12 }} />\n                <Text style={{ fontSize: 15, color: textLight, marginRight: 2 }}>{title}</Text>\n                {ethereum?.isWalletConnect && <CloseIcon />}\n            </FlexView>\n        </TouchableHighlight>\n    );\n};\n\nconst CloseIcon = () => {\n    const { textLight } = useColors();\n    return (\n        <Icon\n            type={\"material-community\"}\n            name={\"close\"}\n            size={15}\n            color={textLight}\n            style={{ paddingLeft: 2, paddingTop: 2 }}\n        />\n    );\n};\n\nexport default WebHeader;\n","import React from \"react\";\n\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport Title from \"../components/Title\";\nimport WebSubMenu from \"../components/web/WebSubMenu\";\nimport Screen from \"./Screen\";\n\nconst EmptyScreen = () => {\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={\"Loading...\"} />\n                </Content>\n            </Container>\n            <WebSubMenu items={[]} />\n        </Screen>\n    );\n};\n\nexport default EmptyScreen;\n","import React, { lazy, Suspense, useContext, useEffect, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { DefaultTheme, NavigationContainer, Theme } from \"@react-navigation/native\";\nimport useAsyncEffect from \"use-async-effect\";\nimport MobileWebMenu from \"../components/web/MobileWebMenu\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport EmptyScreen from \"./EmptyScreen\";\n\nconst FarmingScreen = lazy(() => import(\"./FarmingScreen\"));\nconst HarvestScreen = lazy(() => import(\"./HarvestScreen\"));\nconst LiquidityScreen = lazy(() => import(\"./LiquidityScreen\"));\nconst MigrateScreen = lazy(() => import(\"./MigrateScreen\"));\nconst MyLimitOrdersScreen = lazy(() => import(\"./MyLimitOrdersScreen\"));\nconst RemoveLiquidityScreen = lazy(() => import(\"./RemoveLiquidityScreen\"));\nconst StakeScreen = lazy(() => import(\"./StakeScreen\"));\nconst UnstakeScreen = lazy(() => import(\"./UnstakeScreen\"));\nconst SwapScreen = lazy(() => import(\"./SwapScreen\"));\nconst HomeScreen = lazy(() => import(\"./HomeScreen\"));\n\nexport const Screens = () => {\n    const { load } = useContext(GlobalContext);\n    useAsyncEffect(load, []);\n    return Platform.OS === \"web\" ? <WebScreens /> : <AppScreens />;\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst WebScreens = () => {\n    const { address } = useContext(EthersContext);\n    const [menuExpanded, setMenuExpanded] = useState(false);\n    const { background } = useColors();\n    useEffect(() => {\n        if (!address) setMenuExpanded(false);\n    }, [address]);\n    return (\n        <Router>\n            <View style={{ flex: 1, backgroundColor: background }}>\n                <Suspense fallback={<EmptyScreen />}>\n                    <Switch>\n                        <Route path={\"/swap/my-orders\"}>\n                            <MyLimitOrdersScreen />\n                        </Route>\n                        <Route path={\"/swap\"}>\n                            <SwapScreen />\n                        </Route>\n                        <Route path={\"/liquidity/migrate\"}>\n                            <Redirect to={\"/migrate\"} />\n                        </Route>\n                        <Route path={\"/liquidity/remove\"}>\n                            <RemoveLiquidityScreen />\n                        </Route>\n                        <Route path={\"/liquidity\"}>\n                            <LiquidityScreen />\n                        </Route>\n                        <Route path={\"/farming/harvest\"}>\n                            <HarvestScreen />\n                        </Route>\n                        <Route path={\"/farming\"}>\n                            <FarmingScreen />\n                        </Route>\n                        <Route path={\"/migrate\"}>\n                            <MigrateScreen />\n                        </Route>\n                        <Route path={\"/staking/unstake\"}>\n                            <UnstakeScreen />\n                        </Route>\n                        <Route path={\"/staking\"}>\n                            <StakeScreen />\n                        </Route>\n                        <Route path={\"/\"} exact={true}>\n                            <HomeScreen />\n                        </Route>\n                        <Redirect to={\"/\"} />\n                    </Switch>\n                </Suspense>\n                <WebHeader onExpandMenu={() => setMenuExpanded(true)} />\n                {!IS_DESKTOP && <MobileWebMenu expanded={menuExpanded} onCollapse={() => setMenuExpanded(false)} />}\n            </View>\n        </Router>\n    );\n};\n\nconst Tab = createBottomTabNavigator();\n\nconst AppScreens = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary, accent, background, border, textDark, disabled } = useColors();\n    const theme: Theme = {\n        ...DefaultTheme,\n        dark: darkMode,\n        colors: {\n            primary,\n            background,\n            border,\n            card: background,\n            notification: background,\n            text: textDark\n        }\n    };\n    return (\n        <NavigationContainer theme={theme}>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: accent,\n                    inactiveTintColor: disabled,\n                    labelStyle: { marginBottom: 4 }\n                }}>\n                <Tab.Screen name=\"Home\" component={SwapScreen} options={tabOptions(\"home\")} />\n                <Tab.Screen name=\"Liquidity\" component={LiquidityScreen} options={tabOptions(\"water\")} />\n                <Tab.Screen name=\"Farming\" component={FarmingScreen} options={tabOptions(\"leaf\")} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n};\n\nconst tabOptions = iconName => ({\n    tabBarIcon: ({ color }) => <Icon type={\"material-community\"} name={iconName} color={color} />\n});\n","/* tslint:disable:ordered-imports */\nimport \"./globals\";\nimport React from \"react\";\n\nimport { OpenSans_300Light, OpenSans_400Regular, OpenSans_600SemiBold } from \"@expo-google-fonts/open-sans\";\nimport { AppLoading } from \"expo\";\nimport { useFonts } from \"expo-font\";\n\nimport { ContextProvider } from \"./src/context\";\nimport { Screens } from \"./src/screens\";\nimport { YellowBox } from \"react-native\";\n\nif (__DEV__) {\n    YellowBox.ignoreWarnings([\"Setting a timer\", \"VirtualizedLists should never be nested\"]);\n}\n\nconst App = () => {\n    const [fontsLoaded] = useFonts({\n        light: OpenSans_300Light,\n        regular: OpenSans_400Regular,\n        bold: OpenSans_600SemiBold\n    });\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    }\n    return (\n        <ContextProvider>\n            <Screens />\n        </ContextProvider>\n    );\n};\n\nexport default App;\n","global.Buffer = require('buffer').Buffer;\n","import React, { FC } from \"react\";\nimport { Text as NativeText, TextProps as NativeTextProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface TextProps extends NativeTextProps {\n    note?: boolean;\n    caption?: boolean;\n    dark?: boolean;\n    medium?: boolean;\n    light?: boolean;\n    disabled?: boolean;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\nconst Text: FC<TextProps> = props => {\n    const { textDark, textMedium, textLight, placeholder } = useColors();\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = props.disabled\n        ? placeholder\n        : props.medium\n        ? textMedium\n        : props.note || props.light\n        ? textLight\n        : textDark;\n    return (\n        <NativeText\n            {...props}\n            h1Style={[{ fontFamily }, props.h1Style]}\n            h2Style={[{ fontFamily }, props.h2Style]}\n            h3Style={[{ fontFamily }, props.h3Style]}\n            h4Style={[{ fontFamily }, props.h4Style]}\n            style={[\n                {\n                    fontFamily,\n                    fontSize: props.note ? 13 : props.caption ? 18 : 15,\n                    color\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Text;\n","import * as Analytics from \"expo-firebase-analytics\";\n\nimport { ethers } from \"ethers\";\n\nexport const logTransaction = async (\n    tx: ethers.providers.TransactionResponse,\n    name: string,\n    ...args: any[]\n): Promise<ethers.providers.TransactionResponse> => {\n    await Analytics.logEvent(\"tx:\" + name, {\n        args: args || [],\n        hash: tx.hash,\n        value: tx.value.toString(),\n        gasLimit: tx.gasLimit.toString(),\n        gasPrice: tx.gasPrice.toString(),\n        chainId: tx.chainId\n    });\n    return tx;\n};\n"],"sourceRoot":""}