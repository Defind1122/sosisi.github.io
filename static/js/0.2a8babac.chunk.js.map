{"version":3,"sources":["src/components/Heading.tsx","src/components/ItemSeparator.tsx","src/hooks/useLinker.tsx","src/components/Selectable.tsx","src/components/ErrorMessage.tsx","src/components/InfoBox.tsx","src/components/TokenLogo.tsx","src/components/Column.tsx","src/components/SocialIcons.tsx","src/components/web/WebFooter.tsx","src/components/Border.tsx","src/components/CloseIcon.tsx","src/components/FetchingButton.tsx","src/components/Expandable.tsx","src/components/SelectIcon.tsx","src/components/Meta.tsx","src/components/TokenInput.tsx","src/components/Loading.tsx","src/components/Input.tsx","src/hooks/useDelayedOnBlockEffect.tsx","src/hooks/useTokenPairState.tsx","index.tsx","assets/empty-token.png","assets/ETH.png"],"names":["Heading","props","accent","useColors","style","alignItems","height","marginBottom","disabled","Spacing","small","medium","fontWeight","flex","fontSize","paddingBottom","tiny","text","buttonText","type","size","title","onPress","onPressButton","color","ITEM_SEPARATOR_HEIGHT","ItemSeparator","Platform","OS","path","route","target","history","useHistory","useCallback","window","open","push","_target","navigate","useNavigation","Selectable","borderDark","overlay","border","useStyles","background","backgroundLight","containerStyle","hovered","activeOpacity","underlayColor","selected","backgroundColor","ErrorMessage","error","borderColor","borderWidth","width","padding","marginTop","code","note","message","InfoBox","darkMode","useContext","GlobalContext","normal","TokenLogo","useState","setError","placeholder","require","ETH","source","replaceWETH","token","symbol","uri","logoURI","borderRadius","onError","opacity","Column","View","noTopMargin","large","SocialIcon","textLight","light","iconColor","undefined","SocialIcons","onPressTwitter","useLinker","onPressGithub","onPressDiscord","FlexView","justifyContent","name","raised","reverse","reverseColor","WebFooter","Text","textAlign","Border","CloseIcon","marginLeft","FetchingButton","Expandable","expanded","setExpanded","shouldExpand","onExpand","display","children","SelectIcon","Meta","textMedium","url","suffix","IS_DESKTOP","label","textDecorationLine","MaxButton","onPressMax","balance","fee","pow10","gt","sub","ethers","constants","Zero","updateAmount","formatBalance","decimals","position","right","bottom","maxButtonText","buttonStyle","paddingHorizontal","TokenInput","onChangeText","onAmountChanged","parseBalance","e","endsWith","indexOf","length","value","amount","keyboardType","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","labelStyle","fontFamily","paddingTop","hideMaxButton","Loading","marginVertical","Input","textDark","errors","forbidden","forEach","validation","match","regexp","allowed","join","minHeight","outline","placeholderTextColor","errorStyle","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","EthersContext","addOnBlockListener","removeOnBlockListener","eventName","useAsyncEffect","setTimeout","handles","handle","clearTimeout","useTokenPairState","signer","address","tokens","updateTokens","getTokenAllowance","useSDK","wrapETH","unwrapETH","fromSymbol","setFromSymbol","toSymbol","setToSymbol","fromAmount","setFromAmount","toAmount","setToAmount","fromTokenAllowed","setFromTokenAllowed","toTokenAllowed","setToTokenAllowed","loading","setLoading","wrapping","setWrapping","unwrapping","setUnwrapping","fromToken","find","toToken","useEffect","a","async","minAllowance","BigNumber","from","pow","ROUTER","fromAllowance","gte","toAllowance","onWrap","tx","wait","onUnwrap","isServer","process","hoverListener","hasMouse","refs","mousePosition","x","y","hover","hoverFunc","containsEvent","r","previousHoverFunc","unhover","document","event","add","ref","remove","createHoverListener","Hoverable","rest","hostRef","React","hr","setHovered","parent","enhanceScrollView","WrappedComponent","EnhancedScrollView","onScroll","scrollEventThrottle","forwardedRef","setRef","setLocalRef","getForwardedRef","setAndForwardRef","hostNode","interactionState","module","exports"],"mappings":"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","file":"static/js/0.2a8babac.chunk.js","sourcesContent":["import React, { FC } from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={\"bold\"}\n                disabled={props.disabled}\n                style={{ flex: 1, fontSize: 18, paddingBottom: Spacing.tiny }}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport const ITEM_SEPARATOR_HEIGHT = 10;\n\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\n\nexport default ItemSeparator;\n","import { useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { useHistory } from \"react-router-dom\";\n\nimport { useNavigation } from \"@react-navigation/native\";\n\nconst useWebLinker = (path: string, route: string, target?: string) => {\n    const history = useHistory();\n    return useCallback(() => {\n        if (target) {\n            window.open(path, target);\n        } else {\n            history.push(path);\n        }\n    }, [path, target]);\n};\n\nconst useAppLinker = (path: string, route: string, _target?: string) => {\n    const { navigate } = useNavigation();\n    return useCallback(() => {\n        navigate(route);\n    }, [route]);\n};\n\nexport default Platform.OS === \"web\" ? useWebLinker : useAppLinker;\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps, ViewStyle } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n    containerStyle?: ViewStyle;\n}\n\nconst Selectable: FC<SelectableProps> = props => {\n    const { borderDark, accent, overlay } = useColors();\n    const { border } = useStyles();\n    const { background, backgroundLight } = useColors();\n    return (\n        <Hoverable style={props.containerStyle}>\n            {({ hovered }) => (\n                <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={props.onPress}>\n                    <View\n                        {...props}\n                        style={[\n                            {\n                                ...border({ color: props.selected ? accent : borderDark }),\n                                backgroundColor: hovered && !props.disabled ? backgroundLight : background\n                            },\n                            props.style\n                        ]}\n                    />\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nexport default Selectable;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React, { PropsWithChildren, useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { backgroundLight, borderDark } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: darkMode ? borderDark : backgroundLight }),\n                    backgroundColor: backgroundLight,\n                    marginTop: Spacing.normal + Spacing.small,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\n\nexport default InfoBox;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport useColors from \"../hooks/useColors\";\nimport Token from \"../types/Token\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const { backgroundLight: disabled } = useColors();\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && props.token.symbol === \"WETH\" ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? disabled : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={!props.token.logoURI || error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React, { useContext } from \"react\";\nimport { Icon, SocialIcon as NativeSocialIcon, SocialIconProps } from \"react-native-elements\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\n\nconst SocialIcons = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    const onPressTwitter = useLinker(\"https://twitter.com/sushiswap\", \"\", \"_blank\");\n    const onPressGithub = useLinker(\"https://github.com/sushiswap\", \"\", \"_blank\");\n    const onPressDiscord = useLinker(\"https://discord.gg/YS8xH7E\", \"\", \"_blank\");\n    return (\n        <FlexView style={{ width: \"100%\", justifyContent: \"center\" }}>\n            <SocialIcon type=\"github-alt\" onPress={onPressGithub} />\n            <SocialIcon type=\"twitter\" onPress={onPressTwitter} />\n            <Icon\n                type={\"material-community\"}\n                name={\"discord\"}\n                raised={true}\n                reverse={true}\n                color={background}\n                reverseColor={darkMode ? \"white\" : \"#7289da\"}\n                style={{ backgroundColor: background }}\n                containerStyle={{\n                    borderWidth: 1,\n                    borderColor: darkMode ? \"white\" : textLight\n                }}\n                onPress={onPressDiscord}\n            />\n        </FlexView>\n    );\n};\n\nconst SocialIcon = (props: SocialIconProps) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background, textLight } = useColors();\n    return (\n        <NativeSocialIcon\n            {...props}\n            light={!darkMode}\n            iconColor={darkMode ? \"white\" : undefined}\n            style={{\n                backgroundColor: background,\n                borderWidth: 1,\n                borderColor: darkMode ? \"white\" : textLight\n            }}\n        />\n    );\n};\n\nexport default SocialIcons;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport Column from \"../Column\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst WebFooter = () => (\n    <Column noTopMargin={true}>\n        <View\n            style={{\n                width: \"100%\",\n                padding: Spacing.normal\n            }}>\n            <SocialIcons />\n            <Text note={true} style={{ marginTop: Spacing.tiny, textAlign: \"center\", width: \"100%\" }}>\n                Built with ❤️ by SushiSwap\n            </Text>\n        </View>\n    </Column>\n);\n\nexport default WebFooter;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = () => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: Spacing.small,\n                marginBottom: Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nconst CloseIcon = () => {\n    const { accent } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={accent} style={{ marginLeft: 4 }} />;\n};\n\nexport default CloseIcon;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst FetchingButton = () => {\n    return <Button title={\"Fetching…\"} disabled={true} />;\n};\nexport default FetchingButton;\n","import React, { FC, ReactNode, useState } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport Heading from \"./Heading\";\n\nexport interface ExpandableProps {\n    title: string;\n    expanded: boolean;\n    onExpand?: () => void;\n    style?: ViewStyle;\n    children?: ReactNode;\n}\n\nconst Expandable: FC<ExpandableProps> = props => {\n    const [expanded, setExpanded] = useState(true);\n    const shouldExpand = props.expanded && expanded;\n    const buttonText = shouldExpand ? undefined : \"Change\";\n    const onPress = () => {\n        setExpanded(true);\n        props.onExpand?.();\n    };\n\n    return (\n        <View style={props.style}>\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\n        </View>\n    );\n};\n\nexport default Expandable;\n","import React from \"react\";\nimport { Icon } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nconst SelectIcon = () => {\n    const { accent } = useColors();\n    return <Icon type={\"material-community\"} name={\"chevron-right\"} color={accent} style={{ marginLeft: 4 }} />;\n};\n\nexport default SelectIcon;\n","import React, { FC } from \"react\";\n\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    url?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const { textMedium, textLight, placeholder } = useColors();\n    const onPress = useLinker(props.url || \"\", \"\", \"_blank\");\n    const text = props.disabled\n        ? \"N/A\"\n        : props.text\n        ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n        : \"Fetching…\";\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4 }}>\n            <Text note={!IS_DESKTOP} fontWeight={\"bold\"} style={{ color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text\n                note={!IS_DESKTOP}\n                onPress={props.url ? onPress : undefined}\n                style={{\n                    color: props.disabled ? placeholder : props.text ? textMedium : textLight,\n                    textDecorationLine: props.url ? \"underline\" : \"none\"\n                }}>\n                {text}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    token?: Token;\n    amount: string;\n    onAmountChanged: (amount: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenInput: FC<TokenInputProps> = props => {\n    const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.token && props.onAmountChanged) {\n                try {\n                    parseBalance(text, props.token.decimals);\n                    props.onAmountChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAmountChanged(text);\n                    }\n                }\n            }\n        },\n        [props.token, props.onAmountChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.amount}\n                    onChangeText={onChangeText}\n                    placeholder={\"0.0\"}\n                    keyboardType={\"numeric\"}\n                    autoFocus={props.autoFocus || false}\n                    inputStyle={{ marginHorizontal: Spacing.tiny }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 15,\n                        paddingBottom: 2\n                    }}\n                />\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\n                    <MaxButton\n                        token={props.token}\n                        maxButtonText={props.maxButtonText}\n                        updateAmount={props.onAmountChanged}\n                    />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(() => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (props.token.symbol === \"ETH\") {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount]);\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 12 : 24 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || (IS_DESKTOP ? \"MAX \" + props.token.symbol : \"MAX\")}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: Spacing.tiny }}\n            />\n        </View>\n    );\n};\n\nexport default TokenInput;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import React, { FC, useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface Validation {\n    regexp: RegExp;\n    error: string;\n}\n\nexport interface InputProps extends NativeInputProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    allowed?: Validation[];\n    forbidden?: Validation[];\n    onError?: (error: string) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Input: FC<InputProps> = props => {\n    const { textDark, textMedium, textLight } = useColors();\n    const size = props.size || \"normal\";\n    const color = props.color || textDark;\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\n    const onChangeText = useCallback(\n        (text: string) => {\n            props.onChangeText?.(text);\n            props.onError?.(\"\");\n            const errors = [] as string[];\n            if (text !== \"\" && props.forbidden) {\n                props.forbidden.forEach(validation => {\n                    if (text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (text !== \"\" && props.allowed) {\n                props.allowed.forEach(validation => {\n                    if (!text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (errors.length > 0) {\n                props.onError?.(errors.join(\"\\n\"));\n            }\n        },\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\n    );\n    return (\n        <NativeInput\n            {...props}\n            inputStyle={[\n                { fontSize, fontFamily: \"regular\", paddingBottom: 4, color, marginTop: 0, minHeight: 32 },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\n                props.inputStyle\n            ]}\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\n            placeholderTextColor={props.placeholderTextColor || textLight}\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\n            onChangeText={onChangeText}\n        />\n    );\n};\n\nexport default Input;\n","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { parseBalance } from \"../utils\";\nimport useSDK from \"./useSDK\";\n\nexport interface TokenPairState {\n    fromSymbol: string;\n    setFromSymbol: (symbol: string) => void;\n    toSymbol: string;\n    setToSymbol: (symbol: string) => void;\n    fromToken?: Token;\n    toToken?: Token;\n    fromAmount: string;\n    setFromAmount: (amount: string) => void;\n    toAmount: string;\n    setToAmount: (amount: string) => void;\n    fromTokenAllowed: boolean;\n    setFromTokenAllowed: (allowed: boolean) => void;\n    toTokenAllowed: boolean;\n    setToTokenAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onWrap: () => Promise<void>;\n    wrapping: boolean;\n    onUnwrap: () => Promise<void>;\n    unwrapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useTokenPairState: () => TokenPairState = () => {\n    const { signer, address, tokens, updateTokens, getTokenAllowance } = useContext(EthersContext);\n    const { wrapETH, unwrapETH } = useSDK();\n    const [fromSymbol, setFromSymbol] = useState(\"\");\n    const [toSymbol, setToSymbol] = useState(\"\");\n    const [fromAmount, setFromAmount] = useState(\"\");\n    const [toAmount, setToAmount] = useState(\"\");\n    const [fromTokenAllowed, setFromTokenAllowed] = useState(false);\n    const [toTokenAllowed, setToTokenAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [wrapping, setWrapping] = useState(false);\n    const [unwrapping, setUnwrapping] = useState(false);\n\n    const fromToken = tokens.find(token => token.symbol === fromSymbol);\n    const toToken = tokens.find(token => token.symbol === toSymbol);\n\n    useEffect(() => {\n        if (fromSymbol === \"\") {\n            setToSymbol(\"\");\n        }\n        setFromAmount(\"\");\n        setToAmount(\"\");\n    }, [fromSymbol, toSymbol]);\n\n    useEffect(() => {\n        setFromSymbol(\"\");\n    }, [address]);\n\n    useAsyncEffect(async () => {\n        if (fromToken && toToken && signer) {\n            setFromTokenAllowed(false);\n            setToTokenAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                if (fromToken.symbol !== \"ETH\") {\n                    const fromAllowance = await getTokenAllowance(fromToken.address, ROUTER);\n                    setFromTokenAllowed(ethers.BigNumber.from(fromAllowance).gte(minAllowance));\n                }\n                if (toToken.symbol !== \"ETH\") {\n                    const toAllowance = await getTokenAllowance(toToken.address, ROUTER);\n                    setToTokenAllowed(ethers.BigNumber.from(toAllowance).gte(minAllowance));\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [fromToken, toToken, signer]);\n\n    const onWrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setWrapping(true);\n            try {\n                const tx = await wrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setWrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    const onUnwrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setUnwrapping(true);\n            try {\n                const tx = await unwrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setUnwrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    return {\n        fromSymbol,\n        setFromSymbol,\n        toSymbol,\n        setToSymbol,\n        fromToken,\n        toToken,\n        fromAmount,\n        setFromAmount,\n        toAmount,\n        setToAmount,\n        fromTokenAllowed,\n        setFromTokenAllowed,\n        toTokenAllowed,\n        setToTokenAllowed,\n        loading,\n        onWrap,\n        wrapping,\n        onUnwrap,\n        unwrapping\n    };\n};\n\nexport default useTokenPairState;\n","import * as React from 'react';\nimport type {\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  PressableStateCallbackType,\n  FlatListProps,\n  VirtualizedListProps,\n  ScrollViewProps,\n} from 'react-native';\n\nimport {\n  View,\n  Pressable as NativePressable,\n  ScrollView as NativeScrollView,\n  FlatList as NativeFlatList,\n  VirtualizedList as NativeVirtualizedList,\n  //@ts-ignore\n} from 'react-native-web';\n\nconst isServer =\n  typeof process !== 'undefined' &&\n  process.release &&\n  process.release.name === 'node';\n\nconst hoverListener = createHoverListener();\n\ninterface PressableStateCallbackTypeWeb extends PressableStateCallbackType {\n  focused?: boolean;\n  hovered?: boolean;\n}\n\ntype ChildrenType =\n  | React.ReactNode\n  | ((state: PressableStateCallbackTypeWeb) => React.ReactNode);\n\ntype StylesType =\n  | StyleProp<ViewStyle>\n  | ((state: PressableStateCallbackTypeWeb) => StyleProp<ViewStyle>);\n\ninterface HoverableProps extends ViewProps {\n  children:\n    | React.ReactNode\n    | ((state: { hovered: boolean }) => React.ReactNode);\n}\n\ninterface PressableProps extends Omit<ViewProps, 'style'> {\n  children: ChildrenType;\n  style?: StylesType;\n}\n\nexport function Hoverable({ children, ...rest }: HoverableProps) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <View\n      ref={hostRef}\n      children={\n        typeof children === 'function' ? children({ hovered }) : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction PressableWithoutRef(\n  { style, children, ...rest }: PressableProps,\n  forwardedRef: any\n) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n\n  const setRef = setAndForwardRef({\n    getForwardedRef: () => forwardedRef,\n    setLocalRef: (hostNode: any) => {\n      hostRef.current = hostNode;\n    },\n  });\n\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <NativePressable\n      //@ts-ignore\n      ref={setRef}\n      style={(interactionState: any) =>\n        typeof style === 'function'\n          ? style({ ...interactionState, hovered })\n          : style\n      }\n      children={(interactionState: any) =>\n        typeof children === 'function'\n          ? children({ ...interactionState, hovered })\n          : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction containsEvent(parent: any, clickTarget: any) {\n  if (parent === clickTarget) {\n    return true;\n  }\n  if (!parent) {\n    return false;\n  }\n  for (let child of parent.childNodes) {\n    if (containsEvent(child, clickTarget)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction createHoverListener() {\n  let hasMouse = isServer ? false : window.matchMedia('(pointer:fine)').matches;\n\n  let refs = new Map<any, (h: boolean) => any>();\n  let previousHoverFunc: undefined | ((h: boolean) => any);\n  let mousePosition = {\n    x: 0,\n    y: 0,\n  };\n\n  function hover(target: any) {\n    // hover is targeted directly\n    let hoverFunc = refs.get(target);\n\n    // let's try to see if any of the children of the hover event are hovered\n    if (!hoverFunc) {\n      for (let r of refs.keys()) {\n        if (containsEvent(r, target)) {\n          hoverFunc = refs.get(r);\n        }\n      }\n    }\n\n    previousHoverFunc && previousHoverFunc(false);\n    hoverFunc && hoverFunc(true);\n\n    // cache the previous hover so we can un-hover this later on\n    previousHoverFunc = hoverFunc;\n  }\n\n  function hoverEvent(event: any) {\n    hover(event.target);\n  }\n\n  function unhover() {\n    previousHoverFunc && previousHoverFunc(false);\n  }\n\n  function captureMousePosition(event: any) {\n    mousePosition.x = event.pageX;\n    mousePosition.y = event.pageY;\n  }\n\n  // touch devices have a bug where the onMouseOver is handled while it should not\n  // if the user would click something it keeps hovered while it should unhover\n  // so only listen to these events if the device has a mouse\n  if (hasMouse) {\n    document.onmouseover = hoverEvent;\n    document.onmousemove = captureMousePosition;\n    document.ontouchstart = unhover;\n    document.ontouchend = unhover;\n    document.ontouchcancel = unhover;\n    document.ontouchmove = unhover;\n  }\n\n  function add(ref: any, setHovered: any) {\n    refs.set(ref, setHovered);\n  }\n\n  function remove(ref: any) {\n    refs.delete(ref);\n  }\n\n  return {\n    add,\n    remove,\n    mousePosition,\n    hover,\n  };\n}\n\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }: any) {\n  return function forwardRef(ref: React.ElementRef<any>) {\n    const forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nfunction enhanceScrollView(WrappedComponent: any) {\n  const EnhancedScrollView = ({\n    forwardedRef,\n    onScroll,\n    scrollEventThrottle,\n    ...rest\n  }: any) => {\n    const onScrollInner = (e: any) => {\n      onScroll && onScroll(e);\n      const { mousePosition, hover } = hoverListener;\n      hover(document.elementFromPoint(mousePosition.x, mousePosition.y));\n    };\n    return (\n      <WrappedComponent\n        ref={forwardedRef}\n        onScroll={onScrollInner}\n        scrollEventThrottle={scrollEventThrottle || 25}\n        {...rest}\n      />\n    );\n  };\n\n  return React.forwardRef((props, ref) => {\n    return <EnhancedScrollView {...props} forwardedRef={ref} />;\n  });\n}\n\nexport const Pressable = React.forwardRef(PressableWithoutRef);\nexport const ScrollView = enhanceScrollView(\n  NativeScrollView\n) as React.ElementType<ScrollViewProps>;\nexport const FlatList = enhanceScrollView(NativeFlatList) as React.ElementType<\n  FlatListProps<unknown>\n>;\nexport const VirtualizedList = enhanceScrollView(\n  NativeVirtualizedList\n) as React.ElementType<VirtualizedListProps<unknown>>;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";"],"sourceRoot":""}