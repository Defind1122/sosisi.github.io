{"version":3,"sources":["assets/metamask-dark.png","assets/metamask.png","assets/sushiswap.jpg","src/components/FlexView.tsx","src/constants/tokens.ts","src/constants/dimension.ts","src/components/Button.tsx","src/utils/index.ts","src/hooks/useStyles.tsx","src/hooks/useAllCommonPairs.tsx","src/hooks/useSDK.tsx","src/components/Container.tsx","src/components/Content.tsx","src/components/Title.tsx","src/components/svg/SvgBackgroundDark.tsx","src/components/svg/SvgBackgroundLight.tsx","src/components/BackgroundImage.tsx","src/components/app/AppHeader.tsx","src/components/web/ConnectToWallet.tsx","src/screens/Screen.tsx","src/components/web/WebSubMenu.tsx","src/utils/fetch-utils.ts","src/constants/Fraction.ts","src/constants/colors.ts","src/hooks/useColors.tsx","src/constants/contracts.ts","src/context/EthersContext.tsx","src/context/GlobalContext.tsx","src/utils/analytics-utils.ts","src/context/index.tsx","src/components/svg/SvgMoon.tsx","src/components/svg/SvgSun.tsx","src/components/DarkModeSwitch.tsx","src/components/web/MobileWebMenu.tsx","src/components/svg/SvgLogo.tsx","src/components/web/WebHeader.tsx","src/screens/EmptyScreen.tsx","src/screens/index.tsx","App.tsx","globals.js","src/components/Text.tsx"],"names":["module","exports","FlexView","props","flexDirection","direction","style","ETH","name","address","ethers","constants","AddressZero","decimals","symbol","logoURI","balance","BigNumber","from","SCREEN_WIDTH","Math","round","Dimensions","get","width","SCREEN_HEIGHT","height","HEADER_HEIGHT","HEADER_WIDTH","DESKTOP_CONTENT_WIDTH","SUB_MENU_HEIGHT","IS_DESKTOP","Spacing","tiny","small","normal","large","huge","Button","useColors","accent","textMedium","placeholder","backgroundLight","type","size","fontSize","fontFamily","fontWeight","color","disabled","loading","onPress","undefined","loadingProps","buttonStyle","paddingHorizontal","backgroundColor","borderColor","titleStyle","disabledTitleStyle","disabledStyle","CONTRACTS","ERC20","IUniswapV2Factory","IUniswapV2Pair","IUniswapV2Router02","IWETH","MasterChef","SushiBar","SushiRoll","OrderBook","Settlement","LPTokenScanner","abi","formatUSD","value","maxFraction","formatter","Intl","NumberFormat","currency","minimumFractionDigits","maximumFractionDigits","format","formatPercentage","formatted","String","split","length","substr","formatBalance","utils","formatUnits","parseBalance","parseUnits","isEmptyValue","text","isBigNumber","isZero","replace","convertToken","token","WETH","SDKToken","ChainId","MAINNET","convertAmount","amount","TokenAmount","toString","parseCurrencyAmount","toExact","getContract","signerOrProvider","contract","Contract","pow10","exp","pow","useStyles","shadowColor","shadow","borderDark","border","useCallback","attrs","borderWidth","borderRadius","radius","padding","elevation","shadowOffset","shadowOpacity","shadowRadius","overflow","DAI","Token","USDC","USDT","SUSHI","YAM","AMPL","BASES_TO_CHECK_TRADES_AGAINST","CUSTOM_BASES","wrappedCurrency","ETHER","useAllCommonPairs","loadAllCommonPairs","currencyA","currencyB","provider","a","async","bases","tokenA","tokenB","basePairs","flatMap","base","map","otherBase","filter","t0","t1","allPairCombinations","tokens","Boolean","b","customBases","customBasesA","customBasesB","find","equals","Promise","all","pair","Fetcher","fetchPairData","pairs","minAmount","percent","sub","mul","numerator","div","denominator","Order","maker","fromToken","toToken","amountIn","amountOutMin","recipient","deadline","floor","Date","now","v","r","s","filledAmountIn","canceled","this","eq","toNumber","SETTLEMENT","settlement","getAddress","hashOfOrder","hash","signMessage","arrayify","signature","splitSignature","sign","useSDK","useContext","EthersContext","ethereum","getTotalSupply","allowedSlippage","Percent","getTrade","fromAmount","isETH","to","Currency","CurrencyAmount","ether","Trade","bestTradeExactIn","maxHops","maxNumResults","swap","trade","signer","Router","feeOnTransfer","ttl","params","swapCallParameters","router","ROUTER","estimateGas","methodName","args","gasLimit","functions","tx","logTransaction","arg","createOrder","kovanSigner","order","toArgs","orderBook","ORDER_BOOK","cancelOrder","slice","queryOrderFilledEvents","filters","OrderFilled","queryFilter","wrapETH","weth","deposit","unwrapETH","withdraw","getPair","addLiquidity","toAmount","getTime","removeLiquidityETH","liquidity","amountETH","removeLiquidity","addLiquidityETH","lpTokenId","masterChef","MASTER_CHEF","enterSushiBar","sushiBar","SUSHI_BAR","enter","leaveSushiBar","leave","migrate","lpToken","sushiRoll","SUSHI_ROLL","Zero","migrateWithPermit","signERC2612Permit","permit","calculateSwapFee","calculateLimitOrderFee","calculateLimitOrderReturn","price","limitOrderFeeDeducted","swapFeeDeducted","Fraction","parse","apply","calculateAmountOfLPTokenMinted","liquidityToken","totalSupply","getLiquidityMinted","Container","Platform","select","web","contentContainerStyle","flex","default","Content","darkMode","GlobalContext","background","marginLeft","marginRight","marginTop","marginBottom","Title","SvgBackgroundDark","viewBox","fillRule","clipRule","strokeLinecap","strokeMiterlimit","transform","fill","d","id","clipPath","cx","cy","stroke","strokeWidth","strokeLinejoin","rx","ry","strokeDasharray","fillOpacity","x1","y1","x2","y2","gradientUnits","gradientTransform","offset","stopColor","stopOpacity","SvgBackgroundLight","BackgroundImage","View","position","aspectRatio","alignSelf","AppHeader","StatusBar","translucent","ConnectButton","primary","setEthereum","metaMask","window","isMetaMask","request","method","alert","title","containerStyle","marginHorizontal","WalletConnectButton","WalletConnectProvider","rpc","1","enable","ConnectWallet","source","require","alignItems","justifyContent","Image","WebScreen","chainId","Text","light","textAlign","top","right","bottom","left","ConnectToWallet","AppScreen","Screen","SwapSubMenu","WebSubMenu","items","path","LiquiditySubMenu","MigrateSubMenu","StakingSubMenu","FarmingSubMenu","submenu","item","MenuItem","key","textLight","match","useRouteMatch","active","isExact","paddingTop","paddingBottom","textDecoration","fetchTokens","account","customTokens","fetch","response","json","fetchTokenBalances","balances","ALCHEMY_PROVIDER","getBalance","i","sort","t2","fetchPools","sushiData","sushi","info","masterchef","masterchefInfo","pools","pool","fetchPool","fetchStakedValue","fetchPairTokens","result","apy","calcAPY","derivedETH","allocPoint","totalAllocPoint","totalValueETH","sushiRewardedPerYear","calcSushiRewardedPerYear","totalValueUSD","multiplier","fetchMyPools","fetchMyPool","fetchMyStake","myStake","amountDeposited","pendingSushi","blocksPerDay","stakedValue","poolId","userInfo","findOrFetchToken","token0","token1","fetchMyLPTokens","fetchLPTokens","SUSHISWAP_FACTORY","fetchMyUniswapLPTokens","UNISWAP_FACTORY","factory","factoryContract","allPairsLength","scanner","LP_TOKEN_SCANNER","pages","push","page","findPairs","min","flat","index","erc20","Number","t","toLowerCase","send","meta","fetchTokenMeta","logo","field","callStatic","e","data","addresses","tokenBalances","tokenBalance","fetchMyLimitOrders","canceledHashes","numberOfHashesOfMaker","hashesOfMaker","hashes","HashZero","orderOfHash","filledAmountInOfHash","includes","myOrders","compareOrders","o0","o1","status","compared","fetchMyCanceledLimitOrderHashes","numberOfCanceledHashesOfMaker","allCanceledHashes","sdk","numeratorToken","denominatorToken","NAN","ZERO","BASE","isNaN","fraction","gt","lt","maxFractions","str","endsWith","substring","One","Colors","common","white","transparent","secondary","green","red","twitter","facebook","header","textDark","overlay","dark","providers","AlchemyProvider","KOVAN_PROVIDER","React","createContext","_ethereum","ensName","addOnBlockListener","_name","_listener","removeOnBlockListener","updateTokens","loadingTokens","addCustomToken","_token","removeCustomToken","approveToken","_spender","_amount","getTokenAllowance","getTokenBalance","_who","EthersContextProvider","children","useState","setProvider","setSigner","setKovanSigner","setChainId","setAddress","setENSName","onBlockListeners","setOnBlockListeners","setTokens","setCustomTokens","setLoadingTokens","useEffect","Wallet","useAsyncEffect","web3","Web3Provider","getSigner","web3Signer","onAccountsChanged","accounts","Analytics","onChainChanged","onDisconnect","on","off","lookupAddress","ens","JSON","AsyncStorage","getItem","findIndex","custom","setItem","stringify","spender","MaxUint256","approve","allowance","who","balanceOf","listener","old","onBlock","block","Object","entries","Provider","EthersContextConsumer","Consumer","load","clear","setDarkMode","_darkMode","mnemonic","setMnemonic","_mnemonic","GlobalContextProvider","colorScheme","useColorScheme","mode","mne","removeItem","GlobalContextConsumer","gasPrice","ContextProvider","SvgMoon","SvgSun","DarkModeSwitch","TouchableHighlight","activeOpacity","underlayColor","margin","CloseButton","MobileWebMenuItem","startsWith","Status","connected","isWalletConnect","disconnect","MobileWebMenu","expanded","onCollapse","animationType","visible","TouchableWithoutFeedback","paddingRight","SvgLogo","Menu","MenuIcon","onExpand","confirm","CloseIcon","paddingLeft","WebHeader","zIndex","borderBottomWidth","onExpandMenu","EmptyScreen","FarmingScreen","lazy","HarvestScreen","LiquidityScreen","MigrateScreen","MyLimitOrdersScreen","RemoveLiquidityScreen","StakeScreen","UnstakeScreen","SwapScreen","HomeScreen","Screens","OS","WebScreens","menuExpanded","setMenuExpanded","fallback","Tab","createBottomTabNavigator","AppScreens","theme","DefaultTheme","colors","card","notification","NavigationContainer","Navigator","tabBarOptions","activeTintColor","inactiveTintColor","labelStyle","component","options","tabOptions","iconName","tabBarIcon","App","useFonts","OpenSans_300Light","regular","OpenSans_400Regular","bold","OpenSans_600SemiBold","AppLoading","global","Buffer","medium","note","h1Style","h2Style","h3Style","h4Style","caption"],"mappings":"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","file":"static/js/app.59edf6c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/metamask-dark.2137a831.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask.15e22fef.png\";","module.exports = __webpack_public_path__ + \"static/media/sushiswap.ef005f32.jpg\";","import React, { FunctionComponent } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\ninterface FlexViewProps extends ViewProps {\n    direction?: \"row\" | \"column\";\n}\n\nconst FlexView: FunctionComponent<FlexViewProps> = props => {\n    const flexDirection = props.direction || \"row\";\n    return <View {...props} style={[{ flexDirection }, props.style]} />;\n};\nexport default FlexView;\n","import { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\n\nexport const ETH: Token = {\n    name: \"Ethereum\",\n    address: ethers.constants.AddressZero,\n    decimals: 18,\n    symbol: \"ETH\",\n    logoURI: \"https://lite.sushiswap.fi/images/tokens/ETH.png\",\n    balance: ethers.BigNumber.from(0)\n};\n","import { Dimensions } from \"react-native\";\n\nexport const SCREEN_WIDTH = Math.round(Dimensions.get(\"window\").width);\nexport const SCREEN_HEIGHT = Math.round(Dimensions.get(\"window\").height);\nexport const IS_HIGH_RESOLUTION = SCREEN_HEIGHT > 667;\nexport const HEADER_HEIGHT = 64;\nexport const HEADER_WIDTH = 980;\nexport const DESKTOP_CONTENT_WIDTH = 540;\nexport const SUB_MENU_HEIGHT = 40;\nexport const IS_DESKTOP = SCREEN_WIDTH > DESKTOP_CONTENT_WIDTH;\n\nexport const Spacing = IS_HIGH_RESOLUTION\n    ? {\n          tiny: 8,\n          small: 16,\n          normal: 32,\n          large: 48,\n          huge: 64\n      }\n    : {\n          tiny: 6,\n          small: 12,\n          normal: 24,\n          large: 32,\n          huge: 48\n      };\n","import React, { FC } from \"react\";\nimport { Button as NativeButton, ButtonProps as NativeButtonProps } from \"react-native-elements\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nexport interface ButtonProps extends NativeButtonProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Button: FC<ButtonProps> = props => {\n    const { accent, textMedium, placeholder, backgroundLight } = useColors();\n    const type = props.type || \"solid\";\n    const size = props.size || \"normal\";\n    const height = props.size === \"small\" ? 36 : size === \"normal\" ? 45 : 54;\n    const fontSize = props.size === \"small\" ? 13 : size === \"normal\" ? 15 : 18;\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = type === \"solid\" ? \"white\" : props.color || textMedium;\n    return (\n        <NativeButton\n            {...props}\n            disabled={props.loading || props.disabled}\n            onPress={props.loading ? undefined : props.onPress}\n            type={type}\n            loadingProps={{ color: textMedium }}\n            buttonStyle={[\n                {\n                    height,\n                    paddingHorizontal: Spacing.small,\n                    backgroundColor: \"transparent\",\n                    borderColor: color\n                },\n                props.buttonStyle\n            ]}\n            titleStyle={[{ fontSize, fontFamily, color }, props.titleStyle]}\n            disabledTitleStyle={[{ fontSize, fontFamily, color: placeholder }, props.titleStyle]}\n            style={[{ backgroundColor: type === \"solid\" ? props.color || accent : \"transparent\" }, props.style]}\n            disabledStyle={[\n                { backgroundColor: type === \"solid\" ? backgroundLight : \"transparent\" },\n                props.disabledStyle\n            ]}\n        />\n    );\n};\nexport default Button;\n","import ERC20 from \"@sushiswap/core/build/contracts/ERC20.json\";\nimport IUniswapV2Factory from \"@sushiswap/core/build/contracts/IUniswapV2Factory.json\";\nimport IUniswapV2Pair from \"@sushiswap/core/build/contracts/IUniswapV2Pair.json\";\nimport IUniswapV2Router02 from \"@sushiswap/core/build/contracts/IUniswapV2Router02.json\";\nimport IWETH from \"@sushiswap/core/build/contracts/IWETH.json\";\nimport MasterChef from \"@sushiswap/core/build/contracts/MasterChef.json\";\nimport SushiBar from \"@sushiswap/core/build/contracts/SushiBar.json\";\nimport SushiRoll from \"@sushiswap/core/build/contracts/SushiRoll.json\";\nimport { ChainId, CurrencyAmount, Token as SDKToken, TokenAmount, WETH } from \"@sushiswap/sdk\";\nimport OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\nimport { ethers } from \"ethers\";\nimport LPTokenScanner from \"../constants/abi/LPTokenScanner.json\";\nimport Token from \"../types/Token\";\n\nconst CONTRACTS = {\n    ERC20,\n    IUniswapV2Factory,\n    IUniswapV2Pair,\n    IUniswapV2Router02,\n    IWETH,\n    MasterChef,\n    SushiBar,\n    SushiRoll,\n    OrderBook,\n    Settlement,\n    LPTokenScanner: { abi: LPTokenScanner }\n};\n\nexport const formatUSD = (value: number, maxFraction = 0) => {\n    const formatter = new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0,\n        maximumFractionDigits: maxFraction\n    });\n    return formatter.format(value);\n};\n\nexport const formatPercentage = (value: number, maxFraction = 2) => {\n    const formatted = String(value * 100);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const formatBalance = (value: ethers.BigNumberish, decimals = 18, maxFraction = 0) => {\n    const formatted = ethers.utils.formatUnits(value, decimals);\n    if (maxFraction > 0) {\n        const split = formatted.split(\".\");\n        if (split.length > 1) {\n            return split[0] + \".\" + split[1].substr(0, maxFraction);\n        }\n    }\n    return formatted;\n};\n\nexport const parseBalance = (value: string, decimals = 18) => {\n    return ethers.utils.parseUnits(value || \"0\", decimals);\n};\n\nexport const isEmptyValue = (text: string) =>\n    ethers.BigNumber.isBigNumber(text)\n        ? ethers.BigNumber.from(text).isZero()\n        : text === \"\" || text.replace(/0/g, \"\").replace(/\\./, \"\") === \"\";\n\nexport const convertToken = (token: Token) => {\n    return token.symbol === \"ETH\" ? WETH[\"1\"] : new SDKToken(ChainId.MAINNET, token.address, token.decimals);\n};\n\nexport const convertAmount = (token: Token, amount: string) => {\n    return new TokenAmount(convertToken(token), parseBalance(amount, token.decimals).toString());\n};\n\nexport const parseCurrencyAmount = (value: CurrencyAmount, decimals = 18) => {\n    return ethers.BigNumber.from(parseBalance(value.toExact(), decimals));\n};\n\nexport const getContract = (\n    name: string,\n    address: string,\n    signerOrProvider: ethers.Signer | ethers.providers.Provider\n) => {\n    const contract = CONTRACTS[name];\n    return new ethers.Contract(address, contract.abi, signerOrProvider);\n};\n\nexport const pow10 = (exp: ethers.BigNumberish) => {\n    return ethers.BigNumber.from(10).pow(exp);\n};\n\nexport const formatDate = (date: Date) => {\n    return date.toLocaleDateString(\"en-US\") + \" \" + date.toLocaleTimeString(\"en-US\");\n};\n","import { useCallback } from \"react\";\nimport { ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"./useColors\";\n\nconst useStyles = () => {\n    const { shadow: shadowColor, borderDark } = useColors();\n    const border = useCallback(\n        (attrs?: { color?: string; radius?: number }) => ({\n            borderColor: attrs?.color || borderDark,\n            borderWidth: 1,\n            borderRadius: attrs?.radius || 8,\n            padding: Spacing.small\n        }),\n        []\n    );\n    const shadow = () =>\n        ({\n            borderRadius: Spacing.tiny,\n            elevation: Spacing.small,\n            shadowColor,\n            shadowOffset: { width: 0, height: 4 },\n            shadowOpacity: 0.5,\n            shadowRadius: 4,\n            overflow: \"visible\"\n        } as ViewStyle);\n    return { border, shadow };\n};\n\nexport default useStyles;\n","import { useCallback } from \"react\";\n\nimport { ChainId, Currency, ETHER, Fetcher, Pair, Token, WETH } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\n\nconst DAI = new Token(ChainId.MAINNET, \"0x6B175474E89094C44Da98b954EedeAC495271d0F\", 18, \"DAI\", \"Dai Stablecoin\");\nconst USDC = new Token(ChainId.MAINNET, \"0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\", 6, \"USDC\", \"USD//C\");\nconst USDT = new Token(ChainId.MAINNET, \"0xdAC17F958D2ee523a2206206994597C13D831ec7\", 6, \"USDT\", \"Tether USD\");\nconst SUSHI = new Token(ChainId.MAINNET, \"0x6B3595068778DD592e39A122f4f5a5cF09C90fE2\", 18, \"SUSHI\", \"SushiToken\");\nconst YAM = new Token(ChainId.MAINNET, \"0x0e2298E3B3390e3b945a5456fBf59eCc3f55DA16\", 18, \"YAM\", \"YAM\");\nconst AMPL = new Token(ChainId.MAINNET, \"0xD46bA6D942050d489DBd938a2C909A5d5039A161\", 9, \"AMPL\", \"Ampleforth\");\n\nconst BASES_TO_CHECK_TRADES_AGAINST = [WETH[ChainId.MAINNET], DAI, USDC, USDT, SUSHI, YAM];\nconst CUSTOM_BASES = {\n    [AMPL.address]: [DAI, WETH[ChainId.MAINNET]]\n};\n\nfunction wrappedCurrency(currency: Currency | undefined): Token | undefined {\n    return currency === ETHER ? WETH[ChainId.MAINNET] : currency instanceof Token ? currency : undefined;\n}\n\n// Source: https://github.com/Uniswap/uniswap-interface/blob/master/src/hooks/Trades.ts\nconst useAllCommonPairs = () => {\n    const loadAllCommonPairs = useCallback(\n        // tslint:disable-next-line:max-func-body-length\n        async (currencyA?: Currency, currencyB?: Currency, provider?: ethers.providers.BaseProvider) => {\n            const bases: Token[] = BASES_TO_CHECK_TRADES_AGAINST;\n            const [tokenA, tokenB] = [wrappedCurrency(currencyA), wrappedCurrency(currencyB)];\n            const basePairs: [Token, Token][] = bases\n                .flatMap((base): [Token, Token][] => bases.map(otherBase => [base, otherBase]))\n                .filter(([t0, t1]) => t0.address !== t1.address);\n\n            const allPairCombinations =\n                tokenA && tokenB\n                    ? [\n                          // the direct pair\n                          [tokenA, tokenB],\n                          // token A against all bases\n                          ...bases.map((base): [Token, Token] => [tokenA, base]),\n                          // token B against all bases\n                          ...bases.map((base): [Token, Token] => [tokenB, base]),\n                          // each base against all bases\n                          ...basePairs\n                      ]\n                          .filter((tokens): tokens is [Token, Token] => Boolean(tokens[0] && tokens[1]))\n                          .filter(([t0, t1]) => t0.address !== t1.address)\n                          .filter(([a, b]) => {\n                              const customBases = CUSTOM_BASES;\n                              if (!customBases) return true;\n\n                              const customBasesA: Token[] | undefined = customBases[a.address];\n                              const customBasesB: Token[] | undefined = customBases[b.address];\n\n                              if (!customBasesA && !customBasesB) return true;\n\n                              if (customBasesA && !customBasesA.find(base => tokenB.equals(base))) return false;\n                              return !(customBasesB && !customBasesB.find(base => tokenA.equals(base)));\n                          })\n                    : [];\n\n            const pairs = await Promise.all(\n                allPairCombinations.map(async pair => {\n                    try {\n                        return await Fetcher.fetchPairData(pair[0], pair[1], provider);\n                    } catch (e) {\n                        return null;\n                    }\n                })\n            );\n            return pairs.filter(pair => pair !== null) as Pair[];\n        },\n        []\n    );\n\n    return { loadAllCommonPairs };\n};\n\nexport default useAllCommonPairs;\n","import { useCallback, useContext } from \"react\";\n\nimport { Currency, CurrencyAmount, Fetcher, Pair, Percent, Router, TokenAmount, Trade, WETH } from \"@sushiswap/sdk\";\nimport { signERC2612Permit } from \"eth-permit\";\nimport { ethers } from \"ethers\";\nimport { MASTER_CHEF, ORDER_BOOK, ROUTER, SETTLEMENT, SUSHI_BAR, SUSHI_ROLL } from \"../constants/contracts\";\nimport Fraction from \"../constants/Fraction\";\nimport { ETH } from \"../constants/tokens\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { convertToken, getContract, pow10 } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport useAllCommonPairs from \"./useAllCommonPairs\";\n\n// tslint:disable-next-line:max-func-body-length\nconst useSDK = () => {\n    const { ethereum, getTotalSupply } = useContext(EthersContext);\n    const { loadAllCommonPairs } = useAllCommonPairs();\n    const allowedSlippage = new Percent(\"50\", \"10000\"); // 0.05%\n    const ttl = 60 * 20;\n\n    const getTrade = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            provider: ethers.providers.BaseProvider\n        ) => {\n            if (provider) {\n                const isETH = fromToken.symbol === \"ETH\";\n                const from = convertToken(fromToken);\n                const to = toToken.symbol === \"ETH\" ? Currency.ETHER : convertToken(toToken);\n                const pairs = await loadAllCommonPairs(from, to, provider);\n                const amount = isETH\n                    ? CurrencyAmount.ether(fromAmount.toString())\n                    : new TokenAmount(from, fromAmount.toString());\n                return Trade.bestTradeExactIn(pairs, amount, to, { maxHops: 3, maxNumResults: 1 })[0];\n            }\n        },\n        []\n    );\n\n    const swap = useCallback(async (trade: Trade, signer: ethers.Signer) => {\n        if (trade) {\n            const params = Router.swapCallParameters(trade, {\n                feeOnTransfer: false,\n                allowedSlippage,\n                recipient: await signer.getAddress(),\n                ttl\n            });\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const gasLimit = await router.estimateGas[params.methodName](...params.args, {\n                value: params.value\n            });\n            const tx = await router.functions[params.methodName](...params.args, {\n                value: params.value,\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            await logTransaction(\n                tx,\n                \"UniswapV2Router02.\" + params.methodName + \"()\",\n                ...params.args.map(arg => arg.toString())\n            );\n            return {\n                trade,\n                tx\n            };\n        }\n    }, []);\n\n    const createOrder = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            amountIn: ethers.BigNumber,\n            amountOutMin: ethers.BigNumber,\n            signer: ethers.Signer,\n            kovanSigner: ethers.Signer\n        ) => {\n            const order = new Order(signer, fromToken, toToken, amountIn, amountOutMin, await signer.getAddress());\n            const args = await order.toArgs();\n\n            const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n            const gasLimit = await orderBook.estimateGas.createOrder(args);\n            const tx = await orderBook.createOrder(args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return await logTransaction(tx, \"OrderBook.createOrder()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const cancelOrder = useCallback(async (order: Order, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const args = (await order.toArgs()).slice(0, 7);\n        const gasLimit = await settlement.estimateGas.cancelOrder(...args);\n        const tx = await settlement.cancelOrder(...args, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return await logTransaction(tx, \"Settlement.cancelOrder()\", ...args.map(arg => arg.toString()));\n    }, []);\n\n    const queryOrderFilledEvents = useCallback(async (hash: string, signer: ethers.Signer) => {\n        const settlement = getContract(\"Settlement\", SETTLEMENT, signer);\n        const filter = settlement.filters.OrderFilled(hash);\n        return await settlement.queryFilter(filter);\n    }, []);\n\n    const wrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.deposit({\n            value: amount\n        });\n        const tx = await weth.deposit({\n            value: amount,\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.deposit()\");\n    }, []);\n\n    const unwrapETH = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const weth = getContract(\"IWETH\", WETH[1].address, signer);\n        const gasLimit = await weth.estimateGas.withdraw(amount);\n        const tx = await weth.withdraw(amount, {\n            gasLimit\n        });\n        return await logTransaction(tx, \"WETH.withdraw()\");\n    }, []);\n\n    const getPair = useCallback(async (fromToken: Token, toToken: Token, provider: ethers.providers.BaseProvider) => {\n        const from = convertToken(fromToken);\n        const to = convertToken(toToken);\n        return await Fetcher.fetchPairData(from, to, provider);\n    }, []);\n\n    const addLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                fromAmount,\n                toAmount,\n                minAmount(fromAmount, allowedSlippage),\n                minAmount(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidity(...args);\n            const tx = await router.functions.addLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidityETH = useCallback(\n        async (\n            token: Token,\n            liquidity: ethers.BigNumber,\n            amount: ethers.BigNumber,\n            amountETH: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                liquidity,\n                minAmount(amount, allowedSlippage),\n                minAmount(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidityETH(...args);\n            const tx = await router.functions.removeLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const removeLiquidity = useCallback(\n        async (\n            fromToken: Token,\n            toToken: Token,\n            liquidity: ethers.BigNumber,\n            fromAmount: ethers.BigNumber,\n            toAmount: ethers.BigNumber,\n            signer: ethers.Signer\n        ) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                fromToken.address,\n                toToken.address,\n                liquidity,\n                minAmount(fromAmount, allowedSlippage),\n                minAmount(toAmount, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.removeLiquidity(...args);\n            const tx = await router.functions.removeLiquidity(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"UniswapV2Router02.removeLiquidity()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const addLiquidityETH = useCallback(\n        async (token: Token, amount: ethers.BigNumber, amountETH: ethers.BigNumber, signer: ethers.Signer) => {\n            const router = getContract(\"IUniswapV2Router02\", ROUTER, signer);\n            const deadline = `0x${(Math.floor(new Date().getTime() / 1000) + ttl).toString(16)}`;\n            const args = [\n                token.address,\n                amount,\n                minAmount(amount, allowedSlippage),\n                minAmount(amountETH, allowedSlippage),\n                await signer.getAddress(),\n                deadline\n            ];\n            const gasLimit = await router.estimateGas.addLiquidityETH(...args, {\n                value: amountETH\n            });\n            const tx = await router.functions.addLiquidityETH(...args, {\n                gasLimit: gasLimit.mul(120).div(100),\n                value: amountETH\n            });\n            return logTransaction(tx, \"UniswapV2Router02.addLiquidityETH()\", ...args.map(arg => arg.toString()));\n        },\n        []\n    );\n\n    const deposit = useCallback(async (lpTokenId: number, amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const gasLimit = await masterChef.estimateGas.deposit(lpTokenId, amount);\n        const tx = await masterChef.deposit(lpTokenId, amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"MasterChef.deposit()\", lpTokenId, amount.toString());\n    }, []);\n\n    const withdraw = useCallback(async (lpTokenId: number, amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const masterChef = getContract(\"MasterChef\", MASTER_CHEF, signer);\n        const gasLimit = await masterChef.estimateGas.withdraw(lpTokenId, amount);\n        const tx = await masterChef.withdraw(lpTokenId, amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"MasterChef.withdraw()\", lpTokenId, amount.toString());\n    }, []);\n\n    const enterSushiBar = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const sushiBar = getContract(\"SushiBar\", SUSHI_BAR, signer);\n        const gasLimit = await sushiBar.estimateGas.enter(amount);\n        const tx = await sushiBar.enter(amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"SushiBar.enter()\", amount.toString());\n    }, []);\n\n    const leaveSushiBar = useCallback(async (amount: ethers.BigNumber, signer: ethers.Signer) => {\n        const sushiBar = getContract(\"SushiBar\", SUSHI_BAR, signer);\n        const gasLimit = await sushiBar.estimateGas.leave(amount);\n        const tx = await sushiBar.leave(amount, {\n            gasLimit: gasLimit.mul(120).div(100)\n        });\n        return logTransaction(tx, \"SushiBar.leave()\", amount.toString());\n    }, []);\n\n    const migrate = useCallback(\n        async (lpToken: LPToken, amount: ethers.BigNumber, signer: ethers.Signer) => {\n            const sushiRoll = getContract(\"SushiRoll\", SUSHI_ROLL, signer);\n            const deadline = Math.floor(new Date().getTime() / 1000) + ttl;\n            const args = [\n                lpToken.tokenA.address,\n                lpToken.tokenB.address,\n                amount,\n                ethers.constants.Zero,\n                ethers.constants.Zero,\n                deadline\n            ];\n            const gasLimit = await sushiRoll.estimateGas.migrate(...args);\n            const tx = await sushiRoll.migrate(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"SushiRoll.migrate()\", ...args.map(arg => arg.toString()));\n        },\n        [ethereum]\n    );\n\n    const migrateWithPermit = useCallback(\n        async (lpToken: LPToken, amount: ethers.BigNumber, signer: ethers.Signer) => {\n            const sushiRoll = getContract(\"SushiRoll\", SUSHI_ROLL, signer);\n            const deadline = Math.floor(new Date().getTime() / 1000) + ttl;\n            const permit = await signERC2612Permit(\n                ethereum,\n                lpToken.address,\n                await signer.getAddress(),\n                SUSHI_ROLL,\n                amount.toString(),\n                deadline\n            );\n            const args = [\n                lpToken.tokenA.address,\n                lpToken.tokenB.address,\n                amount,\n                ethers.constants.Zero,\n                ethers.constants.Zero,\n                deadline,\n                permit.v,\n                permit.r,\n                permit.s\n            ];\n            const gasLimit = await sushiRoll.estimateGas.migrateWithPermit(...args);\n            const tx = await sushiRoll.migrateWithPermit(...args, {\n                gasLimit: gasLimit.mul(120).div(100)\n            });\n            return logTransaction(tx, \"SushiRoll.migrateWithPermit()\", ...args.map(arg => arg.toString()));\n        },\n        [ethereum]\n    );\n\n    const calculateSwapFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(3).div(1000);\n    };\n\n    const calculateLimitOrderFee = (fromAmount: ethers.BigNumber) => {\n        return fromAmount.mul(2).div(1000);\n    };\n\n    const calculateLimitOrderReturn = (\n        fromToken: Token,\n        toToken: Token,\n        fromAmount: ethers.BigNumber,\n        price: string\n    ) => {\n        const limitOrderFeeDeducted = fromAmount.sub(calculateLimitOrderFee(fromAmount));\n        const swapFeeDeducted = limitOrderFeeDeducted.sub(calculateSwapFee(limitOrderFeeDeducted));\n        return Fraction.parse(price).apply(swapFeeDeducted.mul(pow10(toToken.decimals)).div(pow10(fromToken.decimals)));\n    };\n\n    const calculateAmountOfLPTokenMinted = async (pair: Pair, fromAmount: TokenAmount, toAmount: TokenAmount) => {\n        const totalSupply = await getTotalSupply(pair.liquidityToken.address);\n        if (totalSupply) {\n            return pair.getLiquidityMinted(\n                new TokenAmount(pair.liquidityToken, totalSupply.toString()),\n                fromAmount,\n                toAmount\n            );\n        }\n    };\n\n    return {\n        allowedSlippage,\n        getTrade,\n        swap,\n        createOrder,\n        cancelOrder,\n        queryOrderFilledEvents,\n        wrapETH,\n        unwrapETH,\n        getPair,\n        addLiquidity,\n        addLiquidityETH,\n        removeLiquidity,\n        removeLiquidityETH,\n        deposit,\n        withdraw,\n        enterSushiBar,\n        leaveSushiBar,\n        migrate,\n        migrateWithPermit,\n        calculateSwapFee,\n        calculateLimitOrderFee,\n        calculateLimitOrderReturn,\n        calculateAmountOfLPTokenMinted\n    };\n};\n\nconst minAmount = (amount: ethers.BigNumber, percent: Percent) => {\n    return amount.sub(amount.mul(percent.numerator.toString()).div(percent.denominator.toString()));\n};\n\nexport type OrderStatus = \"Open\" | \"Expired\" | \"Filled\" | \"Canceled\";\n\nexport class Order {\n    maker: ethers.Signer;\n    fromToken: Token;\n    toToken: Token;\n    amountIn: ethers.BigNumber;\n    amountOutMin: ethers.BigNumber;\n    recipient: string;\n    deadline: ethers.BigNumber;\n    v?: number;\n    r?: string;\n    s?: string;\n    filledAmountIn?: ethers.BigNumber;\n    canceled?: boolean;\n\n    constructor(\n        maker: ethers.Signer,\n        fromToken: Token,\n        toToken: Token,\n        amountIn: ethers.BigNumber,\n        amountOutMin: ethers.BigNumber,\n        recipient: string,\n        deadline = ethers.BigNumber.from(Math.floor(Date.now() / 1000 + 24 * 3600)),\n        v?: number,\n        r?: string,\n        s?: string,\n        filledAmountIn?: ethers.BigNumber,\n        canceled?: boolean\n    ) {\n        this.maker = maker;\n        this.fromToken = fromToken;\n        this.toToken = toToken;\n        this.amountIn = amountIn;\n        this.amountOutMin = amountOutMin;\n        this.recipient = recipient;\n        this.deadline = deadline;\n        this.v = v;\n        this.r = r;\n        this.s = s;\n        this.filledAmountIn = filledAmountIn;\n        this.canceled = canceled;\n    }\n\n    status(): OrderStatus {\n        return this.canceled\n            ? \"Canceled\"\n            : this.filledAmountIn?.eq(this.amountIn)\n            ? \"Filled\"\n            : this.deadline.toNumber() * 1000 < Date.now()\n            ? \"Expired\"\n            : \"Open\";\n    }\n\n    async hash() {\n        const settlement = await getContract(\"Settlement\", SETTLEMENT, this.maker);\n        return await settlement.hashOfOrder(\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline\n        );\n    }\n\n    async sign() {\n        const hash = await this.hash();\n        const signature = await this.maker.signMessage(ethers.utils.arrayify(hash));\n        return ethers.utils.splitSignature(signature);\n    }\n\n    async toArgs() {\n        const { v, r, s } = this.v && this.r && this.s ? { v: this.v, r: this.r, s: this.s } : await this.sign();\n        return [\n            await this.maker.getAddress(),\n            this.fromToken.address,\n            this.toToken.address,\n            this.amountIn,\n            this.amountOutMin,\n            this.recipient,\n            this.deadline,\n            v,\n            r,\n            s\n        ];\n    }\n}\n\nexport default useSDK;\n","import React, { FC } from \"react\";\nimport { Platform, SafeAreaView, ScrollView, ViewProps } from \"react-native\";\n\nexport type ContainerProps = ViewProps;\n\nconst Container: FC<ContainerProps> = props => {\n    return Platform.select({\n        web: (\n            <ScrollView\n                contentContainerStyle={{ flex: 1 }}\n                style={[\n                    {\n                        flex: 1\n                    },\n                    props.style\n                ]}\n                {...props}\n            />\n        ),\n        default: (\n            <SafeAreaView style={{ flex: 1 }}>\n                <ScrollView {...props} />\n            </SafeAreaView>\n        )\n    });\n};\n\nexport default Container;\n","import React, { useContext } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { DESKTOP_CONTENT_WIDTH, IS_DESKTOP, SCREEN_WIDTH, Spacing, SUB_MENU_HEIGHT } from \"../constants/dimension\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst Content: React.FunctionComponent<ViewProps> = props => {\n    const { darkMode } = useContext(GlobalContext);\n    const { borderDark: borderColor, background } = useColors();\n    const { border, shadow } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: darkMode ? borderColor : undefined }),\n                    ...shadow(),\n                    backgroundColor: background,\n                    width: IS_DESKTOP ? DESKTOP_CONTENT_WIDTH : SCREEN_WIDTH - Spacing.large,\n                    marginLeft: \"auto\",\n                    marginRight: \"auto\",\n                    marginTop: Spacing.huge + SUB_MENU_HEIGHT,\n                    marginBottom: Spacing.large,\n                    padding: IS_DESKTOP ? Spacing.normal : Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Content;\n","import React, { FC } from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { IS_DESKTOP, Spacing } from \"../constants/dimension\";\nimport Text from \"./Text\";\n\ninterface TitleProps {\n    text: string;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n    style?: TextStyle;\n}\n\nconst Title: FC<TitleProps> = props => {\n    return (\n        <Text\n            fontWeight={props.fontWeight || \"bold\"}\n            style={[{ marginBottom: Spacing.tiny, fontSize: IS_DESKTOP ? 40 : 28 }, props.style]}>\n            {props.text}\n        </Text>\n    );\n};\n\nexport default Title;\n","import * as React from \"react\";\nimport Svg, {\n    Circle,\n    ClipPath,\n    Defs,\n    Ellipse,\n    G,\n    LinearGradient,\n    Path,\n    RadialGradient,\n    Stop,\n    SvgProps\n} from \"react-native-svg\";\n\n// tslint:disable-next-line:max-func-body-length\nfunction SvgBackgroundDark(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 2100 2100\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit={1.5}\n            {...props}>\n            <G transform=\"matrix(.92374 0 0 1.88904 -15674.56 -16430.71)\">\n                <Path fill=\"#0e0f23\" d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                <ClipPath id=\"prefix__a\">\n                    <Path d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                </ClipPath>\n                <G clipPath=\"url(#prefix__a)\">\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear2)\"\n                        strokeWidth={3}\n                        transform=\"matrix(1.08256 0 0 .52937 11950.485 6652.866)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear3)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.70103 0 0 .3428 14109.24 7569.495)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear4)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.65148 0 0 .31857 14389.612 7688.545)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear5)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.59951 0 0 .29316 14683.668 7813.402)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear6)\"\n                        strokeWidth={2.97}\n                        transform=\"matrix(1.45883 0 0 .71336 9821.49 5748.873)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear7)\"\n                        strokeWidth={1.09}\n                        transform=\"matrix(1.98142 0 0 .9689 6864.553 4493.326)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear8)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.08295 0 0 1.01856 6290.06 4249.393)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear9)\"\n                        strokeWidth={0.99}\n                        transform=\"matrix(2.1815 0 0 1.06675 5732.466 4012.633)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear10)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.51596 0 0 1.2303 3840.076 3209.103)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear11)\"\n                        strokeWidth={0.76}\n                        transform=\"matrix(2.84743 0 0 1.39238 1964.432 2412.72)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={2.98}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(1.02642 -.18032 .36875 .50192 -8192.387 8615.588)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.52195 -.0917 .18751 .25523 4129.043 8824.098)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.5544 .00739 .01511 -.2711 5758.093 11686.348)\"\n                    />\n                    <Path\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.46928 .14454 -.29559 .22948 10245.833 3948.758)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(-.05308 -.52873 .90826 -.0218 11138.133 21929.848)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(1.04567 .13701 -.23536 .42952 -4115.147 2068.338)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(.28019 -.51133 .87836 .11509 4233.503 20687.448)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#0e0f23\"\n                        stroke=\"#fff\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(.81456 -.34867 -.59895 -.33459 4984.583 20568.648)\"\n                    />\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\"\n                        />\n                        <G transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__b\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__b)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .23937 .4057 13752.838 7678.974)\"\n                        />\n                        <G transform=\"matrix(.5441 -.07676 .16282 .27595 15179.303 8147.075)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__c\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__c)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\"\n                        />\n                        <G transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__d\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__d)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .23684 .40605 13983.858 7907.01)\"\n                        />\n                        <G transform=\"matrix(.54457 -.07596 .1611 .27619 15407.406 8377.228)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__e\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__e)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\"\n                        />\n                        <G transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__f\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__f)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.143 .41641 14337.534 7060.022)\"\n                        />\n                        <G transform=\"matrix(.55847 .04586 -.09727 .28324 15209.655 7783.768)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__g\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__g)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\"\n                        />\n                        <G transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__h\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__h)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.17215 .44792 14309.713 6521.024)\"\n                        />\n                        <G transform=\"matrix(.60073 .0552 -.1171 .30467 15219.919 7311.01)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__i\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__i)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\"\n                        />\n                        <G transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__j\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__j)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2407 .4403 12950.42 7711.006)\"\n                        />\n                        <G transform=\"matrix(.59051 -.07719 .16372 .2995 14469.505 8230.993)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__k\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__k)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\"\n                        />\n                        <G transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__l\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__l)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.2057 .24809 17661.276 7556.892)\"\n                        />\n                        <G transform=\"matrix(.33273 .06596 -.1399 .16875 17997.348 8063.5)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__m\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__m)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5429.1 4921.27l-245.63-534.63c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l245.64 534.63-8.29 3.81z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={6.24}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(1.96709 .45188 -.9241 .9619 11860.057 2667.155)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00776 -.44649 18561.7 11282.448)\"\n                        />\n                        <Path\n                            d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(-1.35639 -.00564 .01257 -.7235 18543.284 12342.036)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.73}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00756 -.43517 18562.452 11239.16)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.77}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00736 -.42342 18563.234 11194.216)\"\n                        />\n                        <Path\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.81}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3139.43h14.614v1166.61h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00715 -.4115 18564.025 11148.607)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5300.61 5786.96c-.24-.17-.47-.35-.7-.53-17.41-13.86-4.09-63.98 30.06-114.74 1.44-2.13 7.58-10.81 9.18-12.95 35.31-47.46 76.53-76.3 96.18-67.31.9.41 1.75.9 2.55 1.47l125.89 89.04s2.73 2.01 3.31 2.57c15.89 15.44 1.4 66.2-33.58 116.88-.72 1.05-5.39 7.6-7 9.76-36.02 48.39-78.11 77.44-97.17 66.75-.47-.27-2.29-1.52-2.29-1.52l-126.43-89.42z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={11.5}\n                            transform=\"matrix(.99854 .20457 -.41815 .48829 15048.865 5342.07)\"\n                        />\n                        <Path\n                            d=\"M1040.64 697.661c0 22.723-51.581 41.17-115.115 41.17-63.534 0-115.116-18.447-115.116-41.17V546.583l.003.266c.4 22.6 51.827 40.904 115.113 40.904 63.534 0 115.115-18.448 115.115-41.17v151.078z\"\n                            fill=\"#0e0f23\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={5}\n                            transform=\"matrix(.9478 -.28962 .59237 .46355 16830.032 9233.44)\"\n                        />\n                        <Ellipse\n                            cx={925.525}\n                            cy={546.583}\n                            rx={115.115}\n                            ry={41.17}\n                            fill=\"#fff\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={5.19}\n                            transform=\"matrix(.9478 -.28962 .59487 .4655 16828.667 9232.372)\"\n                        />\n                        <G transform=\"matrix(.55592 -.16987 .26032 .2037 17374.22 9264.638)\">\n                            <Ellipse cx={925.525} cy={546.583} rx={115.115} ry={41.17} fill=\"#f14f9b\" />\n                            <Path\n                                d=\"M925.525 496.312c-45.853 0-85.627 9.645-105.389 23.272-11.22 7.737-16.547 17.689-16.547 26.999 0 9.311 5.327 19.262 16.547 26.999 19.762 13.627 59.536 23.272 105.389 23.272 45.852 0 85.625-9.645 105.385-23.272 11.22-7.737 16.55-17.688 16.55-26.999 0-9.31-5.33-19.262-16.55-26.999-19.76-13.627-59.533-23.272-105.385-23.272zm0 9.101c63.534 0 115.115 18.448 115.115 41.17s-51.581 41.17-115.115 41.17c-63.534 0-115.116-18.448-115.116-41.17s51.582-41.17 115.116-41.17z\"\n                                fill=\"#0e0f23\"\n                            />\n                        </G>\n                        <Path\n                            d=\"M11345.5 4849.24c37.3 20.18 78.8 24.3 118.1 24.29 39.4-.02 87.8-6.02 118.1-24.29\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={2.09}\n                            strokeLinejoin=\"round\"\n                            strokeDasharray=\"4.17,4.17,52.17,52.17\"\n                            transform=\"matrix(.79239 -.24213 .49524 .38754 6562.684 10128.41)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5418.56 4898.33l-235.09-511.69c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l235.1 511.69-8.29 3.81z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={6.24}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(1.90515 .51142 -1.04584 .93162 12852.245 2495.204)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35299 -.0473 .0651 -.44537 18433.904 11299.36)\"\n                        />\n                        <Path\n                            d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(-1.35299 -.0473 .1055 -.72168 18279.407 12356.292)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.73}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35299 -.0473 .06345 -.43408 18440.216 11256.18)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.77}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35299 -.0473 .06174 -.42236 18446.77 11211.35)\"\n                        />\n                        <Path\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.81}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3204.63h14.614v1101.41h-14.614z\"\n                            transform=\"matrix(-1.35299 -.0473 .06 -.41046 18453.418 11165.855)\"\n                        />\n                    </G>\n                    <G>\n                        <Path fill=\"#0e0f23\" fillOpacity={0.4} d=\"M16968.732 8697.914h2273.376v1111.677h-2273.376z\" />\n                    </G>\n                    <G>\n                        <Path\n                            fill=\"url(#prefix___Radial24)\"\n                            d=\"M22952.2 8435.28h1429.52v707.246H22952.2z\"\n                            transform=\"matrix(1.59031 0 0 1.57184 -19532.4 -4560.99)\"\n                        />\n                    </G>\n                </G>\n            </G>\n            <Defs>\n                <LinearGradient\n                    id=\"prefix___Linear2\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(1323.868) rotate(-48.234 5.87 -2.209)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear3\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2019.98) rotate(-48.234 3.706 -1.203)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear4\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2173.61) rotate(-48.234 3.415 -1.068)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear5\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 7345.403 -2188.287) scale(2362.04)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear6\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(982.411) rotate(-48.234 8.054 -3.223)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear7\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8019.154 -3350.118) scale(723.304)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear8\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8033.639 -3375.117) scale(688.047)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear9\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(656.966) rotate(-48.234 12.248 -5.171)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear10\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(569.632) rotate(-48.234 14.189 -6.072)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear11\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8109.595 -3506.09) scale(503.321)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <RadialGradient\n                    id=\"prefix___Radial24\"\n                    cx={0}\n                    cy={0}\n                    r={1}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"matrix(778.647 -360.127 670.211 418.392 23603 8795.41)\">\n                    <Stop offset={0} stopColor=\"#0e0f23\" stopOpacity={0} />\n                    <Stop offset={1} stopColor=\"#0e0f23\" />\n                </RadialGradient>\n            </Defs>\n        </Svg>\n    );\n}\n\nexport default SvgBackgroundDark;\n","import * as React from \"react\";\nimport Svg, {\n    Circle,\n    ClipPath,\n    Defs,\n    Ellipse,\n    G,\n    LinearGradient,\n    Path,\n    RadialGradient,\n    Stop,\n    SvgProps\n} from \"react-native-svg\";\n\n// tslint:disable-next-line:max-func-body-length\nfunction SvgBackgroundLight(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 2100 2100\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinecap=\"round\"\n            strokeMiterlimit={1.5}\n            {...props}>\n            <G transform=\"matrix(.92374 0 0 1.88904 -15674.56 -16430.7)\">\n                <Path fill=\"#fff\" d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                <ClipPath id=\"prefix__a\">\n                    <Path d=\"M16968.7 8697.91h2273.37v1111.68H16968.7z\" />\n                </ClipPath>\n                <G clipPath=\"url(#prefix__a)\">\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear2)\"\n                        strokeWidth={3}\n                        transform=\"matrix(1.08256 0 0 .52937 11950.485 6652.866)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear3)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.70103 0 0 .3428 14109.24 7569.495)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear4)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.65148 0 0 .31857 14389.612 7688.545)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear5)\"\n                        strokeWidth={3}\n                        transform=\"matrix(.59951 0 0 .29316 14683.668 7813.402)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear6)\"\n                        strokeWidth={2.97}\n                        transform=\"matrix(1.45883 0 0 .71336 9821.49 5748.873)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear7)\"\n                        strokeWidth={1.09}\n                        transform=\"matrix(1.98142 0 0 .9689 6864.553 4493.326)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear8)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.08295 0 0 1.01856 6290.06 4249.393)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear9)\"\n                        strokeWidth={0.99}\n                        transform=\"matrix(2.1815 0 0 1.06675 5732.466 4012.633)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear10)\"\n                        strokeWidth={2}\n                        transform=\"matrix(2.51596 0 0 1.2303 3840.076 3209.103)\"\n                    />\n                    <Circle\n                        cx={5658.22}\n                        cy={4913.19}\n                        r={373.284}\n                        fill=\"none\"\n                        stroke=\"url(#prefix___Linear11)\"\n                        strokeWidth={0.76}\n                        transform=\"matrix(2.84743 0 0 1.39238 1964.432 2412.72)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={2.98}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(1.02642 -.18032 .36875 .50192 -8192.387 8615.588)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.52195 -.0917 .18751 .25523 4129.043 8824.098)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.5544 .00739 .01511 -.2711 5758.093 11686.348)\"\n                    />\n                    <Path\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={5.86}\n                        strokeLinecap=\"square\"\n                        d=\"M22920.2 8819.54h51.406v51.406h-51.406z\"\n                        transform=\"matrix(.46928 .14454 -.29559 .22948 10245.833 3948.758)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(-.05308 -.52873 .90826 -.0218 11138.133 21929.848)\"\n                    />\n                    <Path\n                        d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                        fill=\"#fff\"\n                        stroke=\"#0e0f23\"\n                        strokeWidth={3.25}\n                        strokeLinecap=\"butt\"\n                        strokeMiterlimit={4}\n                        transform=\"matrix(1.04567 .13701 -.23536 .42952 -4115.147 2068.338)\"\n                    />\n                    <G>\n                        <Path\n                            d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                            fill=\"#fff\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.25}\n                            strokeLinecap=\"butt\"\n                            strokeMiterlimit={4}\n                            transform=\"matrix(.28019 -.51133 .87836 .11509 4233.503 20687.448)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M23712.1 8729.24l26.4 52.67h-52.7l26.3-52.67z\"\n                            fill=\"#fff\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.25}\n                            strokeLinecap=\"butt\"\n                            strokeMiterlimit={4}\n                            transform=\"matrix(.81456 -.34867 -.59895 -.33459 4984.583 20568.648)\"\n                        />\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\"\n                        />\n                        <G transform=\"matrix(.73934 -.10431 .21331 .36153 13855.732 7890.855)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__b\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__b)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73934 -.10431 .23937 .4057 13752.838 7678.974)\"\n                        />\n                        <G transform=\"matrix(.5441 -.07676 .16282 .27595 15179.303 8147.075)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__c\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__c)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\"\n                        />\n                        <G transform=\"matrix(.73998 -.10321 .21107 .36185 14085.434 8119.042)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__d\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__d)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.73998 -.10321 .23684 .40605 13983.858 7907.01)\"\n                        />\n                        <G transform=\"matrix(.54457 -.07596 .1611 .27619 15407.406 8377.228)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__e\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__e)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\"\n                        />\n                        <G transform=\"matrix(.75887 .06232 -.12744 .37109 14242.903 7272.822)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__f\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__f)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.75887 .06232 -.143 .41641 14337.534 7060.022)\"\n                        />\n                        <G transform=\"matrix(.55847 .04586 -.09727 .28324 15209.655 7783.768)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__g\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__g)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#fa52a0\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\"\n                        />\n                        <G transform=\"matrix(.8163 .07502 -.15341 .39917 14198.48 6749.707)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__h\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__h)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.8163 .07502 -.17215 .44792 14309.713 6521.024)\"\n                        />\n                        <G transform=\"matrix(.60073 .0552 -.1171 .30467 15219.919 7311.01)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__i\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__i)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\"\n                        />\n                        <G transform=\"matrix(.80241 -.10489 .2145 .39238 13052.257 7940.733)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__j\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__j)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.80241 -.10489 .2407 .4403 12950.42 7711.006)\"\n                        />\n                        <G transform=\"matrix(.59051 -.07719 .16372 .2995 14469.505 8230.993)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__k\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__k)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5390.34 4766.28c0-21.81 34.09-39.51 76.07-39.51 41.98 0 76.06 17.7 76.06 39.51v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96z\"\n                            fill=\"none\"\n                            stroke=\"#fff\"\n                            strokeWidth={9.02}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\"\n                        />\n                        <G transform=\"matrix(.45212 .08963 -.1833 .22109 17542.824 7682.224)\">\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"#0e0f23\"\n                            />\n                            <ClipPath id=\"prefix__l\">\n                                <Path d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\" />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__l)\">\n                                <Path\n                                    fill=\"#fff\"\n                                    d=\"M5398.33 4774.45h4.304v54.66h-4.304zM5405.862 4781.982h4.304v54.66h-4.304zM5413.609 4789.729h4.304v54.66h-4.304z\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M5401.94 4766.28c13.46-11.14 37.31-18.55 64.47-18.55 27.15 0 51.01 7.41 64.47 18.55h11.59v20.96c0 21.81-34.08 39.51-76.06 39.51-41.98 0-76.07-17.7-76.07-39.51v-20.96h11.6z\"\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                        <Ellipse\n                            cx={5438.78}\n                            cy={4762.67}\n                            rx={76.065}\n                            ry={35.21}\n                            fill=\"#27b0e6\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={3.92}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(.45212 .08963 -.2057 .24809 17661.276 7556.892)\"\n                        />\n                        <G transform=\"matrix(.33273 .06596 -.1399 .16875 17997.348 8063.5)\">\n                            <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} fill=\"#0e0f23\" />\n                            <ClipPath id=\"prefix__m\">\n                                <Ellipse cx={5438.78} cy={4762.67} rx={76.065} ry={35.21} />\n                            </ClipPath>\n                            <G clipPath=\"url(#prefix__m)\">\n                                <Ellipse\n                                    cx={5438.78}\n                                    cy={4762.67}\n                                    rx={76.065}\n                                    ry={35.21}\n                                    fill=\"#fff\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={3.92}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"translate(0 9.7)\"\n                                />\n                                <Path\n                                    d=\"M1099.61 458.926l17.17 34.336h-34.34l17.17-34.336z\"\n                                    fill=\"#27b0e6\"\n                                    stroke=\"#0e0f23\"\n                                    strokeWidth={2.23}\n                                    strokeLinejoin=\"round\"\n                                    transform=\"matrix(1.09677 -.61053 1.60073 .51889 3461.25 5191.44)\"\n                                />\n                            </G>\n                            <Ellipse\n                                cx={5438.78}\n                                cy={4762.67}\n                                rx={76.065}\n                                ry={35.21}\n                                fill=\"none\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={3.92}\n                                strokeLinejoin=\"round\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path\n                            d=\"M5429.1 4921.27l-245.63-534.63c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l245.64 534.63-8.29 3.81z\"\n                            fill=\"#fff\"\n                            stroke=\"#fff\"\n                            strokeWidth={6.24}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(1.96709 .45188 -.9241 .9619 11860.057 2667.169)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00776 -.44649 18561.7 11282.462)\"\n                        />\n                        <Path\n                            d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.69}\n                            strokeLinejoin=\"round\"\n                            transform=\"matrix(-1.35639 -.00564 .01257 -.7235 18543.284 12342.05)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.73}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00756 -.43517 18562.452 11239.173)\"\n                        />\n                        <Path\n                            fill=\"#f9f9f9\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.77}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00736 -.42342 18563.234 11194.23)\"\n                        />\n                        <Path\n                            fill=\"#fa52a0\"\n                            stroke=\"#0e0f23\"\n                            strokeWidth={4.81}\n                            strokeLinejoin=\"round\"\n                            d=\"M423.791 3139.43h14.614v1166.61h-14.614z\"\n                            transform=\"matrix(-1.35639 -.00564 .00715 -.4115 18564.025 11148.62)\"\n                        />\n                        <G>\n                            <Path\n                                d=\"M5300.61 5786.96c-.24-.17-.47-.35-.7-.53-17.41-13.86-4.09-63.98 30.06-114.74 1.44-2.13 7.58-10.81 9.18-12.95 35.31-47.46 76.53-76.3 96.18-67.31.9.41 1.75.9 2.55 1.47l125.89 89.04s2.73 2.01 3.31 2.57c15.89 15.44 1.4 66.2-33.58 116.88-.72 1.05-5.39 7.6-7 9.76-36.02 48.39-78.11 77.44-97.17 66.75-.47-.27-2.29-1.52-2.29-1.52l-126.43-89.42z\"\n                                fill=\"#fff\"\n                                stroke=\"#fff\"\n                                strokeWidth={11.5}\n                                transform=\"matrix(.99854 .20457 -.41815 .48829 15048.865 5342.095)\"\n                            />\n                            <Path\n                                d=\"M1040.64 697.661c0 22.723-51.581 41.17-115.115 41.17-63.534 0-115.116-18.447-115.116-41.17V546.583l.003.266c.4 22.6 51.827 40.904 115.113 40.904 63.534 0 115.115-18.448 115.115-41.17v151.078z\"\n                                fill=\"#0e0f23\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={5}\n                                transform=\"matrix(.9478 -.28962 .59237 .46355 16830.032 9233.464)\"\n                            />\n                            <Ellipse\n                                cx={925.525}\n                                cy={546.583}\n                                rx={115.115}\n                                ry={41.17}\n                                fill=\"#fff\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={5.19}\n                                transform=\"matrix(.9478 -.28962 .59487 .4655 16828.667 9232.396)\"\n                            />\n                            <G transform=\"matrix(.55592 -.16987 .26032 .2037 17374.22 9264.662)\">\n                                <Ellipse cx={925.525} cy={546.583} rx={115.115} ry={41.17} fill=\"#f14f9b\" />\n                                <Path\n                                    d=\"M925.525 496.312c-45.853 0-85.627 9.645-105.389 23.272-11.22 7.737-16.547 17.689-16.547 26.999 0 9.311 5.327 19.262 16.547 26.999 19.762 13.627 59.536 23.272 105.389 23.272 45.852 0 85.625-9.645 105.385-23.272 11.22-7.737 16.55-17.688 16.55-26.999 0-9.31-5.33-19.262-16.55-26.999-19.76-13.627-59.533-23.272-105.385-23.272zm0 9.101c63.534 0 115.115 18.448 115.115 41.17s-51.581 41.17-115.115 41.17c-63.534 0-115.116-18.448-115.116-41.17s51.582-41.17 115.116-41.17z\"\n                                    fill=\"#0e0f23\"\n                                />\n                            </G>\n                            <Path\n                                d=\"M11345.5 4849.24c37.3 20.18 78.8 24.3 118.1 24.29 39.4-.02 87.8-6.02 118.1-24.29\"\n                                fill=\"none\"\n                                stroke=\"#fff\"\n                                strokeWidth={2.09}\n                                strokeLinejoin=\"round\"\n                                strokeDasharray=\"4.17,4.17,52.17,52.17\"\n                                transform=\"matrix(.79239 -.24213 .49524 .38754 6562.684 10128.433)\"\n                            />\n                        </G>\n                        <G>\n                            <Path\n                                d=\"M5418.56 4898.33l-235.09-511.69c-1.06-2.28-.05-4.99 2.24-6.05 2.28-1.05 4.99-.04 6.04 2.24l235.1 511.69-8.29 3.81z\"\n                                fill=\"#fff\"\n                                stroke=\"#fff\"\n                                strokeWidth={6.24}\n                                strokeLinejoin=\"round\"\n                                transform=\"matrix(1.90515 .51142 -1.04584 .93162 12852.245 2495.218)\"\n                            />\n                            <Path\n                                fill=\"#f9f9f9\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.69}\n                                strokeLinejoin=\"round\"\n                                d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                                transform=\"matrix(-1.35299 -.0473 .0651 -.44537 18433.904 11299.374)\"\n                            />\n                            <Path\n                                d=\"M438.405 3831.81c0-3.7-3.274-6.7-7.307-6.7s-7.307 3-7.307 6.7v467.53c0 3.7 3.274 6.7 7.307 6.7s7.307-3 7.307-6.7v-467.53z\"\n                                fill=\"#f9f9f9\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.69}\n                                strokeLinejoin=\"round\"\n                                transform=\"matrix(-1.35299 -.0473 .1055 -.72168 18279.407 12356.306)\"\n                            />\n                            <Path\n                                fill=\"#f9f9f9\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.73}\n                                strokeLinejoin=\"round\"\n                                d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                                transform=\"matrix(-1.35299 -.0473 .06345 -.43408 18440.216 11256.194)\"\n                            />\n                            <Path\n                                fill=\"#f9f9f9\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.77}\n                                strokeLinejoin=\"round\"\n                                d=\"M423.791 3825.11h14.614v480.927h-14.614z\"\n                                transform=\"matrix(-1.35299 -.0473 .06174 -.42236 18446.77 11211.364)\"\n                            />\n                            <Path\n                                fill=\"#fa52a0\"\n                                stroke=\"#0e0f23\"\n                                strokeWidth={4.81}\n                                strokeLinejoin=\"round\"\n                                d=\"M423.791 3204.63h14.614v1101.41h-14.614z\"\n                                transform=\"matrix(-1.35299 -.0473 .06 -.41046 18453.418 11165.869)\"\n                            />\n                        </G>\n                    </G>\n                    <G>\n                        <Path fill=\"#fff\" fillOpacity={0.4} d=\"M16968.732 8697.914h2273.376v1111.677h-2273.376z\" />\n                    </G>\n                    <G>\n                        <Path\n                            fill=\"url(#prefix___Radial24)\"\n                            d=\"M22952.2 8435.28h1429.52v707.246H22952.2z\"\n                            transform=\"matrix(1.59031 0 0 1.57184 -19532.4 -4560.99)\"\n                        />\n                    </G>\n                </G>\n            </G>\n            <Defs>\n                <LinearGradient\n                    id=\"prefix___Linear2\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(1323.868) rotate(-48.234 5.87 -2.209)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear3\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2019.98) rotate(-48.234 3.706 -1.203)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear4\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(2173.61) rotate(-48.234 3.415 -1.068)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear5\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 7345.403 -2188.287) scale(2362.04)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear6\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(982.411) rotate(-48.234 8.054 -3.223)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear7\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8019.154 -3350.118) scale(723.304)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear8\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8033.639 -3375.117) scale(688.047)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear9\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(656.966) rotate(-48.234 12.248 -5.171)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear10\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"scale(569.632) rotate(-48.234 14.189 -6.072)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <LinearGradient\n                    id=\"prefix___Linear11\"\n                    x1={0}\n                    y1={0}\n                    x2={1}\n                    y2={0}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"rotate(-48.234 8109.595 -3506.09) scale(503.321)\">\n                    <Stop offset={0} stopColor=\"#27b0e6\" />\n                    <Stop offset={1} stopColor=\"#fa52a0\" />\n                </LinearGradient>\n                <RadialGradient\n                    id=\"prefix___Radial24\"\n                    cx={0}\n                    cy={0}\n                    r={1}\n                    gradientUnits=\"userSpaceOnUse\"\n                    gradientTransform=\"matrix(778.647 -360.127 670.211 418.392 23603 8795.41)\">\n                    <Stop offset={0} stopColor=\"#fff\" stopOpacity={0} />\n                    <Stop offset={1} stopColor=\"#fff\" />\n                </RadialGradient>\n            </Defs>\n        </Svg>\n    );\n}\n\nexport default SvgBackgroundLight;\n","import React, { useContext } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport SvgBackgroundDark from \"./svg/SvgBackgroundDark\";\nimport SvgBackgroundLight from \"./svg/SvgBackgroundLight\";\n\nconst BackgroundImage = ({ style }: { style?: ViewStyle }) => {\n    const { darkMode } = useContext(GlobalContext);\n    const { background } = useColors();\n    const props = {\n        width: 1920,\n        height: 1920\n    };\n    return (\n        <View\n            style={[\n                {\n                    position: \"absolute\",\n                    width: \"100%\",\n                    aspectRatio: 1,\n                    backgroundColor: background\n                },\n                style\n            ]}>\n            <View style={{ marginTop: -400, marginLeft: -1000, alignSelf: \"center\" }}>\n                {darkMode ? <SvgBackgroundDark {...props} /> : <SvgBackgroundLight {...props} />}\n            </View>\n        </View>\n    );\n};\n\nexport default BackgroundImage;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { StatusBar } from \"expo-status-bar\";\n\nimport { HEADER_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\n\nconst AppHeader = () => {\n    const { background } = useColors();\n    return (\n        <View\n            style={{\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                backgroundColor: background\n            }}>\n            <StatusBar translucent={false} backgroundColor={background} />\n        </View>\n    );\n};\n\nexport default AppHeader;\n","import React, { useContext } from \"react\";\nimport { Image, View } from \"react-native\";\n\nimport WalletConnectProvider from \"@walletconnect/web3-provider\";\nimport { IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport Button from \"../Button\";\n\nconst ConnectWallet = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const metaMask = window.ethereum?.isMetaMask || false;\n    const source = metaMask\n        ? darkMode\n            ? require(\"../../../assets/metamask-dark.png\")\n            : require(\"../../../assets/metamask.png\")\n        : require(\"../../../assets/sushiswap.jpg\");\n    return (\n        <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n            <Image\n                source={source}\n                style={{ width: metaMask ? 223 : 200, height: metaMask ? 183 : 200, marginBottom: Spacing.normal }}\n            />\n            {window.ethereum && <ConnectButton />}\n            <WalletConnectButton />\n        </View>\n    );\n};\n\nconst ConnectButton = () => {\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        if (window.ethereum) {\n            await window.ethereum.request({ method: \"eth_requestAccounts\" });\n            setEthereum(window.ethereum);\n        } else {\n            alert(\"No ethereum provider found.\");\n        }\n    };\n    const metaMask = window.ethereum?.isMetaMask || false;\n    return (\n        <Button\n            size={\"large\"}\n            color={metaMask ? \"#e2761b\" : primary}\n            onPress={onPress}\n            title={metaMask ? \"MetaMask\" : \"Connect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nconst WalletConnectButton = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary } = useColors();\n    const { setEthereum } = useContext(EthersContext);\n    const onPress = async () => {\n        const ethereum = new WalletConnectProvider({\n            rpc: {\n                1: \"https://eth-mainnet.alchemyapi.io/v2/fF51JjrwO8qCZW13KRflYpqU_ZeOH1Er\"\n            }\n        });\n        await ethereum.enable();\n        // @ts-ignore\n        setEthereum(ethereum);\n    };\n    return (\n        <Button\n            size={\"large\"}\n            type={\"outline\"}\n            color={darkMode ? \"white\" : primary}\n            onPress={onPress}\n            title={\"WalletConnect\"}\n            containerStyle={{ width: IS_DESKTOP ? 440 : \"100%\" }}\n            style={{ marginTop: Spacing.small, marginHorizontal: Spacing.normal }}\n        />\n    );\n};\n\nexport default ConnectWallet;\n","import React, { useContext } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport AppHeader from \"../components/app/AppHeader\";\nimport Text from \"../components/Text\";\nimport ConnectToWallet from \"../components/web/ConnectToWallet\";\nimport { HEADER_HEIGHT } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\n\nconst Screen = props => {\n    return Platform.select({\n        web: <WebScreen {...props} />,\n        default: <AppScreen {...props} />\n    });\n};\n\nconst WebScreen = props => {\n    const { address, chainId } = useContext(EthersContext);\n    if (!address) return <ConnectToWallet />;\n    if (chainId !== 1)\n        return (\n            <View style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}>\n                <Text light={true} style={{ textAlign: \"center\" }}>\n                    {\"Please switch network to\\n'Ethereum Mainnet'\"}\n                </Text>\n            </View>\n        );\n    return (\n        <View\n            {...props}\n            style={[{ position: \"absolute\", top: HEADER_HEIGHT, right: 0, bottom: 0, left: 0 }, props.style]}\n        />\n    );\n};\n\nconst AppScreen = props => (\n    <View style={{ width: \"100%\", height: \"100%\" }}>\n        <AppHeader />\n        <View {...props} style={[{ flex: 1 }, props.style]} />\n    </View>\n);\n\nexport default Screen;\n","import React, { FC } from \"react\";\nimport { View } from \"react-native\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_WIDTH, IS_DESKTOP, Spacing, SUB_MENU_HEIGHT } from \"../../constants/dimension\";\nimport useColors from \"../../hooks/useColors\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nexport interface WebSubMenuItem {\n    title: string;\n    path: string;\n}\n\nexport interface WebSubMenuProps {\n    items: WebSubMenuItem[];\n}\n\nexport const SwapSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"New Order\",\n                path: \"/swap\"\n            },\n            {\n                title: \"My Orders\",\n                path: \"/swap/my-orders\"\n            }\n        ]}\n    />\n);\n\nexport const LiquiditySubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Add Liquidity\",\n                path: \"/liquidity\"\n            },\n            {\n                title: \"Remove Liquidity\",\n                path: \"/liquidity/remove\"\n            }\n        ]}\n    />\n);\n\nexport const MigrateSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Migrate Liquidity\",\n                path: \"/migrate\"\n            }\n        ]}\n    />\n);\n\nexport const StakingSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Stake\",\n                path: \"/staking\"\n            },\n            {\n                title: \"Unstake\",\n                path: \"/staking/unstake\"\n            }\n        ]}\n    />\n);\n\nexport const FarmingSubMenu = () => (\n    <WebSubMenu\n        items={[\n            {\n                title: \"Plant LP Tokens\",\n                path: \"/farming\"\n            },\n            {\n                title: \"Harvest SUSHI\",\n                path: \"/farming/harvest\"\n            }\n        ]}\n    />\n);\n\nconst WebSubMenu: FC<WebSubMenuProps> = props => {\n    const { submenu } = useColors();\n    return (\n        <View\n            style={{\n                position: \"absolute\",\n                top: 0,\n                height: SUB_MENU_HEIGHT,\n                width: \"100%\",\n                backgroundColor: submenu\n            }}>\n            <FlexView\n                style={{\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    marginTop: 2,\n                    paddingHorizontal: Spacing.normal,\n                    alignSelf: \"center\",\n                    justifyContent: \"flex-end\",\n                    alignItems: \"center\"\n                }}>\n                {props.items.map(item => (\n                    <MenuItem key={item.path} {...item} />\n                ))}\n            </FlexView>\n        </View>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { accent, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.isExact;\n    return (\n        <Link\n            to={path}\n            style={{\n                marginLeft: Spacing.small,\n                paddingTop: Spacing.tiny,\n                paddingBottom: Spacing.tiny,\n                textDecoration: \"none\"\n            }}>\n            <Text\n                fontWeight={active ? \"regular\" : \"light\"}\n                style={{\n                    fontSize: 13,\n                    color: active ? accent : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nexport default WebSubMenu;\n","import { FACTORY_ADDRESS as SUSHISWAP_FACTORY } from \"@sushiswap/sdk\";\nimport sushiData from \"@sushiswap/sushi-data\";\nimport { FACTORY_ADDRESS as UNISWAP_FACTORY } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport { LP_TOKEN_SCANNER, MASTER_CHEF, ORDER_BOOK, SETTLEMENT } from \"../constants/contracts\";\nimport { ETH } from \"../constants/tokens\";\nimport { ALCHEMY_PROVIDER } from \"../context/EthersContext\";\nimport { Order, OrderStatus } from \"../hooks/useSDK\";\nimport LPToken from \"../types/LPToken\";\nimport Token from \"../types/Token\";\nimport { getContract, parseBalance, pow10 } from \"./index\";\n\nconst blocksPerDay = 6500;\nconst sushiPerBlock = 80;\n\nexport const fetchTokens = async (account: string, customTokens?: Token[]) => {\n    const response = await fetch(\"https://lite.sushiswap.fi/tokens.json\");\n    const json = await response.json();\n    const tokens = [...json.tokens, ...(customTokens || [])];\n\n    const balances = await fetchTokenBalances(\n        account,\n        tokens.map(token => token.address)\n    );\n    return [\n        {\n            ...ETH,\n            balance: await ALCHEMY_PROVIDER.getBalance(account)\n        },\n        ...tokens.map((token, i) => ({\n            ...token,\n            balance: ethers.BigNumber.from(balances[i] || 0)\n        }))\n    ].sort((t1, t2) => {\n        return t2.balance\n            .sub(t1.balance)\n            .div(ethers.BigNumber.from(10).pow(10))\n            .toNumber();\n    });\n};\n\n// tslint:disable-next-line:max-func-body-length\nexport const fetchPools = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const info = await sushiData.sushi.info();\n    const masterchefInfo = await sushiData.masterchef.info();\n    const pools = await sushiData.masterchef.pools();\n    const balances = await fetchTokenBalances(\n        account,\n        pools.map(pool => pool.lpToken)\n    );\n    // tslint:disable-next-line:max-func-body-length\n    const fetchPool = async (pool, i): Promise<LPToken | null> => {\n        try {\n            const result = await Promise.all([\n                fetchStakedValue(pool.lpToken),\n                fetchPairTokens(pool.lpToken, tokens, provider)\n            ]);\n            if (result[0].length === 0) return null;\n            const apy = calcAPY(\n                info[0].derivedETH,\n                pool.allocPoint,\n                masterchefInfo[0].totalAllocPoint,\n                result[0][0].totalValueETH\n            );\n            if (apy === 0) return null;\n            return {\n                ...pool,\n                apy,\n                address: pool.lpToken,\n                decimals: 18,\n                tokenA: result[1].tokenA,\n                tokenB: result[1].tokenB,\n                symbol: result[1].tokenA.symbol + \"-\" + result[1].tokenB.symbol + \" LP\",\n                balance: ethers.BigNumber.from(balances[i] || 0),\n                sushiRewardedPerYear: calcSushiRewardedPerYear(\n                    pool.allocPoint,\n                    masterchefInfo[0].totalAllocPoint,\n                    result[0][0].totalSupply\n                ),\n                totalSupply: parseBalance(String(result[0][0].totalSupply), 18),\n                totalValueUSD: result[0][0].totalValueUSD,\n                multiplier: pool.allocPoint / 1000\n            };\n        } catch (e) {\n            return null;\n        }\n    };\n    return (await Promise.all(pools.map(fetchPool))).filter(pool => !!pool) as LPToken[];\n};\n\nexport const fetchMyPools = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const pools = await sushiData.masterchef.pools();\n    const fetchMyPool = async (pool): Promise<LPToken | null> => {\n        try {\n            const myStake = await fetchMyStake(pool.id, account, provider);\n            if (myStake.amountDeposited.isZero()) return null;\n            const result = await Promise.all([\n                fetchStakedValue(pool.lpToken),\n                fetchPairTokens(pool.lpToken, tokens, provider)\n            ]);\n            return {\n                ...pool,\n                address: pool.lpToken,\n                decimals: 18,\n                tokenA: result[1].tokenA,\n                tokenB: result[1].tokenB,\n                symbol: result[1].tokenA.symbol + \"-\" + result[1].tokenB.symbol + \" LP\",\n                balance: ethers.constants.Zero,\n                amountDeposited: myStake.amountDeposited,\n                pendingSushi: myStake.pendingSushi,\n                totalSupply: parseBalance(String(result[0][0].totalSupply), 18)\n            };\n        } catch (e) {\n            return null;\n        }\n    };\n    return (await Promise.all(pools.map(fetchMyPool))).filter(pool => !!pool) as LPToken[];\n};\n\nconst calcAPY = (derivedETH, allocPoint, totalAllocPoint, totalValueETH) => {\n    return (derivedETH * blocksPerDay * sushiPerBlock * 3 * 365 * (allocPoint / totalAllocPoint)) / totalValueETH;\n};\n\nconst calcSushiRewardedPerYear = (allocPoint, totalAllocPoint, totalSupply) => {\n    return ethers.BigNumber.from(blocksPerDay * sushiPerBlock * 3 * 365 * allocPoint)\n        .mul(pow10(36))\n        .div(totalAllocPoint)\n        .div(parseBalance(String(totalSupply)));\n};\n\nconst fetchStakedValue = async (lpToken: string) => {\n    return await sushiData.masterchef.stakedValue({ lpToken });\n};\n\nconst fetchMyStake = async (poolId: number, account: string, provider: ethers.providers.JsonRpcProvider) => {\n    const masterChef = getContract(\"MasterChef\", MASTER_CHEF, provider);\n    const { amount: amountDeposited } = await masterChef.userInfo(poolId, account);\n    const pendingSushi = await masterChef.pendingSushi(poolId, account);\n    return { amountDeposited, pendingSushi };\n};\n\nconst fetchPairTokens = async (lpToken: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    const contract = getContract(\"IUniswapV2Pair\", lpToken, provider);\n    const tokenA = await findOrFetchToken(await contract.token0(), provider, tokens);\n    const tokenB = await findOrFetchToken(await contract.token1(), provider, tokens);\n    return { tokenA, tokenB };\n};\n\nexport const fetchMyLPTokens = async (account: string, tokens: Token[], provider: ethers.providers.JsonRpcProvider) => {\n    return await fetchLPTokens(SUSHISWAP_FACTORY, account, tokens, provider);\n};\n\nexport const fetchMyUniswapLPTokens = async (\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    return await fetchLPTokens(UNISWAP_FACTORY, account, tokens, provider);\n};\n\nconst LP_TOKENS_LIMIT = 100;\n\n// tslint:disable-next-line:max-func-body-length\nconst fetchLPTokens = async (\n    factory: string,\n    account: string,\n    tokens: Token[],\n    provider: ethers.providers.JsonRpcProvider\n) => {\n    const factoryContract = getContract(\"IUniswapV2Factory\", factory, provider);\n    const length = await factoryContract.allPairsLength();\n    const scanner = getContract(\"LPTokenScanner\", LP_TOKEN_SCANNER, provider);\n    const pages: number[] = [];\n    for (let i = 0; i < length; i += LP_TOKENS_LIMIT) pages.push(i);\n    const pairs = (\n        await Promise.all(\n            pages.map(page =>\n                scanner.findPairs(account, factory, page, Math.min(page + LP_TOKENS_LIMIT, length.toNumber()))\n            )\n        )\n    ).flat();\n    const balances = await fetchTokenBalances(\n        account,\n        pairs.map(pair => pair.token)\n    );\n    return await Promise.all(\n        pairs.map(async (pair, index) => {\n            const address = pair.token;\n            const balance = ethers.BigNumber.from(balances[index]);\n            const contract = getContract(\"IUniswapV2Pair\", address, provider);\n            const erc20 = getContract(\"ERC20\", address, provider);\n            const decimals = Number(await erc20.decimals());\n            const totalSupply = await erc20.totalSupply();\n            const tokenA = await findOrFetchToken(await contract.token0(), provider, tokens);\n            const tokenB = await findOrFetchToken(await contract.token1(), provider, tokens);\n            const name = tokenA.symbol + \"-\" + tokenB.symbol + \" LP Token\";\n            const symbol = tokenA.symbol + \"-\" + tokenB.symbol;\n            return { address, decimals, name, symbol, balance, totalSupply, tokenA, tokenB } as LPToken;\n        })\n    );\n};\n\nexport const findOrFetchToken = async (\n    address: string,\n    provider: ethers.providers.JsonRpcProvider,\n    tokens?: Token[]\n) => {\n    if (tokens) {\n        const token = tokens.find(t => t.address.toLowerCase() === address.toLowerCase());\n        if (token) {\n            return token;\n        }\n    }\n    let meta = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenMetadata\", [address]);\n    if (!meta.name || meta.symbol || meta.decimals || meta.logoURI) {\n        meta = await fetchTokenMeta(address, provider);\n    }\n    return {\n        address,\n        name: meta.name,\n        symbol: meta.symbol,\n        decimals: meta.decimals,\n        logoURI: meta.logo,\n        balance: ethers.constants.Zero\n    } as Token;\n};\n\nconst fetchTokenMeta = async (address: string, provider: ethers.providers.JsonRpcProvider) => {\n    const erc20 = getContract(\"ERC20\", address, provider);\n    const data = await Promise.all(\n        [\"name\", \"symbol\", \"decimals\"].map(field => {\n            try {\n                return erc20.callStatic[field]();\n            } catch (e) {\n                return \"\";\n            }\n        })\n    );\n    return {\n        name: data[0],\n        symbol: data[1],\n        decimals: data[2],\n        logoURI: \"\"\n    };\n};\n\nconst fetchTokenBalances = async (account: string, addresses: string[]) => {\n    const balances = await ALCHEMY_PROVIDER.send(\"alchemy_getTokenBalances\", [account, addresses]);\n    return balances.tokenBalances.map(balance => balance.tokenBalance);\n};\n\nconst LIMIT_ORDERS_LIMIT = 20;\n\nexport const fetchMyLimitOrders = async (\n    provider: ethers.providers.JsonRpcProvider,\n    signer: ethers.Signer,\n    kovanSigner: ethers.Signer,\n    tokens?: Token[],\n    canceledHashes?: string[]\n) => {\n    const orderBook = getContract(\"OrderBook\", ORDER_BOOK, kovanSigner);\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, provider);\n    const maker = await signer.getAddress();\n    const length = await orderBook.numberOfHashesOfMaker(maker);\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    const hashes = (await Promise.all(pages.map(page => orderBook.hashesOfMaker(maker, page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n    const myOrders = await Promise.all(\n        hashes.map(async hash => {\n            const args = await orderBook.orderOfHash(hash);\n            return new Order(\n                signer,\n                await findOrFetchToken(args.fromToken, provider, tokens),\n                await findOrFetchToken(args.toToken, provider, tokens),\n                args.amountIn,\n                args.amountOutMin,\n                args.recipient,\n                args.deadline,\n                args.v,\n                args.r,\n                args.s,\n                await settlement.filledAmountInOfHash(hash),\n                canceledHashes && canceledHashes.includes(hash)\n            );\n        })\n    );\n    return myOrders.sort(compareOrders) as Order[];\n};\n\nconst compareOrders = (o0, o1) => {\n    const status = (s: OrderStatus) => (s === \"Open\" ? 0 : s === \"Filled\" ? 1 : 2);\n    const compared = status(o0.status()) - status(o1.status());\n    return compared === 0 ? o1.deadline.toNumber() - o0.deadline.toNumber() : compared;\n};\n\nexport const fetchMyCanceledLimitOrderHashes = async (signer: ethers.providers.JsonRpcSigner) => {\n    const settlement = await getContract(\"Settlement\", SETTLEMENT, signer);\n    const length = await settlement.numberOfCanceledHashesOfMaker(await signer.getAddress());\n    const pages: number[] = [];\n    for (let i = 0; i * LIMIT_ORDERS_LIMIT < length; i++) pages.push(i);\n    return (await Promise.all(pages.map(page => settlement.allCanceledHashes(page, LIMIT_ORDERS_LIMIT))))\n        .flat()\n        .filter(hash => hash !== ethers.constants.HashZero);\n};\n","import { Fraction as SDKFraction } from \"@sushiswap/sdk\";\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\n\nclass Fraction {\n    static BASE = ethers.BigNumber.from(10).pow(18);\n    static NAN = new Fraction(ethers.constants.Zero, ethers.constants.Zero);\n    static ZERO = new Fraction(ethers.constants.Zero, ethers.constants.One);\n    static convert(sdk: SDKFraction) {\n        return new Fraction(\n            ethers.BigNumber.from(sdk.numerator.toString()),\n            ethers.BigNumber.from(sdk.denominator.toString())\n        );\n    }\n    static from(numerator: ethers.BigNumberish, denominator: ethers.BigNumberish) {\n        return new Fraction(ethers.BigNumber.from(numerator), ethers.BigNumber.from(denominator));\n    }\n    static fromTokens(\n        numerator: ethers.BigNumberish,\n        denominator: ethers.BigNumberish,\n        numeratorToken: Token,\n        denominatorToken: Token\n    ) {\n        return new Fraction(\n            ethers.BigNumber.from(numerator).mul(ethers.BigNumber.from(10).pow(denominatorToken.decimals)),\n            ethers.BigNumber.from(denominator).mul(ethers.BigNumber.from(10).pow(numeratorToken.decimals))\n        );\n    }\n    static parse(value: string) {\n        return value === \"\"\n            ? Fraction.NAN\n            : isEmptyValue(value)\n            ? Fraction.ZERO\n            : new Fraction(parseBalance(value, 18), Fraction.BASE);\n    }\n\n    numerator: ethers.BigNumber;\n    denominator: ethers.BigNumber;\n\n    private constructor(numerator: ethers.BigNumber, denominator: ethers.BigNumber) {\n        this.numerator = numerator;\n        this.denominator = denominator;\n    }\n\n    isZero() {\n        return !this.isNaN() && this.numerator.isZero();\n    }\n\n    isNaN() {\n        return this.denominator.isZero();\n    }\n\n    eq(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .eq(this.denominator);\n    }\n\n    gt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .gt(this.denominator);\n    }\n\n    lt(fraction: Fraction) {\n        return this.numerator\n            .mul(fraction.denominator)\n            .div(fraction.numerator)\n            .lt(this.denominator);\n    }\n\n    toString(maxFractions = 8) {\n        if (this.isNaN()) return \"\";\n        if (this.isZero()) return \"0\";\n        let str = formatBalance(this.numerator.mul(Fraction.BASE).div(this.denominator), 18, maxFractions);\n        if (str.endsWith(\".0\")) str = str.substring(0, str.length - 2);\n        return str;\n    }\n\n    apply(value: ethers.BigNumberish) {\n        return this.denominator.isZero() ? ethers.constants.Zero : this.numerator.mul(value).div(this.denominator);\n    }\n}\n\nexport default Fraction;\n","export const Colors = {\n    common: {\n        white: \"#ffffff\",\n        transparent: \"#ffffff00\",\n        primary: \"#FA52A0\",\n        secondary: \"#27B0E6\",\n        green: \"#32CD32\",\n        red: \"#FF0000\",\n        twitter: \"#1da1f2\",\n        facebook: \"#3B5998\"\n    },\n    light: {\n        accent: \"#FA52A0\",\n        header: \"#ffffffb8\",\n        submenu: \"#ffffff80\",\n        background: \"#ffffff\",\n        backgroundLight: \"#f0f0f0\",\n        border: \"#e5e5e5\",\n        borderDark: \"#cccccc\",\n        textDark: \"#1d1d1f\",\n        textMedium: \"#222222\",\n        textLight: \"#888888\",\n        disabled: \"#b4b4b4\",\n        shadow: \"#444444\",\n        placeholder: \"#b4b4b4\",\n        overlay: \"#ffffffc0\"\n    },\n    dark: {\n        accent: \"#27B0E6\",\n        header: \"#0D0E20\",\n        submenu: \"#00000020\",\n        background: \"#0e0f23\",\n        backgroundLight: \"#0D0E20\",\n        border: \"#ffffff33\",\n        borderDark: \"#666666\",\n        textDark: \"#d5d1cc\",\n        textMedium: \"#cccccc\",\n        textLight: \"#aaaaaa\",\n        disabled: \"#aaaaaa80\",\n        shadow: \"#03080c\",\n        placeholder: \"#666666\",\n        overlay: \"#000000c0\"\n    }\n};\n","import { useContext } from \"react\";\n\nimport { Colors } from \"../constants/colors\";\nimport { GlobalContext } from \"../context/GlobalContext\";\n\nconst useColors = () => {\n    const { darkMode } = useContext(GlobalContext);\n    return {\n        ...Colors[darkMode ? \"dark\" : \"light\"],\n        ...Colors.common\n    };\n};\n\nexport default useColors;\n","import OrderBook from \"@sushiswap/settlement/deployments/kovan/OrderBook.json\";\nimport Settlement from \"@sushiswap/settlement/deployments/mainnet/Settlement.json\";\n\n// export const UNISWAP_ROUTER = \"0x7a250d5630B4cF539739dF2C5dAcb4c659F2488D\";\nexport const SUSHISWAP_ROUTER = \"0xd9e1ce17f2641f24ae83637ab66a2cca9c378b9f\";\nexport const ROUTER = SUSHISWAP_ROUTER;\nexport const MASTER_CHEF = \"0xc2edad668740f1aa35e4d8f227fb8e17dca888cd\";\nexport const SUSHI_BAR = \"0x8798249c2e607446efb7ad49ec89dd1865ff4272\";\nexport const SUSHI_ROLL = \"0x16E58463eb9792Bc236d8860F5BC69A81E26E32B\";\nexport const LP_TOKEN_SCANNER = \"0xD132Ce8eA8865348Ac25E416d95ab1Ba84D216AF\";\nexport const ORDER_BOOK = OrderBook.address;\nexport const SETTLEMENT = Settlement.address;\n","import React, { useCallback, useEffect, useState } from \"react\";\n\nimport * as Analytics from \"expo-firebase-analytics\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ETH } from \"../constants/tokens\";\nimport Ethereum from \"../types/Ethereum\";\nimport Token from \"../types/Token\";\nimport { getContract } from \"../utils\";\nimport { logTransaction } from \"../utils/analytics-utils\";\nimport { fetchTokens } from \"../utils/fetch-utils\";\n\nexport type OnBlockListener = (block?: number) => void | Promise<void>;\n\nconst PRIVATE_KEY = \"0xca417c154948d370f011c5d9ac3fba516d7b15671a069e7d5d48f56b723c9cc1\";\nexport const ALCHEMY_PROVIDER = new ethers.providers.AlchemyProvider(\n    1,\n    __DEV__ ? process.env.MAINNET_API_KEY : \"DgnfFsj5PXR37FkOmUVJ9GtfDsKws446\"\n);\nconst KOVAN_PROVIDER = new ethers.providers.AlchemyProvider(\n    42,\n    __DEV__ ? process.env.KOVAN_API_KEY : \"8a03ORJJcIv8YA49M-cIxg-mBEMJYe0J\"\n);\n\nexport const EthersContext = React.createContext({\n    ethereum: undefined as Ethereum | undefined,\n    setEthereum: (_ethereum: Ethereum | undefined) => {},\n    provider: undefined as ethers.providers.JsonRpcProvider | undefined,\n    signer: undefined as ethers.providers.JsonRpcSigner | undefined,\n    kovanSigner: undefined as ethers.Signer | undefined,\n    chainId: 0,\n    address: null as string | null,\n    ensName: null as string | null,\n    addOnBlockListener: (_name: string, _listener: OnBlockListener) => {},\n    removeOnBlockListener: (_name: string) => {},\n    tokens: [ETH] as Token[],\n    updateTokens: async () => {},\n    loadingTokens: false,\n    customTokens: [ETH] as Token[],\n    addCustomToken: (_token: Token) => {},\n    removeCustomToken: (_token: Token) => {},\n    approveToken: async (_token: string, _spender: string, _amount?: ethers.BigNumber) => {\n        return {} as ethers.providers.TransactionResponse | undefined;\n    },\n    getTokenAllowance: async (_token: string, _spender: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTokenBalance: async (_token: string, _who: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    },\n    getTotalSupply: async (_token: string) => {\n        return ethers.constants.Zero as ethers.BigNumber | undefined;\n    }\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const EthersContextProvider = ({ children }) => {\n    const [ethereum, setEthereum] = useState<Ethereum | undefined>(window.ethereum);\n    const [provider, setProvider] = useState<ethers.providers.JsonRpcProvider>();\n    const [signer, setSigner] = useState<ethers.providers.JsonRpcSigner>();\n    const [kovanSigner, setKovanSigner] = useState<ethers.Signer>();\n    const [chainId, setChainId] = useState<number>(1);\n    const [address, setAddress] = useState<string | null>(null);\n    const [ensName, setENSName] = useState<string | null>(null);\n    const [onBlockListeners, setOnBlockListeners] = useState<{ [name: string]: OnBlockListener }>({});\n    const [tokens, setTokens] = useState<Token[]>([]);\n    const [customTokens, setCustomTokens] = useState<Token[]>([]);\n    const [loadingTokens, setLoadingTokens] = useState(true);\n\n    useEffect(() => {\n        // Kovan\n        setKovanSigner(new ethers.Wallet(PRIVATE_KEY, KOVAN_PROVIDER));\n    }, [KOVAN_PROVIDER]);\n\n    useAsyncEffect(async () => {\n        // Mainnet\n        if (ethereum) {\n            const web3 = new ethers.providers.Web3Provider(ethereum);\n            const web3Signer = await web3.getSigner();\n            setProvider(ethereum.isMetaMask ? web3Signer.provider : ALCHEMY_PROVIDER);\n            setSigner(web3Signer);\n        }\n    }, [ethereum]);\n\n    useEffect(() => {\n        if (ethereum) {\n            const onAccountsChanged = async () => {\n                const accounts = await ethereum.request({ method: \"eth_accounts\" });\n                if (accounts?.[0]) {\n                    setAddress(accounts[0]);\n                    Analytics.setUserId(accounts[0]);\n                } else {\n                    setAddress(null);\n                }\n            };\n            const onChainChanged = async () => {\n                setChainId(Number(await ethereum.request({ method: \"eth_chainId\" })));\n            };\n            const onDisconnect = () => {\n                setAddress(null);\n                setEthereum(undefined);\n            };\n            onAccountsChanged();\n            onChainChanged();\n            ethereum.on(\"accountsChanged\", onAccountsChanged);\n            ethereum.on(\"chainChanged\", onChainChanged);\n            ethereum.on(\"disconnect\", onDisconnect);\n            return () => {\n                ethereum.off(\"accountsChanged\", onAccountsChanged);\n                ethereum.off(\"chainChanged\", onAccountsChanged);\n                ethereum.off(\"disconnect\", onDisconnect);\n            };\n        }\n    }, [ethereum]);\n\n    useAsyncEffect(async () => {\n        if (provider && address) {\n            const ens = await provider.lookupAddress(address);\n            setENSName(ens);\n        }\n    }, [provider, address]);\n\n    const updateTokens = async () => {\n        if (address && customTokens) {\n            try {\n                const data = await fetchTokens(address, customTokens);\n                if (data) {\n                    await setTokens(data);\n                }\n            } finally {\n                setLoadingTokens(false);\n            }\n        }\n    };\n\n    useAsyncEffect(async () => {\n        setCustomTokens(JSON.parse((await AsyncStorage.getItem(\"custom_tokens\")) || \"[]\"));\n    }, []);\n\n    useAsyncEffect(async () => {\n        if (address && customTokens) {\n            setLoadingTokens(true);\n            await updateTokens();\n        }\n    }, [address, customTokens]);\n\n    const addCustomToken = useCallback(\n        async (token: Token) => {\n            if (\n                customTokens.findIndex(t => t.address === token.address) === -1 &&\n                tokens.findIndex(t => t.address === token.address) === -1\n            ) {\n                const custom = [...customTokens, token];\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [tokens, customTokens]\n    );\n\n    const removeCustomToken = useCallback(\n        async (token: Token) => {\n            if (customTokens.findIndex(t => t.address === token.address) !== -1) {\n                const custom = customTokens.filter(t => t.address !== token.address);\n                setCustomTokens(custom);\n                await AsyncStorage.setItem(\"custom_tokens\", JSON.stringify(custom));\n            }\n        },\n        [customTokens]\n    );\n\n    const approveToken = useCallback(\n        async (token: string, spender: string, amount?: ethers.BigNumber) => {\n            if (signer) {\n                amount = amount || ethers.constants.MaxUint256;\n                const erc20 = getContract(\"ERC20\", token, signer);\n                const gasLimit = await erc20.estimateGas.approve(spender, amount);\n                const tx = await erc20.approve(spender, amount, {\n                    gasLimit\n                });\n                return await logTransaction(tx, \"ERC20.approve()\", spender, amount.toString());\n            }\n        },\n        [signer]\n    );\n\n    const getTokenAllowance = useCallback(\n        async (token: string, spender: string) => {\n            if (provider && address) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return erc20.allowance(address, spender);\n            }\n        },\n        [provider, address]\n    );\n\n    const getTokenBalance = useCallback(\n        async (token: string, who: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.balanceOf(who);\n            }\n        },\n        [provider]\n    );\n\n    const getTotalSupply = useCallback(\n        async (token: string) => {\n            if (provider) {\n                const erc20 = getContract(\"ERC20\", token, provider);\n                return await erc20.totalSupply();\n            }\n        },\n        [provider]\n    );\n\n    const addOnBlockListener = useCallback(\n        (name, listener) => {\n            setOnBlockListeners(old => ({ ...old, [name]: listener }));\n        },\n        [setOnBlockListeners]\n    );\n\n    const removeOnBlockListener = useCallback(\n        name => {\n            setOnBlockListeners(old => {\n                delete old[name];\n                return old;\n            });\n        },\n        [setOnBlockListeners]\n    );\n\n    useEffect(() => {\n        if (provider && chainId === 1) {\n            const onBlock = async (block: number) => {\n                for (const listener of Object.entries(onBlockListeners)) {\n                    await listener[1]?.(block);\n                }\n            };\n            provider.on(\"block\", onBlock);\n            return () => {\n                provider.off(\"block\", onBlock);\n            };\n        }\n    }, [provider, chainId, onBlockListeners]);\n\n    return (\n        <EthersContext.Provider\n            value={{\n                ethereum,\n                setEthereum,\n                provider,\n                signer,\n                kovanSigner,\n                chainId,\n                address,\n                ensName,\n                tokens,\n                updateTokens,\n                loadingTokens,\n                customTokens,\n                addCustomToken,\n                removeCustomToken,\n                approveToken,\n                getTokenAllowance,\n                getTokenBalance,\n                getTotalSupply,\n                addOnBlockListener,\n                removeOnBlockListener\n            }}>\n            {children}\n        </EthersContext.Provider>\n    );\n};\n\nexport const EthersContextConsumer = EthersContext.Consumer;\n","import React, { useState } from \"react\";\nimport { useColorScheme } from \"react-native-appearance\";\n\nimport AsyncStorage from \"@react-native-community/async-storage\";\n\nexport const GlobalContext = React.createContext({\n    load: async () => {},\n    clear: async () => {},\n    darkMode: false,\n    setDarkMode: async _darkMode => {},\n    mnemonic: \"\",\n    setMnemonic: (_mnemonic: string) => {}\n});\n\n// tslint:disable-next-line:max-func-body-length\nexport const GlobalContextProvider = ({ children }) => {\n    const colorScheme = useColorScheme();\n    const [darkMode, setDarkMode] = useState(colorScheme === \"dark\");\n    const [mnemonic, setMnemonic] = useState(\"\");\n    return (\n        <GlobalContext.Provider\n            value={{\n                load: async () => {\n                    const mode = await AsyncStorage.getItem(\"dark_mode\");\n                    setDarkMode(mode === \"true\");\n                    const mne = await AsyncStorage.getItem(\"mnemonic\");\n                    if (mne) {\n                        setMnemonic(mne);\n                    }\n                },\n                clear: async () => {\n                    setDarkMode(false);\n                    await AsyncStorage.removeItem(\"dark_mode\");\n                    await AsyncStorage.removeItem(\"mnemonic\");\n                },\n                darkMode,\n                setDarkMode: async (mode: boolean) => {\n                    await AsyncStorage.setItem(\"dark_mode\", String(mode));\n                    setDarkMode(mode);\n                },\n                mnemonic,\n                setMnemonic: async (mne: string) => {\n                    await AsyncStorage.setItem(\"mnemonic\", mne);\n                    setMnemonic(mne);\n                }\n            }}>\n            {children}\n        </GlobalContext.Provider>\n    );\n};\n\nexport const GlobalContextConsumer = GlobalContext.Consumer;\n","import * as Analytics from \"expo-firebase-analytics\";\n\nimport { ethers } from \"ethers\";\n\nexport const logTransaction = async (\n    tx: ethers.providers.TransactionResponse,\n    name: string,\n    ...args: any[]\n): Promise<ethers.providers.TransactionResponse> => {\n    await Analytics.logEvent(\"tx:\" + name, {\n        args: args || [],\n        hash: tx.hash,\n        value: tx.value.toString(),\n        gasLimit: tx.gasLimit.toString(),\n        gasPrice: tx.gasPrice.toString(),\n        chainId: tx.chainId\n    });\n    return tx;\n};\n","import React from \"react\";\n\nimport { EthersContextConsumer, EthersContextProvider } from \"./EthersContext\";\nimport { GlobalContextConsumer, GlobalContextProvider } from \"./GlobalContext\";\n\nexport const ContextProvider = ({ children }) => {\n    return (\n        <GlobalContextProvider>\n            <EthersContextProvider>{children}</EthersContextProvider>\n        </GlobalContextProvider>\n    );\n};\n\nexport const ContextConsumer = ({ children }) => {\n    return (\n        <GlobalContextConsumer>\n            {globalContext => (\n                <EthersContextConsumer>\n                    {ethersContext =>\n                        children({\n                            ...globalContext,\n                            ...ethersContext\n                        })\n                    }\n                </EthersContextConsumer>\n            )}\n        </GlobalContextConsumer>\n    );\n};\n","import * as React from \"react\";\nimport Svg, { Path, SvgProps } from \"react-native-svg\";\n\nfunction SvgMoon(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 520 520\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={2}\n            {...props}>\n            <Path fill=\"none\" d=\"M0 0h519.851v519.851H0z\" />\n            <Path\n                d=\"M248.7 44.15c-33.5 29.48-54.6 72.67-54.6 120.76 0 88.79 72 160.88 160.8 160.88 48.1 0 91.3-21.15 120.8-54.64-5.9 114.05-100.3 204.84-215.8 204.84-119.2 0-216.1-96.81-216.1-216.06C43.8 144.44 134.6 50 248.7 44.15z\"\n                fill=\"#fff\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgMoon;\n","import * as React from \"react\";\nimport Svg, { Circle, Path, SvgProps } from \"react-native-svg\";\n\nfunction SvgSun(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 520 520\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={2}\n            {...props}>\n            <Path fill=\"none\" d=\"M.056 0h519.851v519.851H.056z\" />\n            <Path\n                d=\"M260 476.13l-16.5-62.6a154.397 154.397 0 0032.9 0l-16.4 62.6zM342.7 459.67l-39.1-51.55c10.6-3.13 20.8-7.37 30.3-12.57l8.8 64.12zM186 395.55c9.6 5.23 19.7 9.47 30.4 12.57l-39.2 51.55 8.8-64.12zM412.8 412.8l-55.9-32.67c8.6-6.9 16.4-14.7 23.3-23.26l32.6 55.93zM139.8 356.87a156.5 156.5 0 0023.2 23.26l-55.9 32.67 32.7-55.93zM459.7 342.66l-64.1-8.77c5.2-9.56 9.5-19.72 12.6-30.37l51.5 39.14zM111.8 303.52c3.1 10.64 7.3 20.81 12.6 30.37l-64.2 8.77 51.6-39.14zM476.2 259.93l-62.6 16.43c.6-5.4.9-10.88.9-16.43 0-5.55-.3-11.04-.9-16.43l62.6 16.43zM106.4 243.5c-.6 5.39-.9 10.88-.9 16.43 0 5.55.3 11.03.9 16.43l-62.6-16.43 62.6-16.43zM408.2 216.33c-3.2-10.64-7.4-20.81-12.6-30.36l64.1-8.78-51.5 39.14zM124.4 185.97c-5.3 9.55-9.5 19.71-12.6 30.36l-51.6-39.14 64.2 8.78zM163 139.73c-8.5 6.9-16.3 14.69-23.2 23.25l-32.7-55.93 55.9 32.68zM380.2 162.98c-6.9-8.56-14.7-16.36-23.3-23.25l55.9-32.68-32.6 55.93zM333.9 124.3c-9.5-5.22-19.7-9.47-30.3-12.56l39.1-51.56-8.8 64.12zM216.4 111.74c-10.7 3.12-20.8 7.36-30.4 12.56l-8.8-64.12 39.2 51.56zM276.4 106.33c-5.4-.59-10.9-.88-16.4-.88-5.6 0-11.1.29-16.5.88l16.5-62.6 16.4 62.6z\"\n                fill=\"#FA52A0\"\n            />\n            <Circle\n                cx={26447}\n                cy={9542.46}\n                r={216.2}\n                fill=\"#FA52A0\"\n                transform=\"matrix(.5998 0 0 .5998 -15602.944 -5463.63)\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgSun;\n","import React, { useContext } from \"react\";\nimport { TouchableHighlight, View } from \"react-native\";\n\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport SvgMoon from \"./svg/SvgMoon\";\nimport SvgSun from \"./svg/SvgSun\";\n\nconst DarkModeSwitch = props => {\n    const { darkMode, setDarkMode } = useContext(GlobalContext);\n    const { overlay } = useColors();\n    const onPress = async () => {\n        await setDarkMode(!darkMode);\n    };\n    return (\n        <View style={props.style}>\n            <TouchableHighlight activeOpacity={0.7} underlayColor={overlay} onPress={onPress}>\n                {darkMode ? (\n                    <SvgMoon width={24} height={24} style={{ margin: 3 }} />\n                ) : (\n                    <SvgSun width={30} height={30} />\n                )}\n            </TouchableHighlight>\n        </View>\n    );\n};\n\nexport default DarkModeSwitch;\n","import React, { useContext } from \"react\";\nimport { TouchableWithoutFeedback, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport Modal from \"modal-react-native-web\";\nimport { Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport useColors from \"../../hooks/useColors\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport Text from \"../Text\";\n\nconst MobileWebMenu = ({ expanded, onCollapse }) => {\n    const { overlay } = useColors();\n    return (\n        <Modal animationType=\"slide\" transparent={true} visible={expanded}>\n            <TouchableWithoutFeedback style={{ height: \"100%\" }} onPress={onCollapse}>\n                <View\n                    style={{\n                        height: \"100%\",\n                        justifyContent: \"space-between\",\n                        alignItems: \"flex-end\",\n                        paddingRight: Spacing.normal,\n                        paddingBottom: Spacing.normal,\n                        backgroundColor: overlay\n                    }}>\n                    <View style={{ marginTop: Spacing.small }}>\n                        <CloseButton onPress={onCollapse} />\n                    </View>\n                    <View style={{ alignItems: \"flex-end\" }}>\n                        <DarkModeSwitch style={{ marginBottom: 4 }} />\n                        <Status />\n                        <View style={{ height: Spacing.large }} />\n                        <MobileWebMenuItem title={\"Home\"} path={\"/home\"} />\n                        <MobileWebMenuItem title={\"Swap\"} path={\"/swap\"} />\n                        <MobileWebMenuItem title={\"Liquidity\"} path={\"/liquidity\"} />\n                        <MobileWebMenuItem title={\"Migrate\"} path={\"/migrate\"} />\n                        <MobileWebMenuItem title={\"Stake\"} path={\"/staking\"} />\n                        {/*<MobileWebMenuItem title={\"Farm\"} path={\"/farming\"} />*/}\n                    </View>\n                </View>\n            </TouchableWithoutFeedback>\n        </Modal>\n    );\n};\n\nconst CloseButton = ({ onPress }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"close\"} color={textDark} size={32} onPress={onPress} />;\n};\n\nconst MobileWebMenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ textDecoration: \"none\", marginBottom: Spacing.tiny }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 24,\n                    color: active ? textDark : textLight\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst Status = () => {\n    const { textLight, green, accent } = useColors();\n    const { ethereum, chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : \"Not connected\";\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        ethereum?.disconnect?.();\n    };\n    return (\n        <View>\n            <FlexView style={{ marginBottom: Spacing.tiny }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginTop: 8 }} />\n                <Text style={{ fontSize: 18, color: textLight, marginLeft: 8 }}>{title}</Text>\n            </FlexView>\n            {ethereum?.isWalletConnect && (\n                <Text\n                    style={{\n                        fontFamily: \"regular\",\n                        fontSize: 15,\n                        color: accent,\n                        alignSelf: \"flex-end\"\n                    }}\n                    onPress={onPress}>\n                    Disconnect\n                </Text>\n            )}\n        </View>\n    );\n};\n\nexport default MobileWebMenu;\n","import * as React from \"react\";\nimport Svg, { Path, SvgProps } from \"react-native-svg\";\n\nfunction SvgLogo(props: SvgProps) {\n    return (\n        <Svg\n            viewBox=\"0 0 76 68\"\n            fillRule=\"evenodd\"\n            clipRule=\"evenodd\"\n            strokeLinecap=\"round\"\n            strokeLinejoin=\"round\"\n            strokeMiterlimit={1.5}\n            {...props}>\n            <Path fill=\"none\" d=\"M-.005.004h75.412V67.5H-.005z\" />\n            <Path\n                d=\"M17555.2 7266.44c13.9-19.4 61.1-9.44 105.3 22.23 44.2 31.67 68.8 73.13 54.9 92.53l-42.6 59.38c-13.9 19.41-61 9.45-105.2-22.22-44.2-31.67-68.8-73.14-54.9-92.54l42.5-59.38z\"\n                fill=\"none\"\n                stroke=\"#fff\"\n                strokeWidth={14}\n                transform=\"matrix(.26772 0 0 .26772 -4678.27 -1934.9)\"\n            />\n            <Path\n                d=\"M17550.4 7275.75c13.9-19.4 61-9.44 105.2 22.22 44.2 31.67 68.8 73.14 54.9 92.54l-42.5 59.38c-13.9 19.4-61.1 9.44-105.3-22.23-44.2-31.67-68.8-73.13-54.9-92.53l42.6-59.38z\"\n                fill=\"#fff\"\n                stroke=\"#fff\"\n                strokeWidth={4.91}\n                transform=\"matrix(.26772 0 0 .26772 -4676.962 -1937.14)\"\n            />\n            <Path\n                d=\"M20.767 9.743v-.002c1.633-2.31 4.846-3.336 8.995-2.996 5.703.471 13.28 3.512 20.534 8.722 7.282 5.21 12.583 11.402 14.859 16.658 1.66 3.804 1.713 7.169.053 9.48v-.003.002L53.83 57.501c-1.66 2.31-4.872 3.336-8.995 2.996-5.702-.471-13.279-3.512-20.56-8.722-7.256-5.207-12.583-11.4-14.859-16.655-1.66-3.807-1.713-7.17-.053-9.482L20.767 9.74v.002zm24.71 31.819L28.13 52.024c.804.506 1.607.982 2.383 1.432l17.803-10.74a43.599 43.599 0 01-2.838-1.154zm-6.639-3.556l-16.41 9.9c.749.6 1.498 1.19 2.301 1.77l16.76-10.117a54.471 54.471 0 01-2.651-1.553zm-3.453-2.329C28.263 30.51 23.07 24.41 20.82 19.221c-.696-1.588-1.098-3.1-1.232-4.49l-8.647 12.047c-1.312 1.845-1.044 4.525.268 7.563 1.499 3.435 4.364 7.274 8.245 10.95l15.93-9.614zm28.244 4.79c1.311-1.845 1.07-4.527-.268-7.566-2.169-5.009-7.282-10.88-14.19-15.846-6.933-4.964-14.135-7.911-19.57-8.361-3.319-.273-5.942.343-7.254 2.187l-.08.11c-1.232 1.842-.964 4.476.32 7.453 2.196 5.012 7.283 10.883 14.216 15.85 6.934 4.965 14.136 7.913 19.57 8.36 3.24.268 5.837-.316 7.175-2.078l.08-.11zM45.933 21.563c3.48 2.485 6.023 5.416 7.12 7.925.617 1.413.777 2.658.161 3.515-.615.859-1.847 1.1-3.373.974-2.73-.225-6.345-1.708-9.798-4.195-3.48-2.484-6.024-5.416-7.121-7.922-.616-1.413-.777-2.658-.161-3.517.616-.86 1.847-1.1 3.373-.972 2.73.225 6.318 1.708 9.799 4.192z\"\n                fill=\"#191932\"\n            />\n        </Svg>\n    );\n}\n\nexport default SvgLogo;\n","import React, { FC, useContext } from \"react\";\nimport { TouchableHighlight, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { Link, useRouteMatch } from \"react-router-dom\";\n\nimport { HEADER_HEIGHT, HEADER_WIDTH, IS_DESKTOP, Spacing } from \"../../constants/dimension\";\nimport { EthersContext } from \"../../context/EthersContext\";\nimport { GlobalContext } from \"../../context/GlobalContext\";\nimport useColors from \"../../hooks/useColors\";\nimport DarkModeSwitch from \"../DarkModeSwitch\";\nimport FlexView from \"../FlexView\";\nimport SvgLogo from \"../svg/SvgLogo\";\nimport Text from \"../Text\";\n\nexport interface WebHeaderProps {\n    onExpandMenu?: () => void;\n}\n\nconst WebHeader: FC<WebHeaderProps> = props => {\n    const { header, borderDark } = useColors();\n    return (\n        <View\n            // @ts-ignore\n            style={{\n                position: \"fixed\",\n                top: 0,\n                zIndex: 100,\n                width: \"100%\",\n                height: HEADER_HEIGHT,\n                paddingBottom: Spacing.small,\n                backgroundColor: header,\n                borderBottomWidth: 1,\n                borderColor: borderDark\n            }}>\n            <FlexView\n                style={{\n                    flex: 1,\n                    width: IS_DESKTOP ? HEADER_WIDTH : \"100%\",\n                    alignSelf: \"center\",\n                    justifyContent: \"space-between\",\n                    alignItems: \"flex-end\",\n                    paddingTop: Spacing.small,\n                    paddingHorizontal: Spacing.normal\n                }}>\n                <Title />\n                {IS_DESKTOP ? <Menu /> : <MenuIcon onExpand={props.onExpandMenu} />}\n            </FlexView>\n        </View>\n    );\n};\n\nexport const Title = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { textDark, white } = useColors();\n    const color = darkMode ? white : textDark;\n    return (\n        <FlexView style={{ alignSelf: \"center\", alignItems: \"center\" }}>\n            <SvgLogo width={36} height={36} style={{ marginRight: 4 }} />\n            <Link to={\"/\"} style={{ textDecoration: \"none\" }}>\n                <Text style={{ fontSize: 28, color }}>SushiSwap</Text>\n                <Text fontWeight={\"light\"} style={{ fontSize: 28, color, marginLeft: 4 }}>\n                    lite\n                </Text>\n            </Link>\n        </FlexView>\n    );\n};\n\nconst Menu = () => {\n    return (\n        <FlexView\n            style={{\n                height: \"100%\",\n                alignItems: \"center\"\n            }}>\n            <MenuItem title={\"Swap\"} path={\"/swap\"} />\n            <MenuItem title={\"Liquidity\"} path={\"/liquidity\"} />\n            <MenuItem title={\"Migrate\"} path={\"/migrate\"} />\n            <MenuItem title={\"Stake\"} path={\"/staking\"} />\n            {/*<MenuItem title={\"Farm\"} path={\"/farming\"} />*/}\n            <DarkModeSwitch style={{ marginLeft: Spacing.small }} />\n            <Status />\n        </FlexView>\n    );\n};\n\nconst MenuItem = ({ title, path }) => {\n    const { textDark, textLight } = useColors();\n    const match = useRouteMatch(path);\n    const active = match?.path?.startsWith(path);\n    return (\n        <Link to={path} style={{ marginLeft: Spacing.tiny, textDecoration: \"none\" }}>\n            <Text\n                style={{\n                    fontFamily: \"regular\",\n                    fontSize: 18,\n                    color: active ? textDark : textLight,\n                    padding: 3\n                }}>\n                {title}\n            </Text>\n        </Link>\n    );\n};\n\nconst MenuIcon = ({ onExpand }) => {\n    const { textDark } = useColors();\n    return <Icon type={\"material-community\"} name={\"menu\"} size={28} color={textDark} onPress={onExpand} />;\n};\n\nconst Status = () => {\n    const { textLight, green, borderDark } = useColors();\n    const { ethereum, chainId, address, ensName } = useContext(EthersContext);\n    const connected = chainId === 1 && address;\n    const title = connected\n        ? ensName || address!.substring(0, 6) + \"...\" + address!.substring(address!.length - 4, address!.length)\n        : \"Not connected\";\n    const color = connected ? green : textLight;\n    const onPress = () => {\n        if (confirm(\"Do you want to disconnect?\")) ethereum?.disconnect?.();\n    };\n    return (\n        <TouchableHighlight onPress={onPress} disabled={!ethereum?.isWalletConnect}>\n            <FlexView\n                style={{\n                    height: 28,\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                    marginLeft: Spacing.small,\n                    paddingHorizontal: Spacing.small,\n                    borderRadius: 16,\n                    borderWidth: 1,\n                    borderColor: borderDark\n                }}>\n                <View style={{ backgroundColor: color, width: 6, height: 6, borderRadius: 3, marginRight: 12 }} />\n                <Text style={{ fontSize: 15, color: textLight, marginRight: 2 }}>{title}</Text>\n                {ethereum?.isWalletConnect && <CloseIcon />}\n            </FlexView>\n        </TouchableHighlight>\n    );\n};\n\nconst CloseIcon = () => {\n    const { textLight } = useColors();\n    return (\n        <Icon\n            type={\"material-community\"}\n            name={\"close\"}\n            size={15}\n            color={textLight}\n            style={{ paddingLeft: 2, paddingTop: 2 }}\n        />\n    );\n};\n\nexport default WebHeader;\n","import React from \"react\";\n\nimport BackgroundImage from \"../components/BackgroundImage\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport Title from \"../components/Title\";\nimport WebSubMenu from \"../components/web/WebSubMenu\";\nimport Screen from \"./Screen\";\n\nconst EmptyScreen = () => {\n    return (\n        <Screen>\n            <Container>\n                <BackgroundImage />\n                <Content>\n                    <Title text={\"Loading...\"} />\n                </Content>\n            </Container>\n            <WebSubMenu items={[]} />\n        </Screen>\n    );\n};\n\nexport default EmptyScreen;\n","import React, { lazy, Suspense, useContext, useEffect, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\nimport { Icon } from \"react-native-elements\";\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\";\n\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport { DefaultTheme, NavigationContainer, Theme } from \"@react-navigation/native\";\nimport useAsyncEffect from \"use-async-effect\";\nimport MobileWebMenu from \"../components/web/MobileWebMenu\";\nimport WebHeader from \"../components/web/WebHeader\";\nimport { IS_DESKTOP } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { GlobalContext } from \"../context/GlobalContext\";\nimport useColors from \"../hooks/useColors\";\nimport EmptyScreen from \"./EmptyScreen\";\n\nconst FarmingScreen = lazy(() => import(\"./FarmingScreen\"));\nconst HarvestScreen = lazy(() => import(\"./HarvestScreen\"));\nconst LiquidityScreen = lazy(() => import(\"./LiquidityScreen\"));\nconst MigrateScreen = lazy(() => import(\"./MigrateScreen\"));\nconst MyLimitOrdersScreen = lazy(() => import(\"./MyLimitOrdersScreen\"));\nconst RemoveLiquidityScreen = lazy(() => import(\"./RemoveLiquidityScreen\"));\nconst StakeScreen = lazy(() => import(\"./StakeScreen\"));\nconst UnstakeScreen = lazy(() => import(\"./UnstakeScreen\"));\nconst SwapScreen = lazy(() => import(\"./SwapScreen\"));\nconst HomeScreen = lazy(() => import(\"./HomeScreen\"));\n\nexport const Screens = () => {\n    const { load } = useContext(GlobalContext);\n    useAsyncEffect(load, []);\n    return Platform.OS === \"web\" ? <WebScreens /> : <AppScreens />;\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst WebScreens = () => {\n    const { address } = useContext(EthersContext);\n    const [menuExpanded, setMenuExpanded] = useState(false);\n    const { background } = useColors();\n    useEffect(() => {\n        if (!address) setMenuExpanded(false);\n    }, [address]);\n    return (\n        <Router>\n            <View style={{ flex: 1, backgroundColor: background }}>\n                <Suspense fallback={<EmptyScreen />}>\n                    <Switch>\n                        <Route path={\"/swap/my-orders\"}>\n                            <MyLimitOrdersScreen />\n                        </Route>\n                        <Route path={\"/swap\"}>\n                            <SwapScreen />\n                        </Route>\n                        <Route path={\"/liquidity/migrate\"}>\n                            <Redirect to={\"/migrate\"} />\n                        </Route>\n                        <Route path={\"/liquidity/remove\"}>\n                            <RemoveLiquidityScreen />\n                        </Route>\n                        <Route path={\"/liquidity\"}>\n                            <LiquidityScreen />\n                        </Route>\n                        <Route path={\"/farming/harvest\"}>\n                            <HarvestScreen />\n                        </Route>\n                        <Route path={\"/farming\"}>\n                            <FarmingScreen />\n                        </Route>\n                        <Route path={\"/migrate\"}>\n                            <MigrateScreen />\n                        </Route>\n                        <Route path={\"/staking/unstake\"}>\n                            <UnstakeScreen />\n                        </Route>\n                        <Route path={\"/staking\"}>\n                            <StakeScreen />\n                        </Route>\n                        <Route path={\"/home\"}>\n                            <HomeScreen />\n                        </Route>\n                        <Redirect to={\"/home\"} />\n                    </Switch>\n                </Suspense>\n                <WebHeader onExpandMenu={() => setMenuExpanded(true)} />\n                {!IS_DESKTOP && <MobileWebMenu expanded={menuExpanded} onCollapse={() => setMenuExpanded(false)} />}\n            </View>\n        </Router>\n    );\n};\n\nconst Tab = createBottomTabNavigator();\n\nconst AppScreens = () => {\n    const { darkMode } = useContext(GlobalContext);\n    const { primary, accent, background, border, textDark, disabled } = useColors();\n    const theme: Theme = {\n        ...DefaultTheme,\n        dark: darkMode,\n        colors: {\n            primary,\n            background,\n            border,\n            card: background,\n            notification: background,\n            text: textDark\n        }\n    };\n    return (\n        <NavigationContainer theme={theme}>\n            <Tab.Navigator\n                tabBarOptions={{\n                    activeTintColor: accent,\n                    inactiveTintColor: disabled,\n                    labelStyle: { marginBottom: 4 }\n                }}>\n                <Tab.Screen name=\"Home\" component={SwapScreen} options={tabOptions(\"home\")} />\n                <Tab.Screen name=\"Liquidity\" component={LiquidityScreen} options={tabOptions(\"water\")} />\n                <Tab.Screen name=\"Farming\" component={FarmingScreen} options={tabOptions(\"leaf\")} />\n            </Tab.Navigator>\n        </NavigationContainer>\n    );\n};\n\nconst tabOptions = iconName => ({\n    tabBarIcon: ({ color }) => <Icon type={\"material-community\"} name={iconName} color={color} />\n});\n","/* tslint:disable:ordered-imports */\nimport \"./globals\";\nimport React from \"react\";\n\nimport { OpenSans_300Light, OpenSans_400Regular, OpenSans_600SemiBold } from \"@expo-google-fonts/open-sans\";\nimport { AppLoading } from \"expo\";\nimport { useFonts } from \"expo-font\";\n\nimport { ContextProvider } from \"./src/context\";\nimport { Screens } from \"./src/screens\";\nimport { YellowBox } from \"react-native\";\n\nif (__DEV__) {\n    YellowBox.ignoreWarnings([\"Setting a timer\", \"VirtualizedLists should never be nested\"]);\n}\n\nconst App = () => {\n    const [fontsLoaded] = useFonts({\n        light: OpenSans_300Light,\n        regular: OpenSans_400Regular,\n        bold: OpenSans_600SemiBold\n    });\n    if (!fontsLoaded) {\n        return <AppLoading />;\n    }\n    return (\n        <ContextProvider>\n            <Screens />\n        </ContextProvider>\n    );\n};\n\nexport default App;\n","global.Buffer = require('buffer').Buffer;\n","import React, { FC } from \"react\";\nimport { Text as NativeText, TextProps as NativeTextProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface TextProps extends NativeTextProps {\n    note?: boolean;\n    caption?: boolean;\n    dark?: boolean;\n    medium?: boolean;\n    light?: boolean;\n    disabled?: boolean;\n    fontWeight?: \"light\" | \"regular\" | \"bold\";\n}\n\nconst Text: FC<TextProps> = props => {\n    const { textDark, textMedium, textLight, placeholder } = useColors();\n    const fontFamily = props.fontWeight || \"regular\";\n    const color = props.disabled\n        ? placeholder\n        : props.medium\n        ? textMedium\n        : props.note || props.light\n        ? textLight\n        : textDark;\n    return (\n        <NativeText\n            {...props}\n            h1Style={[{ fontFamily }, props.h1Style]}\n            h2Style={[{ fontFamily }, props.h2Style]}\n            h3Style={[{ fontFamily }, props.h3Style]}\n            h4Style={[{ fontFamily }, props.h4Style]}\n            style={[\n                {\n                    fontFamily,\n                    fontSize: props.note ? 13 : props.caption ? 18 : 15,\n                    color\n                },\n                props.style\n            ]}\n        />\n    );\n};\nexport default Text;\n"],"sourceRoot":""}