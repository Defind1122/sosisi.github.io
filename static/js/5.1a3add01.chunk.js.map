{"version":3,"sources":["src/hooks/useStyles.tsx","src/components/Heading.tsx","src/components/ItemSeparator.tsx","src/components/Expandable.tsx","src/components/Selectable.tsx","src/components/Meta.tsx","src/components/InfoBox.tsx","src/components/ErrorMessage.tsx","src/components/Loading.tsx","src/components/TokenLogo.tsx","src/components/TokenSymbol.tsx","src/components/Notice.tsx","src/components/web/WebFooter.tsx","src/components/Border.tsx","index.tsx","src/components/ApproveButton.tsx","src/components/Column.tsx","src/components/FetchingButton.tsx","src/components/InsufficientBalanceButton.tsx","assets/empty-token.png","src/components/TokenInput.tsx","src/hooks/useDelayedOnBlockEffect.tsx","assets/ETH.png","src/components/Input.tsx","src/hooks/useDelayedEffect.tsx","src/components/TokenAmount.tsx","src/hooks/useTokenPairState.tsx","src/components/UnsupportedButton.tsx","src/components/ExperimentalNotice.tsx","src/components/TokenName.tsx","src/components/TokenSearch.tsx","src/components/TokenSelect.tsx","src/hooks/useSwapState.tsx","src/screens/SwapScreen.tsx"],"names":["useStyles","useColors","shadowColor","shadow","borderDark","border","useCallback","attrs","borderColor","color","borderWidth","borderRadius","radius","padding","Spacing","small","tiny","elevation","shadowOffset","width","height","shadowOpacity","shadowRadius","overflow","Heading","props","accent","style","alignItems","marginBottom","disabled","medium","fontWeight","flex","fontSize","paddingBottom","text","buttonText","type","size","title","onPress","onPressButton","ITEM_SEPARATOR_HEIGHT","ItemSeparator","Expandable","useState","expanded","setExpanded","shouldExpand","undefined","onExpand","display","children","Selectable","background","backgroundLight","hovered","selected","backgroundColor","Meta","textMedium","textLight","placeholder","useLinker","url","suffix","justifyContent","marginTop","label","textDecorationLine","InfoBox","normal","ErrorMessage","error","code","note","message","Loading","marginVertical","large","TokenLogo","setError","require","ETH","source","replaceWETH","token","symbol","uri","logoURI","onError","opacity","TokenSymbol","caption","marginLeft","Notice","borderStyle","clear","paddingHorizontal","titleStyle","buttonStyle","paddingVertical","alignSelf","Link","to","window","open","WebFooter","noTopMargin","huge","textAlign","Border","isServer","process","hoverListener","hasMouse","refs","mousePosition","x","y","hover","target","hoverFunc","containsEvent","r","previousHoverFunc","unhover","document","event","add","ref","remove","createHoverListener","Hoverable","rest","hostRef","React","hr","setHovered","parent","enhanceScrollView","WrappedComponent","EnhancedScrollView","onScroll","e","scrollEventThrottle","forwardedRef","setRef","setLocalRef","getForwardedRef","setAndForwardRef","hostNode","interactionState","ApproveButton","approveToken","useContext","EthersContext","loading","setLoading","a","async","address","spender","tx","wait","onSuccess","hidden","containerStyle","Column","Platform","OS","FetchingButton","InsufficientBalanceButton","module","exports","MaxButton","onPressMax","balance","fee","pow10","gt","sub","ethers","constants","Zero","updateAmount","formatBalance","decimals","position","right","bottom","maxButtonText","TokenInput","onChangeText","onAmountChanged","parseBalance","endsWith","indexOf","length","value","amount","autoFocus","inputStyle","marginHorizontal","inputContainerStyle","borderBottomWidth","labelStyle","fontFamily","paddingTop","hideMaxButton","useDelayedOnBlockEffect","effect","getEventName","inputs","initialTimeout","addOnBlockListener","removeOnBlockListener","eventName","useAsyncEffect","setTimeout","handles","forEach","handle","clearTimeout","Input","textDark","errors","forbidden","validation","match","regexp","push","allowed","join","minHeight","outline","placeholderTextColor","errorStyle","useDelayedEffect","timeout","key","toString","TokenAmount","useTokenPairState","provider","signer","tokens","updateTokens","getTokenAllowance","useSDK","wrapETH","unwrapETH","fromSymbol","setFromSymbol","toSymbol","setToSymbol","fromAmount","setFromAmount","toAmount","setToAmount","fromTokenAllowed","setFromTokenAllowed","toTokenAllowed","setToTokenAllowed","wrapping","setWrapping","unwrapping","setUnwrapping","fromToken","find","toToken","useEffect","minAllowance","BigNumber","from","pow","ROUTER","fromAllowance","gte","toAllowance","onWrap","onUnwrap","UnsupportedButton","state","ExperimentalNotice","onPressContract","contractURL","TokenName","Text","numberOfLines","ellipsizeMode","name","TokenSearch","FlexView","marginRight","View","TokenList","loadingTokens","renderItem","item","onSelectToken","data","useMemo","filter","sort","t1","t2","isZero","localeCompare","FlatList","keyExtractor","EmptyList","margin","TokenItem","selectable","TokenSelect","search","setSearch","query","setQuery","t","trim","toLowerCase","onChangeSymbol","onAddToken","hide","utils","isAddress","includes","useSwapState","kovanSigner","getTrade","swap","createOrder","calculateSwapFee","calculateLimitOrderFee","calculateLimitOrderReturn","orderType","setOrderType","priceInETH","setPriceInETH","trade","setTrade","unsupported","setUnsupported","swapFee","setSwapFee","limitOrderPrice","setLimitOrderPrice","limitOrderFee","setLimitOrderFee","limitOrderSwapFee","setLimitOrderSwapFee","limitOrderReturn","setLimitOrderReturn","swapping","setSwapping","creatingOrder","setCreatingOrder","WeiPerEther","getNetwork","chainId","Token","WETH","Fetcher","fetchPairData","pair","priceOf","toFixed","isEmptyValue","block","onSwap","result","onCreateOrder","amountIn","Fraction","parse","apply","mul","div","limitOrderUnsupported","Swap","OrderTypeSelect","OrderTypeItem","desc","FromTokenSelect","setTokens","findIndex","ToTokenSelect","AmountInput","AmountNotice","lte","PriceInput","marketPrice","executionPrice","LimitOrderUnsupportedNotice","TradeInfo","WrapInfo","SwapInfo","outputAmount","price","impact","priceImpact","SwapControls","approveRequired","SwapButton","catch","Button","WrapButton","UnwrapButton","LimitOrderInfo","d","LimitOrderControls","setAllowed","SETTLEMENT","allowance","PriceTooLowButton","PlaceOrderButton","goToLimitOrders","SwapScreen","Screen","Container","Content","Title","light"],"mappings":"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","file":"static/js/5.1a3add01.chunk.js","sourcesContent":["import { useCallback } from \"react\";\nimport { ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"./useColors\";\n\nconst useStyles = () => {\n    const { shadow: shadowColor, borderDark } = useColors();\n    const border = useCallback(\n        (attrs?: { color?: string; radius?: number }) => ({\n            borderColor: attrs?.color || borderDark,\n            borderWidth: 1,\n            borderRadius: attrs?.radius || 8,\n            padding: Spacing.small\n        }),\n        []\n    );\n    const shadow = () =>\n        ({\n            borderRadius: Spacing.tiny,\n            elevation: Spacing.small,\n            shadowColor,\n            shadowOffset: { width: 0, height: 2 },\n            shadowOpacity: 0.5,\n            shadowRadius: 4,\n            overflow: \"visible\"\n        } as ViewStyle);\n    return { border, shadow };\n};\n\nexport default useStyles;\n","import React, { FC } from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\ninterface HeadingProps {\n    text: string;\n    disabled?: boolean;\n    buttonText?: string;\n    onPressButton?: () => void | Promise<void>;\n}\n\nconst Heading: FC<HeadingProps> = props => {\n    const { accent } = useColors();\n    return (\n        <FlexView style={{ alignItems: \"flex-end\", height: 32, marginBottom: props.disabled ? 0 : Spacing.small }}>\n            <Text\n                medium={true}\n                fontWeight={\"bold\"}\n                disabled={props.disabled}\n                style={{ flex: 1, fontSize: 18, paddingBottom: Spacing.tiny }}>\n                {props.text}\n            </Text>\n            {props.buttonText && (\n                <Button\n                    type={\"clear\"}\n                    size={\"small\"}\n                    title={props.buttonText}\n                    onPress={props.onPressButton}\n                    color={accent}\n                />\n            )}\n        </FlexView>\n    );\n};\n\nexport default Heading;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nexport const ITEM_SEPARATOR_HEIGHT = 10;\n\nconst ItemSeparator = () => <View style={{ height: ITEM_SEPARATOR_HEIGHT }} />;\n\nexport default ItemSeparator;\n","import React, { FC, ReactNode, useState } from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport Heading from \"./Heading\";\n\nexport interface ExpandableProps {\n    title: string;\n    expanded: boolean;\n    onExpand?: () => void;\n    style?: ViewStyle;\n    children?: ReactNode;\n}\n\nconst Expandable: FC<ExpandableProps> = props => {\n    const [expanded, setExpanded] = useState(true);\n    const shouldExpand = props.expanded && expanded;\n    const buttonText = shouldExpand ? undefined : \"Change\";\n    const onPress = () => {\n        setExpanded(true);\n        props.onExpand?.();\n    };\n\n    return (\n        <View style={props.style}>\n            <Heading text={props.title} buttonText={buttonText} onPressButton={onPress} />\n            <View style={{ display: shouldExpand ? \"flex\" : \"none\" }}>{props.children}</View>\n        </View>\n    );\n};\n\nexport default Expandable;\n","import React, { FC } from \"react\";\nimport { TouchableHighlight, View, ViewProps } from \"react-native\";\nimport { Hoverable } from \"react-native-web-hover\";\n\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nexport interface SelectableProps extends ViewProps {\n    selected: boolean;\n    onPress?: () => void;\n    disabled?: boolean;\n}\n\nconst Selectable: FC<SelectableProps> = props => {\n    const { borderDark, accent } = useColors();\n    const { border } = useStyles();\n    const { background, backgroundLight } = useColors();\n    return (\n        <Hoverable>\n            {({ hovered }) => (\n                <TouchableHighlight onPress={props.onPress}>\n                    <View\n                        {...props}\n                        style={[\n                            {\n                                ...border({ color: props.selected ? accent : borderDark }),\n                                backgroundColor: hovered && !props.disabled ? backgroundLight : background\n                            },\n                            props.style\n                        ]}\n                    />\n                </TouchableHighlight>\n            )}\n        </Hoverable>\n    );\n};\n\nexport default Selectable;\n","import React, { FC } from \"react\";\n\nimport useColors from \"../hooks/useColors\";\nimport useLinker from \"../hooks/useLinker\";\nimport FlexView from \"./FlexView\";\nimport Text from \"./Text\";\n\nexport interface MetaProps {\n    label: string;\n    text?: string;\n    suffix?: string;\n    url?: string;\n    disabled?: boolean;\n}\n\nconst Meta: FC<MetaProps> = props => {\n    const { textMedium, textLight, placeholder } = useColors();\n    const onPress = useLinker(props.url || \"\", \"\", \"_blank\");\n    const text = props.disabled\n        ? \"N/A\"\n        : props.text\n        ? props.text + (props.suffix ? \" \" + props.suffix : \"\")\n        : \"Fetching…\";\n    return (\n        <FlexView style={{ justifyContent: \"space-between\", marginTop: 4 }}>\n            <Text fontWeight={\"bold\"} style={{ fontSize: 13, color: props.disabled ? placeholder : textMedium }}>\n                {props.label}\n            </Text>\n            <Text\n                onPress={props.url ? onPress : undefined}\n                style={{\n                    fontSize: 13,\n                    color: props.disabled ? placeholder : props.text ? textMedium : textLight,\n                    textDecorationLine: props.url ? \"underline\" : \"none\"\n                }}>\n                {text}\n            </Text>\n        </FlexView>\n    );\n};\n\nexport default Meta;\n","import React, { PropsWithChildren } from \"react\";\nimport { View, ViewProps } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\n\nconst InfoBox = (props: PropsWithChildren<ViewProps>) => {\n    const { backgroundLight } = useColors();\n    const { border } = useStyles();\n    return (\n        <View\n            {...props}\n            style={[\n                {\n                    ...border({ color: backgroundLight }),\n                    backgroundColor: backgroundLight,\n                    marginTop: Spacing.normal + Spacing.small,\n                    padding: Spacing.small + Spacing.tiny\n                },\n                props.style\n            ]}\n        />\n    );\n};\n\nexport default InfoBox;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Text from \"./Text\";\n\nconst ErrorMessage = ({ error }: { error: MetamaskError }) => (\n    <View\n        style={{\n            borderColor: \"red\",\n            borderWidth: 1,\n            width: \"100%\",\n            padding: Spacing.tiny,\n            marginTop: Spacing.small\n        }}>\n        {error.code && (\n            <Text fontWeight={\"bold\"} style={{ color: \"red\", fontSize: 14 }}>\n                Error Code {error.code}\n            </Text>\n        )}\n        <Text note={true} style={{ color: \"red\", fontSize: 14 }}>\n            {error.message}\n        </Text>\n    </View>\n);\n\nexport default ErrorMessage;\n","import React from \"react\";\nimport { ActivityIndicator } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\nconst Loading = () => <ActivityIndicator size={\"large\"} style={{ marginVertical: Spacing.large }} />;\n\nexport default Loading;\n","import React, { useState } from \"react\";\nimport { Image, View, ViewStyle } from \"react-native\";\n\nimport Token from \"../types/Token\";\n\nconst TokenLogo = (props: {\n    token: Token;\n    small?: boolean;\n    replaceWETH?: boolean;\n    disabled?: boolean;\n    style?: ViewStyle;\n}) => {\n    const [error, setError] = useState(false);\n    const size = props.small ? 22 : 27;\n    const placeholder = require(\"../../assets/empty-token.png\");\n    const ETH = require(\"../../assets/ETH.png\");\n    const source = props.replaceWETH && props.token.symbol === \"WETH\" ? ETH : { uri: props.token.logoURI };\n    return (\n        <View\n            style={[\n                {\n                    width: size,\n                    height: size,\n                    backgroundColor: props.disabled ? \"black\" : \"white\",\n                    borderRadius: size / 2\n                },\n                props.style\n            ]}>\n            <Image\n                source={error ? placeholder : source}\n                onError={() => setError(true)}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    borderRadius: size / 2,\n                    opacity: props.disabled ? 0.5 : 1\n                }}\n            />\n        </View>\n    );\n};\n\nexport default TokenLogo;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenSymbol = (props: { token: Token; disabled?: boolean }) => (\n    <Text medium={true} caption={true} disabled={props.disabled} style={{ marginLeft: Spacing.tiny }}>\n        {props.token.symbol}\n    </Text>\n);\n\nexport default TokenSymbol;\n","import React from \"react\";\nimport { View, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useStyles from \"../hooks/useStyles\";\nimport Button from \"./Button\";\nimport Text from \"./Text\";\n\nexport interface NoticeProps {\n    text: string;\n    clear?: boolean;\n    color?: string;\n    buttonText?: string;\n    onPressButton?: () => void;\n    style?: ViewStyle;\n}\n\nconst Notice = (props: NoticeProps) => {\n    const { border } = useStyles();\n    const borderStyle = border({ color: props.color });\n    const color = props.color || borderStyle.borderColor;\n    return (\n        <View style={[props.clear ? { paddingHorizontal: Spacing.tiny } : borderStyle, props.style]}>\n            <Text\n                note={true}\n                style={{\n                    color\n                }}>\n                {props.text}\n            </Text>\n            {props.buttonText && props.onPressButton && (\n                <Button\n                    title={props.buttonText}\n                    type={\"clear\"}\n                    size={\"small\"}\n                    fontWeight={\"bold\"}\n                    onPress={props.onPressButton}\n                    titleStyle={{ color }}\n                    buttonStyle={{ paddingHorizontal: 0, paddingVertical: 0 }}\n                    style={{ alignSelf: \"flex-end\", marginTop: Spacing.tiny }}\n                />\n            )}\n        </View>\n    );\n};\n\nexport default Notice;\n","import React, { useCallback } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../../constants/dimension\";\nimport Column from \"../Column\";\nimport SocialIcons from \"../SocialIcons\";\nimport Text from \"../Text\";\n\nconst WebFooter = () => (\n    <Column noTopMargin={true}>\n        <View\n            style={{\n                width: \"100%\",\n                padding: Spacing.normal,\n                marginTop: Spacing.huge\n            }}>\n            <SocialIcons />\n            <Text note={true} style={{ marginTop: Spacing.tiny, textAlign: \"center\", width: \"100%\" }}>\n                2020 Built by <Link to={\"https://levx.io\"} text={\"LevX Team\"} />\n            </Text>\n        </View>\n    </Column>\n);\n\nconst Link = ({ to, text }) => {\n    const onPress = useCallback(() => {\n        window.open(to, \"_blank\");\n    }, []);\n    return (\n        <Text note={true} style={{ textDecorationLine: \"underline\" }} onPress={onPress}>\n            {text}\n        </Text>\n    );\n};\n\nexport default WebFooter;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\n\nconst Border = () => {\n    const { border } = useColors();\n    return (\n        <View\n            style={{\n                height: 1,\n                width: \"100%\",\n                backgroundColor: border,\n                marginTop: Spacing.small,\n                marginBottom: Spacing.small + Spacing.tiny\n            }}\n        />\n    );\n};\n\nexport default Border;\n","import * as React from 'react';\nimport type {\n  ViewProps,\n  StyleProp,\n  ViewStyle,\n  PressableStateCallbackType,\n  FlatListProps,\n  VirtualizedListProps,\n  ScrollViewProps,\n} from 'react-native';\n\nimport {\n  View,\n  Pressable as NativePressable,\n  ScrollView as NativeScrollView,\n  FlatList as NativeFlatList,\n  VirtualizedList as NativeVirtualizedList,\n  //@ts-ignore\n} from 'react-native-web';\n\nconst isServer =\n  typeof process !== 'undefined' &&\n  process.release &&\n  process.release.name === 'node';\n\nconst hoverListener = createHoverListener();\n\ninterface PressableStateCallbackTypeWeb extends PressableStateCallbackType {\n  focused?: boolean;\n  hovered?: boolean;\n}\n\ntype ChildrenType =\n  | React.ReactNode\n  | ((state: PressableStateCallbackTypeWeb) => React.ReactNode);\n\ntype StylesType =\n  | StyleProp<ViewStyle>\n  | ((state: PressableStateCallbackTypeWeb) => StyleProp<ViewStyle>);\n\ninterface HoverableProps extends ViewProps {\n  children:\n    | React.ReactNode\n    | ((state: { hovered: boolean }) => React.ReactNode);\n}\n\ninterface PressableProps extends Omit<ViewProps, 'style'> {\n  children: ChildrenType;\n  style?: StylesType;\n}\n\nexport function Hoverable({ children, ...rest }: HoverableProps) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <View\n      ref={hostRef}\n      children={\n        typeof children === 'function' ? children({ hovered }) : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction PressableWithoutRef(\n  { style, children, ...rest }: PressableProps,\n  forwardedRef: any\n) {\n  const hostRef = React.useRef<View | null>(null);\n  const [hovered, setHovered] = React.useState<boolean>(false);\n\n  const setRef = setAndForwardRef({\n    getForwardedRef: () => forwardedRef,\n    setLocalRef: (hostNode: any) => {\n      hostRef.current = hostNode;\n    },\n  });\n\n  React.useEffect(() => {\n    const hr = hostRef.current;\n    hoverListener.add(hr, setHovered);\n    return () => {\n      hoverListener.remove(hr);\n    };\n  }, [setHovered, hostRef]);\n\n  return (\n    <NativePressable\n      //@ts-ignore\n      ref={setRef}\n      style={(interactionState: any) =>\n        typeof style === 'function'\n          ? style({ ...interactionState, hovered })\n          : style\n      }\n      children={(interactionState: any) =>\n        typeof children === 'function'\n          ? children({ ...interactionState, hovered })\n          : children\n      }\n      {...rest}\n    />\n  );\n}\n\nfunction containsEvent(parent: any, clickTarget: any) {\n  if (parent === clickTarget) {\n    return true;\n  }\n  if (!parent) {\n    return false;\n  }\n  for (let child of parent.childNodes) {\n    if (containsEvent(child, clickTarget)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction createHoverListener() {\n  let hasMouse = isServer ? false : window.matchMedia('(pointer:fine)').matches;\n\n  let refs = new Map<any, (h: boolean) => any>();\n  let previousHoverFunc: undefined | ((h: boolean) => any);\n  let mousePosition = {\n    x: 0,\n    y: 0,\n  };\n\n  function hover(target: any) {\n    // hover is targeted directly\n    let hoverFunc = refs.get(target);\n\n    // let's try to see if any of the children of the hover event are hovered\n    if (!hoverFunc) {\n      for (let r of refs.keys()) {\n        if (containsEvent(r, target)) {\n          hoverFunc = refs.get(r);\n        }\n      }\n    }\n\n    previousHoverFunc && previousHoverFunc(false);\n    hoverFunc && hoverFunc(true);\n\n    // cache the previous hover so we can un-hover this later on\n    previousHoverFunc = hoverFunc;\n  }\n\n  function hoverEvent(event: any) {\n    hover(event.target);\n  }\n\n  function unhover() {\n    previousHoverFunc && previousHoverFunc(false);\n  }\n\n  function captureMousePosition(event: any) {\n    mousePosition.x = event.pageX;\n    mousePosition.y = event.pageY;\n  }\n\n  // touch devices have a bug where the onMouseOver is handled while it should not\n  // if the user would click something it keeps hovered while it should unhover\n  // so only listen to these events if the device has a mouse\n  if (hasMouse) {\n    document.onmouseover = hoverEvent;\n    document.onmousemove = captureMousePosition;\n    document.ontouchstart = unhover;\n    document.ontouchend = unhover;\n    document.ontouchcancel = unhover;\n    document.ontouchmove = unhover;\n  }\n\n  function add(ref: any, setHovered: any) {\n    refs.set(ref, setHovered);\n  }\n\n  function remove(ref: any) {\n    refs.delete(ref);\n  }\n\n  return {\n    add,\n    remove,\n    mousePosition,\n    hover,\n  };\n}\n\nfunction setAndForwardRef({ getForwardedRef, setLocalRef }: any) {\n  return function forwardRef(ref: React.ElementRef<any>) {\n    const forwardedRef = getForwardedRef();\n    setLocalRef(ref);\n\n    // Forward to user ref prop (if one has been specified)\n    if (typeof forwardedRef === 'function') {\n      // Handle function-based refs. String-based refs are handled as functions.\n      forwardedRef(ref);\n    } else if (typeof forwardedRef === 'object' && forwardedRef != null) {\n      // Handle createRef-based refs\n      forwardedRef.current = ref;\n    }\n  };\n}\n\nfunction enhanceScrollView(WrappedComponent: any) {\n  const EnhancedScrollView = ({\n    forwardedRef,\n    onScroll,\n    scrollEventThrottle,\n    ...rest\n  }: any) => {\n    const onScrollInner = (e: any) => {\n      onScroll && onScroll(e);\n      const { mousePosition, hover } = hoverListener;\n      hover(document.elementFromPoint(mousePosition.x, mousePosition.y));\n    };\n    return (\n      <WrappedComponent\n        ref={forwardedRef}\n        onScroll={onScrollInner}\n        scrollEventThrottle={scrollEventThrottle || 25}\n        {...rest}\n      />\n    );\n  };\n\n  return React.forwardRef((props, ref) => {\n    return <EnhancedScrollView {...props} forwardedRef={ref} />;\n  });\n}\n\nexport const Pressable = React.forwardRef(PressableWithoutRef);\nexport const ScrollView = enhanceScrollView(\n  NativeScrollView\n) as React.ElementType<ScrollViewProps>;\nexport const FlatList = enhanceScrollView(NativeFlatList) as React.ElementType<\n  FlatListProps<unknown>\n>;\nexport const VirtualizedList = enhanceScrollView(\n  NativeVirtualizedList\n) as React.ElementType<VirtualizedListProps<unknown>>;\n","import React, { FC, useCallback, useContext, useState } from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport Button from \"./Button\";\n\nexport interface ApproveButtonProps {\n    token: Token;\n    spender: string;\n    onSuccess: () => void;\n    onError: (e) => void;\n    hidden?: boolean;\n}\n\nconst ApproveButton: FC<ApproveButtonProps> = props => {\n    const { approveToken } = useContext(EthersContext);\n    const [loading, setLoading] = useState(false);\n    const onPress = useCallback(async () => {\n        if (props.token) {\n            props.onError({});\n            setLoading(true);\n            try {\n                const tx = await approveToken(props.token.address, props.spender);\n                if (tx) {\n                    await tx.wait();\n                    props.onSuccess();\n                }\n            } catch (e) {\n                props.onError(e);\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [props.token]);\n    if (props.hidden) return <View />;\n    return (\n        <Button\n            title={\"Approve \" + (props.token?.symbol || \"\")}\n            onPress={onPress}\n            loading={loading}\n            containerStyle={{ marginBottom: Spacing.tiny }}\n        />\n    );\n};\n\nexport default ApproveButton;\n","import React, { FC } from \"react\";\nimport { Platform, View, ViewProps, ViewStyle } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\n\ninterface ColumnProps extends ViewProps {\n    noTopMargin?: boolean;\n    style?: ViewStyle;\n}\n\nconst Column: FC<ColumnProps> = props => (\n    <View\n        {...props}\n        style={[\n            {\n                width: \"100%\",\n                marginTop: props.noTopMargin ? 0 : Platform.OS === \"web\" ? Spacing.large : Spacing.normal\n            },\n            props.style\n        ]}\n    />\n);\n\nexport default Column;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst FetchingButton = () => {\n    return <Button title={\"Fetching…\"} disabled={true} />;\n};\nexport default FetchingButton;\n","import React from \"react\";\n\nimport Button from \"./Button\";\n\nconst InsufficientBalanceButton = ({ symbol }: { symbol: string }) => {\n    return <Button title={\"Insufficient \" + (symbol ? symbol : \"Balance\")} disabled={true} />;\n};\nexport default InsufficientBalanceButton;\n","module.exports = __webpack_public_path__ + \"static/media/empty-token.e8aa64c5.png\";","import React, { FC, useCallback } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { formatBalance, parseBalance, pow10 } from \"../utils\";\nimport Button from \"./Button\";\nimport Heading from \"./Heading\";\nimport Input from \"./Input\";\n\nexport interface TokenInputProps {\n    title?: string;\n    token?: Token;\n    amount: string;\n    onAmountChanged: (amount: string) => void;\n    label?: string;\n    hideMaxButton?: boolean;\n    maxButtonText?: string;\n    autoFocus?: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenInput: FC<TokenInputProps> = props => {\n    const { border } = useStyles();\n    const onChangeText = useCallback(\n        (text: string) => {\n            if (props.token && props.onAmountChanged) {\n                try {\n                    parseBalance(text, props.token.decimals);\n                    props.onAmountChanged(text);\n                } catch (e) {\n                    if (text.endsWith(\".\") && text.indexOf(\".\") === text.length - 1) {\n                        props.onAmountChanged(text);\n                    }\n                }\n            }\n        },\n        [props.token, props.onAmountChanged]\n    );\n    return (\n        <View>\n            {props.title && <Heading text={props.title} />}\n            <View>\n                <Input\n                    label={props.label}\n                    value={props.amount}\n                    onChangeText={onChangeText}\n                    placeholder={\"0.0\"}\n                    autoFocus={props.autoFocus || false}\n                    inputStyle={{ marginHorizontal: 4 }}\n                    inputContainerStyle={{ borderBottomWidth: 0 }}\n                    labelStyle={{ fontFamily: \"light\", height: props.label ? \"auto\" : 0 }}\n                    containerStyle={{\n                        ...border(),\n                        paddingHorizontal: Spacing.tiny,\n                        paddingTop: 12,\n                        paddingBottom: 0\n                    }}\n                />\n                {props.token?.balance?.gt(0) && !props.hideMaxButton && (\n                    <MaxButton\n                        token={props.token}\n                        maxButtonText={props.maxButtonText}\n                        updateAmount={props.onAmountChanged}\n                    />\n                )}\n            </View>\n        </View>\n    );\n};\n\nconst MaxButton = (props: { token: Token; updateAmount; maxButtonText?: string }) => {\n    const { accent } = useColors();\n    const onPressMax = useCallback(() => {\n        if (props.token) {\n            let balance = props.token.balance;\n            if (props.token.symbol === \"ETH\") {\n                // Subtract 0.01 ETH for gas fee\n                const fee = pow10(16);\n                balance = balance.gt(fee) ? balance.sub(fee) : ethers.constants.Zero;\n            }\n            props.updateAmount(formatBalance(balance, props.token.decimals));\n        }\n    }, [props.token, props.updateAmount]);\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 10 : 20 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={props.maxButtonText || \"MAX\"}\n                fontWeight={\"bold\"}\n                onPress={onPressMax}\n                buttonStyle={{ paddingHorizontal: 4 }}\n            />\n        </View>\n    );\n};\n\nexport default TokenInput;\n","import { useContext } from \"react\";\n\nimport useAsyncEffect from \"use-async-effect\";\nimport { EthersContext, OnBlockListener } from \"../context/EthersContext\";\n\nconst useDelayedOnBlockEffect = (\n    effect: OnBlockListener,\n    getEventName: () => string,\n    inputs?: any[],\n    initialTimeout = 500\n) => {\n    const { addOnBlockListener, removeOnBlockListener } = useContext(EthersContext);\n    const eventName = getEventName();\n    useAsyncEffect<number[]>(\n        () => {\n            return [\n                setTimeout(effect, initialTimeout),\n                setTimeout(() => addOnBlockListener(eventName, effect), initialTimeout)\n            ];\n        },\n        handles => {\n            if (handles) {\n                handles.forEach(handle => clearTimeout(handle));\n                removeOnBlockListener(eventName);\n            }\n        },\n        inputs\n    );\n};\n\nexport default useDelayedOnBlockEffect;\n","module.exports = __webpack_public_path__ + \"static/media/ETH.ab794f02.png\";","import React, { FC, useCallback } from \"react\";\nimport { Platform } from \"react-native\";\nimport { Input as NativeInput, InputProps as NativeInputProps } from \"react-native-elements\";\n\nimport useColors from \"../hooks/useColors\";\n\nexport interface Validation {\n    regexp: RegExp;\n    error: string;\n}\n\nexport interface InputProps extends NativeInputProps {\n    color?: string;\n    size?: \"small\" | \"normal\" | \"large\";\n    allowed?: Validation[];\n    forbidden?: Validation[];\n    onError?: (error: string) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst Input: FC<InputProps> = props => {\n    const { textDark, textMedium, textLight } = useColors();\n    const size = props.size || \"normal\";\n    const color = props.color || textDark;\n    const fontSize = size === \"small\" ? 16 : size === \"large\" ? 24 : 20;\n    const onChangeText = useCallback(\n        (text: string) => {\n            props.onChangeText?.(text);\n            props.onError?.(\"\");\n            const errors = [] as string[];\n            if (text !== \"\" && props.forbidden) {\n                props.forbidden.forEach(validation => {\n                    if (text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (text !== \"\" && props.allowed) {\n                props.allowed.forEach(validation => {\n                    if (!text.match(validation.regexp)) {\n                        errors.push(validation.error);\n                    }\n                });\n            }\n            if (errors.length > 0) {\n                props.onError?.(errors.join(\"\\n\"));\n            }\n        },\n        [props.onChangeText, props.onError, props.forbidden, props.allowed]\n    );\n    return (\n        <NativeInput\n            {...props}\n            inputStyle={[\n                { fontSize, fontFamily: \"regular\", paddingBottom: 4, color, marginTop: 0, minHeight: 32 },\n                // @ts-ignore\n                Platform.OS === \"web\" ? { outline: \"none\" } : {},\n                props.inputStyle\n            ]}\n            labelStyle={[{ color: textMedium }, props.labelStyle]}\n            placeholderTextColor={props.placeholderTextColor || textLight}\n            errorStyle={props.onError ? { height: 0 } : props.errorStyle}\n            containerStyle={[{ paddingHorizontal: 0 }, props.containerStyle]}\n            onChangeText={onChangeText}\n        />\n    );\n};\n\nexport default Input;\n","import useAsyncEffect from \"use-async-effect\";\n\nconst handles = {};\n\nconst useDelayedEffect = (\n    effect: (isMounted: () => boolean) => unknown | Promise<unknown>,\n    timeout: number,\n    inputs?: any[]\n) => {\n    const key = effect.toString();\n    useAsyncEffect<number>(\n        () => {\n            const handle = setTimeout(effect, timeout);\n            handles[key] = handle;\n            return handle;\n        },\n        handle => {\n            clearTimeout(handle);\n        },\n        inputs\n    );\n};\nexport default useDelayedEffect;\n","import React from \"react\";\nimport { TextStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport Token from \"../types/Token\";\nimport { formatBalance } from \"../utils\";\nimport Text from \"./Text\";\n\nconst TokenAmount = (props: { token: Token; amount?: ethers.BigNumber; disabled?: boolean; style?: TextStyle }) => (\n    <Text caption={true} disabled={props.disabled} style={props.style}>\n        {formatBalance(props.amount || props.token.balance, props.token.decimals, 8)}\n    </Text>\n);\n\nexport default TokenAmount;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport { ROUTER } from \"../constants/contracts\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport Token from \"../types/Token\";\nimport { parseBalance } from \"../utils\";\nimport useSDK from \"./useSDK\";\n\nexport interface TokenPairState {\n    fromSymbol: string;\n    setFromSymbol: (symbol: string) => void;\n    toSymbol: string;\n    setToSymbol: (symbol: string) => void;\n    fromToken?: Token;\n    toToken?: Token;\n    fromAmount: string;\n    setFromAmount: (amount: string) => void;\n    toAmount: string;\n    setToAmount: (amount: string) => void;\n    fromTokenAllowed: boolean;\n    setFromTokenAllowed: (allowed: boolean) => void;\n    toTokenAllowed: boolean;\n    setToTokenAllowed: (allowed: boolean) => void;\n    loading: boolean;\n    onWrap: () => Promise<void>;\n    wrapping: boolean;\n    onUnwrap: () => Promise<void>;\n    unwrapping: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useTokenPairState: () => TokenPairState = () => {\n    const { provider, signer, address, tokens, updateTokens, getTokenAllowance } = useContext(EthersContext);\n    const { wrapETH, unwrapETH } = useSDK();\n    const [fromSymbol, setFromSymbol] = useState(\"\");\n    const [toSymbol, setToSymbol] = useState(\"\");\n    const [fromAmount, setFromAmount] = useState(\"\");\n    const [toAmount, setToAmount] = useState(\"\");\n    const [fromTokenAllowed, setFromTokenAllowed] = useState(false);\n    const [toTokenAllowed, setToTokenAllowed] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [wrapping, setWrapping] = useState(false);\n    const [unwrapping, setUnwrapping] = useState(false);\n\n    const fromToken = tokens.find(token => token.symbol === fromSymbol);\n    const toToken = tokens.find(token => token.symbol === toSymbol);\n\n    useEffect(() => {\n        if (fromSymbol === \"\") {\n            setToSymbol(\"\");\n        }\n        setFromAmount(\"\");\n        setToAmount(\"\");\n    }, [fromSymbol, toSymbol]);\n\n    useEffect(() => {\n        setFromSymbol(\"\");\n    }, [address]);\n\n    useAsyncEffect(async () => {\n        if (fromToken && toToken && provider && signer) {\n            setFromTokenAllowed(false);\n            setToTokenAllowed(false);\n            setLoading(true);\n            try {\n                const minAllowance = ethers.BigNumber.from(2)\n                    .pow(96)\n                    .sub(1);\n                if (fromToken.symbol !== \"ETH\") {\n                    const fromAllowance = await getTokenAllowance(fromToken.address, ROUTER);\n                    setFromTokenAllowed(ethers.BigNumber.from(fromAllowance).gte(minAllowance));\n                }\n                if (toToken.symbol !== \"ETH\") {\n                    const toAllowance = await getTokenAllowance(toToken.address, ROUTER);\n                    setToTokenAllowed(ethers.BigNumber.from(toAllowance).gte(minAllowance));\n                }\n            } finally {\n                setLoading(false);\n            }\n        }\n    }, [fromToken, toToken, provider, signer]);\n\n    const onWrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setWrapping(true);\n            try {\n                const tx = await wrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setWrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    const onUnwrap = useCallback(async () => {\n        if (fromAmount && signer) {\n            setUnwrapping(true);\n            try {\n                const tx = await unwrapETH(parseBalance(fromAmount), signer);\n                if (tx) {\n                    await tx.wait();\n                    await updateTokens();\n                    setFromSymbol(\"\");\n                }\n            } finally {\n                setUnwrapping(false);\n            }\n        }\n    }, [fromAmount, signer]);\n\n    return {\n        fromSymbol,\n        setFromSymbol,\n        toSymbol,\n        setToSymbol,\n        fromToken,\n        toToken,\n        fromAmount,\n        setFromAmount,\n        toAmount,\n        setToAmount,\n        fromTokenAllowed,\n        setFromTokenAllowed,\n        toTokenAllowed,\n        setToTokenAllowed,\n        loading,\n        onWrap,\n        wrapping,\n        onUnwrap,\n        unwrapping\n    };\n};\n\nexport default useTokenPairState;\n","import React from \"react\";\n\nimport { TokenPairState } from \"../hooks/useTokenPairState\";\nimport Button from \"./Button\";\n\nconst UnsupportedButton = ({ state }: { state: TokenPairState }) => {\n    return <Button title={state.fromSymbol + \"-\" + state.toSymbol + \" Not Supported\"} disabled={true} />;\n};\n\nexport default UnsupportedButton;\n","import React from \"react\";\nimport { View } from \"react-native\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport useLinker from \"../hooks/useLinker\";\nimport Notice from \"./Notice\";\n\nconst ExperimentalNotice = (props: { contractURL: string }) => {\n    const onPressContract = useLinker(props.contractURL, \"\", \"_blank\");\n    return (\n        <View style={{ marginVertical: Spacing.tiny }}>\n            <Notice\n                text={\n                    \"This feature is in beta and contracts are unaudited. Read the contract yourself and use it at your own risk.\"\n                }\n                color={\"orange\"}\n                buttonText={\"View Contract\"}\n                onPressButton={onPressContract}\n            />\n        </View>\n    );\n};\n\nexport default ExperimentalNotice;\n","import React from \"react\";\n\nimport { Spacing } from \"../constants/dimension\";\nimport Token from \"../types/Token\";\nimport Text from \"./Text\";\n\nconst TokenName = (props: { token: Token; disabled?: boolean }) => (\n    <Text\n        caption={true}\n        numberOfLines={1}\n        ellipsizeMode={\"tail\"}\n        style={{ marginLeft: Spacing.small, width: 180 }}\n        disabled={props.disabled}>\n        {props.token.name}\n    </Text>\n);\n\nexport default TokenName;\n","import React, { FC, useCallback, useContext } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useStyles from \"../hooks/useStyles\";\nimport Token from \"../types/Token\";\nimport { findOrFetchToken } from \"../utils/fetch-utils\";\nimport Button from \"./Button\";\nimport FlexView from \"./FlexView\";\nimport Input from \"./Input\";\n\nexport interface TokenSearchProps {\n    tokens?: Token[];\n    text: string;\n    onChangeText: (text: string) => void;\n    onAddToken?: (token: Token) => void;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenSearch: FC<TokenSearchProps> = props => {\n    const { border } = useStyles();\n    if (!props.tokens) {\n        return <View />;\n    }\n    // const isAddress = ethers.utils.isAddress(props.text.trim());\n    return (\n        <FlexView style={{ marginBottom: Spacing.small }}>\n            <Input\n                value={props.text}\n                onChangeText={props.onChangeText}\n                placeholder={\"Search for a token… (name or symbol)\"}\n                autoFocus={true}\n                inputStyle={{ marginHorizontal: Spacing.tiny, fontSize: props.text ? 20 : 16 }}\n                inputContainerStyle={{ borderBottomWidth: 0, marginRight: 40 }}\n                labelStyle={{ height: 0 }}\n                containerStyle={{\n                    ...border(),\n                    paddingHorizontal: Spacing.tiny,\n                    paddingTop: 12,\n                    paddingBottom: 0\n                }}\n            />\n            {/*{isAddress && <AddButton address={props.text} onAddToken={props.onAddToken} />}*/}\n        </FlexView>\n    );\n};\n\nconst AddButton = (props: { address: string; onAddToken? }) => {\n    const { provider, signer, getTokenBalance } = useContext(EthersContext);\n    const { accent } = useColors();\n    const onPress = useCallback(async () => {\n        const address = props.address.trim();\n        if (provider && signer && ethers.utils.isAddress(address)) {\n            const token = await findOrFetchToken(provider, address);\n            const balance = await getTokenBalance(address, await signer.getAddress());\n            props.onAddToken?.({\n                ...token,\n                balance\n            } as Token);\n        }\n    }, [provider, signer, props.address]);\n    return (\n        <View style={{ position: \"absolute\", right: 12, bottom: Platform.OS === \"web\" ? 10 : 20 }}>\n            <Button\n                type={\"clear\"}\n                size={\"small\"}\n                color={accent}\n                title={\"Add\"}\n                fontWeight={\"bold\"}\n                onPress={onPress}\n                buttonStyle={{ paddingHorizontal: 4 }}\n            />\n        </View>\n    );\n};\n\nexport default TokenSearch;\n","import React, { FC, useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { FlatList, View, ViewStyle } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport { Spacing } from \"../constants/dimension\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport Token from \"../types/Token\";\nimport Expandable from \"./Expandable\";\nimport FlexView from \"./FlexView\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"./ItemSeparator\";\nimport Loading from \"./Loading\";\nimport Selectable from \"./Selectable\";\nimport Text from \"./Text\";\nimport TokenAmount from \"./TokenAmount\";\nimport TokenLogo from \"./TokenLogo\";\nimport TokenName from \"./TokenName\";\nimport TokenSearch from \"./TokenSearch\";\nimport TokenSymbol from \"./TokenSymbol\";\n\nexport interface TokenSelectProps {\n    title: string;\n    symbol: string;\n    onChangeSymbol: (symbol: string) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n    onAddToken?: (token: Token) => void;\n    style?: ViewStyle;\n}\n\nconst TokenSelect: FC<TokenSelectProps> = props => {\n    const { tokens } = useContext(EthersContext);\n    const [search, setSearch] = useState(\"\");\n    const [query, setQuery] = useState(\"\");\n    const token = useMemo(() => tokens.find(t => t.symbol === props.symbol), [tokens, props.symbol]);\n    const onSelectToken = t => props.onChangeSymbol(t.symbol);\n    const onUnselectToken = () => props.onChangeSymbol(\"\");\n    const hidden = (t: Token) => {\n        let hide = props.hidden?.(t) || false;\n        if (!hide && query.length > 0 && !ethers.utils.isAddress(query)) {\n            hide = !t.symbol.toLowerCase().includes(query) && !t.name.toLowerCase().includes(query);\n        }\n        return hide;\n    };\n    useEffect(() => setSearch(\"\"), [props.symbol]);\n    useDelayedEffect(() => setQuery(search.trim().toLowerCase()), 300, [search]);\n    return (\n        <View style={props.style}>\n            <Expandable title={props.title} expanded={!props.symbol} onExpand={() => props.onChangeSymbol(\"\")}>\n                <TokenSearch text={search} onChangeText={setSearch} tokens={tokens} onAddToken={props.onAddToken} />\n                <TokenList disabled={props.disabled} hidden={hidden} onSelectToken={onSelectToken} />\n            </Expandable>\n            {token && <TokenItem token={token} selected={true} onSelectToken={onUnselectToken} selectable={true} />}\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst TokenList = (props: {\n    onSelectToken: (token: Token) => void;\n    disabled?: (token: Token) => boolean;\n    hidden?: (token: Token) => boolean;\n}) => {\n    const { loadingTokens, tokens } = useContext(EthersContext);\n    const renderItem = useCallback(\n        ({ item }) => {\n            return (\n                <TokenItem\n                    key={item.address}\n                    token={item}\n                    selected={false}\n                    onSelectToken={props.onSelectToken}\n                    disabled={props.disabled?.(item)}\n                />\n            );\n        },\n        [props.onSelectToken, props.disabled]\n    );\n    const data = useMemo(\n        () =>\n            tokens\n                .filter(token => (props.hidden ? !props.hidden(token) : true))\n                .sort(\n                    (t1, t2) =>\n                        (t2.balance.isZero() ? 0 : 10000000000) -\n                        (t1.balance.isZero() ? 0 : 10000000000) +\n                        t1.symbol.localeCompare(t2.symbol)\n                ),\n        [tokens, props.hidden]\n    );\n    return loadingTokens ? (\n        <Loading />\n    ) : data.length === 0 ? (\n        <EmptyList />\n    ) : (\n        <FlatList keyExtractor={item => item.address} data={data} renderItem={renderItem} />\n    );\n};\n\nconst EmptyList = () => {\n    return (\n        <View style={{ margin: Spacing.normal }}>\n            <Text disabled={true} style={{ textAlign: \"center\", width: \"100%\" }}>\n                {\"You don't have any matching tokens.\"}\n            </Text>\n        </View>\n    );\n};\n\nconst TokenItem = (props: {\n    token: Token;\n    selected: boolean;\n    onSelectToken: (token: Token) => void;\n    disabled?: boolean;\n    selectable?: boolean;\n}) => {\n    const onPress = useCallback(() => {\n        props.onSelectToken(props.token);\n    }, [props.onSelectToken, props.token]);\n    return (\n        <Selectable\n            selected={props.selected}\n            onPress={onPress}\n            disabled={props.disabled || props.selectable}\n            style={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT\n            }}>\n            <FlexView style={{ alignItems: \"center\" }}>\n                <TokenLogo token={props.token} disabled={props.disabled} />\n                <TokenName token={props.token} disabled={props.disabled} />\n                <TokenAmount token={props.token} disabled={props.disabled} style={{ flex: 1, textAlign: \"right\" }} />\n                <TokenSymbol token={props.token} disabled={props.disabled} />\n            </FlexView>\n        </Selectable>\n    );\n};\n\nexport default TokenSelect;\n","import { useCallback, useContext, useEffect, useState } from \"react\";\n\nimport { Trade } from \"@sushiswap/sdk\";\nimport { Fetcher, Token, WETH } from \"@uniswap/sdk\";\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport { formatBalance, isEmptyValue, parseBalance, pow10 } from \"../utils\";\nimport useDelayedEffect from \"./useDelayedEffect\";\nimport useDelayedOnBlockEffect from \"./useDelayedOnBlockEffect\";\nimport useSDK from \"./useSDK\";\nimport useTokenPairState, { TokenPairState } from \"./useTokenPairState\";\n\nexport type OrderType = \"market\" | \"limit\";\n\nexport interface SwapState extends TokenPairState {\n    orderType?: OrderType;\n    setOrderType: (orderType?: OrderType) => void;\n    priceInETH?: ethers.BigNumber | null;\n    trade?: Trade;\n    unsupported: boolean;\n    limitOrderUnsupported: boolean;\n    limitOrderPrice: string;\n    setLimitOrderPrice: (price: string) => void;\n    swapFee: string;\n    limitOrderFee: string;\n    limitOrderSwapFee: string;\n    limitOrderReturn: string;\n    onSwap: () => Promise<void>;\n    swapping: boolean;\n    onCreateOrder: () => Promise<void>;\n    creatingOrder: boolean;\n}\n\n// tslint:disable-next-line:max-func-body-length\nconst useSwapState: () => SwapState = () => {\n    const state = useTokenPairState();\n    const { provider, signer, kovanSigner, updateTokens } = useContext(EthersContext);\n    const {\n        getTrade,\n        swap,\n        createOrder,\n        calculateSwapFee,\n        calculateLimitOrderFee,\n        calculateLimitOrderReturn\n    } = useSDK();\n    const [loading, setLoading] = useState(true);\n    const [orderType, setOrderType] = useState<OrderType>();\n    const [priceInETH, setPriceInETH] = useState<ethers.BigNumber | null>();\n    const [trade, setTrade] = useState<Trade>();\n    const [unsupported, setUnsupported] = useState(false);\n    const [swapFee, setSwapFee] = useState(\"\");\n    const [limitOrderPrice, setLimitOrderPrice] = useState<string>(\"\");\n    const [limitOrderFee, setLimitOrderFee] = useState(\"\");\n    const [limitOrderSwapFee, setLimitOrderSwapFee] = useState(\"\");\n    const [limitOrderReturn, setLimitOrderReturn] = useState(\"\");\n    const [swapping, setSwapping] = useState(false);\n    const [creatingOrder, setCreatingOrder] = useState(false);\n\n    useEffect(() => {\n        if (!orderType) {\n            state.setFromSymbol(\"\");\n        }\n        setLimitOrderPrice(\"\");\n    }, [orderType]);\n\n    useAsyncEffect(async () => {\n        setPriceInETH(undefined);\n        if (provider && state.fromToken) {\n            if (state.fromToken.symbol === \"WETH\") {\n                setPriceInETH(ethers.constants.WeiPerEther);\n            } else {\n                const { chainId } = await provider.getNetwork();\n                try {\n                    const fromToken = new Token(chainId, state.fromToken.address, state.fromToken.decimals);\n                    const toToken = WETH[chainId];\n                    const pair = await Fetcher.fetchPairData(fromToken, toToken);\n                    setPriceInETH(parseBalance(pair.priceOf(toToken).toFixed(), fromToken.decimals));\n                } catch (e) {\n                    setPriceInETH(null);\n                }\n            }\n        }\n    }, [provider, state.fromToken]);\n\n    useDelayedEffect(\n        () => {\n            if (isEmptyValue(state.fromAmount)) {\n                setLimitOrderPrice(\"\");\n                setTrade(undefined);\n            }\n        },\n        300,\n        [state.fromAmount]\n    );\n\n    useDelayedOnBlockEffect(\n        async block => {\n            if (!block) {\n                setLoading(true);\n            }\n            if (state.fromToken && state.toToken && state.fromAmount && signer?.provider) {\n                const amount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                if (!amount.isZero()) {\n                    setUnsupported(false);\n                    try {\n                        setTrade(await getTrade(state.fromToken, state.toToken, amount, signer?.provider));\n                    } catch (e) {\n                        setUnsupported(true);\n                    } finally {\n                        setLoading(false);\n                    }\n                }\n            }\n        },\n        () => \"getTrade(\" + state.fromSymbol + \",\" + state.toSymbol + \",\" + state.fromAmount + \")\",\n        [state.fromSymbol, state.toSymbol, state.fromAmount]\n    );\n\n    useAsyncEffect(() => {\n        if (trade && !isEmptyValue(state.fromAmount)) {\n            const fromAmount = parseBalance(state.fromAmount, state.fromToken!.decimals);\n            setSwapFee(formatBalance(calculateSwapFee(fromAmount), state.fromToken!.decimals, 8));\n            if (orderType === \"limit\") {\n                setLimitOrderFee(formatBalance(calculateLimitOrderFee(fromAmount), state.fromToken!.decimals, 8));\n                setLimitOrderSwapFee(\n                    formatBalance(\n                        calculateSwapFee(fromAmount.sub(calculateLimitOrderFee(fromAmount))),\n                        state.fromToken!.decimals,\n                        8\n                    )\n                );\n            }\n        }\n    }, [orderType, trade, state.fromAmount]);\n\n    useAsyncEffect(() => {\n        if (state.fromToken && state.toToken && !isEmptyValue(state.fromAmount) && !isEmptyValue(limitOrderPrice)) {\n            setLimitOrderReturn(\n                formatBalance(\n                    calculateLimitOrderReturn(\n                        state.fromToken,\n                        state.toToken,\n                        parseBalance(state.fromAmount, state.fromToken.decimals),\n                        limitOrderPrice\n                    ),\n                    state.toToken.decimals\n                )\n            );\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, limitOrderPrice]);\n\n    const onSwap = useCallback(async () => {\n        if (state.fromToken && state.toToken && state.fromAmount && signer && trade) {\n            setSwapping(true);\n            try {\n                const result = await swap(trade, signer);\n                if (result) {\n                    await result.tx.wait();\n                    await updateTokens();\n                    setTrade(undefined);\n                    setOrderType(undefined);\n                }\n            } finally {\n                setSwapping(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, trade]);\n\n    const onCreateOrder = useCallback(async () => {\n        if (\n            state.fromToken &&\n            state.toToken &&\n            state.fromAmount &&\n            !isEmptyValue(limitOrderPrice) &&\n            signer &&\n            kovanSigner\n        ) {\n            setCreatingOrder(true);\n            try {\n                const amountIn = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const tx = await createOrder(\n                    state.fromToken,\n                    state.toToken,\n                    amountIn,\n                    Fraction.parse(limitOrderPrice)\n                        .apply(amountIn)\n                        .mul(pow10(state.toToken.decimals))\n                        .div(pow10(state.fromToken.decimals)),\n                    signer,\n                    kovanSigner\n                );\n                await tx.wait();\n                setTrade(undefined);\n                setOrderType(undefined);\n            } finally {\n                setCreatingOrder(false);\n            }\n        }\n    }, [state.fromToken, state.toToken, state.fromAmount, signer, kovanSigner, limitOrderPrice]);\n\n    return {\n        ...state,\n        loading: loading || state.loading,\n        orderType,\n        setOrderType,\n        priceInETH,\n        trade,\n        unsupported,\n        swapFee,\n        limitOrderPrice,\n        setLimitOrderPrice,\n        limitOrderFee,\n        limitOrderSwapFee,\n        limitOrderReturn,\n        onSwap,\n        swapping,\n        limitOrderUnsupported: orderType === \"limit\" && (state.fromSymbol === \"ETH\" || state.toSymbol === \"ETH\"),\n        onCreateOrder,\n        creatingOrder\n    };\n};\n\nexport default useSwapState;\n","import React, { useCallback, useContext, useState } from \"react\";\nimport { Platform, View } from \"react-native\";\n\nimport { ethers } from \"ethers\";\nimport useAsyncEffect from \"use-async-effect\";\nimport ApproveButton from \"../components/ApproveButton\";\nimport Border from \"../components/Border\";\nimport Button from \"../components/Button\";\nimport Container from \"../components/Container\";\nimport Content from \"../components/Content\";\nimport ErrorMessage from \"../components/ErrorMessage\";\nimport Expandable from \"../components/Expandable\";\nimport ExperimentalNotice from \"../components/ExperimentalNotice\";\nimport FetchingButton from \"../components/FetchingButton\";\nimport Heading from \"../components/Heading\";\nimport InfoBox from \"../components/InfoBox\";\nimport InsufficientBalanceButton from \"../components/InsufficientBalanceButton\";\nimport { ITEM_SEPARATOR_HEIGHT } from \"../components/ItemSeparator\";\nimport Meta from \"../components/Meta\";\nimport Notice from \"../components/Notice\";\nimport Selectable from \"../components/Selectable\";\nimport Text from \"../components/Text\";\nimport Title from \"../components/Title\";\nimport TokenInput from \"../components/TokenInput\";\nimport TokenSelect from \"../components/TokenSelect\";\nimport UnsupportedButton from \"../components/UnsupportedButton\";\nimport WebFooter from \"../components/web/WebFooter\";\nimport { SwapSubMenu } from \"../components/web/WebSubMenu\";\nimport { ROUTER, SETTLEMENT } from \"../constants/contracts\";\nimport { Spacing } from \"../constants/dimension\";\nimport Fraction from \"../constants/Fraction\";\nimport { EthersContext } from \"../context/EthersContext\";\nimport useColors from \"../hooks/useColors\";\nimport useDelayedEffect from \"../hooks/useDelayedEffect\";\nimport useLinker from \"../hooks/useLinker\";\nimport useSwapState, { OrderType, SwapState } from \"../hooks/useSwapState\";\nimport MetamaskError from \"../types/MetamaskError\";\nimport Token from \"../types/Token\";\nimport { formatBalance, isEmptyValue, parseBalance } from \"../utils\";\nimport Screen from \"./Screen\";\n\nconst SwapScreen = () => {\n    return (\n        <Screen>\n            <SwapSubMenu />\n            <Container>\n                <Content>\n                    <Title text={\"New Order\"} />\n                    <Text light={true}>Swap now or place a limit order with a desired price.</Text>\n                    <Swap />\n                    {Platform.OS === \"web\" && <WebFooter />}\n                </Content>\n            </Container>\n        </Screen>\n    );\n};\n\nconst Swap = () => {\n    const state = useSwapState();\n    return (\n        <View style={{ marginTop: Spacing.large }}>\n            <OrderTypeSelect state={state} />\n            <Border />\n            <FromTokenSelect state={state} />\n            <Border />\n            <ToTokenSelect state={state} />\n            <Border />\n            <AmountInput state={state} />\n            {state.orderType === \"limit\" && (\n                <View>\n                    <AmountNotice state={state} />\n                    <Border />\n                    <PriceInput state={state} />\n                </View>\n            )}\n            <TradeInfo state={state} />\n        </View>\n    );\n};\n\nconst OrderTypeSelect = ({ state }: { state: SwapState }) => {\n    return (\n        <View>\n            <Expandable title={\"Order Type\"} expanded={!state.orderType} onExpand={() => state.setOrderType()}>\n                <OrderTypeItem state={state} orderType={\"market\"} />\n                <OrderTypeItem state={state} orderType={\"limit\"} />\n            </Expandable>\n            {state.orderType && <OrderTypeItem state={state} orderType={state.orderType} selectable={true} />}\n            {state.orderType === \"limit\" && (\n                <ExperimentalNotice\n                    contractURL={\n                        \"https://github.com/sushiswap/sushiswap-settlement/blob/master/contracts/Settlement.sol\"\n                    }\n                />\n            )}\n        </View>\n    );\n};\n\nconst OrderTypeItem = ({\n    state,\n    orderType,\n    selectable\n}: {\n    state: SwapState;\n    orderType: OrderType;\n    selectable?: boolean;\n}) => {\n    const selected = state.orderType === orderType;\n    const type = orderType === \"market\" ? \"Market Order\" : \"Limit Order\";\n    const desc =\n        orderType === \"market\"\n            ? \"Settle an order immediately\"\n            : \"Place an order with a desired price waiting to be settled\";\n    const onPress = () => state.setOrderType(state.orderType === orderType ? undefined : orderType);\n    return (\n        <Selectable\n            style={{\n                marginBottom: ITEM_SEPARATOR_HEIGHT,\n                paddingHorizontal: Spacing.small + Spacing.tiny\n            }}\n            selected={selected}\n            disabled={selectable}\n            onPress={onPress}>\n            <Text fontWeight={\"regular\"}>{type}</Text>\n            <Text note={true}>{desc}</Text>\n        </Selectable>\n    );\n};\n\nconst FromTokenSelect = ({ state }: { state: SwapState }) => {\n    const { tokens, setTokens } = useContext(EthersContext);\n    if (!state.orderType) {\n        return <Heading text={\"Token To Sell\"} disabled={true} />;\n    }\n    const ETH = tokens ? tokens.find(token => token.symbol === \"ETH\") : null;\n    const onAddToken = (token: Token) => {\n        if (tokens.findIndex(t => t.address === token.address) === -1) {\n            setTokens([...tokens, token]);\n        }\n    };\n    return (\n        <View>\n            <TokenSelect\n                title={\"Token To Sell\"}\n                symbol={state.fromSymbol}\n                onChangeSymbol={state.setFromSymbol}\n                hidden={token => token.balance.isZero() || (state.orderType === \"limit\" && token.symbol === \"ETH\")}\n                onAddToken={onAddToken}\n            />\n            {state.orderType === \"limit\" && !state.fromSymbol && ETH && !ETH.balance.isZero() && (\n                <LimitOrderUnsupportedNotice />\n            )}\n        </View>\n    );\n};\n\nconst ToTokenSelect = ({ state }: { state: SwapState }) => {\n    if (!state.orderType || !state.fromSymbol) {\n        return <Heading text={\"Token To Buy\"} disabled={true} />;\n    }\n    return (\n        <View>\n            <TokenSelect\n                title={\"Token To Buy\"}\n                symbol={state.toSymbol}\n                onChangeSymbol={state.setToSymbol}\n                hidden={token =>\n                    token.symbol === state.fromSymbol || (state.orderType === \"limit\" && token.symbol === \"ETH\")\n                }\n            />\n            {state.orderType === \"limit\" && !state.toSymbol && <LimitOrderUnsupportedNotice />}\n        </View>\n    );\n};\n\nconst AmountInput = ({ state }: { state: SwapState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={\"Amount\"} disabled={true} />;\n    }\n    return (\n        <View>\n            <Heading text={state.fromSymbol + \" Amount\"} />\n            <TokenInput\n                token={state.fromToken}\n                amount={state.fromAmount}\n                onAmountChanged={state.setFromAmount}\n                autoFocus={true}\n            />\n        </View>\n    );\n};\n\nconst AmountNotice = ({ state }: { state: SwapState }) => {\n    if (\n        state.priceInETH === undefined ||\n        isEmptyValue(state.fromAmount) ||\n        !state.fromToken ||\n        (state.priceInETH && parseBalance(state.fromAmount, state.fromToken.decimals).lte(state.priceInETH.mul(10)))\n    ) {\n        return <View />;\n    }\n    return (\n        <View style={{ marginTop: Spacing.small }}>\n            <Notice\n                text={\n                    state.priceInETH === null\n                        ? \"This token is not supported in beta.\"\n                        : \"Maximum allowed amount in beta is \" +\n                          formatBalance(state.priceInETH.mul(10), state.fromToken!.decimals) +\n                          \" \" +\n                          state.fromSymbol +\n                          \" (≈ 10 ETH).\"\n                }\n                color={\"red\"}\n            />\n        </View>\n    );\n};\n\nconst PriceInput = ({ state }: { state: SwapState }) => {\n    if (!state.fromSymbol || !state.toSymbol) {\n        return <Heading text={\"Minimum Price\"} disabled={true} />;\n    }\n    const marketPrice =\n        state.toToken && state.trade\n            ? parseBalance(state.trade.executionPrice.toFixed(state.toToken.decimals), state.toToken.decimals)\n            : ethers.constants.Zero;\n    return (\n        <TokenInput\n            title={\"Minimum Price (\" + state.toSymbol + \"/\" + state.fromSymbol + \")\"}\n            token={\n                {\n                    ...state.toToken,\n                    balance: marketPrice\n                } as Token\n            }\n            amount={state.limitOrderPrice}\n            onAmountChanged={state.setLimitOrderPrice}\n            maxButtonText={\"MARKET\"}\n        />\n    );\n};\n\nconst LimitOrderUnsupportedNotice = () => {\n    const { placeholder } = useColors();\n    return (\n        <Notice\n            text={\"⚠️ ETH not supported for limit orders. Use WETH instead.\"}\n            color={placeholder}\n            clear={true}\n            style={{ marginVertical: Spacing.small }}\n        />\n    );\n};\n\nconst TradeInfo = ({ state }: { state: SwapState }) => {\n    if (\n        !isEmptyValue(state.fromAmount) &&\n        ((state.fromSymbol === \"ETH\" && state.toSymbol === \"WETH\") ||\n            (state.fromSymbol === \"WETH\" && state.toSymbol === \"ETH\"))\n    ) {\n        return <WrapInfo state={state} />;\n    }\n    const disabled =\n        state.fromSymbol === \"\" ||\n        state.toSymbol === \"\" ||\n        isEmptyValue(state.fromAmount) ||\n        (state.orderType === \"limit\" && state.fromSymbol === \"ETH\");\n    return (\n        <InfoBox>\n            {state.orderType === \"limit\" ? (\n                <LimitOrderInfo state={state} />\n            ) : (\n                <SwapInfo state={state} disabled={disabled} />\n            )}\n        </InfoBox>\n    );\n};\n\nconst WrapInfo = ({ state }: { state: SwapState }) => {\n    return (\n        <View>\n            <Text style={{ fontSize: 30, textAlign: \"center\" }}>\n                {state.fromAmount} {state.toSymbol}\n            </Text>\n        </View>\n    );\n};\n\nconst SwapInfo = ({ state, disabled }: { state: SwapState; disabled: boolean }) => {\n    const { textDark, textLight, placeholder } = useColors();\n    const amount = state.trade?.outputAmount?.toFixed(8);\n    const price = state.trade?.executionPrice?.toFixed(8);\n    const impact = state.trade?.priceImpact?.toFixed(2);\n    return (\n        <View>\n            <Text\n                style={{\n                    fontSize: 28,\n                    marginBottom: Spacing.normal,\n                    color: disabled ? placeholder : amount ? textDark : textLight\n                }}>\n                {disabled ? \"N/A\" : amount ? amount + \" \" + state.toSymbol : \"Fetching…\"}\n            </Text>\n            <Meta\n                label={\"Price\"}\n                text={price}\n                suffix={state.toSymbol + \"  = 1 \" + state.fromSymbol}\n                disabled={disabled}\n            />\n            <Meta label={\"Price Impact\"} text={impact} suffix={\"%\"} disabled={disabled} />\n            <Meta label={\"Fee (0.30%)\"} text={state.swapFee} suffix={state.fromSymbol} disabled={disabled} />\n            <SwapControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst SwapControls = ({ state }: { state: SwapState }) => {\n    const [error, setError] = useState<MetamaskError>({});\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    const approveRequired = state.fromSymbol !== \"ETH\" && !state.fromTokenAllowed;\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {!state.fromToken || !state.toToken || isEmptyValue(state.fromAmount) ? (\n                <SwapButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken.decimals).gt(state.fromToken.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : state.fromSymbol === \"WETH\" && state.toSymbol === \"ETH\" ? (\n                <UnwrapButton state={state} onError={setError} />\n            ) : state.fromSymbol === \"ETH\" && state.toSymbol === \"WETH\" ? (\n                <WrapButton state={state} onError={setError} />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken}\n                        spender={ROUTER}\n                        onSuccess={() => state.setFromTokenAllowed(true)}\n                        onError={setError}\n                        hidden={!approveRequired}\n                    />\n                    <SwapButton state={state} onError={setError} disabled={approveRequired} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst SwapButton = ({ state, onError, disabled }: { state: SwapState; onError: (e) => void; disabled: boolean }) => {\n    const onPress = useCallback(() => {\n        onError({});\n        state.onSwap().catch(onError);\n    }, [state.onSwap, onError]);\n    return (\n        <Button\n            title={state.fromSymbol && state.toSymbol ? \"Swap \" + state.fromSymbol + \"-\" + state.toSymbol : \"Swap\"}\n            disabled={disabled}\n            loading={state.swapping}\n            onPress={onPress}\n        />\n    );\n};\n\nconst WrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onWrap().catch(onError);\n    }, []);\n    return <Button title={\"Wrap\"} loading={state.wrapping} onPress={onPress} />;\n};\n\nconst UnwrapButton = ({ state, onError }: { state: SwapState; onError: (e) => void }) => {\n    const onPress = useCallback(async () => {\n        onError({});\n        state.onUnwrap().catch(onError);\n    }, []);\n    return <Button title={\"Unwrap\"} loading={state.unwrapping} onPress={onPress} />;\n};\n\nconst LimitOrderInfo = ({ state }: { state: SwapState }) => {\n    const d = !state.trade?.executionPrice;\n    return (\n        <View>\n            <Text\n                disabled={isEmptyValue(state.limitOrderReturn)}\n                style={{ fontSize: 28, marginBottom: Spacing.normal }}>\n                {isEmptyValue(state.limitOrderReturn) ? \"N/A\" : state.limitOrderReturn + \" \" + state.toSymbol}\n            </Text>\n            <Meta\n                label={\"Market Price\"}\n                text={state.trade?.executionPrice?.toFixed(8) || undefined}\n                suffix={state.toSymbol + \" / \" + state.fromSymbol + \"\"}\n                disabled={d}\n            />\n            <Meta label={\"Relayer Fee (0.20%)\"} text={state.limitOrderFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={\"Swap Fee (0.30%)\"} text={state.limitOrderSwapFee} suffix={state.fromSymbol} disabled={d} />\n            <Meta label={\"Expiration\"} text={\"24 Hours From Now\"} disabled={d} />\n            <LimitOrderControls state={state} />\n        </View>\n    );\n};\n\n// tslint:disable-next-line:max-func-body-length\nconst LimitOrderControls = ({ state }: { state: SwapState }) => {\n    const { getTokenAllowance } = useContext(EthersContext);\n    const [error, setError] = useState<MetamaskError>({});\n    const [allowed, setAllowed] = useState<boolean>();\n    useAsyncEffect(() => setError({}), [state.fromSymbol, state.toSymbol, state.fromAmount]);\n    useDelayedEffect(\n        async () => {\n            if (state.fromToken && !isEmptyValue(state.fromAmount)) {\n                const fromAmount = parseBalance(state.fromAmount, state.fromToken.decimals);\n                const allowance = await getTokenAllowance(state.fromToken.address, SETTLEMENT);\n                setAllowed(ethers.BigNumber.from(allowance).gte(fromAmount));\n            }\n        },\n        500,\n        [state.fromToken, state.fromAmount]\n    );\n    const disabled =\n        state.orderType === \"market\" ||\n        state.toSymbol === \"\" ||\n        !state.fromToken ||\n        !state.toToken ||\n        isEmptyValue(state.fromAmount) ||\n        !state.priceInETH ||\n        parseBalance(state.fromAmount, state.fromToken!.decimals).gt(state.priceInETH.mul(10)) ||\n        !state.trade ||\n        isEmptyValue(state.limitOrderPrice);\n    return (\n        <View style={{ marginTop: Spacing.normal }}>\n            {disabled ? (\n                <PlaceOrderButton state={state} onError={setError} disabled={true} />\n            ) : parseBalance(state.fromAmount, state.fromToken!.decimals).gt(state.fromToken!.balance) ? (\n                <InsufficientBalanceButton symbol={state.fromSymbol} />\n            ) : !Fraction.parse(state.limitOrderPrice).gt(\n                  Fraction.parse(state.trade!.executionPrice.toFixed(state.toToken!.decimals))\n              ) ? (\n                <PriceTooLowButton />\n            ) : state.unsupported ? (\n                <UnsupportedButton state={state} />\n            ) : state.loading || !state.trade ? (\n                <FetchingButton />\n            ) : (\n                <>\n                    <ApproveButton\n                        token={state.fromToken!}\n                        spender={SETTLEMENT}\n                        onSuccess={() => setAllowed(true)}\n                        onError={setError}\n                        hidden={allowed}\n                    />\n                    <PlaceOrderButton state={state} onError={setError} disabled={!allowed} />\n                </>\n            )}\n            {error.message && error.code !== 4001 && <ErrorMessage error={error} />}\n        </View>\n    );\n};\n\nconst PriceTooLowButton = () => {\n    return <Button title={\"Set Price Greater Than Market\"} disabled={true} />;\n};\n\nconst PlaceOrderButton = ({\n    state,\n    onError,\n    disabled\n}: {\n    state: SwapState;\n    onError: (e) => void;\n    disabled: boolean;\n}) => {\n    const goToLimitOrders = useLinker(\"/swap/my-orders\", \"LimitOrders\");\n    const onPress = useCallback(async () => {\n        onError({});\n        try {\n            await state.onCreateOrder();\n            goToLimitOrders();\n        } catch (e) {\n            onError(e);\n        }\n    }, [state.onCreateOrder, goToLimitOrders, onError]);\n    return <Button title={\"Place Limit Order\"} disabled={disabled} loading={state.creatingOrder} onPress={onPress} />;\n};\n\nexport default SwapScreen;\n"],"sourceRoot":""}